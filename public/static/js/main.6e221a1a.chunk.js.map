{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","store/board.reducer.js","services/async-storage.service.js","services/http.service.js","services/socket.service.js","services/util.service.js","services/user.service.js","store/user.reducer.js","store/system.reducer.js","store/store.js","services/event-bus.service.js","store/user.actions.js","assets/img/hero.png","assets/img/homepage-product.jpg","pages/home-page.jsx","cmps/board-preview.jsx","cmps/board-list.jsx","services/activity.service.js","services/board.service.js","store/board.actions.js","cmps/overlay-screen.jsx","assets/img/loader.svg","cmps/shared/loader.jsx","pages/boards-select.jsx","services/card-edit.service.js","cmps/shared/popover-children/move-card.jsx","cmps/shared/popover-children/copy-card.jsx","cmps/shared/dynamic-popover.jsx","cmps/card-edit/edit-sidebar-label.jsx","cmps/card-edit/card-edit-actions-item.jsx","cmps/card-edit/card-edit-actions.jsx","cmps/shared/member-avatar.jsx","cmps/card-edit/popper-member-preview.jsx","cmps/shared/popover-children/member-list.jsx","cmps/shared/popover-children/card-edit-date.jsx","cmps/card-edit/popper-label-preview.jsx","cmps/shared/popover-children/label-list.jsx","cmps/shared/popover-children/popover-checklist.jsx","services/cloudinary.service.js","cmps/shared/popover-children/popover-attach-file.jsx","cmps/card-edit/add-to-card/card-edit-add-to-card-item.jsx","cmps/shared/popover-children/popper-cover-edit.jsx","cmps/shared/popover-children/label-edit.jsx","cmps/card-edit/add-to-card/card-edit-add-to-card.jsx","cmps/card-edit/card-edit-sidebar.jsx","cmps/card-edit/labels-members/card-edit-duedate.jsx","cmps/card-edit/labels-members/card-edit-labels.jsx","cmps/shared/popover-children/mini-user.jsx","cmps/card-edit/members-container-member-preview.jsx","cmps/card-edit/labels-members/card-edit-members.jsx","cmps/card-edit/labels-members.jsx","cmps/card-edit/progress-bar.jsx","cmps/card-edit/todo-item.jsx","cmps/card-edit/checklist-edit.jsx","cmps/card-edit/card-edit-description.jsx","cmps/card-edit/comment-preview.jsx","cmps/card-edit/card-edit-activities.jsx","cmps/card-edit/attachment-preview.jsx","cmps/card-edit/card-edit-attachment.jsx","cmps/card-edit.jsx","cmps/shared/add-board-item.jsx","cmps/card-preview/card-header.jsx","cmps/card-preview/card-label-bar-list.jsx","cmps/card-preview/card-checklists.jsx","cmps/card-preview/card-duedate.jsx","cmps/card-preview/card-footer.jsx","cmps/board/card-preview-content.jsx","cmps/board/card-preview.jsx","cmps/shared/popover-children/group-actions.jsx","cmps/board/group-preview.jsx","cmps/board/group-list.jsx","cmps/board/invite-members.jsx","cmps/side-menu/change-bg.jsx","cmps/side-menu/board-icon.jsx","cmps/side-menu/search-cards.jsx","cmps/side-menu/archive.jsx","cmps/side-menu/activity-list.jsx","cmps/side-menu/remove-board.jsx","cmps/side-menu/side-menu.jsx","cmps/shared/popover-children/board-edit-members.jsx","cmps/board/board-header.jsx","cmps/quick-card-editor.jsx","cmps/dashboard/tasks-per-members-chart.jsx","cmps/dashboard/tasks-per-labels-chart.jsx","cmps/dashboard/tasks-per-date-chart.jsx","cmps/dashboard.jsx","pages/board-details.jsx","assets/img/login-svg-right.svg","assets/img/login-svg-left.svg","pages/login-signup.jsx","routes.js","cmps/board/board-add.jsx","cmps/shared/popover-children/loggedin-user.jsx","cmps/app-header.jsx","root-cmp.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialState","boards","currBoard","lastRemovedBoard","isAddingBoard","currCardId","filterBy","txt","members","labels","storageService","query","get","entityType","entityId","entities","find","entity","_id","post","newEntity","_makeId","push","_save","put","updatedEntity","idx","findIndex","splice","remove","postMany","newEntities","map","dashboardQuery","gBoards","require","gUsers","delay","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","a","board","chartsData","groupsCount","cardsCount","tasksPerMemberMap","tasksPerLabelMap","forEach","member","fullname","label","title","groups","group","isArchive","cards","card","labelIds","labelId","_getLabel","setItem","stringify","length","text","possible","i","charAt","Math","floor","random","id","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","method","url","params","res","dir","response","status","sessionStorage","clear","assign","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","utilService","makeId","makeLorem","size","words","getRandomIntInclusive","min","max","ceil","ms","debounce","func","timer","timeout","args","clearTimeout","apply","STORAGE_KEY_LOGGEDIN_USER","userService","login","logout","signup","getLoggedinUser","getMiniUser","fullUser","imgUrl","getUsers","getById","userId","update","getGueastUser","googleLogin","users","user","_saveLocalUser","userCred","tokenId","mentions","removeItem","watchedUser","isLoading","rootReducer","combineReducers","boardModule","action","newState","type","boardId","filter","cardId","userModule","systemModule","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","eventBusService","listener","callListener","detail","addEventListener","removeEventListener","dispatchEvent","CustomEvent","showUserMsg","loadUsers","dispatch","onLogin","credentials","onSignup","err","onLogout","myBus","_HomePage","isNavbarBG","changeHeaderStyle","scrollY","setState","onGuestLogin","props","username","password","history","this","document","body","style","overflowY","className","to","onClick","src","heroImg","alt","productImg","React","Component","mapDispatchToProps","HomePage","connect","BoardPreview","toggleStarredBoard","setFavicon","bgColor","backgroundColor","backgroundImage","isStarred","ev","preventDefault","stopPropagation","toggleIsStarred","BoardList","setAddBoard","isWorkspace","activityTxtMap","listName","boardName","memberName","groupName","labelName","checklistName","boardService","save","getArchivedCards","filterByUser","URLSearchParams","toString","archivedCards","activity","newActivity","byMember","groupId","boardToSave","createdBy","addedBoard","loadBoard","background","backgroundSize","onUpdateBoard","_getUpdatedBoard","setAddingBoard","onUpdateCard","cardToSave","cardIdx","groupAction","onSetCardId","memberId","currGroup","OverlayScreen","cs","Loader","loader","_BoardSelect","getStarredBoards","favicon","getElementById","href","loadBoards","BoardSelect","getCardById","getState","getGroupId","some","cardEditService","handleChecklistChange","checklistId","value","newVal","checklist","checklists","todos","todo","isDone","handleMemberChange","memberToAdd","handleLabelChange","labelToAdd","handleDueDateChange","timestamp","dueDate","getFormattedTime","timeLeft","Date","now","date","month","getMonth","day","getDate","getUploadTime","timePassed","minutes","hours","getMinutes","getHours","handleFileAdd","attachments","addedAt","handleFileRemove","fileId","file","getGroupById","handleMoveCard","initialBoard","initialGroup","initialCardIdx","handleCopyCard","handleToggleArchive","handleRemoveCard","onAddComment","comments","unshift","author","handleCommentRemove","commentId","comment","getCommentTime","MoveCard","onClose","useState","setCurrGroup","currPosition","setCurrPosition","useEffect","handleChange","target","name","item","onChange","positions","getPositions","boardToChange","CopyCard","currTitle","setCurrTitle","autoFocus","DynamicPopover","forwardRef","parentRef","children","isLabel","handleEdit","targetRef","useRef","width","height","dimensions","setDimensions","useLayoutEffect","current","offsetWidth","offsetHeight","handleClick","e","containerElement","contains","ref","position","rect","getBoundingClientRect","bottom","top","bottomCheck","innerHeight","topCheck","rightCheck","innerWidth","left","right","getLocation","EditSidebarLabel","Icon","color","CardEditActionsItem","isOpen","setIsOpen","itemRef","InnerPopperCmp","useMemo","component","icon","actions","BsArrowRight","MdContentCopy","AiOutlineEye","CardEditActions","goBack","setIsArchive","toggleArchive","GoArchive","BsArrowCounterclockwise","AiOutlineMinus","MemberAvatar","getSize","round","PopperMemberPreview","isChecked","setIsChecked","isMemberChecked","m","MemberList","setMembers","placeholder","matchingMembers","toLowerCase","includes","CardEditDate","startDate","endDate","setDueDate","handleSubmit","selected","getTime","inline","formatWeekDay","nameOfDay","substr","PopperLabelPreview","isLabelChecked","l","LabelList","setLabels","matchingLabels","PopoverChecklist","inputRef","setTitle","focus","select","onSubmit","htmlFor","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","json","PopoverAttachFile","setUrl","urlRef","handleImageUpload","display","CardEditAddToCardItem","isEdit","setIsEdit","setColor","EditComponent","editComponent","currCard","checkIfCover","_PopperCoverEdit","selectedEl","initialStyle","classList","add","handleCoverRemove","handleInitialSelect","PopperCoverEdit","colors","LabelEdit","selectedColor","setSelectedColor","dataset","c","CardEditAddToCard","addToCardItems","BiUser","MdLabelOutline","BsCardChecklist","BsClock","FiPaperclip","CgCreditCard","CardEditSidebar","CardEditDueDate","dueDateRef","time","getDueDateLabel","isComplete","checked","textTransform","fontSize","padding","borderRadius","CardEditLabels","addButtonRef","getCardLabels","MiniUser","MembersContainerMemberPreview","isPreviewOpen","setIsPreviewOpen","userButtonRef","cursor","CardEditMembers","isListOpen","setIsListOpen","LabelsMembers","ProgressBar","completed","fillerStyles","textAlign","transition","margin","_TodoItem","todoTitle","isEditTodo","todoTextareaRef","createRef","saveTodoBtnRef","newTodoTextarea","handleMarkTodo","handleRemoveTodo","handleTitleChange","onChangeTitle","alignSelf","paddingBottom","onFocus","alignItems","justifyContent","TodoItem","_ChecklistEdit","percentage","isAddTodo","newTodo","addTodoBtnRef","setTodoPercentage","doneTodos","num","Number","isInteger","toFixed","handleInputChange","onAddTodo","onRemoveChecklist","prevProps","maxWidth","minWidth","rows","ChecklistEdit","_CardEditDescription","isDescriptionOpen","descriptionRef","setDescriptionTextarea","handleDescriptionChange","description","onBlur","CardEditDescription","CommentPreview","timeMsg","_CardEditActivities","isFocus","isTxt","commentTxt","commentRef","CardEditActivities","AttachmentPreview","attachment","_CardEditAttachment","CardEditAttachment","_CardEdit","modalRef","coverRef","handleLoad","getDataById","currentCard","currentGroup","handlePropertyChange","checkCardBackground","minHeight","objectFit","prevState","bg","CardEdit","_AddBoardItem","newItem","onKeyUpEnter","key","onAddItem","newCard","onAddCard","textInput","onToggleAddPop","renderedType","onKeyUp","input","createdAt","AddBoardItem","CardHeader","cardStyle","CardLabelBarList","getLabel","isCardLabelListOpen","CardChecklists","todosCount","doneTodosCount","getChecklistStr","CardDueDate","toggleCardComplete","getDueTimeStyle","event","toLocaleString","getFormatedTime","CardFooter","index","CardPreviewContent","onToggleQuickCardEditor","openCardEdit","toggleCardLabelList","CardPreview","draggableId","provided","innerRef","dragHandleProps","draggableProps","GroupActions","toggleGroupArchive","GroupPreview","isAddPopOpen","groupTitle","isPopoverOpen","groupEditRef","onChangeGroupTitle","updateBoard","blurFocus","blur","setFocus","handleFocus","snapshot","onMouseDown","onMouseUp","droppableId","droppableProps","GroupList","_InviteMembers","search","getMembersIds","inviteToBoard","memberIds","field","InviteMembers","_ChangeBG","setBoardBG","backGround","image","ChangeBG","_BoardIcon","BoardIcon","_SearchCards","updateUrlSearchParams","urlSearchFilterBy","currVal","Array","isArray","replace","pathname","onUpdateFilter","getFilteredBoard","newFilterBy","handleUserClick","clickedIdx","handleLabelClick","searchHasFilter","Object","keys","filterKey","split","prevFilterBy","currFilterBy","bind","SearchCards","withRouter","_Archive","loadArchivedCards","onUnarchiveCard","onUnArchiveCard","onDeleteCard","onRemoveCard","archivedCard","prevIndex","Archive","_ActivityList","getGroupTitle","activities","fromNow","ActivityList","_RemoveBoard","removeBoard","onRemoveBoard","checkIfAllowed","isAdmin","RemoveBoard","_SideMenu","currViewIdx","_cmpsToRender","onSelectView","viewId","getViewById","currView","onBack","_CurrView","_DefaultView","cmp","isMenuOpen","SideMenu","BoardEditMembers","_BoardHeader","isInviteOpen","boardTitle","numOfShownMembers","isExtraMembersOpen","isTotalMembersOpen","inviteRef","membersRef","totalMembersRef","handleResize","onChangeBoardTitle","toggleMenu","getRemainingMembers","getExtraMembersLength","onMembersClose","onToggleDashboard","extraMembersLength","transform","BoardHeader","_QuickCardEditor","cardTitle","uploadCard","onSave","openCard","onArchiveCard","QuickCardEditor","TasksPerMemberChart","labelsColors","datasets","values","borderWidth","hoverOffset","options","plugins","legend","TasksPerLabelChart","fontColor","maxHeight","maintainAspectRatio","scales","y","ticks","x","TasksPerDateChart","tasks","links","header","textShadow","middle","selectedStyle","fontWeight","taskList","task","verticalSeparator","grip","dataViewPort","borderBottom","showLabel","boxShadow","_Dashboard","labelsColor","Dashboard","_BoardDetails","quickCardEditor","cardToEdit","updatedBoard","parentElement","currentTarget","parentNode","cardToUpdate","handleOnDragEnd","result","destination","source","draggedGroup","sourceGroup","destinationGroup","groupToUpdate","boardToSend","outputUpdateBoard","resetBoard","isDashboardOpen","path","onDragEnd","direction","BoardDetails","_LoginSignup","pageMode","validate","errors","onSuccessGoogle","onGoogleLogin","onFailureGoogle","initialValues","autoComplete","clientId","buttonText","onFailure","cookiePolicy","validateOnChange","validateOnBlur","svgRight","svgLeft","LoginSignup","routes","_BoardAdd","chosenImgIdx","handleImage","imgSrc","getAttribute","addBoard","onAddBoard","images","savedBoard","_BoardAddWithRouter","BoardAdd","_LoggedinUser","onLogoutUser","_LoggedinUserWithRouter","LoggedinUser","_AppHeader","userMenuRef","removeUser","AppHeader","_RootCmp","isHeaderShown","route","_RootCmpWithRouter","RootCmp","ReactDOM","render","StrictMode","URL","process","origin","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"wjWAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MC9FjE,I,gCCAMC,EAAe,CACjBC,OAAQ,GACRC,UAAW,KACXC,iBAAkB,KAClBC,eAAe,EACfC,WAAY,KACZC,SAAU,CACNC,IAAK,GACLC,QAAS,GACTC,OAAQ,K,4BCTHC,EAAiB,CAC1BC,QACAC,IAyFJ,SAAaC,EAAYC,GACrB,OAAOH,EAAME,GACR3B,MAAK,SAAA6B,GAAQ,OAAIA,EAASC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,MAAQJ,SA1F7DK,KA6FJ,SAAcN,EAAYO,GAEtB,OADAA,EAAUF,IAAMG,IACTV,EAAME,GACR3B,MAAK,SAAA6B,GAGF,OAFAA,EAASO,KAAKF,GACdG,EAAMV,EAAYE,GACXK,MAlGfI,IAsGJ,SAAaX,EAAYY,GACrB,OAAOd,EAAME,GACR3B,MAAK,SAAA6B,GACF,IAAMW,EAAMX,EAASY,WAAU,SAAAV,GAAM,OAAIA,EAAOC,MAAQO,EAAcP,OAGtE,OAFAH,EAASa,OAAOF,EAAK,EAAGD,GACxBF,EAAMV,EAAYE,GACXU,MA3GfI,OA+GJ,SAAgBhB,EAAYC,GACxB,OAAOH,EAAME,GACR3B,MAAK,SAAA6B,GACF,IAAMW,EAAMX,EAASY,WAAU,SAAAV,GAAM,OAAIA,EAAOC,MAAQJ,KACxDC,EAASa,OAAOF,EAAK,GACrBH,EAAMV,EAAYE,OAnH1Be,SAqIJ,SAAkBjB,EAAYkB,GAC1B,OAAOpB,EAAME,GACR3B,MAAK,SAAA6B,GAIF,OAHAgB,EAAcA,EAAYC,KAAI,SAAAf,GAAM,kCAASA,GAAT,IAAiBC,IAAKG,SAC1DN,EAASO,KAAT,MAAAP,EAAQ,YAASgB,IACjBR,EAAMV,EAAYE,GACXA,MA1IfkB,e,+CAIEC,EAAUC,EAAQ,KAClBC,EAASD,EAAQ,KAEvB,SAASxB,EAAME,GAA0B,IAAdwB,EAAa,uDAAL,IAC3BtB,EAAWuB,KAAKC,MAAMC,aAAaC,QAAQ5B,IAK/C,OAJKE,GAEDQ,EAAMV,EADNE,EAA2B,UAAfF,EAA0BqB,EAAUE,GAG7C,IAAIM,SAAQ,SAACC,EAASC,GACrBC,YAAW,WAEPF,EAAQ5B,KACTsB,M,4CAKf,WAA8BxB,EAAYC,GAA1C,iCAAAgC,EAAA,6DAAoDT,EAApD,+BAA4D,IAA5D,SACyB1B,EAAME,GAD/B,cACUZ,EADV,OAEU8C,EAAQ9C,EAAOe,MAAK,SAAA+B,GAAK,OAAIA,EAAM7B,MAAQJ,KAC3CkC,EAAa,CACfC,YAAa,EACbC,WAAY,EACZC,kBAAmB,GACnBC,iBAAkB,IAElBL,EAAMvC,SACNuC,EAAMvC,QAAQ6C,SAAQ,SAAAC,GAClBN,EAAWG,kBAAkBG,EAAOC,UAAY,KAGpDR,EAAMtC,QACNsC,EAAMtC,OAAO4C,SAAQ,SAAAG,GACjBR,EAAWI,iBAAiBI,EAAMC,OAAS,KAI/CV,EAAMW,QACNX,EAAMW,OAAOL,SAAQ,SAAAM,GACZA,EAAMC,YACPZ,EAAWC,YAAcD,EAAWC,YAAc,EAClDU,EAAME,MAAMR,SAAQ,SAAAS,GACXA,EAAKF,YAAWZ,EAAWE,WAAaF,EAAWE,WAAa,GACjEY,EAAKtD,SACLsD,EAAKtD,QAAQ6C,SAAQ,SAAAC,GACjBN,EAAWG,kBAAkBG,EAAOC,eAGxCO,EAAKC,UACLD,EAAKC,SAASV,SAAQ,SAAAW,GAClB,IAAMR,EAAQS,EAAUlB,EAAMtC,OAAQuD,GACtChB,EAAWI,iBAAiBI,EAAMC,mBAlC9D,kBA0CW,IAAIf,SAAQ,SAACC,EAASC,GACzBC,YAAW,WACPF,EAAQK,KACTX,OA7CX,4C,wBAiGA,SAASd,EAAMV,EAAYE,GACvByB,aAAa0B,QAAQrD,EAAYyB,KAAK6B,UAAUpD,IAGpD,SAASM,IAGL,IAH0B,IAAb+C,EAAY,uDAAH,EAClBC,EAAO,GACPC,EAAW,iEACNC,EAAI,EAAGA,EAAIH,EAAQG,IACxBF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAEhE,OAAOC,EAaX,SAASJ,EAAUxD,EAAQuD,GAEvB,OADcvD,EAAOO,MAAK,SAACwC,GAAD,OAAWA,EAAMoB,KAAOZ,K,aCpJhDa,EACA,QAOFC,E,OAAQC,EAAMC,OAAO,CACrBC,iBAAiB,IAGRC,EAAc,SACnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IAFxBF,EAAc,SAIlBC,EAAUC,GACX,OAAOC,EAAKF,EAAU,OAAQC,IALzBF,EAAc,SAOnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IARxBF,EAAc,SAUhBC,EAAUC,GACb,OAAOC,EAAKF,EAAU,SAAUC,I,SAIzBC,E,8EAAf,WAAoBF,GAApB,+BAAArC,EAAA,6DAA8BwC,EAA9B,+BAAuC,MAAOF,EAA9C,+BAAqD,KAArD,kBAE0BN,EAAM,CACpBS,IAAI,GAAD,OAAKV,GAAL,OAAgBM,GACnBG,SACAF,OACAI,OAAoB,QAAXF,EAAoBF,EAAO,OANhD,cAEcK,EAFd,yBAQeA,EAAIL,MARnB,sCAUQ1F,QAAQC,IAAR,qBAA0B2F,EAA1B,yCAAiEH,EAAjE,wBAAyFC,IACzF1F,QAAQgG,IAAR,MACI,KAAIC,UAAoC,MAAxB,KAAIA,SAASC,SAC7BC,eAAeC,QACftH,OAAOC,SAASsH,OAAO,MAdnC,8D,8CCpBaC,EASb,WACE,IAAIC,EAAS,KACPD,EAAgB,CACpBE,MADoB,WAElBD,EAASE,IAd0C,KAgBrDC,GAJoB,SAIjBC,EAAWC,GACZL,EAAOG,GAAGC,EAAWC,IAEvBC,IAPoB,SAOhBF,GAAqB,IAAVC,EAAS,uDAAN,KACXL,IACAK,EACAL,EAAOM,IAAIF,EAAWC,GADlBL,EAAOO,mBAAmBH,KAGrCI,KAZoB,SAYfJ,EAAWjB,GACda,EAAOQ,KAAKJ,EAAWjB,IAEzBsB,UAfoB,WAgBlBT,EAAS,OAGb,OAAOD,EA9BoBW,GAG7BnI,OAAOwH,cAAgBA,EAGvBA,EAAcE,QCfP,IAAMU,EAAc,CACvBC,OAQJ,WAII,IAJyB,IAAbzC,EAAY,uDAAH,EACjB7D,EAAM,GACN+D,EAAW,iEAENC,EAAI,EAAGA,EAAIH,EAAQG,IACxBhE,GAAO+D,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAG/D,OAAO7D,GAfPuG,UA0BJ,WAAgC,IAAbC,EAAY,uDAAL,IAClBC,EAAQ,CAAC,UAAW,QAAS,WAAY,MAAO,0BAA2B,QAAS,KAAM,iBAAkB,IAAK,MAAO,gBAAiB,eAAgB,IAAK,IAAK,MAAO,YAAa,aAAc,sBAAuB,MAAO,eAAgB,UAAW,gBAAiB,YAAa,KAAM,MAAO,oBAAqB,IAAK,KAAM,MAAO,aAAc,KAAM,QACpWzG,EAAM,GACV,KAAOwG,EAAO,GACVA,IACAxG,GAAOyG,EAAMvC,KAAKC,MAAMD,KAAKE,SAAWqC,EAAM5C,SAAW,IAE7D,OAAO7D,GAhCP0G,sBAmCJ,SAA+BC,EAAKC,GAGhC,OAFAD,EAAMzC,KAAK2C,KAAKF,GAChBC,EAAM1C,KAAKC,MAAMyC,GACV1C,KAAKC,MAAMD,KAAKE,UAAYwC,EAAMD,EAAM,IAAMA,GArCrD7E,MAwCJ,WAA2B,IAAZgF,EAAW,uDAAN,KAChB,OAAO,IAAI3E,SAAQ,SAAAC,GACfE,WAAWF,EAAS0E,OAzCxBC,SAeJ,SAAkBC,GAAqB,IAC/BC,EAD8B,OAAdC,EAAc,uDAAJ,IAE9B,OAAO,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAClBC,aAAaH,GACbA,EAAQ3E,YAAW,WAAQ0E,EAAKK,MAAM,EAAMF,KAAUD,MCpB5D,IAAMI,EAA4B,eAGrBC,EAAc,CACvBC,M,4CACAC,O,2CACAC,O,4CACAC,kBACAC,YAqFJ,WACI,IAAMC,EAAWF,KAAqB,CAAEhH,IAAK0F,EAAYC,SAAUtD,SAAU,SAC7E,MAAO,CAAErC,IAAKkH,EAASlH,IAAKqC,SAAU6E,EAAS7E,SAAU8E,OAAQD,EAASC,SAtF1EC,S,2CACAC,Q,4CACA1G,OAuBJ,SAAgB2G,GACZ,OAAO9H,EAAemB,OAAO,OAAQ2G,IAvBrCC,O,4CACAC,cAqFJ,WACI,MAAO,CAAExH,IAAK0F,EAAYC,SAAUtD,SAAU,UArF9CoF,Y,yFAMJ,4BAAA7F,EAAA,sEAGwBoC,EAAA,QAHxB,cAGU0D,EAHV,yBAIWA,GAJX,4C,kEAOA,WAAuBJ,GAAvB,eAAA1F,EAAA,sEACuBpC,EAAeE,IAAI,OAAQ4H,GADlD,cACUK,EADV,OAGmBA,EAHnB,kBAIWA,GAJX,4C,kEAYA,WAAsBA,GAAtB,SAAA/F,EAAA,sEACUpC,EAAec,IAAI,OAAQqH,GADrC,cAIQX,IAAkBhH,MAAQ2H,EAAK3H,KAAK4H,EAAeD,GAJ3D,kBAKWA,GALX,4C,kEAQA,WAAqBE,GAArB,eAAAjG,EAAA,sEAMuBoC,EAAiB,aAAc6D,GANtD,YAMUF,EANV,iDAQqBC,EAAeD,IARpC,4C,kEAWA,WAA2BG,GAA3B,eAAAlG,EAAA,+EAE2BoC,EAAiB,mBAAoB,CAAE8D,YAFlE,YAEcH,EAFd,iDAGyBC,EAAeD,IAHxC,4H,kEASA,WAAsBE,GAAtB,eAAAjG,EAAA,6DACIiG,EAASV,OAAS,GAClBU,EAASE,SAAW,GACpBF,EAAS9I,OAAS,GAHtB,SAKuBiF,EAAiB,cAAe6D,GALvD,cAKUF,EALV,yBAOWC,EAAeD,IAP1B,4C,kEASA,sBAAA/F,EAAA,sDACI+C,eAAeqD,WAAWrB,GAD9B,4C,sBAOA,SAASiB,EAAeD,GAEpB,OADAhD,eAAe3B,QAAQ2D,EAA2BvF,KAAK6B,UAAU0E,IAC1DA,EAGX,SAASX,IAEL,OADqB5F,KAAKC,MAAMsD,eAAepD,QAAQoF,IAA8B,QAxEzFrJ,OAAOsJ,YAAcA,EClBrB,IAAM9H,EAAe,CACjB6I,KAAMf,EAAYI,mBAAqBJ,EAAYY,gBACnDE,MAAO,GACPO,YAAa,MCNjB,IAAMnJ,EAAe,CACnBoJ,WAAW,GCUb,IAAMC,EAAcC,YAAgB,CAChCC,YRCG,WAAqD,IAEpDtJ,EAFqBT,EAA8B,uDAAtBQ,EAAcwJ,EAAQ,uCACnDC,EAAWjK,EAEf,OAAQgK,EAAOE,MACX,IAAK,aACDD,EAAQ,2BAAQjK,GAAR,IAAeS,OAAQuJ,EAAOvJ,SACtC,MACJ,IAAK,gBACDwJ,EAAQ,2BAAOjK,GAAP,IAAcc,SAAUkJ,EAAOlJ,WACvC,MACJ,IAAK,iBAcL,IAAK,eAEDmJ,EAAQ,2BAAQjK,GAAR,IAAeU,UAAWsJ,EAAOzG,QACzC,MAdJ,IAAK,eACD,IAAM5C,EAAmBX,EAAMS,OAAOe,MAAK,SAAA+B,GAAK,OAAIA,EAAM7B,MAAQsI,EAAOG,WACzE1J,EAAST,EAAMS,OAAO2J,QAAO,SAAA7G,GAAK,OAAIA,EAAM7B,MAAQsI,EAAOG,WAC3DF,EAAQ,2BAAQjK,GAAR,IAAeS,SAAQE,qBAC/B,MACJ,IAAK,mBACDsJ,EAAQ,2BAAQjK,GAAR,IAAeY,cAAeoJ,EAAOpJ,gBAC7C,MACJ,IAAK,YACDqJ,EAAQ,2BAAQjK,GAAR,IAAeS,OAAO,GAAD,mBAAMT,EAAMS,QAAZ,CAAoBuJ,EAAOzG,UACxD,MAKJ,IAAK,cACD0G,EAAQ,2BAAQjK,GAAR,IAAea,WAAYmJ,EAAOK,SAC1C,MACJ,IAAK,oBACGrK,EAAMW,mBACNsJ,EAAQ,2BAAQjK,GAAR,IAAeS,OAAO,GAAD,mBAAMT,EAAMS,QAAZ,CAAoBT,EAAMW,mBAAmBA,iBAAkB,QAKxG,OAAOsJ,GQtCPK,WFLG,WAAoD,IAA/BtK,EAA8B,uDAAtBQ,EAAcwJ,EAAQ,uCAClDC,EAAWjK,EACf,OAAQgK,EAAOE,MACX,IAAK,WACDD,EAAQ,2BAAOjK,GAAP,IAAcqJ,KAAMW,EAAOX,OACnC,MACJ,IAAK,mBACDY,EAAQ,2BAAOjK,GAAP,IAAc2J,YAAaK,EAAOX,OAC1C,MACJ,IAAK,cACDY,EAAQ,2BACDjK,GADC,IAEJoJ,MAAOpJ,EAAMoJ,MAAMgB,QAAO,SAAAf,GAAI,OAAIA,EAAK3H,MAAQsI,EAAOhB,YAE1D,MACJ,IAAK,YACDiB,EAAQ,2BAAOjK,GAAP,IAAcoJ,MAAOY,EAAOZ,QAO5C,OAAOa,GEjBPM,aDVG,WAA4D,IAApCvK,EAAmC,uDAA3BQ,EAAcwJ,EAAa,uDAAJ,GAC5D,OAAQA,EAAOE,MACb,IAAK,gBACH,OAAO,2BAAKlK,GAAZ,IAAmB4J,WAAW,IAChC,IAAK,eACH,OAAO,2BAAK5J,GAAZ,IAAmB4J,WAAW,IAChC,QAAS,OAAO5J,MCWdwK,GAAmBxL,OAAOyL,sCAAwCC,IAC3DC,GAAQC,YAAYf,EAAaW,GAAiBK,YAAgBC,O,oDCLxE,IAAMC,GAAkB,CAAEnE,GAjBjC,SAAYC,EAAWmE,GAEnB,IAAMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBF,EAASE,IAKb,OAFAlM,OAAOmM,iBAAiBtE,EAAWoE,GAE5B,WACHjM,OAAOoM,oBAAoBvE,EAAWoE,KAQThE,KAJrC,SAAcJ,EAAWjB,GACrB5G,OAAOqM,cAAc,IAAIC,YAAYzE,EAAW,CAAEqE,OAAQtF,OAKvD,SAAS2F,GAAYxK,GAAiB,IAAZmJ,EAAW,uDAAJ,GACpCa,GAAgB9D,KAAK,gBAAiB,CAAElG,MAAKmJ,SChB1C,SAASsB,KACZ,8CAAO,WAAMC,GAAN,eAAAnI,EAAA,+EAGqBgF,EAAYQ,WAHjC,OAGOM,EAHP,OAICqC,EAAS,CAAEvB,KAAM,YAAad,UAJ/B,gDAMClJ,QAAQC,IAAI,gCAAZ,MAND,yDAAP,sDAyBG,SAASuL,GAAQC,GACpB,8CAAO,WAAOF,GAAP,eAAAnI,EAAA,+EAEoBgF,EAAYC,MAAMoD,GAFtC,OAEOtC,EAFP,OAGCoC,EAAS,CACLvB,KAAM,WACNb,SALL,gDAQCnJ,QAAQC,IAAI,eAAZ,MARD,yDAAP,sDA2BG,SAASyL,GAASD,GACrB,OAAO,SAACF,GACJnD,EAAYG,OAAOkD,GACdjM,MAAK,SAAA2J,GACFoC,EAAS,CACLvB,KAAM,WACNb,YAGP/I,OAAM,SAAAuL,GACH3L,QAAQC,IAAI,gBAAiB0L,OAMtC,SAASC,KACZ,OAAO,SAACL,GACJnD,EAAYE,SACP9I,MAAK,kBAAM+L,EAAS,CACjBvB,KAAM,WACNb,KAAM,UAET/I,OAAM,SAAAuL,GACH3L,QAAQC,IAAI,gBAAiB0L,ODrD7C7M,OAAO+M,MAAQhB,GACf/L,OAAOuM,YAAcA,GE9BN,WAA0B,iCCA1B,OAA0B,6C,QCUnCS,G,+MAEFhM,MAAQ,CACJiM,YAAY,G,EAahBC,kBAAoB,WAChB,IAAQD,EAAe,EAAKjM,MAApBiM,WACJjN,OAAOmN,QAAU,KAAOF,EACxB,EAAKG,SAAS,CAAEH,YAAY,IACrBjN,OAAOmN,QAAU,IAAMF,GAC9B,EAAKG,SAAS,CAAEH,YAAY,K,EAIpCI,aAAe,WACX,EAAKC,MAAMZ,QAAQ,CAACa,SAAU,mBAAoBC,SAAU,YAC5D,EAAKF,MAAMG,QAAQ3K,KAAK,W,wDArB5B,WACI9C,OAAOmM,iBAAiB,SAAUuB,KAAKR,mBACvCS,SAASC,KAAKC,MAAMC,UAAY,W,kCAGpC,WACI9N,OAAOoM,oBAAoB,SAAUsB,KAAKR,mBAC1CS,SAASC,KAAKC,MAAMC,UAAY,W,oBAiBpC,WAAU,IAAD,OACGb,EAAeS,KAAK1M,MAApBiM,WACR,OACI,2BAASc,UAAU,2BAAnB,UACI,0BAAQA,UAAS,sBAAkBd,EAAc,aAAe,IAAhE,UACI,wBAAMc,UAAU,OAAhB,cAAwB,eAAC,KAAD,IAAxB,iBACA,uBAAKA,UAAU,iBAAf,UACI,eAAC,IAAD,CAAMC,GAAG,SAAT,SAAkB,yBAAQD,UAAU,uBAAlB,sBAClB,eAAC,IAAD,CAAMC,GAAG,UAAT,SAAmB,yBAAQD,UAAU,wBAAlB,6BAG3B,uBAAKA,UAAU,kBAAf,UACI,uBAAKA,UAAU,kBAAf,UACI,4EACA,+MAEA,yBAAQA,UAAU,qBAAqBE,QAAS,kBAAM,EAAKZ,gBAA3D,6BAEJ,sBAAKU,UAAU,iBAAf,SACI,sBAAKG,IAAKC,GAASC,IAAI,cAG/B,uBAAKL,UAAU,mBAAf,UACI,uBAAKA,UAAU,mBAAf,UACI,iGACA,mOAEJ,sBAAKA,UAAU,kBAAf,SACI,sBAAKG,IAAKG,GAAYD,IAAI,qB,GA1D1BE,IAAMC,WAwE9B,IAAMC,GAAqB,CACvB9B,YAGS+B,GAAWC,aAVxB,SAAyB1N,GACrB,MAAO,CACHoJ,MAAOpJ,EAAMsK,WAAWlB,SAQiBoE,GAAzBE,CAA6C1B,I,SCjF9D,SAAS2B,GAAT,GAAkE,IAA1CpK,EAAyC,EAAzCA,MAAOqK,EAAkC,EAAlCA,mBAAoBC,EAAc,EAAdA,WAQtD,OACI,eAAC,IAAD,CAAMb,GAAE,iBAAYzJ,EAAM7B,KAA1B,SAAiC,sBAAKuL,QAAS,kBAAMY,EAAWtK,EAAMsJ,QAAQE,UAAU,gBAAgBF,MAAQtJ,EAAMsJ,MAAMiB,QAAW,CAAEC,gBAAgB,GAAD,OAAKxK,EAAMsJ,MAAMiB,UAAc,CAAEE,gBAAgB,OAAD,OAASzK,EAAMsJ,MAAMhE,OAArB,MAAvK,SAC7B,sBAAKkE,UAAU,iBAAf,SACI,uBAAKA,UAAU,kBAAf,UACI,qBAAIA,UAAU,cAAd,SAA6BxJ,EAAMU,QACnC,yBAAQ8I,UAAS,mBAAexJ,EAAM0K,UAAa,UAAY,IAAMhB,QAAS,SAACiB,GAAD,OAX9F,SAAyBA,GACrBA,EAAGC,iBACHD,EAAGE,kBACHR,EAAmBrK,GAQ+E8K,CAAgBH,IAAtG,SAA2G,eAAC,KAAD,eCfxH,SAASI,GAAT,GAA0F,IAArE7N,EAAoE,EAApEA,OAAQmN,EAA4D,EAA5DA,mBAAoBC,EAAwC,EAAxCA,WAAYU,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAC7E,OACI,uBAAKzB,UAAU,kBAAf,UACKtM,EAAO+B,KAAI,SAAAe,GAAK,OACb,eAACoK,GAAD,CAA8BpK,MAAOA,EAAOqK,mBAAoBA,EAAoBC,WAAYA,GAA7EtK,EAAM7B,QAE5B8M,GAAe,sBAAKzB,UAAU,iCAAiCE,QAAS,kBAAMsB,KAA/D,SACZ,wDCRT,IAAME,GACC,SAACC,GACP,MAAM,eAAN,OAAsBA,IAFjBD,GAIA,WACL,MAAM,eALDA,GAUI,SAACE,GACV,MAAM,0BAAN,OAAiCA,IAX5BF,GAaK,SAACG,GACX,MAAM,WAAN,OAAkBA,EAAlB,mBAdKH,GAgBK,SAACG,GACX,MAAM,WAAN,OAAkBA,EAAlB,qBAjBKH,GAmBS,WACd,MAAM,wCApBDA,GAsBC,WACN,MAAM,uBAvBDA,GAyBI,SAACC,GACV,MAAM,sBAAN,OAA6BA,IA1BxBD,GA4BK,WACV,MAAM,2CA7BDA,GA+BO,WACZ,MAAM,6CAhCDA,GAkCU,WACf,MAAM,qCAnCDA,GAqCS,SAACI,GACf,MAAM,8BAAN,OAAqCA,IAtChCJ,GAwCQ,SAACG,GACd,MAAM,SAAN,OAAgBA,EAAhB,eAzCKH,GA2Ca,SAACG,GACnB,MAAM,WAAN,OAAkBA,EAAlB,iBA5CKH,GA8CC,SAACK,GACP,MAAM,mBAAN,OAA0BA,EAA1B,eA/CKL,GAiDI,SAACK,GACV,MAAM,qBAAN,OAA4BA,EAA5B,iBAlDKL,GAoDK,SAACM,GACX,MAAM,mBAAN,OAA0BA,EAA1B,eC/CKC,GAAe,CACxB7N,M,6CACA4H,Q,+CACAkG,K,6CACA5M,O,6CACAI,e,6CACAyM,iB,4FAKJ,WAAqBC,GAArB,eAAA7L,EAAA,+EAG6BoC,EAAgB,QAASyJ,GAHtD,cAGc1O,EAHd,yBAIeA,GAJf,gCAMQP,QAAQC,IAAI,8BAAZ,MANR,0D,oEAUA,WAAuBgK,EAASrJ,GAAhC,eAAAwC,EAAA,sEAGgC,kBAAbxC,IACPA,EAAY,IAAIsO,gBAAgBtO,GAAWuO,YAJvD,SAM4B3J,EAAA,gBAAyByE,GAAWrJ,GANhE,cAMcyC,EANd,yBAOeA,GAPf,gCASQrD,QAAQC,IAAR,8CAAmDgK,GAAnD,MATR,0D,oEAaA,WAA8BA,GAA9B,eAAA7G,EAAA,+EAIiCoC,EAAA,0BAAmCyE,IAJpE,cAIc3G,EAJd,yBAKeA,GALf,gCAOQtD,QAAQC,IAAI,kCAAZ,MAPR,0D,oEAWA,WAAgCgK,GAAhC,eAAA7G,EAAA,+EAEoCoC,EAAA,gBAAyByE,EAAzB,YAFpC,cAEcmF,EAFd,OAGQpP,QAAQC,IAAI,kBAAmBmP,GAHvC,kBAIeA,GAJf,gCAMQpP,QAAQC,IAAI,qCAAZ,MANR,0D,oEAWA,WAAsBgK,GAAtB,SAAA7G,EAAA,wFAGmBoC,EAAA,gBAA4ByE,KAH/C,gCAKYjK,QAAQC,IAAR,+CAAoDgK,IALhE,yD,oEASA,WAAoB5G,GAApB,iCAAAD,EAAA,yDAA2BiM,EAA3B,+BAAsC,MAC9BhM,EAAM7B,IADd,qBAEY6N,EAFZ,uBAGkBC,EAAc,CACZzO,IAAKwO,EAASxO,IACdqE,GAAIgC,EAAYC,SAChBoI,SAAUnH,EAAYK,cACtBrE,KAAOiL,EAASjL,KAAQ,CAAEc,GAAImK,EAASjL,KAAKc,GAAInB,MAAOsL,EAASjL,KAAKL,OAAU,GAC/EyL,QAAUH,EAASG,QAAWH,EAASG,QAAU,MARrE,kBAamBhK,EAAA,gBAAyBnC,EAAM7B,KAAO,CAAE6B,MAAOA,EAAOgM,SAAUC,KAbnF,gCAgBmB9J,EAAA,gBAAyBnC,EAAM7B,KAAO,CAAE6B,MAAOA,EAAOgM,SAAU,QAhBnF,sCAmBcI,EAAc,CACZ1L,MAAOV,EAAMU,MACb4I,MAAOtJ,EAAMsJ,MACb+C,UAAWtH,EAAYK,cACvB3H,QAAS,CAACsH,EAAYK,gBAvBtC,UA0BiCjD,EAAA,QAA0BiK,GA1B3D,eA0BcE,EA1Bd,yBA2BeA,GA3Bf,4C,yBCnDO,SAASC,GAAU3F,EAASrJ,GAC/B,8CAAO,WAAM2K,GAAN,eAAAnI,EAAA,+EAEqB0L,GAAajG,QAAQoB,EAASrJ,GAFnD,OAEOyC,EAFP,OAGCoJ,SAASC,KAAKC,MAAMkD,WAAaxM,EAAMsJ,MAAMiB,QAAUvK,EAAMsJ,MAAMiB,QAAlC,eAAoDvK,EAAMsJ,MAAMhE,OAAhE,MACjC8D,SAASC,KAAKC,MAAMmD,eAAiB,QAGrCvE,EAAS,CACLvB,KAAM,iBACN3G,UATL,gDAaCrD,QAAQC,IAAI,oBAAZ,MAbD,yDAAP,sDA2CG,SAAS8P,GAAcjG,EAAQzG,GAAyB,IAAlBgM,EAAiB,uDAAN,KACpD,8CAAO,WAAM9D,GAAN,eAAAnI,EAAA,6DACGqM,EAAcO,GAAiBlG,EAAQzG,GAC7CrD,QAAQC,IAAIwP,GACZlE,EAAS,CACLvB,KAAM,eACN3G,MAAOoM,IALR,SASM3F,EAAOE,OAAMF,EAAOzG,MAAQA,GACjCiD,EAAcS,KAAK,eAAgB,CAAE+C,SAAQuF,aAV9C,SAWOP,GAAaC,KAAKU,EAAaJ,GAXtC,yDAaCrP,QAAQC,IAAI,oBAAZ,MAbD,0DAAP,sDAmCG,SAASgQ,GAAevP,GAC3B,OAAO,SAAC6K,GACJA,EAAS,CACLvB,KAAM,mBACNtJ,cAAeA,KA0FpB,SAASwP,GAAaC,EAAYX,EAASnM,GAAyB,IAAlBgM,EAAiB,uDAAN,KAE1DpL,EAAQZ,EAAMW,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAMiB,KAAOsK,KAChDY,EAAUnM,EAAME,MAAMlC,WAAU,SAAAmC,GAAI,OAAIA,EAAKc,KAAOiL,EAAWjL,MAErEjB,EAAME,MAAMjC,OAAOkO,EAAS,EAAGD,GAC/B,IAAME,EAAc,CAAErG,KAAM,eAAgB/F,SAC5C,OAAO8L,GAAcM,EAAahN,EAAOgM,GAGtC,SAASiB,GAAYnG,GACxB,8CAAO,WAAMoB,GAAN,SAAAnI,EAAA,sDACH,IACImI,EAAS,CACLvB,KAAM,cACNG,WAEN,MAAOwB,GAEL3L,QAAQC,IAAI,kBAAmB0L,GARhC,2CAAP,sDA8CJ,SAASqE,GAAiBlG,EAAQzG,GAC9B,IAAMoM,EAAW,eAAOpM,GACxB,OAAQyG,EAAOE,MACX,IAAK,iBACDyF,EAAY1B,UAAYjE,EAAOiE,UAC/B,MACJ,IAAK,qBACD0B,EAAY9C,MAAQ7C,EAAO6C,MAC3BF,SAASC,KAAKC,MAAMkD,WAAaJ,EAAY9C,MAAMiB,QAAU6B,EAAY9C,MAAMiB,QAA9C,yBAA0E6B,EAAY9C,MAAMhE,OAA5F,MACjC8D,SAASC,KAAKC,MAAMmD,eAAiB,QACrC,MACJ,IAAK,eACDL,EAAY1L,MAAQ+F,EAAO/F,MAC3B,MACJ,IAAK,mBACD/D,QAAQC,IAAI,wBAAyBwP,EAAY3O,SACjD2O,EAAY3O,QAAZ,sBAA0B2O,EAAY3O,SAAtC,CAA+CgJ,EAAOlG,SACtD,MACJ,IAAK,sBACD5D,QAAQC,IAAI,wBAAyBwP,EAAY3O,SACjD2O,EAAY3O,QAAZ,YAA0B2O,EAAY3O,QAAQoJ,QAAO,SAAAtG,GAAM,OAAIA,EAAOpC,MAAQsI,EAAOyG,aACrF,MACJ,IAAK,YACDd,EAAYzL,OAAZ,sBAAyByL,EAAYzL,QAArC,CAA6C8F,EAAO7F,QACpD,MACJ,IAAK,eACDwL,EAAYzL,OAAZ,YAAyByL,EAAYzL,OAAO1B,KAAI,SAAAkO,GAAS,OAAIA,EAAUtL,KAAO4E,EAAO7F,MAAMiB,GAAK4E,EAAO7F,MAAQuM,MAC/G,MACJ,IAAK,eACDf,EAAYzL,OAAZ,YAAyByL,EAAYzL,OAAOkG,QAAO,SAAAsG,GAAS,OAAIA,EAAUtL,KAAO4E,EAAO7F,MAAMiB,OAGtG,OAAOuK,EC7RJ,SAASgB,KACZ,OACI,sBAAK5D,UAAU,mBFcvB/N,OAAO4R,GAAK5B,GGhBG,WAA0B,mCCClC,SAAS6B,KACZ,OACI,sBAAK9D,UAAU,SAAf,SACI,sBAAKG,IAAK4D,GAAQ1D,IAAI,iB,ICS5B2D,G,+MACF/Q,MAAQ,G,EASRgR,iBAAmB,WACf,OAAO,EAAK1E,MAAM7L,OAAO2J,QAAO,SAAA7G,GAAK,OAAIA,EAAM0K,c,EAGnDL,mBAAqB,SAACrK,GAClB,IAAQ0M,EAAkB,EAAK3D,MAAvB2D,cACR1M,EAAM0K,WAAa1K,EAAM0K,UACzBgC,EAAc,CAAE/F,KAAM,iBAAkB+D,UAAW1K,EAAM0K,WAAa1K,GACtEiD,EAAcS,KAAK,UAAU,I,EAEjC4G,WAAa,SAAChB,GACV,IAAMoE,EAAUtE,SAASuE,eAAe,WACpCrE,EAAMhE,OACNoI,EAAQE,KAAOtE,EAAMhE,OAErBoI,EAAQE,KAAO,4B,EAIvB5C,YAAc,WACV,EAAKjC,MAAM6D,gBAAe,I,+FA1B9B,4BAAA7M,EAAA,6DACU+F,EAAOf,EAAYK,cACzBzI,QAAQC,IAAIkJ,GAFhB,SAGUqD,KAAKJ,MAAM8E,WAAW/H,GAHhC,gD,0EA6BA,WACI,MAAkCqD,KAAKJ,MAA/B7L,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,cAChB,OAAKH,EAED,sBAAKsM,UAAU,uBAAf,SACA,uBAAKA,UAAU,+BAAf,UACI,oCAAK,eAAC,KAAD,IAAL,qBACA,sBAAKA,UAAU,iBAAf,SACI,eAACuB,GAAD,CAAWT,WAAYnB,KAAKmB,WAAYpN,OAAQiM,KAAKsE,mBAAoBpD,mBAAoBlB,KAAKkB,uBAEtG,oCAAK,eAAC,KAAD,IAAL,gBACA,sBAAKb,UAAU,YAAf,SACI,eAACuB,GAAD,CAAW7N,OAAQA,EAAQmN,mBAAoBlB,KAAKkB,mBAAoBC,WAAYnB,KAAKmB,WAAYU,YAAa7B,KAAK6B,YAAaC,aAAa,MAKpJ5N,GAAiB,eAAC+P,GAAD,SAfN,eAACE,GAAD,Q,GAnCDvD,IAAMC,WAkEjC,IAAMC,GAAqB,CACvB4D,WJzEG,SAAoBtQ,GACvB,8CAAO,WAAM2K,GAAN,eAAAnI,EAAA,+EAEsB0L,GAAa7N,MAAML,GAFzC,OAEOL,EAFP,OAGCgL,EAAS,CACLvB,KAAM,aACNzJ,WALL,gDASCP,QAAQC,IAAI,qBAAZ,MATD,yDAAP,uDIyEAgQ,kBACAF,kBAGSoB,GAAc3D,aAf3B,SAAyB1N,GACrB,MAAO,CACHS,OAAQT,EAAM+J,YAAYtJ,OAC1BG,cAAeZ,EAAM+J,YAAYnJ,cACjC2C,MAAOvD,EAAM+J,YAAYrJ,UACzB2I,KAAMrJ,EAAMsK,WAAWjB,QAUqBmE,GAAzBE,CAA6CqD,I,uDCHlEO,GAAc,SAACjH,EAAQqF,GAGzB,OAFc/E,GAAM4G,WAAWxH,YAAYrJ,UACvBwD,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAMiB,KAAOsK,KACzCrL,MAAM7C,MAAK,SAAA8C,GAAI,OAAIA,EAAKc,KAAOiF,MAQ1CmH,GAAa,SAACnH,GAAY,IAAD,EAE3B,iBADcM,GAAM4G,WAAWxH,YAAYrJ,UAC9BwD,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAME,MAAMoN,MAAK,SAAAnN,GAAI,OAAIA,EAAKc,KAAOiF,eAAvE,aAAO,EAA0EjF,IA4JxEsM,GAAkB,CAC3BC,sBAzP0B,SAACzH,EAAM0H,EAAaC,EAAOC,GACrD,IAAMzH,EAASM,GAAM4G,WAAWxH,YAAYlJ,WACtC0C,EAAQoH,GAAM4G,WAAWxH,YAAYrJ,UACrCgP,EAAU8B,GAAWnH,GACrB/F,EAAOgN,GAAYjH,EAAQqF,GACjC,GAAIkC,EAAa,CACb,IAAMG,EAAYzN,EAAK0N,WAAWxQ,MAAK,SAAAuQ,GAAS,OAAIA,EAAU3M,KAAOwM,KACrE,GAAa,YAAT1H,EACA6H,EAAUE,MAAMnQ,KAAK+P,QAElB,GAAa,aAAT3H,EAAqB,CAC5B,IAAMgI,EAAOH,EAAUE,MAAMzQ,MAAK,SAAA0Q,GAAI,OAAIA,EAAK9M,KAAOyM,KACtDK,EAAKC,QAAUD,EAAKC,YAEjB,GAAa,eAATjI,EAAuB,CAC9B,IAAMhI,EAAM6P,EAAUE,MAAM9P,WAAU,SAAA+P,GAAI,OAAIA,EAAK9M,KAAOyM,KAC1DE,EAAUE,MAAM7P,OAAOF,EAAK,QAEzB,GAAa,gBAATgI,EAAwB,CAC/B,IAAMgI,EAAOH,EAAUE,MAAMzQ,MAAK,SAAA0Q,GAAI,OAAIA,EAAK9M,KAAOyM,KACtDK,EAAKjO,MAAQ6N,OAEV,GAAa,oBAAT5H,EAA4B,CACnC,IAAMhI,EAAMoC,EAAK0N,WAAW7P,WAAU,SAAA4P,GAAS,OAAIA,EAAU3M,KAAOwM,KACpEtN,EAAK0N,WAAW5P,OAAOF,EAAK,QAInB,iBAATgI,IACK5F,EAAK0N,aAAY1N,EAAK0N,WAAa,IACxC1N,EAAK0N,WAAWlQ,KAAK,CAAEsD,GAAIgC,EAAYC,SAAUpD,MAAO4N,EAAOI,MAAO,MAI9E,MAAO,CAAC3N,EAAMoL,EAASnM,IAwNvB6O,mBArNuB,SAAC3B,GAAc,IAAD,MAC/BpG,EAASM,GAAM4G,WAAWxH,YAAYlJ,WACtC0C,EAAQoH,GAAM4G,WAAWxH,YAAYrJ,UACrCgP,EAAU8B,GAAWnH,GACvB/F,EAAOgN,GAAYjH,EAAQqF,GAI/B,GAFKpL,EAAKtD,UAASsD,EAAKtD,QAAU,IACf,UAAGsD,SAAH,iBAAG,EAAMtD,eAAT,aAAG,EAAeyQ,MAAK,SAAA3N,GAAM,OAAIA,EAAOpC,MAAQ+O,KAChDnM,EAAI,2BAAQA,GAAR,IAActD,QAAO,UAAEsD,SAAF,aAAE,EAAMtD,QAAQoJ,QAAO,SAAAtG,GAAM,OAAIA,EAAOpC,MAAQ+O,WACvF,CACD,IAAM4B,EAAc9O,EAAMvC,QAAQQ,MAAK,SAAAsC,GAAM,OAAIA,EAAOpC,MAAQ+O,KAChEnM,EAAKtD,QAAQc,KAAKuQ,GAGtB,MAAO,CAAC/N,EAAMoL,EAASnM,IAwMvBiO,cACAF,eACAgB,kBAvMsB,SAAC9N,GAAa,IAAD,IAC7B6F,EAASM,GAAM4G,WAAWxH,YAAYlJ,WACtC0C,EAAQoH,GAAM4G,WAAWxH,YAAYrJ,UACrCgP,EAAU8B,GAAWnH,GACvB/F,EAAOgN,GAAYjH,EAAQqF,GAG/B,GAFKpL,EAAKC,WAAUD,EAAKC,SAAW,IAClB,UAAGD,SAAH,aAAG,EAAMC,SAASkN,MAAK,SAAArM,GAAE,OAAIA,IAAOZ,KACpCF,EAAI,2BAAQA,GAAR,IAAcC,SAAQ,UAAED,SAAF,aAAE,EAAMC,SAAS6F,QAAO,SAAAhF,GAAE,OAAIA,IAAOZ,WAC5E,CACD,IAAM+N,EAAahP,EAAMtC,OAAOO,MAAK,SAAAwC,GAAK,OAAIA,EAAMoB,KAAOZ,KAC3DF,EAAKC,SAASzC,KAAKyQ,EAAWnN,IAGlC,MAAO,CAACd,EAAMoL,EAASnM,IA2LvBiP,oBAxLwB,SAACC,GACzB,IAAMpI,EAASM,GAAM4G,WAAWxH,YAAYlJ,WACtC0C,EAAQoH,GAAM4G,WAAWxH,YAAYrJ,UACrCgP,EAAU8B,GAAWnH,GACvB/F,EAAOgN,GAAYjH,EAAQqF,GAE/B,OADApL,EAAKoO,QAAUD,EACR,CAACnO,EAAMoL,EAASnM,IAmLvBoP,iBAhKqB,SAACF,GACtB,IAAKA,EAAW,MAAO,GACvB,IAAMG,EAAWH,EAAYI,KAAKC,MAClC,GAAIF,EAAW,EAAG,CACd,IAAMG,EAAO,IAAIF,KAAKJ,GAGhBO,EAFa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrFD,EAAKE,YAEXC,EAAMH,EAAKI,UACjB,MAAM,GAAN,OAAUH,EAAV,YAAmBE,EAAnB,gBAEJ,GAAIN,GAAa,MAAsB,MAAO,uBAC9C,IAAMG,EAAO,IAAIF,KAAKJ,GAGhBO,EAFa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrFD,EAAKE,YAEXC,EAAMH,EAAKI,UACjB,MAAM,GAAN,OAAUH,EAAV,YAAmBE,EAAnB,iBAgJAE,cA7IkB,SAACX,GACnB,IAAMY,EAAaR,KAAKC,MAAQL,EAChC,GAAIY,EAAc,IAAY,MAAO,0BAChC,GAAIA,EAAc,KAAgB,MAAO,qBACzC,GAAIA,EAAa,KAAgB,CAClC,IAAMC,EAAUrO,KAAKC,MAAMmO,EAAa,IAAO,IAC/C,MAAM,SAAN,OAAgBC,EAAhB,gBAEC,GAAID,EAAa,MAAqB,CACvC,IAAME,EAAQtO,KAAKC,MAAMmO,EAAa,IAAO,GAAK,IAClD,MAAM,SAAN,OAAgBE,EAAhB,cAEA,IAAMR,EAAO,IAAIF,KAAKJ,GAChBa,EAAWP,EAAKS,aAAe,GAArB,WAA+BT,EAAKS,cAAiBT,EAAKS,aAC1E,GAAIH,EAAa,MACb,MAAM,kBAAN,OAAyBN,EAAKU,WAA9B,YAA4CH,EAA5C,KACG,GAAID,EAAa,OACpB,MAAM,sBAAN,OAA6BN,EAAKU,WAAlC,YAAgDH,GAEhD,IAEMN,EAFa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrFD,EAAKE,YAEXC,EAAMH,EAAKI,UACjB,MAAM,SAAN,OAAgBH,EAAhB,YAAyBE,EAAzB,eAAmCH,EAAKU,WAAxC,YAAsDH,IAuH9DI,cAlHkB,SAAC3N,GAA+B,IAA1B9B,EAAyB,uDAAjB,aAC1BoG,EAASM,GAAM4G,WAAWxH,YAAYlJ,WACtC0C,EAAQoH,GAAM4G,WAAWxH,YAAYrJ,UACrCgP,EAAU8B,GAAWnH,GACrB/F,EAAOgN,GAAYjH,EAAQqF,GAGjC,OAFKpL,EAAKqP,cAAarP,EAAKqP,YAAc,IAC1CrP,EAAKqP,YAAY7R,KAAK,CAAEiE,MAAK9B,QAAO2P,QAASf,KAAKC,QAC3C,CAACxO,EAAMoL,EAASnM,IA4GvBsQ,iBAzGqB,SAACC,GACtB,IAAMzJ,EAASM,GAAM4G,WAAWxH,YAAYlJ,WACtC0C,EAAQoH,GAAM4G,WAAWxH,YAAYrJ,UACrCgP,EAAU8B,GAAWnH,GACrB/F,EAAOgN,GAAYjH,EAAQqF,GAC3BxN,EAAMoC,EAAKqP,YAAYxR,WAAU,SAAA4R,GAAI,OAAIA,EAAK3O,KAAO0O,KAE3D,OADAxP,EAAKqP,YAAYvR,OAAOF,EAAK,GACtB,CAACoC,EAAMoL,EAASnM,IAmGvByQ,aA9KiB,SAAC3J,GAElB,OADcM,GAAM4G,WAAWxH,YAAYrJ,UAC9BwD,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAME,MAAM7C,MAAK,SAAA8C,GAAI,OAAIA,EAAKc,KAAOiF,SA6KvE4J,eAjGmB,SAAC5J,EAAQqF,EAASxN,GACrC,IAAMgS,EAAevJ,GAAM4G,WAAWxH,YAAYrJ,UAC5CyT,EAAeD,EAAahQ,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAME,MAAMoN,MAAK,SAAAnN,GAAI,OAAIA,EAAKc,KAAOiF,QACtF/F,EAAOgN,GAAYjH,EAAQ8J,EAAa/O,IACxCgP,EAAiBD,EAAa9P,MAAMlC,WAAU,SAAAmC,GAAI,OAAIA,EAAKc,KAAOiF,KAIxE,OAHA8J,EAAa9P,MAAMjC,OAAOgS,EAAgB,GAC3BF,EAAahQ,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAMiB,KAAOsK,KACrDrL,MAAMjC,OAAOF,EAAK,EAAGoC,GACvB4P,GA0FPG,eAvFmB,SAAChK,EAAQqF,EAASxN,EAAK+B,GAC1C,IAAMiQ,EAAevJ,GAAM4G,WAAWxH,YAAYrJ,UAC5CyT,EAAeD,EAAahQ,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAME,MAAMoN,MAAK,SAAAnN,GAAI,OAAIA,EAAKc,KAAOiF,QACtF/F,EAAOgN,GAAYjH,EAAQ8J,EAAa/O,IAG9C,OAFe8O,EAAahQ,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAMiB,KAAOsK,KACrDrL,MAAMjC,OAAOF,EAAK,EAA3B,2BAAmCoC,GAAnC,IAAyCc,GAAIgC,EAAYC,SAAUpD,WAC5DiQ,GAkFPI,oBA/EwB,SAACjK,GACzB,IAAM9G,EAAQoH,GAAM4G,WAAWxH,YAAYrJ,UACrCgP,EAAU8B,GAAWnH,GACrB/F,EAAOgN,GAAYjH,EAAQqF,GAEjC,OADApL,EAAKF,WAAaE,EAAKF,UAChB,CAACE,EAAMoL,EAASnM,IA2EvBgR,iBAxEqB,SAAClK,GACtB,IACMlG,EADK,eAAQwG,GAAM4G,WAAWxH,YAAYrJ,WAC5BwD,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAME,MAAMoN,MAAK,SAAAnN,GAAI,OAAIA,EAAKc,KAAOiF,QAC9ElG,EAAME,MAAQF,EAAME,MAAM+F,QAAO,SAAA9F,GAAI,OAAIA,EAAKc,KAAOiF,MAsErDmK,aAlEiB,SAACzT,GAClB,IAAMsJ,EAASM,GAAM4G,WAAWxH,YAAYlJ,WACtC0C,EAAQoH,GAAM4G,WAAWxH,YAAYrJ,UACrC2I,EAAOsB,GAAM4G,WAAWjH,WAAWjB,KACnCqG,EAAU8B,GAAWnH,GACrB/F,EAAOgN,GAAYjH,EAAQqF,GAGjC,OAFKpL,EAAKmQ,WAAUnQ,EAAKmQ,SAAW,IACpCnQ,EAAKmQ,SAASC,QAAQ,CAAEtP,GAAIgC,EAAYC,SAAUsN,OAAQtL,EAAMtI,MAAK6S,QAASf,KAAKC,QAC5E,CAACxO,EAAMoL,EAASnM,IA2DvBqR,oBAxDwB,SAACC,GACzB,IAAMxK,EAASM,GAAM4G,WAAWxH,YAAYlJ,WACtC0C,EAAQoH,GAAM4G,WAAWxH,YAAYrJ,UACrCgP,EAAU8B,GAAWnH,GACrB/F,EAAOgN,GAAYjH,EAAQqF,GAC3BxN,EAAMoC,EAAKmQ,SAAStS,WAAU,SAAA2S,GAAO,OAAIA,EAAQ1P,KAAOyP,KAE9D,OADAvQ,EAAKmQ,SAASrS,OAAOF,EAAK,GACnB,CAACoC,EAAMoL,EAASnM,IAkDvBwR,eA/CmB,SAACtC,GACpB,IAAMY,EAAaR,KAAKC,MAAQL,EAChC,GAAIY,EAAc,IAAY,MAAO,oBAChC,GAAIA,EAAc,KAAgB,MAAO,eACzC,GAAIA,EAAa,KAAgB,CAClC,IAAMC,EAAUrO,KAAKC,MAAMmO,EAAa,IAAO,IAC/C,MAAM,GAAN,OAAUC,EAAV,gBAEC,GAAID,EAAa,MAAqB,CACvC,IAAME,EAAQtO,KAAKC,MAAMmO,EAAa,IAAO,GAAK,IAClD,MAAM,GAAN,OAAUE,EAAV,cAEA,IAAMR,EAAO,IAAIF,KAAKJ,GAChBa,EAAWP,EAAKS,aAAe,GAArB,WAA+BT,EAAKS,cAAiBT,EAAKS,aAC1E,GAAIH,EAAa,MACb,MAAM,YAAN,OAAmBN,EAAKU,WAAxB,YAAsCH,EAAtC,KACG,GAAID,EAAa,OACpB,MAAM,gBAAN,OAAuBN,EAAKU,WAA5B,YAA0CH,GAE1C,IAEMN,EAFa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrFD,EAAKE,YAEXC,EAAMH,EAAKI,UACjB,MAAM,GAAN,OAAUH,EAAV,YAAmBE,EAAnB,eAA6BH,EAAKU,WAAlC,YAAgDH,KChK5D,IAQM9F,GAAqB,CACvByC,kBAGS+E,GAAWtH,aAZA,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBD,OAAQT,EAAM+J,YAAYtJ,OAC1BI,WAAYb,EAAM+J,YAAYlJ,cAQW2M,GAAzBE,EA3FjB,YAAmE,IAA9CnK,EAA6C,EAA7CA,MAAO1C,EAAsC,EAAtCA,WAAYoP,EAA0B,EAA1BA,cAAegF,EAAW,EAAXA,QAC1D,EAAkCC,mBAAS,MAA3C,oBAAOxE,EAAP,KAAkByE,EAAlB,KACA,EAAwCD,mBAAS,MAAjD,oBAAOE,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACN,IAAMnR,EAAQuN,GAAgBsC,aAAanT,EAAY0C,EAAM7B,KAC7DyT,EAAahR,GACb,IAAMjC,EAAMiC,EAAME,MAAMlC,WAAU,SAAAmC,GAAI,OAAIA,EAAKc,KAAOvE,KACtDwU,EAAgBnT,EAAM,KACvB,CAACqB,IAEJ,IAAMgS,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAM5D,EAAc,EAAdA,MACpC,GAAa,UAAT4D,EAAkB,CAClB,IAAMtR,EAAQZ,EAAMW,OAAO1C,MAAK,SAAAkU,GAAI,OAAIA,EAAKtQ,KAAOyM,KACpDsD,EAAahR,GACbkR,EAAgBlR,EAAME,MAAMO,OAAS,OACrB,aAAT6Q,GAEPJ,EAAgBxD,IAyBxB,OAAKnB,EAED,uBAAK3D,UAAU,YAAf,UACI,qDAEA,uBAAKA,UAAU,eAAf,UACI,uBAAMA,UAAU,QAAhB,mBACA,uBAAMA,UAAU,eAAhB,SAAgCxJ,EAAMU,QACtC,yBAAQwR,KAAK,QAAQE,SAAUJ,EAA/B,SAEI,yBAAQ1D,MAAOtO,EAAM7B,IAArB,SAA2B6B,EAAMU,aAIzC,uBAAK8I,UAAU,wBAAf,UACI,uBAAKA,UAAU,eAAf,UACI,uBAAMA,UAAU,QAAhB,kBACA,uBAAMA,UAAU,eAAhB,SAAgC2D,EAAUzM,QAC1C,yBAAQwR,KAAK,QAAQE,SAAUJ,EAA/B,SACKhS,EAAMW,OAAO1B,KAAI,SAAAkT,GAAI,OAAI,yBAAsB7D,MAAO6D,EAAKtQ,GAAlC,SAAuCsQ,EAAKzR,OAA/ByR,EAAKtQ,YAIpD,uBAAK2H,UAAU,kBAAf,UACI,uBAAMA,UAAU,QAAhB,sBACA,uBAAMA,UAAU,eAAhB,SAAgCqI,IAChC,yBAAQK,KAAK,WAAWE,SAAUJ,EAAlC,SA/CK,WAGjB,IAFA,IAAM3Q,EAAS8L,EAAUrM,MAAMO,OAAS,EAClCgR,EAAY,GACT7Q,EAAI,EAAGA,GAAKH,EAAQG,IACzB6Q,EAAU9T,KAAKiD,GAEnB,OAAO6Q,EA0CUC,GAAerT,KAAI,SAACkT,EAAM3Q,GAAP,OAAa,yBAAgB8M,MAAO6D,EAAvB,SAA8BA,GAAjB3Q,cAI1D,yBAAQgI,UAAU,mCAAmCE,QA3CxC,WACjB,IAAMyC,EAAUgB,EAAUtL,GACpBlD,EAAMkT,EAAe,EAGrBU,EAAgBpE,GAAgBuC,eAAepT,EAAY6O,EAASxN,GAC1E+N,EAAc,CAAE/F,KAAM,IAAM4L,GAG5Bb,KAkCI,qBA/Be,QCsC3B,IAQMzH,GAAqB,CACvByC,kBAGS8F,GAAWrI,aAZA,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBD,OAAQT,EAAM+J,YAAYtJ,OAC1BI,WAAYb,EAAM+J,YAAYlJ,cAQW2M,GAAzBE,EA7FjB,YAAmE,IAA9CnK,EAA6C,EAA7CA,MAAO1C,EAAsC,EAAtCA,WAAYoP,EAA0B,EAA1BA,cAAegF,EAAW,EAAXA,QAC1D,EAAkCC,mBAAS,IAA3C,oBAAOc,EAAP,KAAkBC,EAAlB,KACA,EAAkCf,mBAAS,MAA3C,oBAAOxE,EAAP,KAAkByE,EAAlB,KACA,EAAwCD,mBAAS,MAAjD,oBAAOE,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACN,IAAMnR,EAAQuN,GAAgBsC,aAAanT,EAAY0C,EAAM7B,KACvD4C,EAAOoN,GAAgBJ,YAAYzQ,EAAYsD,EAAMiB,IAC3D6Q,EAAa3R,EAAKL,OAClBkR,EAAahR,GACb,IAAMjC,EAAMiC,EAAME,MAAMlC,WAAU,SAAAmC,GAAI,OAAIA,EAAKc,KAAOvE,KACtDwU,EAAgBnT,EAAM,KACvB,CAACqB,IAEJ,IAAMgS,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAM5D,EAAc,EAAdA,MACpC,GAAa,UAAT4D,EAAkB,CAClB,IAAMtR,EAAQZ,EAAMW,OAAO1C,MAAK,SAAAkU,GAAI,OAAIA,EAAKtQ,KAAOyM,KACpDsD,EAAahR,GACbkR,EAAgBlR,EAAME,MAAMO,OAAS,OACrB,aAAT6Q,EACPJ,EAAgBxD,GACA,UAAT4D,GACPQ,EAAapE,IAqBrB,OAAKnB,EAED,uBAAK3D,UAAU,YAAf,UACI,2CACA,2BAAU0I,KAAK,QAAQ1I,UAAU,eAAemJ,WAAS,EAACrE,MAAOmE,EAAWL,SAAUJ,IAGtF,gDACA,uBAAKxI,UAAU,eAAf,UACI,uBAAMA,UAAU,QAAhB,mBACA,uBAAMA,UAAU,eAAhB,SAAgCxJ,EAAMU,QACtC,yBAAQwR,KAAK,QAAQE,SAAUJ,EAA/B,SACI,yBAAQ1D,MAAOtO,EAAM7B,IAArB,SAA2B6B,EAAMU,aAIzC,uBAAK8I,UAAU,wBAAf,UACI,uBAAKA,UAAU,eAAf,UACI,uBAAMA,UAAU,QAAhB,kBACA,uBAAMA,UAAU,eAAhB,SAAgC2D,EAAUzM,QAC1C,yBAAQwR,KAAK,QAAQE,SAAUJ,EAA/B,SACKhS,EAAMW,OAAO1B,KAAI,SAAAkT,GAAI,OAAI,yBAAsB7D,MAAO6D,EAAKtQ,GAAlC,SAAuCsQ,EAAKzR,OAA/ByR,EAAKtQ,YAIpD,uBAAK2H,UAAU,kBAAf,UACI,uBAAMA,UAAU,QAAhB,sBACA,uBAAMA,UAAU,eAAhB,SAAgCqI,IAChC,yBAAQK,KAAK,WAAWE,SAAUJ,EAAlC,SA7CK,WAGjB,IAFA,IAAM3Q,EAAS8L,EAAUrM,MAAMO,OAAS,EAClCgR,EAAY,GACT7Q,EAAI,EAAGA,GAAKH,EAAQG,IACzB6Q,EAAU9T,KAAKiD,GAEnB,OAAO6Q,EAwCUC,GAAerT,KAAI,SAACkT,EAAM3Q,GAAP,OAAa,yBAAgB8M,MAAO6D,EAAvB,SAA8BA,GAAjB3Q,cAI1D,yBAAQgI,UAAU,mCAAmCE,QAzCxC,WACjB,IAAMyC,EAAUgB,EAAUtL,GACpBlD,EAAMkT,EAAe,EACrBU,EAAgBpE,GAAgB2C,eAAexT,EAAY6O,EAASxN,EAAK8T,GAC/E/F,EAAc,CAAE/F,KAAM,IAAM4L,GAC5Bb,KAoCI,4BAjCe,Q,SC9BdkB,GAAiB7I,IAAM8I,YAAW,WAAoDC,GAAe,IAAhEpB,EAA+D,EAA/DA,QAAShR,EAAsD,EAAtDA,MAAOqS,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,WAC3EC,EAAYC,mBAClB,EAAoCxB,mBAAS,CAAEyB,MAAO,EAAGC,OAAQ,IAAjE,oBAAOC,EAAP,KAAmBC,EAAnB,KAEAC,2BAAgB,WACRN,EAAUO,SACVF,EAAc,CACVH,MAAOF,EAAUO,QAAQC,YACzBL,OAAQH,EAAUO,QAAQE,iBAGnC,IAEH5B,qBAAU,WACN,IAAM6B,EAAc,SAAAC,GAAM,IAAD,EACfC,EAAmBZ,EAAUO,SACf,OAAhBK,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBC,SAASF,EAAE5B,WAA7B,OAAwCa,QAAxC,IAAwCA,GAAxC,UAAwCA,EAAWW,eAAnD,aAAwC,EAAoBM,SAASF,EAAE5B,UAC3EP,KAIJ,OADAjW,OAAOmM,iBAAiB,UAAWgM,GAC5B,WACHnY,OAAOoM,oBAAoB,UAAW+L,MAE3C,CAAClC,EAASoB,IAwBb,OACI,uBAAKkB,IAAK,SAAAA,GAAG,OAAId,EAAUO,QAAUO,GAAKxK,UAAU,kBAAkBF,MAAK,aAAI2K,SAAU,YAtBzE,WAAO,IAAD,EAChBC,EAAI,UAAGpB,EAAUW,eAAb,aAAG,EAAmBU,wBAChC,GAAKD,EAAL,CAEA,IAKQE,EACAC,EANFC,EAAc7Y,OAAO8Y,aAAeL,EAAKE,OAASd,EAAWD,QAAU,GACvEmB,EAAWN,EAAKG,IAAMf,EAAWD,OAAS,GAC1CoB,EAAahZ,OAAOiZ,YAAcR,EAAKS,KAAOrB,EAAWF,OAAS,IAExE,OAAIkB,GAGIE,EAAUH,EAAM,QACfD,EAASF,EAAKb,OAAS,EACxBoB,EAAmB,CAAEL,SAAQC,MAAKO,MAAO,GACjC,CAAER,SAAQC,MAAMM,KAAM,IAElCF,EAAmB,CAAEJ,IAAKH,EAAKb,OAAS,EAAGuB,MAAO,GAE/C,CAAED,KAAM,EAAGN,IAAKH,EAAKb,OAAS,IAImEwB,IAAxG,UAEKnU,EAEG,uBAAK8I,UAAU,iBAAf,UACKwJ,GAAW,uBAAMxJ,UAAU,WAAWE,QAASuJ,EAApC,SAAgD,eAAC,KAAD,MAC5D,6BAAIvS,IACJ,uBAAM8I,UAAU,YAAYE,QAASgI,EAArC,SAA8C,eAAC,KAAD,SAGlD,sBAAKlI,UAAU,WAAWF,MAAO,CAAE+J,OAAQ,IAA3C,SACI,uBAAM7J,UAAU,qBAAqBE,QAASgI,EAA9C,SAAuD,eAAC,KAAD,QAG/D,sBAAKlI,UAAU,kBAAf,SACKuJ,UCjFV,SAAS+B,GAAT,GAA4C,IAAhBC,EAAe,EAAfA,KAAMrU,EAAS,EAATA,MAOrC,OACI,sBAAK8I,UAAU,kBAAf,SACI,0BAAQA,UAAU,0CAA0CF,MAAK,aAAI2K,SAAU,YANrE,WAAVvT,EAA2B,CAAE8J,gBAAiB,UAAWwK,MAAO,QACxD,IAKR,UACI,sBAAKxL,UAAU,sBACf,uBAAKA,UAAU,2BAAf,UACI,eAACuL,EAAD,IACA,6BAAIrU,YCVjB,SAASuU,GAAT,GAAwC,IAAT9C,EAAQ,EAARA,KAClC,EAA4BR,oBAAS,GAArC,oBAAOuD,EAAP,KAAeC,EAAf,KACMC,EAAUjC,mBACVkC,EAAiBC,mBAAQ,kBAAMnD,EAAKoD,YAAW,CAACpD,IAEtD,OACI,sBAAK3I,UAAU,gBAAf,SACI,uBAAKwK,IAAKoB,EAAS5L,UAAS,mBAAc0L,EAAS,eAAiB,IAApE,UACI,uBAAMxL,QAAS,kBAAMyL,GAAWD,IAAhC,SACI,eAACJ,GAAD,CAAkBC,KAAM5C,EAAKqD,KAAM9U,MAAOyR,EAAKzR,UAG/CwU,GAAU,eAACtC,GAAD,CAAgBlB,QAAS,kBAAMyD,GAAU,IAAQzU,MAAOyR,EAAKzR,MAAOsT,IAAKoB,EAAzE,SACN,eAACC,EAAD,CAAgB3D,QAAS,kBAAMyD,GAAU,aCFjE,IA+CMM,GAAU,CAAC,CAAED,KAAME,KAAchV,MAAO,OAAQ6U,UAAW9D,IAAY,CAAE+D,KAAMG,KAAejV,MAAO,OAAQ6U,UAAW/C,IAAY,CAAEgD,KAAMI,KAAclV,MAAO,UASjKuJ,GAAqB,CACvB4C,gBACAH,kBAGSmJ,GAAkB1L,aAZP,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBG,WAAYb,EAAM+J,YAAYlJ,cASkB2M,GAAzBE,EA7DN,SAAC,GAAgE,IAA9D7M,EAA6D,EAA7DA,WAAmBuP,GAA0C,EAAjD7M,MAAiD,EAA1C6M,cAC3C,GADqF,EAA5BiJ,OAA4B,EAApBpJ,cAC/BiF,oBAAS,IAA3C,oBAAO9Q,EAAP,KAAkBkV,EAAlB,KAEAhE,qBAAU,WACN,IAAM5F,EAAUgC,GAAgBF,WAAW3Q,GACrCyD,EAAOoN,GAAgBJ,YAAYzQ,EAAY6O,GACrD4J,EAAahV,EAAKF,YAAa,KAEhC,IAEH,IAAMmV,EAAgB,WAClBD,GAAclV,GACd,IAAM6B,EAAMyL,GAAgB4C,oBAAoBzT,GAChDuP,EAAY,WAAZ,cAAgBnK,KASpB,OACI,sBAAK4G,MAAO,CAAE2K,SAAU,YAAxB,SACI,uBAAKzK,UAAU,oBAAf,UACI,qBAAIA,UAAU,gBAAd,qBACA,uBAAKA,UAAU,oBAAf,UACKiM,GAAQxW,KAAI,SAACkT,EAAMxT,GAAP,OACT,eAACsW,GAAD,CAA4C9C,KAAMA,GAAxBA,EAAKzR,MAAQ/B,OAEzCkC,GAAa,sBAAK2I,UAAU,gBAAgBE,QAASsM,EAAxC,SACX,eAAClB,GAAD,CAAkBC,KAAMkB,KAAWvV,MAAM,cAE5CG,GAAa,uCACV,sBAAK2I,UAAU,gBAAgBE,QAASsM,EAAxC,SACI,eAAClB,GAAD,CAAkBC,KAAMmB,KAAyBxV,MAAM,oBAE3D,sBAAK8I,UAAU,gBAAf,SACI,eAACsL,GAAD,CAAkBC,KAAMoB,KAAgBzV,MAAM,2B,UClDnE,SAAS0V,GAAT,GAAqD,IAA7B7V,EAA4B,EAA5BA,OAAQyD,EAAoB,EAApBA,KAAoB,IAAdsF,aAAc,MAAN,GAAM,EAcvD,OAAO,eAAC,KAAD,CAAQ4I,KAAM3R,EAAOC,SAAUmJ,IAAKpJ,EAAO+E,OAAQtB,KAZ1D,WACI,OAAQA,GACJ,IAAK,KACD,OAAO,GACX,IAAK,KACD,OAAO,GAEX,QACI,OAAO,IAI6CqS,GAAW/M,MAAOA,EAAOgN,OAAK,ICqBlG,IAMMrM,GAAqB,CACvB4C,iBAGS0J,GAAsBpM,aAVX,SAAA1N,GACpB,MAAO,CACHa,WAAYb,EAAM+J,YAAYlJ,cAQsB2M,GAAzBE,EAzCnC,YAAqE,IAArC5J,EAAoC,EAApCA,OAAQjD,EAA4B,EAA5BA,WAAYuP,EAAgB,EAAhBA,aAChD,EAAkC8E,oBAAS,GAA3C,oBAAO6E,EAAP,KAAkBC,EAAlB,KAgBA,OAdA1E,qBAAU,WAAO,IAAD,EACN5F,EAAUgC,GAAgBF,WAAW3Q,GAErCoZ,EAAe,UADRvI,GAAgBJ,YAAYzQ,EAAY6O,GACxB1O,eAAR,aAAG,EAAcQ,MAAK,SAAA0Y,GAAC,OAAIA,EAAExY,MAAQoC,EAAOpC,OACjEsY,EAAaC,KACd,CAACpZ,EAAYiD,EAAOpC,MAUnB,uBAAKqL,UAAU,6BAA6BE,QARtB,WACtB+M,GAAcD,GACd,IAAM9T,EAAMyL,GAAgBU,mBAAmBtO,EAAOpC,KAChD6N,EAAYwK,EAAa,CAAChZ,IAAK0N,GAAoC3K,EAAOC,UAAWlD,cAAc,CAACE,IAAK0N,GAA+B3K,EAAOC,UAAWlD,cAChKuP,EAAY,WAAZ,cAAgBnK,GAAhB,QAAqBsJ,MAIrB,UACI,sBAAKxC,UAAU,sBACf,sBAAKF,MAAO,CAAE8J,MAAO,IAArB,SACI,eAACgD,GAAD,CAAc7V,OAAQA,MAE1B,sBAAKiJ,UAAU,qBAAf,SACI,6BAAIjJ,EAAOC,aAEdgW,GAAa,sBAAKhN,UAAU,sBAAf,SAAqC,eAAC,KAAD,YCDlDoN,GAAazM,aANF,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,aAIPgN,EA7BN,SAAC,GAAe,IAAbnK,EAAY,EAAZA,MACnB,EAA8B2R,mBAAS3R,EAAMvC,SAA7C,oBAAOA,EAAP,KAAgBoZ,EAAhB,KAOA,OAAQ,uBAAKrN,UAAU,cAAf,UACJ,wBAAOA,UAAU,eAAe7C,KAAK,OAAOgM,WAAS,EAACmE,YAAY,YAAY1E,SAN7D,SAAC,GAA2B,IAAf9D,EAAc,EAAxB2D,OAAU3D,MACxByI,EAAkB/W,EAAMvC,QAAQoJ,QAAO,SAAAtG,GAAM,OAAIA,EAAOC,SAASwW,cAAcC,SAAS3I,EAAM0I,kBACpGH,EAAWE,MAKX,gDACA,sBAAKvN,UAAU,cAAf,SACK/L,EAAQwB,KAAI,SAAAsB,GAAM,OACf,eAACgW,GAAD,CAEIhW,OAAQA,GADHA,EAAOpC,gB,qBC8B1B8L,I,OAAqB,CACvB4C,kBAGSqK,GAAe/M,YAAQ,KAAMF,GAAdE,EA3CN,SAAC,GAA+B,IAA7B0C,EAA4B,EAA5BA,aAAc6E,EAAc,EAAdA,QACnC,EAAoBC,mBAAS,IAAIrC,MAA1B6H,EAAP,qBACA,EAAkBxF,mBAAS,MAApByF,EAAP,qBACA,EAA8BzF,mBAAS,MAAvC,oBAAOxC,EAAP,KAAgBkI,EAAhB,KAWMC,EAAe,WACjB,IAAM5U,EAAMyL,GAAgBc,oBAAoBE,GAChDtC,EAAY,WAAZ,cAAgBnK,IAChBgP,KAGJ,OACI,uBAAKlI,UAAU,cAAf,UACI,eAAC,KAAD,CACI+N,SAAUJ,EACV/E,SAnBK,SAAC5C,GACd6H,EAAW7H,EAAKgI,YAmBRL,UAAWA,EACXC,QAASA,EAETK,QAAM,EACNC,cAAe,SAAAC,GAAS,OAAIA,EAAUC,OAAO,EAAG,MAEpD,uBAAKpO,UAAU,0BAAf,UACI,yBAAQA,UAAU,+BAA+BE,QAAS4N,EAA1D,kBACA,yBAAQ9N,UAAU,qBAAqBE,QAxBnC,WACZ2N,EAAW,MACXC,KAsBQ,6B,SCDhB,IAMMrN,GAAqB,CACvB4C,iBAGSgL,GAAqB1N,aAVV,SAAA1N,GACpB,MAAO,CACHa,WAAYb,EAAM+J,YAAYlJ,cAQqB2M,GAAzBE,EA3ClC,YAA+E,IAAhD1J,EAA+C,EAA/CA,MAAOnD,EAAwC,EAAxCA,WAAYuP,EAA4B,EAA5BA,aAAcoG,EAAc,EAAdA,WAC5D,EAAkCtB,oBAAS,GAA3C,oBAAO6E,EAAP,KAAkBC,EAAlB,KAkBA,OAhBA1E,qBAAU,WAAO,IAAD,EACN5F,EAAUgC,GAAgBF,WAAW3Q,GAErCwa,EAAc,UADP3J,GAAgBJ,YAAYzQ,EAAY6O,GACzBnL,gBAAR,aAAG,EAAekN,MAAK,SAAA6J,GAAC,OAAIA,IAAMtX,EAAMoB,MAC5D4U,EAAaqB,KACd,CAACxa,EAAYmD,EAAMoB,KAYlB,sBAAK2H,UAAU,qBAAf,SAEI,uBAAKA,UAAU,qBAAf,UACI,uBAAKA,UAAU,gBAAgBF,MAAO,CAAEkB,gBAAiB/J,EAAMuU,OAAStL,QAb3D,WACrB+M,GAAcD,GACd,IAAM9T,EAAMyL,GAAgBY,kBAAkBtO,EAAMoB,IAC9CsK,EAAUgC,GAAgBF,WAAW3Q,GAErC0O,EAAYwK,EAAa,CAAEhZ,IAAK0N,GAA2BzK,EAAMC,OAAQyL,QAASA,GAAY,CAAE3O,IAAK0N,GAAwBzK,EAAMC,OAAQyL,QAASA,GAC1JU,EAAY,WAAZ,cAAgBnK,GAAhB,QAAqBsJ,MAOb,UACI,sCAAQvL,EAAMC,OAAS,MACtB8V,GAAa,sBAAKhN,UAAU,qBAAf,SAAoC,eAAC,KAAD,SAEtD,sBAAKA,UAAU,eAAeE,QAAS,kBAAMuJ,EAAWxS,EAAMuU,QAA9D,SAAsE,eAAC,KAAD,cCZtF,IAMagD,GAAY7N,aAND,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,aAIRgN,EAzBzB,YAA4C,IAAtBnK,EAAqB,EAArBA,MAAOiT,EAAc,EAAdA,WACzB,EAA4BtB,mBAAS3R,EAAMtC,QAA3C,oBAAOA,EAAP,KAAeua,EAAf,KAOA,OACI,uBAAKzO,UAAU,uBAAf,UACI,wBAAOA,UAAU,eAAe7C,KAAK,OAAOgM,WAAS,EAACmE,YAAY,mBAAmB1E,SAPxE,SAAC,GAA2B,IAAf9D,EAAc,EAAxB2D,OAAU3D,MACxB4J,EAAiBlY,EAAMtC,OAAOmJ,QAAO,SAAApG,GAAK,OAAIA,EAAMC,MAAMsW,cAAcC,SAAS3I,EAAM0I,kBAC7FiB,EAAUC,MAMN,yCACA,sBAAK1O,UAAU,yBAAf,SACK9L,EAAOuB,KAAI,SAAAwB,GAAK,OAAI,eAACoX,GAAD,CAAmCpX,MAAOA,EAAOwS,WAAYA,GAApCxS,EAAMoB,e,SCoBpE,IAMMoI,GAAqB,CACvB4C,iBAGSsL,GAAmBhO,aAVR,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,aAQwB8M,GAAzBE,EAzCzB,YAAuD,IAA1B0C,EAAyB,EAAzBA,aAAc6E,EAAW,EAAXA,QACxC0G,EAAWjF,mBACjB,EAA0BxB,mBAAS,aAAnC,oBAAOjR,EAAP,KAAc2X,EAAd,KAoBA,OAlBAtG,qBAAU,WACNqG,EAAS3E,QAAQ6E,QACjBF,EAAS3E,QAAQ8E,WAClB,IAgBC,wBAAM/O,UAAU,oBAAoBgP,SAVnB,SAAC7N,GAClBA,EAAGC,iBACH,IAAMlI,EAAMyL,GAAgBC,sBAAsB,eAAgB,KAAM1N,GAClEsL,EAAW,CAACxO,IAAK0N,GAA4BxK,IACnDmM,EAAY,WAAZ,cAAgBnK,GAAhB,QAAqBsJ,KACrBqM,EAAS,IACT3G,KAIA,UACI,wBAAO+G,QAAQ,kBAAf,mBACA,wBAAOjP,UAAU,eAAewK,IAAKoE,EAAU9J,MAAO5N,EAAO0R,SAhBhD,SAAC,GAA2B,IAAf9D,EAAc,EAAxB2D,OAAU3D,MAC9B+J,EAAS/J,MAgBL,yBAAQ9E,UAAU,0BAAlB,uBChCL,SAASkP,GAAU/N,GACtB,IACMgO,EAAU,0CADG,YACH,iBAEVC,EAAW,IAAIC,SAOrB,OALAD,EAASE,OAAO,OAAQnO,EAAGsH,OAAO8G,MAAM,IACxCpc,QAAQC,IAAI,uBAAwB+N,EAAGsH,OAAO8G,MAAM,IACpDH,EAASE,OAAO,gBAAiB,YAG1BE,MAAML,EAAY,CACrBpW,OAAQ,OACR8G,KAAMuP,IAELzc,MAAK,SAAAuG,GAAG,OAAIA,EAAIuW,UAChB9c,MAAK,SAAAuG,GAAG,OAAIA,EAAIF,OAChBzF,OAAM,SAAAuL,GAAG,OAAI3L,QAAQK,MAAMsL,MC+BpC,IAMM2B,GAAqB,CACvB4C,iBAGSqM,GAAoB/O,aAVT,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,aAQyB8M,GAAzBE,EAlDjC,YAAwD,IAA1B0C,EAAyB,EAAzBA,aAAc6E,EAAW,EAAXA,QACxC,EAA0BC,mBAAS,IAAnC,oBAAOjR,EAAP,KAAc2X,EAAd,KACA,EAAsB1G,mBAAS,IAA/B,oBAAOnP,EAAP,KAAY2W,EAAZ,KAEMC,EAASjG,mBASTkG,EAAiB,uCAAG,WAAO1O,GAAP,mBAAA5K,EAAA,6DAChBW,EAAQiK,EAAGsH,OAAO8G,MAAM,GAAG7G,KADX,SAEJwG,GAAU/N,GAFN,OAEhBnI,EAFgB,OAGhBE,EAAMyL,GAAgBgC,cAAc3N,EAAK9B,GAC/CmM,EAAY,WAAZ,cAAgBnK,IAChBgP,IALsB,2CAAH,sDAQvB,OACI,uBAAKlI,UAAU,sBAAf,UACI,sBAAKA,UAAU,cAAf,SACI,yBAAOiP,QAAQ,SAAf,UACI,uBAAM,cAAY,OAAlB,sBACA,wBAAO9R,KAAK,OAAO9E,GAAG,SAASyH,MAAO,CAAEgQ,QAAS,QAAUlH,SAAUiH,SAI7E,wBAAMb,SAxBO,SAAC7N,GAClBA,EAAGC,iBACH,IAAMlI,EAAMyL,GAAgBgC,cAAc3N,EAAK9B,GAC/CmM,EAAY,WAAZ,cAAgBnK,IAChBgP,KAoBkClI,UAAU,cAAxC,UACI,mDACA,wBAAOwK,IAAKoF,EAAQ5P,UAAU,eAAesN,YAAY,yBAAyBxI,MAAO9L,EAAK4P,SAAU,SAACzH,GAAD,OAAQwO,EAAOxO,EAAGsH,OAAO3D,UAChI9L,GAAO,uCAAE,0DAAmC,wBAAOgH,UAAU,eAAe8E,MAAO5N,EAAO0R,SAAU,SAACzH,GAAD,OAAQ0N,EAAS1N,EAAGsH,OAAO3D,aAChI,yBAAQ9E,UAAU,gBAAlB,6BCShB,IAOa+P,GAAwBpP,aAPb,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBG,WAAYb,EAAM+J,YAAYlJ,cAIwB,KAAzB6M,EAnDrC,YAAuD,IAArBgI,EAAoB,EAApBA,KAAM7U,EAAc,EAAdA,WACpC,EAA4BqU,oBAAS,GAArC,oBAAOuD,EAAP,KAAeC,EAAf,KACA,EAA4BxD,oBAAS,GAArC,oBAAO6H,EAAP,KAAeC,EAAf,KACA,EAA0B9H,mBAAS,IAAnC,oBAAOqD,EAAP,KAAc0E,EAAd,KACMtE,EAAUjC,mBACVkC,EAAiBC,mBAAQ,kBAAMnD,EAAKoD,YAAW,CAACpD,IAChDwH,EAAgBrE,mBAAQ,kBAAMnD,EAAKyH,gBAAe,CAACzH,IAEnDhG,EAAUgC,GAAgBF,WAAW3Q,GACrCuc,EAAW1L,GAAgBJ,YAAYzQ,EAAY6O,GAMnD8G,EAAa,SAAC+B,GACZwE,EAAQC,GAAU,IAElBC,EAAS1E,GACTyE,GAAU,KAIlB,OACI,sBAAKjQ,UAAU,gBAAf,SAbiB,WAAO,IAAD,IACvB,MAAuB,UAAf2I,EAAKzR,SAAuB,OAACmZ,QAAD,IAACA,GAAD,UAACA,EAAUvQ,aAAX,aAAC,EAAiBiB,YAAW,OAACsP,QAAD,IAACA,GAAD,UAACA,EAAUvQ,aAAX,aAAC,EAAiBhE,QAa9EwU,IAAkB,uBAAK9F,IAAKoB,EAAS5L,UAAS,mBAAc0L,EAAS,eAAiB,IAApE,UACf,uBAAMxL,QAAS,kBAAMyL,GAAWD,IAAhC,SACI,eAACJ,GAAD,CAAkBC,KAAM5C,EAAKqD,KAAM9U,MAAOyR,EAAKzR,UAG/CwU,GAAU1Z,QAAQ2W,EAAKyH,gBAAkB,eAAChH,GAAD,CAAgBK,WAAYA,EAAYvB,QAAS,kBAAMyD,GAAU,IAAQzU,MAAOyR,EAAKzR,MAAOsT,IAAKoB,EAASpC,QAASwG,EAAnH,SACpCA,EAAS,eAACG,EAAD,CAAe3E,MAAOA,EAAO/B,WAAYA,EAAYvB,QAAS,kBAAMyD,GAAU,MAAa,eAACE,EAAD,CAAgBpC,WAAYA,EAAYvB,QAAS,kBAAMyD,GAAU,QAI1KD,IAAW1Z,QAAQ2W,EAAKyH,gBAAkB,eAAChH,GAAD,CAAgBlB,QAAS,kBAAMyD,GAAU,IAAQzU,MAAOyR,EAAKzR,MAAOsT,IAAKoB,EAAzE,SACtC,eAACC,EAAD,CAAgB3D,QAAS,kBAAMyD,GAAU,gBCtC3D4E,G,+MACFtd,MAAQ,CACJod,SAAU,KACV1N,QAAS,KACT6N,WAAY,KACZC,aAAc,M,EAiBlBrG,YAAc,SAACjJ,EAAI2D,EAAO3H,GAAU,IAAD,EAC/BgE,EAAGsH,OAAOiI,UAAUC,IAAI,YACxB,YAAK1d,MAAMud,kBAAX,SAAuBE,UAAUpb,OAAO,YACxC,EAAK+J,SAAS,CAAEmR,WAAYrP,EAAGsH,SAC/B,MAA4C,EAAKlJ,MAAzC/I,EAAR,EAAQA,MAAmB6M,GAA3B,EAAevP,WAAf,EAA2BuP,cAC3B,EAA8B,EAAKpQ,MAA3Bod,EAAR,EAAQA,SAAU1N,EAAlB,EAAkBA,QAClB0N,EAASvQ,MAAiB,UAAT3C,EAAmB,CAAE4D,QAAS+D,GAAU,CAAEhJ,OAAQgJ,GACnEzB,EAAagN,EAAU1N,EAASnM,I,EAGpCoa,kBAAoB,WAChB,MAA4C,EAAKrR,MAAzC/I,EAAR,EAAQA,MAAmB6M,GAA3B,EAAevP,WAAf,EAA2BuP,cAC3B,EAA8B,EAAKpQ,MAA3Bod,EAAR,EAAQA,SAAU1N,EAAlB,EAAkBA,QAClB0N,EAASvQ,MAAQ,KACjBuD,EAAagN,EAAU1N,EAASnM,I,EAGpCqa,oBAAsB,a,wDA/BtB,WACI,IAAQ/c,EAAe6L,KAAKJ,MAApBzL,WACRX,QAAQC,IAAIU,GACZ,IAAM6O,EAAUgC,GAAgBF,WAAW3Q,GACrCuc,EAAW1L,GAAgBJ,YAAYzQ,EAAY6O,GACzDxP,QAAQC,IAAIid,GAMZ1Q,KAAKN,SAAS,CAAEgR,WAAU1N,c,oBAwB9B,WAAU,IAAD,OACG0N,EAAa1Q,KAAK1M,MAAlBod,SACR,IAAKA,EAAU,MAAO,GAEtB,OACI,2BAASrQ,UAAU,+BAAnB,UAEI,uBAAKA,UAAU,6BAAf,UACI,uCACA,uBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,gBACf,sBAAKA,UAAU,mBAEnB,yBAAQA,UAAU,gBAAgBE,QAASP,KAAKiR,kBAAhD,6BAGJ,uBAAK5Q,UAAU,cAAf,UACI,yCACA,sBAAKA,UAAU,uBAAf,SAfG,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAezDvK,KAAI,SAAC+V,EAAOxT,GAAR,OAAc,sBAAagI,UAAU,qBAAqBF,MAAO,CAAEkB,gBAAiBwK,GAAStL,QAAS,SAAAiB,GAAE,OAAI,EAAKiJ,YAAYjJ,EAAIqK,EAAO,WAAhHxT,WAG7EqY,EAASzJ,aAAe5U,QAAQqe,EAASzJ,YAAY/O,SAAW,uBAAKmI,UAAU,cAAf,UAC7D,8CACA,sBAAKA,UAAU,6BAAf,SAA6CqQ,EAASzJ,YAAYnR,KAAI,SAAAc,GAAC,OAAI,sBAAgByJ,UAAU,qBAAqBF,MAAO,CAAEmB,gBAAgB,OAAD,OAAS1K,EAAEyC,IAAX,MAAqBkH,QAAS,SAAAiB,GAAE,OAAI,EAAKiJ,YAAYjJ,EAAI5K,EAAEyC,IAAK,SAA7HzC,EAAE8B,mB,GAlE5EmI,aAiFzBC,GAAqB,CACvB4C,iBAGSyN,GAAkBnQ,aAXP,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBG,WAAYb,EAAM+J,YAAYlJ,cAQkB2M,GAAzBE,CAA6C4P,I,SClB5E,IAAMQ,GAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAS7GtQ,GAAqB,CACvB4C,gBACAH,kBAGS8N,GAAYrQ,aAZD,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBG,WAAYb,EAAM+J,YAAYlJ,cASY2M,GAAzBE,EA/EzB,YAAyF,IAAnE6K,EAAkE,EAAlEA,MAAOhV,EAA2D,EAA3DA,MAAO0M,EAAoD,EAApDA,cAAegF,EAAqC,EAArCA,QAASuB,EAA4B,EAA5BA,WAAYpG,EAAgB,EAAhBA,aACpE,EAA0C8E,mBAAS,MAAnD,oBAAO8I,EAAP,KAAsBC,EAAtB,KACA,EAA0B/I,mBAAS,IAAnC,oBAAOjR,EAAP,KAAc2X,EAAd,KAEMD,EAAWjF,mBAEjBpB,qBAAU,WAAO,IAAD,EACZ2I,EAAiB1F,GACjB,IAAMvU,EAAQT,EAAMtC,OAAOO,MAAK,SAAAwC,GAAK,OAAIA,EAAMuU,QAAUA,KACzDqD,GAAc,OAAL5X,QAAK,IAALA,OAAA,EAAAA,EAAOC,QAAS,IACzB,UAAA0X,EAAS3E,eAAT,SAAkB8E,WACnB,IAEH,IAAM3E,EAAc,SAACjJ,GACjB+P,EAAiB/P,EAAGsH,OAAO0I,QAAQ3F,OACnC,IAAMvU,EAAQT,EAAMtC,OAAOO,MAAK,SAAAwC,GAAK,OAAIA,EAAMuU,QAAUrK,EAAGsH,OAAO0I,QAAQ3F,SAC3EqD,GAAc,OAAL5X,QAAK,IAALA,OAAA,EAAAA,EAAOC,QAAS,KAuB7B,OACI,uBAAK8I,UAAU,aAAf,UACI,iCACI,0CACA,wBAAOwK,IAAKoE,EAAU5O,UAAU,eAAe4I,SAxBtC,SAAC,GAA2B,IAAf9D,EAAc,EAAxB2D,OAAU3D,MAC9B+J,EAAS/J,IAuBsEA,MAAO5N,OAGlF,iCACI,oDACA,sBAAK8I,UAAU,uBAAf,SACK+Q,GAAOtb,KAAI,SAAC2b,EAAGpZ,GACZ,OAAQ,sBAAa,aAAYoZ,EAAGpR,UAAU,qBAAqBF,MAAO,CAAEkB,gBAAiBoQ,GAAKlR,QAASkK,EAAnG,SACLgH,IAAMH,GAAkB,gCAAM,eAAC,KAAD,OADfjZ,WAO9B,uBAAKgI,UAAU,iBAAf,UACI,yBAAQA,UAAU,yBAAyBE,QAnClC,WACjB,IAAM0C,EAAW,eAAQpM,GACrBS,EAAQ2L,EAAY1O,OAAOO,MAAK,SAAAwC,GAAK,OAAIA,EAAMuU,QAAUyF,KACzDha,EAAOA,EAAMC,MAAQA,GAErBD,EAAQ,CAAEoB,GAAIgC,EAAYC,SAAUkR,MAAOyF,EAAe/Z,SAC1D0L,EAAY1O,OAAOa,KAAKkC,IAE5BiM,EAAc,CAAE/F,KAAM,IAAMyF,GAC5B6G,IACAvB,IAEA,IAAMhP,EAAMyL,GAAgBY,kBAAkBtO,EAAMoB,IACpDgL,EAAY,WAAZ,cAAgBnK,KAsBR,kBACA,yBAAQ8G,UAAU,2BAAlB,6BCnDHqR,GAAoB,kBAC7B,sBAAKvR,MAAO,CAAE2K,SAAU,YAAxB,SACI,uBAAKzK,UAAU,cAAf,UACI,qBAAIA,UAAU,gBAAd,yBACA,sBAAKA,UAAU,wBAAf,SACCsR,GAAe7b,KAAI,SAACkT,EAAMxT,GAAP,OAChB,eAAC4a,GAAD,CAA8CpH,KAAMA,GAAxBA,EAAKzR,MAAQ/B,cAOnDmc,GAAiB,CAAC,CAAEtF,KAAMuF,KAAQra,MAAO,UAAW6U,UAAWqB,IAAc,CAAEpB,KAAMwF,KAAgBta,MAAO,SAAU6U,UAAWyC,GAAW4B,cAAeY,IAAa,CAAEhF,KAAMyF,KAAiBva,MAAO,YAAa6U,UAAW4C,IAAoB,CAAE3C,KAAM0F,KAASxa,MAAO,QAAS6U,UAAW2B,IAAgB,CAAE1B,KAAM2F,KAAaza,MAAO,aAAc6U,UAAW2D,IAAqB,CAAE1D,KAAM4F,KAAc1a,MAAO,QAAS6U,UAAW+E,KCxBpae,GAAb,gKAEI,WACI,OACI,uBAAK7R,UAAU,UAAf,UACI,eAAC,GAAD,IACA,eAACqM,GAAD,CAAiBC,OAAQ3M,KAAKJ,MAAM+M,gBANpD,GAAqC9L,aCsD/BC,GAAqB,CACvB4C,iBAGSyO,GAAkBnR,aAXP,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBG,WAAYb,EAAM+J,YAAYlJ,cAQkB2M,GAAzBE,EArDN,SAAC,GAAyC,IAAvC7M,EAAsC,EAAtCA,WAAYuP,EAA0B,EAA1BA,aAAc7M,EAAY,EAAZA,MAClD,EAA4B2R,oBAAS,GAArC,oBAAOuD,EAAP,KAAeC,EAAf,KACMoG,EAAapI,mBAEbhH,EAAUgC,GAAgBF,WAAW3Q,GACrCuc,EAAW1L,GAAgBJ,YAAYzQ,EAAY6O,GACnDgD,EAAO,OAAG0K,QAAH,IAAGA,OAAH,EAAGA,EAAU1K,QACpBqM,EAAOrN,GAAgBiB,iBAAiBD,GAExCsM,EAAkB,WACpB,OAAI5B,EAAS6B,WAAmB,CAAEhb,MAAO,WAAY6J,QAAS,WACzD4E,EAAUG,KAAKC,MAAS,EAAU,CAAE7O,MAAO,UAAW6J,QAAS,WAC/D4E,EAAUG,KAAKC,OAAW,MAA6B,CAAE7O,MAAO,WAAY6J,QAAS,WAC9E,CAAE7J,MAAO,GAAI6J,QAAS,KAQtC,OACI,qCACK4E,GAAW,uBAAK3F,UAAU,qBAAf,UACR,qBAAIA,UAAU,cAAd,sBACA,uBAAKA,UAAU,WAAf,UACI,wBAAO7C,KAAK,WAAW6C,UAAU,gBAAgBmS,QAAS9B,EAAS6B,WAAYtJ,SAVtE,WACrByH,EAAS6B,YAAc7B,EAAS6B,WAChC7O,EAAagN,EAAU1N,EAASnM,MASpB,uBAAKwJ,UAAU,gBAAgBwK,IAAKuH,EAApC,UACI,uBAAM/R,UAAU,gBAAhB,SAAiCgS,IACjC,uBAAMlS,MAAO,CAAEkB,gBAAiBiR,IAAkBlR,QAASqR,cAAe,YAAaC,SAAU,GAAIC,QAAS,QAASC,aAAc,GAArI,SAA2IN,IAAkB/a,QAC7J,uBAAM8I,UAAU,gBAAhB,SAAgC,eAAC,KAAD,MAChC,sBAAKA,UAAU,oBAAoBE,QAAS,kBAAMyL,GAAWD,MAC5DA,GAAU,eAACtC,GAAD,CAAgBlB,QAAS,kBAAMyD,GAAU,IAAQzU,MAAO,QAASsT,IAAKuH,EAAtE,SACP,eAACrE,GAAD,CAAcxF,QAAS,kBAAMyD,GAAU,sBCkBtD6G,GAAiB7R,aAPN,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBG,WAAYb,EAAM+J,YAAYlJ,cAIiB,KAAzB6M,EApDN,SAAC,GAA2B,IAAzB7M,EAAwB,EAAxBA,WAAY0C,EAAY,EAAZA,MACnC,EAA4B2R,oBAAS,GAArC,oBAAOuD,EAAP,KAAeC,EAAf,KACA,EAA4BxD,oBAAS,GAArC,oBAAO6H,EAAP,KAAeC,EAAf,KACA,EAA0B9H,mBAAS,IAAnC,oBAAOqD,EAAP,KAAc0E,EAAd,KACMuC,EAAe9I,mBAMfhH,EAAUgC,GAAgBF,WAAW3Q,GACrC0D,EAAWmN,GAAgBJ,YAAYzQ,EAAY6O,GAASnL,SAC5DtD,EANgB,SAACsD,GAAD,cAClBA,QADkB,IAClBA,OADkB,EAClBA,EAAU/B,KAAI,SAAA4C,GAAE,OAAI7B,EAAMtC,OAAOO,MAAK,SAAAwC,GAAK,OAAIA,EAAMoB,KAAOA,QAKjDqa,CAAclb,GAEvBiS,EAAa,SAAC+B,GACZwE,EAAQC,GAAU,IAElBC,EAAS1E,GACTyE,GAAU,KAGlB,OACI,sCACa,OAARzY,QAAQ,IAARA,OAAA,EAAAA,EAAUK,QAAS,uBAAKmI,UAAU,mBAAf,UAChB,qBAAIA,UAAU,cAAd,oBACA,uBAAKA,UAAU,SAAf,UACK9L,EAAOuB,KAAI,SAAAwB,GAAK,OAAI,sBAAoB+I,UAAU,aAAaF,MAAO,CAAEkB,gBAAiB/J,EAAMuU,OAA3E,SAChBvU,EAAMC,OAAS,IADWD,EAAMoB,OAGrC,uBACImS,IAAKiI,EACLzS,UAAU,gCAFd,UAII,sBAAKA,UAAU,oBAAoBE,QAAS,kBAAMyL,GAAWD,MAC7D,eAAC,KAAD,IACCA,GAAU,eAACtC,GAAD,CAAgBK,WAAYA,EAAYvB,QAAS,kBAAMyD,GAAU,IAAQzU,MAAO,SAAUsT,IAAKiI,EAAcjJ,QAASwG,EAAtH,SACLA,EAAkF,eAACgB,GAAD,CAAWvH,WAAYA,EAAY+B,MAAOA,EAAOtD,QAAS,kBAAMyD,GAAU,MAAnJ,eAAC6C,GAAD,CAAW/E,WAAYA,EAAYvB,QAAS,kBAAMyD,GAAU,iBAI9E,UClBflL,GAAqB,CACvB4C,iBAGSsP,GAAWhS,YAAQ,KAAMF,GAAdE,EA5BN,SAAC,GAA8B,IAA5B5J,EAA2B,EAA3BA,OAAQsM,EAAmB,EAAnBA,aAOzB,OACI,uBAAKrD,UAAU,wBAAf,UAEI,uBAAKA,UAAU,YAAf,UACI,eAAC4M,GAAD,CAAcpS,KAAK,KAAKzD,OAAQA,IAChC,iCACI,qBAAIiJ,UAAU,qBAAd,SAAoCjJ,EAAOC,WAC3C,6BAAID,EAAOyI,iBAKnB,oBAAGQ,UAAU,gBAAgBE,QAjBhB,WACjB,IAAMhH,EAAMyL,GAAgBU,mBAAmBtO,EAAOpC,KACtD0O,EAAY,WAAZ,cAAgBnK,KAeZ,oCCpBL,SAAS0Z,GAAT,GAAoD,IAAX7b,EAAU,EAAVA,OAC5C,EAA0CoR,oBAAS,GAAnD,oBAAO0K,EAAP,KAAsBC,EAAtB,KACMC,EAAgBpJ,mBACtB,OACI,uBAAsB3J,UAAU,uBAAuBwK,IAAKuI,EAA5D,UACI,wBAAMjT,MAAO,CAAEkT,OAAQ,WAAvB,UACI,sBAAKhT,UAAU,0BAA0BE,QAAS,kBAAM4S,GAAkBD,MAC1E,eAACjG,GAAD,CAAc7V,OAAQA,OAEzB8b,GAAiB,eAACzJ,GAAD,CAAgBlB,QAAS,kBAAM4K,GAAiB,IAAQ5b,MAAO,KAAMsT,IAAKuI,EAA1E,SACd,eAACJ,GAAD,CAAU5b,OAAQA,QANhBA,EAAOpC,KCDzB,IAwCase,GAAkBtS,aAPP,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBG,WAAYb,EAAM+J,YAAYlJ,cAIkB,KAAzB6M,EAxCN,SAAC,GAAoB,IAAD,EAKrC1M,EALoBH,EAAiB,EAAjBA,WACxB,EAAoCqU,oBAAS,GAA7C,oBAAO+K,EAAP,KAAmBC,EAAnB,KAEMV,EAAe9I,mBAIfhH,EAAUgC,GAAgBF,WAAW3Q,GAG3C,OAFAG,EAAU0Q,GAAgBJ,YAAYzQ,EAAY6O,GAAS1O,QAGvD,sCACY,QAAP,EAAAA,SAAA,eAAS4D,QAAS,uBAAKmI,UAAU,oBAAf,UACf,qBAAIA,UAAU,cAAd,qBACA,uBAAKA,UAAU,UAAf,UACK/L,EAAQwB,KAAI,SAAAsB,GAAM,OAAI,eAAC6b,GAAD,CAAgD7b,OAAQA,GAApBA,EAAOpC,QAElE,uBACI6V,IAAKiI,EACLzS,UAAU,kCAFd,UAII,sBAAKA,UAAU,0BAA0BE,QAAS,kBAAMiT,GAAeD,MACvE,eAAC,KAAD,IACCA,GAAc,eAAC9J,GAAD,CAAgBlB,QAAS,kBAAMiL,GAAc,IAAQjc,MAAO,UAAWsT,IAAKiI,EAA5E,SACX,eAACrF,GAAD,eAIP,UChCRgG,GAAgB,kBACzB,uBAAKpT,UAAU,2BAAf,UACI,eAACiT,GAAD,IACA,eAACT,GAAD,IACA,eAACV,GAAD,QCND,SAASuB,GAAT,GAA8C,IAAvBtS,EAAsB,EAAtBA,QAASuS,EAAa,EAAbA,UAU7BC,EAAe,CACjB1J,OAAQ,OACRD,MAAM,GAAD,OAAK0J,EAAL,KACLtS,gBAAiBD,EACjBwR,aAAc,UACdiB,UAAW,QACXC,WAAY,yBAGhB,OACI,sBAAKzT,UAAU,kBAAkBF,MAlBb,CACpB+J,OAAQ,EACRD,MAAO,OACP5I,gBAAiB,UACjBuR,aAAc,GACdmB,OAAQ,mBAaR,SACI,sBAAK5T,MAAOyT,M,cChBlBI,G,+MACF1gB,MAAQ,CACJ2gB,UAAW,GACXC,YAAY,G,EAUhBC,gBAAkBvT,IAAMwT,Y,EACxBC,eAAiBzT,IAAMwT,Y,EAEvB3J,YAAc,SAACC,GAAO,IAAD,aACb,YAAKyJ,uBAAL,mBAAsB7J,eAAtB,eAA+BM,SAASF,EAAE5B,WAA1C,UAAqD,EAAKuL,sBAA1D,iBAAqD,EAAqB/J,eAA1E,aAAqD,EAA8BM,SAASF,EAAE5B,WAA9F,UAAyG,EAAKwL,uBAA9G,iBAAyG,EAAsBhK,eAA/H,aAAyG,EAA+BM,SAASF,EAAE5B,UAGvJ,EAAKpJ,SAAS,CAAEwU,YAAY,EAAOD,UAAW,M,EAGlDM,eAAiB,WAAO,IAAD,EACbhb,EAAMyL,GAAgBC,sBAAsB,WAAY,EAAKrF,MAAMsF,YAAa,EAAKtF,MAAM4F,KAAK9M,KACtG,IAAKkH,OAAM8D,aAAX,oBAA2BnK,K,EAG/Bib,iBAAmB,WAAO,IAAD,EACfjb,EAAMyL,GAAgBC,sBAAsB,aAAc,EAAKrF,MAAMsF,YAAa,EAAKtF,MAAM4F,KAAK9M,KACxG,IAAKkH,OAAM8D,aAAX,oBAA2BnK,K,EAG/Bkb,kBAAoB,YAAkC,IAAD,IAA9B3L,OAAUC,EAAoB,EAApBA,KAAM5D,EAAc,EAAdA,MACnC,EAAKzF,SAAL,gBAAiBqJ,EAAO5D,K,EAG5BuP,cAAgB,SAAClT,GACbA,EAAGC,iBACH,MAA4C,EAAK7B,MAAzCsF,EAAR,EAAQA,YAAaM,EAArB,EAAqBA,KAAM9B,EAA3B,EAA2BA,aACnBuQ,EAAc,EAAK3gB,MAAnB2gB,UACF1a,EAAMyL,GAAgBC,sBAAsB,cAAeC,EAAaM,EAAK9M,GAAIub,GACvFvQ,EAAY,WAAZ,cAAgBnK,IAChB,EAAKmG,SAAS,CAAEwU,YAAY,EAAOD,UAAW,M,wDAtClD,WACIhU,SAASxB,iBAAiB,YAAauB,KAAKyK,e,kCAGhD,WACIxK,SAASvB,oBAAoB,YAAasB,KAAKyK,e,oBAoCnD,WAAU,IAAD,OACGjF,EAASxF,KAAKJ,MAAd4F,KACR,EAAkCxF,KAAK1M,MAA/B4gB,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,UACpB,OACI,uBAAK5T,UAAU,8BAAf,UACI,wBAAOA,UAAU,gBAAgB7C,KAAK,WAAWuL,KAAMvD,EAAK9M,GAAI8Z,QAAShN,EAAKC,OAAQwD,SAAUjJ,KAAKuU,eAAgBhU,QAAS,kBAAM,EAAKb,SAAS,CAAEuU,UAAWzO,EAAKjO,SAChK4I,MAAO,CAAEwU,UAAWT,EAAa,aAAe,YAClDA,EAgBE,wBAAM7E,SAAUrP,KAAK0U,cAAevU,MAAO,CAAEyU,cAAe,GAA5D,UACI,2BACIvU,UAAU,iCACVwU,QAAS,kBAAM,EAAKnV,SAAS,CAAEuU,UAAWzO,EAAKjO,SAC/CiS,WAAS,EACTT,KAAK,YACL5D,MAAO8O,EACPpJ,IAAK7K,KAAKmU,gBACVlL,SAAUjJ,KAAKyU,oBAEnB,uBAAKpU,UAAU,mBAAf,UACI,yBAAQwK,IAAK7K,KAAKqU,eAAgBhU,UAAU,0BAA5C,kBACA,yBAAQE,QAAS,kBAAM,EAAKb,SAAS,CAAEwU,YAAY,EAAOD,UAAW,MAArE,SAA4E,eAAC,KAAD,CAAW9T,MAAO,CAAE0L,MAAO,UAAW6G,SAAU,OAAQvC,QAAS,OAAQ2E,WAAY,SAAUC,eAAgB,oBA3BnM,iCACI,uBACI1U,UAAWmF,EAAKC,OAAS,OAAS,GAClClF,QAAS,kBAAM,EAAKb,SAAS,CAAEwU,YAAY,KAF/C,SAIK1O,EAAKjO,QAEV,uBACI8I,UAAU,mBACVE,QAASP,KAAKwU,iBAFlB,SAII,eAAC,KAAD,gB,GAjEJ3T,aAgGlBC,GAAqB,CACvB4C,iBAGSsR,GAAWhU,aAVA,SAAA1N,GACpB,MAAO,CACHa,WAAYb,EAAM+J,YAAYlJ,cAQW2M,GAAzBE,CAA6CgT,ICjGxDiB,GAAb,+MACI3hB,MAAQ,CACJ4hB,WAAY,EACZC,WAAW,EACXC,QAAS,IAJjB,EAOIf,eAAiBzT,IAAMwT,YAP3B,EAQIiB,cAAgBzU,IAAMwT,YAR1B,EASIE,gBAAkB1T,IAAMwT,YAT5B,EA0BI3J,YAAc,SAACC,GAAO,IAAD,aACb,YAAK2J,sBAAL,mBAAqB/J,eAArB,eAA8BM,SAASF,EAAE5B,WAAzC,UAAoD,EAAKuM,qBAAzD,iBAAoD,EAAoB/K,eAAxE,aAAoD,EAA6BM,SAASF,EAAE5B,WAA5F,UAAuG,EAAKwL,uBAA5G,iBAAuG,EAAsBhK,eAA7H,aAAuG,EAA+BM,SAASF,EAAE5B,UAGrJ,EAAKpJ,SAAS,CAAEyV,WAAW,EAAOC,QAAS,MA9BnD,EAiCIE,kBAAoB,WAAyC,IAAD,EAAvC/P,EAAuC,uDAA/B,EAAK3F,MAAMyF,UAAUE,MAC9C,IAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAOrN,UAAU,UAAC,EAAK0H,MAAMyF,iBAAZ,aAAC,EAAsBE,MAAMrN,QAAnD,CAIA,IAAMqd,EAAYhQ,EAAM7H,QAAO,SAAA8H,GAAI,OAAIA,EAAKC,UACtC+P,EAAOD,EAAUrd,OAASqN,EAAMrN,OAAU,IAC1Cgd,EAAcO,OAAOC,UAAUF,GAAQA,EAAMA,EAAIG,QAAQ,GAC/D,EAAKjW,SAAS,CAAEwV,oBANZ,EAAKxV,SAAS,CAAEwV,WAAY,KAnCxC,EA4CIU,kBAAoB,YAAkC,IAAD,IAA9B9M,OAAUC,EAAoB,EAApBA,KAAM5D,EAAc,EAAdA,MACnC,EAAKzF,SAAL,gBAAiBqJ,EAAO5D,KA7ChC,EAgDI0Q,UAAY,SAACrU,GAAQ,IAAD,EAChBA,EAAGC,iBACH,EAAK/B,SAAS,CAAEyV,WAAW,EAAOC,QAAS,KAC3C,IAAM7b,EAAMyL,GAAgBC,sBAAsB,UAAW,EAAKrF,MAAMyF,UAAU3M,GAAI,CAAEA,GAAIgC,EAAYC,SAAUpD,MAAOiK,EAAGsH,OAAO,GAAG3D,MAAOM,QAAQ,KACrJ,IAAK7F,OAAM8D,aAAX,oBAA2BnK,KApDnC,EAuDIuc,kBAAoB,WAAO,IAAD,EAChBvc,EAAMyL,GAAgBC,sBAAsB,kBAAmB,EAAKrF,MAAMyF,UAAU3M,KAC1F,IAAKkH,OAAM8D,aAAX,oBAA2BnK,KAzDnC,wDAWI,WACI0G,SAASxB,iBAAiB,YAAauB,KAAKyK,aACxCzK,KAAKJ,MAAMyF,UAAUE,OAAOvF,KAAKsV,sBAb7C,kCAgBI,WACIrV,SAASvB,oBAAoB,YAAasB,KAAKyK,eAjBvD,gCAoBI,SAAmBsL,GACXA,EAAUlf,QAAUmJ,KAAKJ,MAAM/I,OAC/BmJ,KAAKsV,sBAtBjB,oBA4DI,WAAU,IAAD,SACGjQ,EAAcrF,KAAKJ,MAAnByF,UACR,EAAkCrF,KAAK1M,MAA/B4hB,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UACpB,OACI,2BAAS9U,UAAU,gCAAnB,UAEI,2BAASA,UAAU,qBAAnB,UACI,uBAAKA,UAAU,kBAAf,UACI,gCAAM,eAAC,KAAD,MACN,8BAAKgF,EAAU9N,WAEnB,yBAAQ8I,UAAU,gBAAgBE,QAASP,KAAK8V,kBAAhD,uBAGJ,uBAAKzV,UAAU,oBAAf,UACI,wBAAMF,MAAO,CAAEuS,SAAU,GAAIzI,MAAO,GAAI+L,SAAU,GAAIC,SAAU,IAAhE,UAAuEf,EAAvE,OACA,eAACxB,GAAD,CAAaC,UAAWuB,EAAY9T,QAAyB,MAAf8T,EAAsB,UAAY,eAZxF,UAeK7P,EAAUE,aAff,aAeK,EAAiBzP,KAAI,SAAA0P,GAClB,OAAO,sBAAKnF,UAAU,kBAAf,SACH,eAAC2U,GAAD,CAAUxP,KAAMA,EAAMN,YAAaG,EAAU3M,MADJ8M,EAAK9M,OAMpDyc,EAEI,wBAAM9F,SAAUrP,KAAK6V,UAArB,UAAgC,2BAAUK,KAAK,IAC7C7V,UAAU,gCACVwK,IAAK7K,KAAKsU,gBACV9K,WAAS,EACTT,KAAK,UACL4E,YAAY,cACZ1E,SAAUjJ,KAAK4V,oBAEf,uBAAKvV,UAAU,iCAAf,UACI,yBAAQwK,IAAK7K,KAAKqV,cAAehV,UAAU,0BAA3C,kBACA,yBAAQE,QAAS,kBAAM,EAAKb,SAAS,CAAEyV,WAAW,EAAOC,QAAS,MAAlE,SAAyE,eAAC,KAAD,CAAWjV,MAAO,CAAE0L,MAAO,UAAW6G,SAAU,OAAQvC,QAAS,OAAQ2E,WAAY,SAAUC,eAAgB,oBAX9L,yBAAQ1U,UAAU,6BAA6BF,MAAO,CAAEwU,UAAW,cAAgBpU,QAAS,kBAAM,EAAKb,SAAS,CAAEyV,WAAW,KAA7H,gCAvFtB,GAAoCtU,aAiH9BC,GAAqB,CACvB4C,iBAGSyS,GAAgBnV,aAVL,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,aAQqB8M,GAAzBE,CAA6CiU,I,UCxHpEmB,G,+MACF9iB,MAAQ,CACJod,SAAU,GACV2F,mBAAmB,G,EAGvBC,eAAiB1V,IAAMwT,Y,EAQvBmC,uBAAyB,WACrB,EAAK7W,SAAS,CAAE2W,mBAAoB,EAAK/iB,MAAM+iB,qB,EAGnDG,wBAA0B,WAAiC,IAAhC5e,EAA+B,uDAAxB,EAAKtE,MAAMod,SACjC7Z,EAAU,EAAK+I,MAAf/I,MACFmM,EAAUgC,GAAgBF,WAAW,EAAKlF,MAAMzL,YAChD0O,EAAW,CAACxO,IAAK0N,KAAoCnK,KAAMA,EAAMoL,QAASA,GAChF,EAAKpD,MAAM8D,aAAa9L,EAAMoL,EAASnM,EAAOgM,I,EAGlD+S,kBAAoB,YAA4B,IAAfzQ,EAAc,EAAxB2D,OAAU3D,MAC7B,EAAKzF,SAAS,CAAEgR,SAAS,2BAAM,EAAKpd,MAAMod,UAAlB,IAA4B+F,YAAatR,O,wDAlBrE,WACI,IAAMnC,EAAUgC,GAAgBF,WAAW9E,KAAKJ,MAAMzL,YAChDuc,EAAW1L,GAAgBJ,YAAY5E,KAAKJ,MAAMzL,WAAY6O,GACpEhD,KAAKN,SAAS,CAAEgR,e,oBAkBpB,WAAU,IAAD,OACL,EAAwC1Q,KAAK1M,MAArCod,EAAR,EAAQA,SAAU2F,EAAlB,EAAkBA,kBAClB,OACI,uCACI,uBAAKhW,UAAU,wCAAf,UACI,gCAAM,eAAC,KAAD,MACN,8CACCqQ,EAAS+F,cAAgBJ,GAAqB,yBAAQhW,UAAU,gBAAgBE,QAAS,WACtF,EAAKgW,yBACL,EAAKD,eAAehM,QAAQ6E,SAFe,sBAKnD,uBAAK9O,UAAU,mBAAf,UACI,2BACIwK,IAAK7K,KAAKsW,eACVjW,UAAS,+BAA0BgW,EAAoB,OAAS,GAAvD,YAA6D3F,EAAS+F,YAAc,SAAW,IACxGP,KAAMG,EAAoB,IAAM,IAChCxB,QAAS7U,KAAKuW,uBACdG,OAAQ,WACJ,EAAKH,yBACL,EAAKC,2BAETrR,MAAOuL,EAAS+F,YAChBxN,SAAUjJ,KAAK4V,kBACfjI,YAAY,uCAEf0I,GACG,uBAAKhW,UAAU,mBAAf,UACI,yBAAQA,UAAU,0BAA0BE,QAAS,kBAAM,EAAKiW,2BAAhE,kBACA,yBAAQjW,QAASP,KAAKuW,uBAAtB,SAA8C,eAAC,KAAD,CAAWpW,MAAO,CAAE0L,MAAO,UAAW6G,SAAU,OAAQvC,QAAS,OAAQ2E,WAAY,SAAUC,eAAgB,2B,GA1DtJlU,aAyE7BC,GAAqB,CACvB4C,iBAGSiT,GAAsB3V,aAXX,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBG,WAAYb,EAAM+J,YAAYlJ,cAQsB2M,GAAzBE,CAA6CoV,IClDhF,IAMMtV,GAAqB,CACvB4C,iBAGSkT,GAAiB5V,aAVN,SAAC1N,GACrB,MAAO,CACHqJ,KAAMrJ,EAAMsK,WAAWjB,QAQwBmE,GAAzBE,EArC9B,YAA2D,IAAhCoH,EAA+B,EAA/BA,QAASzL,EAAsB,EAAtBA,KAAM+G,EAAgB,EAAhBA,aAEhCmT,EAAU7R,GAAgBqD,eAAeD,EAAQlB,SAOvD,OACI,uBAAK7G,UAAU,uBAAf,UACI,eAAC4M,GAAD,CAAc7V,OAAQgR,EAAQH,SAC9B,uBAAK5H,UAAU,2BAAf,UACI,uBAAKA,UAAU,oBAAf,UACI,uBAAMA,UAAU,cAAhB,SAA+B+H,EAAQH,OAAO5Q,WAC9C,uBAAMgJ,UAAU,eAAhB,SAAgCwW,OAGpC,sBAAKxW,UAAU,cAAf,SAA8B+H,EAAQ/T,MAEpC+T,EAAQH,OAAOjT,MAAQ2H,EAAK3H,KAAQ,uBAAMqL,UAAU,aAAaE,QAhBvD,WACpB,IAAMhH,EAAMyL,GAAgBkD,oBAAoBE,EAAQ1P,IACxDgL,EAAY,WAAZ,cAAgBnK,KAc8B,6BCjBhDud,G,+MACFxjB,MAAQ,CACJyjB,SAAS,EACTC,OAAO,EACPC,WAAY,GACZvG,SAAU,M,EAGdwG,WAAatW,IAAMwT,Y,EAcnBvL,aAAe,YAA4B,IAAf1D,EAAc,EAAxB2D,OAAU3D,MACxB,EAAKzF,SAAS,CAAEuX,WAAY9R,IACxBA,EAAO,EAAKzF,SAAS,CAAEsX,OAAO,IAC7B,EAAKtX,SAAS,CAAEsX,OAAO,K,EAGhCvM,YAAc,SAAAC,GAAM,IAAD,KACf,UAAI,EAAKwM,kBAAT,iBAAI,EAAiB5M,eAArB,aAAI,EAA0BM,SAASF,EAAE5B,UAGrC,EAAKpJ,SAAS,CAAEqX,SAAS,K,EAIjC5I,aAAe,SAAC3M,GACZA,EAAGE,kBACH,MAA8B,EAAKpO,MAA3B0jB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACPvT,EAAiB,EAAK9D,MAAtB8D,aACR,GAAKsT,EAAL,CACA,IAAMzd,EAAMyL,GAAgB8C,aAAamP,GACzCvT,EAAY,WAAZ,cAAgBnK,IAChB,EAAKmG,SAAS,CAAEqX,SAAS,EAAOE,WAAY,O,wDAjChD,WACIhX,SAASxB,iBAAiB,YAAauB,KAAKyK,aAC5C,IAAMzH,EAAUgC,GAAgBF,WAAW9E,KAAKJ,MAAMzL,YAChDuc,EAAW1L,GAAgBJ,YAAY5E,KAAKJ,MAAMzL,WAAY6O,GACpEhD,KAAKN,SAAS,CAAEgR,e,kCAGpB,WACIzQ,SAASvB,oBAAoB,YAAasB,KAAKyK,e,oBA4BnD,WAAU,IAAD,SACL,EAAiDzK,KAAK1M,MAA9Cod,EAAR,EAAQA,SAAUqG,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,WAC1B7f,EAAW4I,KAAKJ,MAAhBxI,OACR,OAAKsZ,EAED,uBAAKrQ,UAAU,mBAAf,UACI,2BAASA,UAAU,qBAAnB,UACI,uBAAKA,UAAU,kBAAf,UACI,gCAAM,eAAC,KAAD,MACN,8CAEJ,yBAAQA,UAAU,gBAAlB,6BAGJ,uBAAKA,UAAU,6BAAf,UACI,eAAC4M,GAAD,CAAc7V,OAAQA,IACtB,uBAAKiJ,UAAU,cAAcwK,IAAK7K,KAAKkX,WAAY/W,MAAO,CAAE8J,MAAO,OAAQC,OAAQ6M,EAAU,GAAK,GAAI1V,gBAAiB,QAAUd,QAAS,kBAAM,EAAKb,SAAS,CAAEqX,SAAS,KAAzK,UACI,2BAAUpJ,YAAY,qBAAqBxN,MAAO,CAAE8J,MAAO,OAAQC,OAAQ6M,EAAU,MAAQ,QAAU9N,SAAUjJ,KAAK6I,aAAc1D,MAAO8R,IAC1IF,GAAW,yBAAQ1W,UAAS,yCAAoC2W,EAAQ,SAAW,IAAMzW,QAASP,KAAKmO,aAA5F,yBAInB,UAAAuC,EAAS3I,gBAAT,eAAmB7P,QAAS,GAAK,sBAAKmI,UAAU,iCAAf,SAC7BqQ,EAAS3I,SAASjS,KAAI,SAAAsS,GAAO,OAAI,eAACwO,GAAD,CAAiCxO,QAASA,GAArBA,EAAQ1P,YApBrD,eAACyL,GAAD,Q,GAjDItD,aAqF5BC,GAAqB,CACvB4C,iBAGSyT,GAAqBnW,aAXV,SAAC1N,GACrB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBG,WAAYb,EAAM+J,YAAYlJ,cAQqB2M,GAAzBE,CAA6C8V,IC9C/E,IAOMhW,GAAqB,CACvB4C,iBAGS0T,GAAoBpW,aAXT,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBG,WAAYb,EAAM+J,YAAYlJ,cAQoB2M,GAAzBE,EAzDjC,YAA8E,IAAhDqW,EAA+C,EAA/CA,WAAYljB,EAAmC,EAAnCA,WAAY0C,EAAuB,EAAvBA,MAAO6M,EAAgB,EAAhBA,aAEnDV,EAAUgC,GAAgBF,WAAW3Q,GACrCuc,EAAW1L,GAAgBJ,YAAYzQ,EAAY6O,GACnDkE,EAAUlC,GAAgB0B,cAAc2Q,EAAWnQ,SAiBzD,OACI,uBAAK7G,UAAU,0BAAf,UACI,oBAAGoE,KAAM4S,EAAWhe,IAAKyP,OAAO,SAAhC,SAAyC,sBAAKzI,UAAU,kBAAf,SACrC,sBAAKG,IAAK6W,EAAWhe,IAAKqH,IAAK2W,EAAW9f,YAG9C,uBAAK8I,UAAU,4BAAf,UACI,uBAAMA,UAAU,mBAAhB,SAAoCgX,EAAW9f,QAC/C,uBAAK8I,UAAU,cAAf,UACI,gCAAO6G,IADX,IAEI,4CAFJ,IAGI,uBAAM3G,QAhBK,WACvB,IAAMhH,EAAMyL,GAAgBmC,iBAAiBkQ,EAAW3e,IACxDgL,EAAY,WAAZ,cAAgBnK,KAcJ,oBAHJ,IAII,4CAEJ,uBAAK8G,UAAU,mBAAf,UACI,gCAAM,eAAC,KAAD,MACN,uBAAME,QA/BF,WAAO,IAAD,GACV,OAARmQ,QAAQ,IAARA,GAAA,UAAAA,EAAUvQ,aAAV,eAAiBhE,UAAWkb,EAAWhe,IAAKqX,EAASvQ,MAAQ,KAC5DuQ,EAASvQ,MAAQ,CAAEhE,OAAQkb,EAAWhe,KAC3CqK,EAAagN,EAAU1N,EAASnM,IA4BpB,SAzBK,WAAO,IAAD,EACvB,OAAe,OAAR6Z,QAAQ,IAARA,GAAA,UAAAA,EAAUvQ,aAAV,eAAiBhE,UAAWkb,EAAWhe,IAwBLsX,GAAiB,eAAiB,2BCnC7E2G,G,+MACFhkB,MAAQ,CACJod,SAAU,I,wDAGd,WACI,IAAM1N,EAAUgC,GAAgBF,WAAW9E,KAAKJ,MAAMzL,YAChDuc,EAAW1L,GAAgBJ,YAAY5E,KAAKJ,MAAMzL,WAAY6O,GACpEhD,KAAKN,SAAS,CAAEgR,e,oBAGpB,WAAU,IAAD,EACGA,EAAa1Q,KAAK1M,MAAlBod,SACR,OACI,uCACI,uBAAKrQ,UAAU,uCAAf,UACI,gCAAM,eAAC,KAAD,MACN,iDAEJ,sBAAKA,UAAU,mBAAf,gBACKqQ,QADL,IACKA,GADL,UACKA,EAAUzJ,mBADf,aACK,EAAuBnR,KAAI,SAACuhB,EAAYhf,GAAb,OAAmB,eAAC+e,GAAD,CAA8CC,WAAYA,GAAlCA,EAAW9f,MAAQc,e,GApB5EwI,aAkC5BC,GAAqB,CACvB4C,iBAGS6T,GAAqBvW,aAXV,SAAA1N,GACpB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBG,WAAYb,EAAM+J,YAAYlJ,cAQqB2M,GAAzBE,CAA6CsW,IC7BzEE,G,+MACJlkB,MAAQ,CACNod,SAAU,KACV1M,UAAW,KACX+H,QAAQ,G,EAGV0L,SAAW7W,IAAMwT,Y,EACjBsD,SAAW9W,IAAMwT,Y,EAejBuD,WAAa,WACX,IAAIjH,EACA1M,EACJ,EAA4B,EAAKpE,MAAMnN,MAAM6G,OAArCqE,EAAR,EAAQA,OAAQqF,EAAhB,EAAgBA,QAChB,EAAKpD,MAAMkE,YAAYnG,GACnB,EAAKiC,MAAM/I,MAAMW,SACnBkZ,EAAW,EAAKkH,YAAYja,EAAQqF,GAAS6U,YAC7C7T,EAAY,EAAK4T,YAAYja,EAAQqF,GAAS8U,cAEhD,EAAKpY,SAAS,CAAEgR,WAAU1M,e,EAG5ByG,YAAc,SAAAC,GAAM,IAAD,IACT7T,EAAU,EAAK+I,MAAf/I,OACJ,UAAC,EAAK4gB,gBAAN,iBAAC,EAAenN,eAAhB,aAAC,EAAwBM,SAASF,EAAE5B,UACtC,EAAKlJ,MAAMG,QAAQ3K,KAAnB,iBAAkCyB,EAAM7B,O,EAI5C4iB,YAAc,SAACja,EAAQqF,GACrB,IACM8U,EADQ,EAAKlY,MAAM/I,MACEW,OAAO1C,MAAK,SAAC2C,GAAD,OAAWA,EAAMiB,KAAOsK,KACzD6U,EAAcC,EAAangB,MAAM7C,MAAK,SAAC8C,GAAD,OAAUA,EAAKc,KAAOiF,KAClE,MAAO,CAAEma,eAAcD,gB,EAGzBjC,kBAAoB,YAAkC,IAAD,IAA9B9M,OAAUC,EAAoB,EAApBA,KAAM5D,EAAc,EAAdA,MACrC,EAAKzF,SAAS,CAAEgR,SAAS,2BAAM,EAAKpd,MAAMod,UAAlB,mBAA6B3H,EAAO5D,O,EAG9D4S,qBAAuB,WAAiC,IAAhCngB,EAA+B,uDAAxB,EAAKtE,MAAMod,SAChC7Z,EAAU,EAAK+I,MAAf/I,MACAmM,EAAY,EAAKpD,MAAMnN,MAAM6G,OAA7B0J,QACR,EAAKpD,MAAM8D,aAAa9L,EAAMoL,EAASnM,I,EAGzCmhB,oBAAsB,WACpB,IAAQtH,EAAa,EAAKpd,MAAlBod,SACR,GAAKA,EAASvQ,MACd,OAAIuQ,EAASvQ,MAAMiB,QACV,CACLC,gBAAiBqP,EAASvQ,MAAMiB,QAChC6W,UAAW,IACX/N,OAAQ,KAERwG,EAASvQ,MAAMhE,OACV,CACLkH,WAAW,kCAAD,OAAoCqN,EAASvQ,MAAMhE,OAAnD,KACV+b,UAAW,QACXD,UAAW,IACX/N,OAAQ,UALZ,G,EASFyC,OAAS,WACP,EAAK/M,MAAMG,QAAQ4M,U,wDApErB,WACE1M,SAASxB,iBAAiB,YAAauB,KAAKyK,aAC5CzK,KAAK2X,e,kCAGP,WACE1X,SAASvB,oBAAoB,YAAasB,KAAKyK,e,gCAGjD,SAAmBsL,EAAWoC,GACxBpC,EAAUlf,QAAUmJ,KAAKJ,MAAM/I,OAAOmJ,KAAK2X,e,oBA6DjD,WAAU,IAAD,SACP,EAAgC3X,KAAK1M,MAA7Bod,EAAR,EAAQA,SAAU1M,EAAlB,EAAkBA,UACVnN,EAAUmJ,KAAKJ,MAAf/I,MACR,IAAK6Z,EAAU,OAAO,eAACvM,GAAD,IACtB,IAAMiU,EAAKpY,KAAKgY,sBAChB,OACE,sBAAK3X,UAAU,uBAAf,SAEE,2BAASA,UAAU,YAAYwK,IAAK7K,KAAKyX,SAAzC,UACG/G,EAASvQ,OAAS,sBAAKE,UAAU,eAAeF,MAAOiY,IACxD,eAAC,IAAD,CAAM9X,GAAE,iBAAYzJ,EAAM7B,KAA1B,SACE,yBAAQqL,UAAU,kBAAlB,SACE,eAAC,KAAD,QAIHqQ,EAASvQ,OACR,uBAAK0K,IAAK7K,KAAK0X,SAAUrX,UAAU,uBAAnC,UACE,0BACEA,UAAU,mBACVE,QAAS,kBAAM,EAAKb,SAAS,CAAEqM,QAAS,EAAKzY,MAAMyY,UAFrD,UAIE,uBAAM1L,UAAU,aAAhB,SACE,eAAC,KAAD,MAEF,6CAEDL,KAAK1M,MAAMyY,QACV,eAACtC,GAAD,CACElB,QAAS,kBAAM,EAAK7I,SAAS,CAAEqM,QAAQ,KACvCxU,MAAM,QACNsT,IAAK7K,KAAK0X,SAHZ,SAKE,eAACvG,GAAD,CACE5I,QAAS,kBAAM,EAAK7I,SAAS,CAAEqM,QAAQ,YAOhD2E,EAAShZ,WACR,uBAAK2I,UAAU,cAAf,UACE,gCACE,eAAC,KAAD,MAEF,0DAIJ,uBAAKA,UAAU,wCAAf,UACE,gCACE,eAAC,KAAD,MAEF,wBACEA,UAAU,cACV7C,KAAK,OACL2H,MAAOuL,EAASnZ,MAChBwR,KAAK,QACLE,SAAUjJ,KAAK4V,kBACfc,OAAQ,kBAAM,EAAKqB,6BAIvB,sBAAK1X,UAAU,sBAAf,SACE,0CACU,uBAAMA,UAAU,YAAhB,SAA6B2D,EAAUzM,aAInD,uBAAK8I,UAAU,gCAAf,UACE,uBAAKA,UAAU,iBAAf,UACE,eAAC,GAAD,IAEA,eAACsW,GAAD,IAECjG,EAASzJ,aAAeyJ,EAASzJ,YAAY/O,OAAS,GACrD,eAACqf,GAAD,IANJ,UASG7G,EAASpL,kBATZ,aASG,EAAqBxP,KAAI,SAACuP,GAAD,OACxB,sBAEEhF,UAAU,mCAFZ,SAIE,eAAC8V,GAAD,CACE9Q,UAAWA,EACXqL,SAAUA,EACVqH,qBAAsB,EAAKA,wBANxB1S,EAAU3M,OAWnB,eAACye,GAAD,CAAoB/f,OAAQ4I,KAAKJ,MAAMjD,UAGzC,eAAC,GAAD,CAAiBgQ,OAAQ3M,KAAK2M,qB,GAjLlB9L,aAgMlBC,GAAqB,CACzB4C,gBACAI,gBAGWuU,GAAWrX,aAZA,SAAC1N,GACvB,MAAO,CACLuD,MAAOvD,EAAM+J,YAAYrJ,UACzB2I,KAAMrJ,EAAMsK,WAAWjB,QASsBmE,GAAzBE,CAA6CwW,IC5M/Dc,G,+MACJhlB,MAAQ,CACNilB,QAAS,CACPhhB,MAAO,K,EAQXsR,aAAe,SAACrH,GACd,IAAQsH,EAAWtH,EAAXsH,OACJyP,EAAU,EAAKjlB,MAAMilB,QACzBA,EAAQzP,EAAOC,MAAQD,EAAO3D,MAC9B,EAAKzF,SAAS,CAAE6Y,a,EAGlBC,aAAa,SAAChX,GACA,UAATA,EAAGiX,KAAe,EAAKC,UAAUlX,I,EAGtCkX,UAAY,SAAClX,GACXA,EAAGC,iBACH,IAAQ8W,EAAY,EAAKjlB,MAAjBilB,QACR,GAAIA,EAAQhhB,MAAZ,CAEA,GADAghB,EAAQ7f,GAAKgC,EAAYC,SACD,UAApB,EAAKiF,MAAMpC,KAAkB,CAC3B+a,EAAQ5gB,QAAO4gB,EAAQ5gB,MAAM,IAGjC,IAAMkL,EAAW,CAACxO,IAAK0N,GAAwBwW,EAAQhhB,QAEjD+F,EAAS,CAAEE,KAAM,YAAa/F,MAAO8gB,GAC3C,EAAK3Y,MAAM2D,cAAcjG,EAAQ,EAAKsC,MAAM/I,MAAOgM,QAEhD,GAAwB,SAApB,EAAKjD,MAAMpC,KAAiB,CACnC,IAAMmb,EAAO,2BAAOJ,GAAP,IAAiBhG,YAAY,IAGpC1P,EAAW,CAACxO,IAAK0N,GAAuB4W,EAAQphB,OAAQK,KAAM+gB,EAAS3V,QAAS,EAAKpD,MAAMoD,SAEjG,EAAKpD,MAAMgZ,UAAWD,EAAS,EAAK/Y,MAAMoD,QAAS,EAAKpD,MAAM/I,MAAOgM,GAEvE,EAAKnD,SAAS,CAAC6Y,QAAS,CAAChhB,MAAO,Q,+FArClC,sBAAAX,EAAA,sDACEoJ,KAAK6Y,UAAU1J,QADjB,gD,0EAwCA,WAAU,IAAD,OACC5X,EAAUyI,KAAK1M,MAAMilB,QAArBhhB,MACAuhB,EAAmB9Y,KAAKJ,MAAxBkZ,eACFC,EAAmC,SAApB/Y,KAAKJ,MAAMpC,KAAkBwC,KAAKJ,MAAMpC,KAAO,OACpE,OACE,0BAAS6C,UAAU,iBAAnB,SACE,wBAAMgP,SAAUrP,KAAK0Y,UAAWM,QAAShZ,KAAKwY,aAA9C,UACE,2BACE7K,YAAW,iCAA4BoL,GACvClO,IAAK,SAACoO,GACJ,EAAKJ,UAAYI,GAEnB9T,MAAO5N,EACPwR,KAAK,QACLE,SAAUjJ,KAAK6I,aACf6N,OAAQ1W,KAAK0Y,YAEf,uBAAKrY,UAAU,8BAAf,UACE,0BAAQ7C,KAAK,SAAb,iBAA2Bub,KAC3B,yBAAQxY,QAASuY,EAAjB,SAAiC,eAAC,KAAD,CAAWzY,UAAU,OAAOF,MAAO,CAAE0L,MAAO,UAAW6G,SAAU,OAAQvC,QAAS,OAAQ2E,WAAY,SAAUC,eAAgB,0B,GAlEjJnU,IAAMC,WAgFlC,IAAMC,GAAqB,CACzByC,iBACAG,gBACAkV,UzCkBK,SAAmBD,EAAS3V,EAASnM,EAAOgM,GAC/C,IAAMpL,EAAQZ,EAAMW,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAMiB,KAAOsK,KAKtD,OAJA2V,EAAO,2BAAOA,GAAP,IAAgBO,UAAW/S,KAAKC,MAAOmM,YAAY,IAE1D9a,EAAME,MAASF,EAAME,MAAP,sBAAoBF,EAAME,OAA1B,CAAiCghB,IAAW,CAACA,GAEpDpV,GADa,CAAE/F,KAAM,eAAgB/F,SACVZ,EAAOgM,KyCrBhCsW,GAAenY,aAZ5B,SAAyB1N,GACvB,MAAO,CACLuD,MAAOvD,EAAM+J,YAAYrJ,aAY3B8M,GAF0BE,CAG1BsX,ICpGK,SAASc,GAAT,GAAoC,IAAdC,EAAa,EAAbA,UAC3B,OACE,uBAAKhZ,UAAU,sBAAf,UACGgZ,EAAUjY,SACT,sBACEf,UAAU,eACVF,MAAO,CAAEkB,gBAAiBgY,EAAUjY,WAGvCiY,EAAUld,QAAU,sBAAKkE,UAAU,gBAAf,SAA+B,sBAAKG,IAAK6Y,EAAUld,cCTvE,SAASmd,GAAT,GAAwE,IAA5CzhB,EAA2C,EAA3CA,SAAU0hB,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,oBAEnD,OACI,qBACAnZ,UAAS,yCACPmZ,EAAsB,OAAS,SAFjC,SAKC3hB,EAAS/B,KAAI,SAACgC,GACb,IAAMR,EAAQiiB,EAASzhB,GACvB,OACE,qBACEuI,UAAU,YAEVF,MAAO,CAAEkB,gBAAiB/J,EAAMuU,OAHlC,SAKG2N,GAAuBliB,EAAMC,OAC5B,gCAAOD,EAAMC,SAJVD,EAAMoB,S,uBCVlB,SAAS+gB,GAAT,GAAyC,IAAfnU,EAAc,EAAdA,WAY/B,OACE,uBAAKjF,UAAU,kCAAf,UACE,eAAC,KAAD,IACA,gCAdoB,WACtB,IAAIqZ,EAAa,EACbC,EAAiB,EAOrB,OANArU,EAAWnO,SAAQ,SAACkO,GAClBA,EAAUE,MAAMpO,SAAQ,SAACqO,GACvBkU,IACIlU,EAAKC,QAAQkU,UAGdA,EAAiB,IAAMD,EAKrBE,QCdN,SAASC,GAAT,GAA6D,IAAtCjiB,EAAqC,EAArCA,KAAMoL,EAA+B,EAA/BA,QAAS8W,EAAsB,EAAtBA,mBAyB3C,OACE,uBACEzZ,UAAU,iCACVF,MAnBoB,SAACvI,GAEvB,OAAIA,EAAK2a,WAAmB,CAAElR,gBAAiB,WAG7CzJ,EAAKoO,QAAUG,KAAKC,MAAQ,GAC5BxO,EAAKoO,QAAUG,KAAKC,MAAQ,MAErB,CAAE/E,gBAAiB,WAEnBzJ,EAAKoO,QAAUG,KAAKC,MAAQ,EAC5B,CAAE/E,gBAAiB,WAErB,CAAEA,gBAAiB,UAAWwK,MAAO,SAMnCkO,CAAgBniB,GACvB2I,QAAS,SAACyZ,GAAD,OAAWF,EAAmBE,EAAOhX,EAASpL,IAHzD,UAKE,uBAAMyI,UAAU,+BAAhB,SACE,eAAC,KAAD,MAEF,uBAAMA,UAAU,aAAhB,SACGzI,EAAK2a,WACJ,eAAC,KAAD,CAAoB1G,MAAO,YAE3B,eAAC,KAAD,MAGJ,gCAxCoB,SAAC7F,GACvB,IAAMK,EAAO,IAAIF,KAAKH,GAChBQ,EAAMH,EAAKI,UAGjB,OAFcJ,EAAK4T,eAAe,KAAM,CAAE3T,MAAO,UACpB,IAAME,EAoC1B0T,CAAgBtiB,EAAKoO,cCtC3B,SAASmU,GAAT,GAA0D,IAArCviB,EAAoC,EAApCA,KAAMoL,EAA8B,EAA9BA,QAAS8W,EAAqB,EAArBA,mBAEvC,OAEI,uBAAKzZ,UAAU,wCAAf,UACCzI,EAAKoO,SACJ,eAAC6T,GAAD,CACEjiB,KAAMA,EACNoL,QAASA,EACT8W,mBAAoBA,IAIvBliB,EAAK6e,aACJ,eAAC,KAAD,CAAiBlf,MAAO,gCAGzBK,EAAKqP,aAAerP,EAAKqP,YAAY/O,OAAS,GAC7C,uBAAKmI,UAAU,mCAAf,UACE,uBAAMA,UAAU,oBAAhB,SACE,eAAC,KAAD,MAEF,gCAAOzI,EAAKqP,YAAY/O,YAI3BN,EAAK0N,YACF,eAACmU,GAAD,CAAgBnU,WAAY1N,EAAK0N,aAGpC1N,EAAKF,WACJ,6CAKDE,EAAKtD,SACJ,sBAAK+L,UAAU,yBAAf,SACGzI,EAAKtD,QAAQwB,KAAI,SAACsB,EAAQgjB,GAAT,OAChB,eAACnN,GAAD,CACE7V,OAAQA,EACRyD,KAAM,MACDuf,W,aC3Cd,SAASC,GAAT,GASH,IARAziB,EAQD,EARCA,KACAoL,EAOD,EAPCA,QACAsX,EAMD,EANCA,wBAEAR,GAID,EALCS,aAKD,EAJCT,oBACAP,EAGD,EAHCA,SACAiB,EAED,EAFCA,oBACAhB,EACD,EADCA,oBAEF,OACE,uBACEnZ,UAAU,kCADZ,WAIIzI,EAAKF,WACL,yBACE2I,UAAU,iBACVE,QAAS,SAACyZ,GAAD,OAAWM,EAAwBN,EAAOpiB,EAAMoL,IAF3D,SAIE,eAAC,KAAD,MAIHpL,EAAKuI,OAAS,eAACiZ,GAAD,CAAYC,UAAWzhB,EAAKuI,QAE3C,uBAAKE,UAAU,eAAf,UACGzI,EAAKC,UACJ,sBAAK0I,QAASia,EAAd,SACE,eAAClB,GAAD,CACEzhB,SAAUD,EAAKC,SACf0hB,SAAUA,EACVC,oBAAqBA,MAK3B,6BAAI5hB,EAAKL,QAET,eAAC4iB,GAAD,CACEviB,KAAMA,EACNoL,QAASA,EACT8W,mBAAoBA,UCmDvB,IAAMW,GAAczZ,aAN3B,SAAyB1N,GACvB,MAAO,CACLuD,MAAOvD,EAAM+J,YAAYrJ,aAIFgN,EAvF3B,YAUI,IATFpJ,EASC,EATDA,KACAoL,EAQC,EARDA,QACAuX,EAOC,EAPDA,aACAf,EAMC,EANDA,oBACAgB,EAKC,EALDA,oBACAV,EAIC,EAJDA,mBACAQ,EAGC,EAHDA,wBACAF,EAEC,EAFDA,MACAb,EACC,EADDA,SAEA,OACE,sBACElZ,UAAU,eACVE,QAAS,kBAAMga,EAAavX,EAASpL,EAAKc,KAF5C,SAME,eAAC,KAAD,CAAWgiB,YAAa9iB,EAAKc,GAAI0hB,MAAOA,EAAxC,SACG,SAACO,GACA,OACE,yDACE9P,IAAK8P,EAASC,UACVD,EAASE,iBACTF,EAASG,gBAHf,aAKE,eAACT,GAAD,CACEziB,KAAMA,EACNoL,QAASA,EACTuX,aAAcA,EACdf,oBAAqBA,EACrBgB,oBAAqBA,EACrBV,mBAAoBA,EACpBQ,wBAAyBA,EACzBf,SAAUA,eC9CnB,SAASwB,GAAT,GAAuE,IAAhD/X,EAA+C,EAA/CA,QAAU8V,EAAqC,EAArCA,eAAgBkC,EAAqB,EAArBA,mBACtD,OACE,uBAAK3a,UAAU,4BAAf,UACE,yBAAQE,QAASuY,EAAjB,yBACA,yBAAQvY,QAAS,kBAAIya,EAAmBhY,IAAxC,qCCUC,IAAMiY,GAAb,+MACE3nB,MAAQ,CACN4nB,cAAc,EACdC,WAAY,GACZC,eAAe,GAJnB,EAOEC,aAAeza,IAAMwT,YAPvB,EAyBE0E,eAAiB,WACf,EAAKpZ,SAAS,CAAEwb,cAAe,EAAK5nB,MAAM4nB,gBA1B9C,EA6BErS,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAM5D,EAAc,EAAdA,MAChC,EAAKzF,UAAS,SAACyY,GAAD,mBAAC,eAAoBA,GAArB,mBAAiCpP,EAAO5D,QA9B1D,EAiCEmW,mBAAqB,WACnB,IAAM7jB,EAAQ,EAAKmI,MAAMnI,MACzBA,EAAMF,MAAQ,EAAKjE,MAAM6nB,WACzB,IAAM7d,EAAS,CAAEE,KAAM,eAAgB/F,SACjCoL,EAAW,CAACxO,IAAK0N,GAAgCtK,EAAMF,QAC7D,EAAKqI,MAAM2b,YAAYje,EAAQuF,IAtCnC,EAyCE2Y,UAAY,SAACxB,GACXA,EAAMlR,OAAO2S,QA1CjB,EA6CEC,SAAW,SAAC1B,GACVA,EAAMlR,OAAOqG,SA9CjB,EAiDEwM,YAAc,SAAC3B,GACbA,EAAMlR,OAAOsG,UAlDjB,wDASE,WACEpP,KAAKN,SAAL,2BACKM,KAAK1M,OADV,IAEE6nB,WAAYnb,KAAKJ,MAAMnI,MAAMF,WAZnC,gCAgBE,SAAmBwe,GACbA,EAAUte,QAAUuI,KAAKJ,MAAMnI,OACjCuI,KAAKN,SAAL,2BACKM,KAAK1M,OADV,IAEE6nB,WAAYnb,KAAKJ,MAAMnI,MAAMF,WApBrC,oBAqDE,WAAU,IAAD,OACP,EAUIyI,KAAKJ,MATPnI,EADF,EACEA,MACA8iB,EAFF,EAEEA,aACAC,EAHF,EAGEA,oBACAhB,EAJF,EAIEA,oBACAY,EALF,EAKEA,MACAN,EANF,EAMEA,mBACAkB,EAPF,EAOEA,mBACAV,EARF,EAQEA,wBACAf,EATF,EASEA,SAEF,EAAoDvZ,KAAK1M,MAAjD4nB,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,cAElC,OACE,sBACE/a,UAAW,gBACXF,MAAO,CAAEgQ,QAAS1Y,EAAMC,UAAY,OAAS,SAF/C,SAIE,eAAC,KAAD,CAAWgjB,YAAajjB,EAAMiB,GAAI0hB,MAAOA,EAAzC,SACG,SAACO,EAAUiB,GAAX,OACC,2DACEvb,UAAU,6BACNsa,EAASG,gBACTH,EAASE,iBAHf,IAIEhQ,IAAK8P,EAASC,SAJhB,UAME,uBAAKva,UAAU,+CAAf,UACE,wBACEA,UAAU,cACV7C,KAAK,OACL2H,MAAOgW,EACPpS,KAAK,aAEL8S,YAAa,EAAKL,UAClBM,UAAW,EAAKJ,SAChBzS,SAAU,EAAKJ,aACf6N,OAAQ,EAAK4E,qBAGf,uBACEjb,UAAU,WACVwK,IAAK,EAAKwQ,aACV9a,QAAS,kBACP,EAAKb,SAAS,CAAE0b,eAAgBA,KAJpC,UAOE,kCACE,eAAC,KAAD,MAEDA,GACC,eAAC3R,GAAD,CACElB,QAAS,kBAAM,EAAK7I,SAAS,CAAE0b,eAAe,KAC9CvQ,IAAK,EAAKwQ,aACV9jB,MAAM,eAHR,SAKE,eAACwjB,GAAD,CACE/X,QAASvL,EAAMiB,GACfogB,eAAgB,EAAKA,eACrBkC,mBAAoBA,YAM9B,eAAC,KAAD,CAAWe,YAAatkB,EAAMiB,GAA9B,SACG,SAACiiB,GAAD,OACC,8CACEta,UAAU,wBACNsa,EAASqB,gBAFf,IAGEnR,IAAK8P,EAASC,SAHhB,UAKGnjB,EAAME,OACLF,EAAME,MAAM7B,KAAI,SAAC8B,EAAMwiB,GACrB,OACE,eAACK,GAAD,CAEE7iB,KAAMA,EACNwiB,MAAOA,EACPpX,QAASvL,EAAMiB,GACf6hB,aAAcA,EACdC,oBAAqBA,EACrBhB,oBAAqBA,EACrBM,mBAAoBA,EACpBQ,wBAAyBA,EACzBf,SAAUA,GATL3hB,EAAKc,OAajBiiB,EAAShN,YACTuN,GACC,eAAC/B,GAAD,CACEL,eAAgB,EAAKA,eACrBtb,KAAM,OACNwF,QAASvL,EAAMiB,aAOrBwiB,GACJ,sBAAK7a,UAAU,+CAAf,SACI,0BACEA,UAAU,sCACVE,QAAS,EAAKuY,eAFhB,UAIE,oBAAGzY,UAAU,oBAAb,SACE,eAAC,KAAD,MAEF,iEAnKpB,GAAkCQ,aCV3B,SAASob,GAAT,GAUH,IATFzkB,EASC,EATDA,OACA+iB,EAQC,EARDA,aACAgB,EAOC,EAPDA,YACAf,EAMC,EANDA,oBACAhB,EAKC,EALDA,oBACAM,EAIC,EAJDA,mBACAkB,EAGC,EAHDA,mBACAV,EAEC,EAFDA,wBACAf,EACC,EADDA,SAEA,OACE,qBAAIlZ,UAAU,6BAAd,SACG7I,EAAO1B,KAAI,SAAC2B,EAAO2iB,GAClB,OACE,eAAC,GAAD,CAEEA,MAAOA,EACP3iB,MAAOA,EACP8iB,aAAcA,EACdgB,YAAaA,EACbf,oBAAqBA,EACrBhB,oBAAqBA,EACrBM,mBAAoBA,EACpBkB,mBAAoBA,EACpBV,wBAAyBA,EACzBf,SAAUA,GAVL9hB,EAAMiB,S,iCCZjBwjB,G,+MAEF5oB,MAAQ,CACJ6oB,OAAQ,I,EAGZC,cAAgB,WAGZ,OAFkB,EAAKxc,MAAf/I,MACsBvC,QAAQwB,KAAI,SAAAsB,GAAM,OAAIA,EAAOpC,Q,EAI/DqnB,cAAgB,SAAC1f,GACb,MAAiC,EAAKiD,MAA9B/I,EAAR,EAAQA,MAAO0M,EAAf,EAAeA,cAGT+Y,EAAY,EAAKF,gBACjBzW,EAAc,CAAE3Q,IAAK2H,EAAK3H,IAAKqC,SAAUsF,EAAKtF,SAAU8E,OAAQQ,EAAKR,QAC3E,GAAImgB,EAAUxO,SAASnI,EAAY3Q,KAAnC,CACI,IAAM6N,EAAW,CAAExO,IAAK0N,GAA4BpF,EAAKtF,WACzDkM,EAAc,CAAE/F,KAAM,sBAAuBuG,SAAUpH,EAAK3H,KAAO6B,EAAOgM,OAF9E,CAMAU,EAAc,CAAE/F,KAAM,mBAAoBpG,OAAQuO,GAAe9O,EADhD,CAAExC,IAAK0N,GAA4BpF,EAAKtF,YAEzD7D,QAAQC,IAAIoD,EAAMvC,W,EAItBuU,aAAe,SAACrH,GACZ,IAAM+a,EAAQ/a,EAAGsH,OAAOC,KAClB5D,EAAQ3D,EAAGsH,OAAO3D,MACxB,EAAKzF,SAAL,2BAAmB,EAAKpM,OAAxB,mBAAgCipB,EAAQpX,M,6CAG5C,WAAU,IAAD,OACGgX,EAAWnc,KAAK1M,MAAhB6oB,OACAzf,EAAUsD,KAAKJ,MAAflD,MACF4f,EAAYtc,KAAKoc,gBAEvB,OACI,uBAAK/b,UAAU,iBAAf,UACI,wBAAOA,UAAU,eAAe7C,KAAK,OAAOyL,SAAUjJ,KAAK6I,aAAcE,KAAK,SAAS5D,MAAOgX,EAAQ3S,WAAS,EAACmE,YAAY,cAC5H,qBAAItN,UAAU,yBAAd,SACK3D,EAAMgB,QAAO,SAAAf,GAAI,OAAIA,EAAKtF,SAASyW,SAASqO,MAASrmB,KAAI,SAAA6G,GAAI,OAC1D,sBAAI0D,UAAU,eAA8BE,QAAS,kBAAM,EAAK8b,cAAc1f,IAA9E,UACI,uBAAK0D,UAAU,eAAf,UACI,eAAC4M,GAAD,CAAc7V,OAAQuF,IACtB,uBAAM0D,UAAU,YAAhB,SAA6B1D,EAAKtF,cAEtC,gCAAQilB,EAAUxO,SAASnR,EAAK3H,KAAQ,eAAC,KAAD,IAAuB,OALjC2H,EAAK3H,iB,GA7ClC4L,IAAMC,WAiEnC,IAAMC,GAAqB,CACvByC,kBAGSiZ,GAAgBxb,aAV7B,SAAyB1N,GACrB,MAAO,CACHoJ,MAAOpJ,EAAMsK,WAAWlB,MACxB7F,MAAOvD,EAAM+J,YAAYrJ,aAOqB8M,GAAzBE,CAA6Ckb,ICvEpEO,G,+MAEFC,WAAa,SAACC,GACV,MAAiC,EAAK/c,MAA9B/I,EAAR,EAAQA,OAIR0M,EAJA,EAAeA,eAID,CAAE/F,KAAM,qBAAsB2C,MAHX,MAAlBwc,EAAW,GAAc,CAAEvb,QAASub,GAAe,CAAExgB,OAAQwgB,IAGvB9lB,EADtC,CAACxC,IAAK0N,Q,6CAIzB,WAAU,IAAD,OAIL,OACI,uBAAK1B,UAAU,YAAf,UACI,sBAAKA,UAAU,SAAf,SALO,CAAC,kHAAmH,+GAAgH,iHAAkH,+GAAgH,iHAAkH,iHAAkH,iHAAkH,iHAAkH,iHAAkH,wHAM3/BvK,KAAI,SAAC8mB,EAAOpnB,GAAR,OACR,sBAAe6K,UAAU,gBAAgBE,QAAS,kBAAM,EAAKmc,WAAWE,IAAxE,SACI,sBAAKpc,IAAKoc,EAAOlc,IAAKkc,KADhBpnB,QAKlB,wBACA,sBAAK6K,UAAU,SAAf,SAZO,CAAC,UAAW,UAAW,WAAY,UAAW,UAAW,WAapDvK,KAAI,SAAC+V,EAAOrW,GAAR,OACR,sBAAK2K,MAAO,CAAEkB,gBAAgB,GAAD,OAAKwK,IAAqBxL,UAAU,kBAAkBE,QAAS,kBAAM,EAAKmc,WAAW7Q,KAAhErW,e,GA1BlDoL,IAAMC,WAuC9B,IAAMC,GAAqB,CACvByC,kBAGSsZ,GAAW7b,aATxB,SAAyB1N,GACrB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,aAOgB8M,GAAzBE,CAA6Cyb,IC7C/DK,G,gKAEF,WACI,IAAQjmB,EAAUmJ,KAAKJ,MAAf/I,MACR,OACI,sBAAKwJ,UAAU,OAAOF,MAAQtJ,EAAMsJ,MAAMiB,QAAW,CAAEC,gBAAiBxK,EAAMsJ,MAAMiB,SAAY,GAAhG,SACKvK,EAAMsJ,MAAMhE,QAAU,sBAAKqE,IAAK3J,EAAMsJ,MAAMhE,OAAQuE,IAAI,W,GANhDE,IAAMC,WAkBxB,IAAMkc,GAAY/b,aANzB,SAAyB1N,GACrB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,aAIRgN,CAAyB8b,ICZ5CE,G,+MACF1pB,MAAQ,CACJc,SAAU,CACNC,IAAK,GACLC,QAAS,GACTC,OAAQ,K,EAuChB0oB,sBAAwB,SAAC7oB,GACrB,MAA8B,EAAKwL,MAA3BG,EAAR,EAAQA,QAASxN,EAAjB,EAAiBA,SACX2qB,EAAiB,eAAQ9oB,GAC/B,IAAK,IAAMqkB,KAAOyE,EAAmB,CACjC,IAAMC,EAAUD,EAAkBzE,KAC7B0E,GAAYC,MAAMC,QAAQF,KAAaA,EAAQjlB,gBAAgBglB,EAAkBzE,GAE1F,IAAM0D,EAAS,IAAIzZ,gBAAgBwa,GACnCnd,EAAQud,QAAR,UAAmB/qB,EAASgrB,SAA5B,YAAwCpB,EAAOxZ,c,EAGnDkG,aAAe,SAACrH,GACZ,IAAM+a,EAAQ/a,EAAGsH,OAAOC,KAClB5D,EAAQ3D,EAAGsH,OAAO3D,MAClB/Q,EAAQ,2BAAQ,EAAKwL,MAAMxL,UAAnB,mBAA8BmoB,EAAQpX,IACpD,EAAKvF,MAAM4d,eAAeppB,I,EAG9BqpB,iBAAmB/iB,EAAYU,UAAS,WACpC,IAAMsiB,EAAW,eAAQ,EAAK9d,MAAMxL,UACpC,IAAK,IAAMqkB,KAAOiF,EAAa,CAC3B,IAAMP,EAAUO,EAAYjF,KACvB0E,GAAYC,MAAMC,QAAQF,KAAaA,EAAQjlB,gBAAgBwlB,EAAYjF,GAEpF,EAAK7Y,MAAMwD,UAAU,EAAKxD,MAAMnN,MAAM6G,OAAOmE,QAASigB,KACvD,K,EAEHC,gBAAkB,SAAChhB,GACf,GAAI,EAAKiD,MAAMxL,SAASE,QAAQwZ,SAASnR,EAAK3H,KAAM,CAChD,IAAM4oB,EAAa,EAAKhe,MAAMxL,SAASE,QAAQmB,WAAU,SAAA2B,GAAM,OAAIA,IAAWuF,EAAK3H,OACnF,EAAK4K,MAAMxL,SAASE,QAAQoB,OAAOkoB,EAAY,GAC/C,IAAMxpB,EAAQ,2BAAQ,EAAKwL,MAAMxL,UAAnB,IAA6BE,QAAQ,YAAK,EAAKsL,MAAMxL,SAASE,WAC5E,EAAKsL,MAAM4d,eAAeppB,OACvB,CACH,IAAMA,EAAQ,2BAAQ,EAAKwL,MAAMxL,UAAnB,IAA6BE,QAAQ,GAAD,mBAAM,EAAKsL,MAAMxL,SAASE,SAA1B,CAAmCqI,EAAK3H,QAC1F,EAAK4K,MAAM4d,eAAeppB,K,EAIlCypB,iBAAmB,SAACvmB,GAChB,GAAI,EAAKsI,MAAMxL,SAASG,OAAOuZ,SAASxW,EAAMoB,IAAK,CAC/C,IAAMklB,EAAa,EAAKhe,MAAMxL,SAASG,OAAOkB,WAAU,SAAA6B,GAAK,OAAIA,IAAUA,KAC3E,EAAKsI,MAAMxL,SAASG,OAAOmB,OAAOkoB,EAAY,GAC9C,IAAMxpB,EAAQ,2BAAQ,EAAKwL,MAAMxL,UAAnB,IAA6BG,OAAO,YAAK,EAAKqL,MAAMxL,SAASG,UAC3E,EAAKqL,MAAM4d,eAAeppB,OACvB,CACH,IAAMA,EAAQ,2BAAQ,EAAKwL,MAAMxL,UAAnB,IAA6BG,OAAO,GAAD,mBAAM,EAAKqL,MAAMxL,SAASG,QAA1B,CAAkC+C,EAAMoB,OACzF,EAAKkH,MAAM4d,eAAeppB,K,wDAlFlC,WACI,MAA+B4L,KAAKJ,MAA5BrN,EAAR,EAAQA,SAAU6B,EAAlB,EAAkBA,SACV+nB,EAAW5pB,EAAX4pB,OACF7iB,EAAS,IAAIoJ,gBAAgByZ,GAC7B2B,EAAkBC,OAAOC,KAAK5pB,GAAU2Q,MAAK,SAAAkZ,GAAS,OAAI3kB,EAAO5E,IAAIupB,MAC3E,GAAI9B,GAAU2B,EAAiB,CAAC,IAAD,IACrBzpB,EAAMiF,EAAO5E,IAAI,QAAU,GAC3BJ,GAAU,UAAAgF,EAAO5E,IAAI,kBAAX,eAAuBwpB,MAAM,OAAQ,GACrD1qB,QAAQC,IAAI,YAAaa,GACzB,IAAMC,GAAS,UAAA+E,EAAO5E,IAAI,iBAAX,eAAsBwpB,MAAM,OAAQ,GACnD1qB,QAAQC,IAAI,WAAYc,GACxByL,KAAKJ,MAAM4d,eAAe,CAAEnpB,MAAKC,UAASC,WAC1CyL,KAAKid,sBAAsBjd,KAAKJ,MAAMxL,UAEtCZ,QAAQC,IAAI,+BAAgCuM,KAAKJ,MAAMxL,eAEvD4L,KAAKJ,MAAM4d,eAAe,CAAEnpB,IAAK,GAAIC,QAAS,GAAIC,OAAQ,KAC1DyL,KAAKid,sBAAsBjd,KAAKJ,MAAMxL,Y,gCAI9C,YAAgD,IAAjB+pB,EAAgB,EAA1B/pB,SACCgqB,EAAiBpe,KAAKJ,MAAhCxL,SACJ+pB,IAAiBC,IACjBpe,KAAKid,sBAAsBmB,GAC3Bpe,KAAKyd,iBAAiBY,KAAKre,KAA3BA,M,kCAIR,WACIA,KAAKJ,MAAM4d,eAAe,CAAEnpB,IAAK,GAAIC,QAAS,GAAIC,OAAQ,KAC1DyL,KAAKid,sBAAsBjd,KAAKJ,MAAMxL,UACtC4L,KAAKyd,iBAAiBY,KAAKre,KAA3BA,K,oBAqDJ,WAAU,IAAD,OACGnJ,EAAUmJ,KAAKJ,MAAf/I,MACAzC,EAAa4L,KAAKJ,MAAlBxL,SACR,OACI,uBAAKiM,UAAU,eAAf,UACI,wBAAOA,UAAU,eAAe7C,KAAK,OAAOyL,SAAUjJ,KAAK6I,aAAcE,KAAK,MAAM5D,MAAO/Q,EAASC,IAAKmV,WAAS,EAACmE,YAAY,cAC/H,oBAAGtN,UAAU,cAAb,wDAEA,wBAEA,qBAAIA,UAAU,wBAAd,SACKxJ,EAAMtC,OAAOuB,KAAI,SAAAwB,GAAK,OACnB,sBAAI+I,UAAU,gBAA+BE,QAAS,kBAAM,EAAKsd,iBAAiBvmB,IAAlF,UACI,uBAAK+I,UAAU,gBAAf,UACI,sBAAKA,UAAU,cAAcF,MAAO,CAAEkB,gBAAiB/J,EAAMuU,SAC7D,6BAAIvU,EAAMC,WAEd,gCAAQnD,EAASG,OAAOuZ,SAASxW,EAAMoB,IAAO,eAAC,KAAD,IAAuB,OALtCpB,EAAMoB,SASjD,wBACA,qBAAI2H,UAAU,yBAAd,SACKxJ,EAAMvC,QAAQwB,KAAI,SAAAsB,GAAM,OACrB,sBAAIiJ,UAAU,eAAgCE,QAAS,kBAAM,EAAKod,gBAAgBvmB,IAAlF,UACI,uBAAKiJ,UAAU,eAAf,UACI,eAAC4M,GAAD,CAAc7V,OAAQA,IACtB,uBAAMiJ,UAAU,YAAhB,SAA6BjJ,EAAOC,cAExC,gCAAQjD,EAASE,QAAQwZ,SAAS1W,EAAOpC,KAAQ,eAAC,KAAD,IAAuB,OAL1CoC,EAAOpC,iB,GAtHtC4L,IAAMC,WA4IjC,IAAMC,GAAqB,CACvB0c,evDqEG,SAAwBppB,GAC3B,OAAO,SAAC2K,GAEJA,EADe,CAAEvB,KAAM,gBAAiBpJ,euDtE5CgP,cAGSkb,GAActd,aAZ3B,SAAyB1N,GACrB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzBI,SAAUd,EAAM+J,YAAYjJ,YASgB0M,GAAzBE,CAA6Cud,aAAWvB,KCpJ7EwB,G,+MACJlrB,MAAQ,CACNsP,cAAe,M,EAUjB6b,kBAAqB,WACnB,IAAO5nB,EAAQ,EAAK+I,MAAb/I,MACD+L,EAAgB/L,EAAM+L,cAAgB/L,EAAM+L,cAAgB,GAClE,EAAKlD,SAAS,CAAEkD,mB,EAOlB8b,gBAAkB,SAAC9mB,GACjB,EAAKgI,MAAM+e,gBAAgB/mB,EAAM,EAAKgI,MAAM/I,Q,EAE9C+nB,aAAa,SAAChnB,GACZ,EAAKgI,MAAMif,aAAajnB,EAAM,EAAKgI,MAAM/I,Q,wDAtB3C,WACEmJ,KAAKye,sB,gCAEP,SAAmB1I,GACbA,EAAUlf,MAAM+L,gBAAkB5C,KAAKJ,MAAM/I,MAAM+L,eACrD5C,KAAKye,sB,oBAmBT,WAAU,IAAD,OACC7b,EAAkB5C,KAAK1M,MAAvBsP,cACR,EAMI5C,KAAKJ,MALP4Z,EADF,EACEA,oBACAgB,EAFF,EAEEA,oBACAjB,EAHF,EAGEA,SACAO,EAJF,EAIEA,mBACAS,EALF,EAKEA,aAGF,OADA/mB,QAAQC,IAAI,gCAAiCmP,GAE3C,uBAAKvC,UAAU,UAAf,WACIuC,GAAiB,eAACuB,GAAD,IAClBvB,GAA0C,IAAzBA,EAAc1K,QAC9B,wDAED0K,GAAiBA,EAAc1K,OAAS,GACvC,qBAAImI,UAAU,0DAAd,SACGuC,EAAc9M,KAAI,SAAC8B,EAAMwiB,GACxB,OACE,gCACE,eAACC,GAAD,CACEziB,KAAMA,EACNoL,QAASpL,EAAKoL,QACdwX,oBAAqBA,EACrBhB,oBAAqBA,EACrBD,SAAUA,EACVO,mBAAoBA,EACpBS,aAAcA,IAEhB,uBAAKla,UAAU,gBAAf,UACE,yBAAQE,QAAS,kBAAM,EAAKme,gBAAgB9mB,IAA5C,2BAGA,yBAAQ2I,QAAS,kBAAI,EAAKqe,aAAahnB,IAAvC,yBAdKA,EAAKc,gB,GAhDPkI,IAAMC,WA+E7B,IAAMC,GAAqB,CACzB2d,kBxDgGK,SAA2BhhB,GAC9B,8CAAO,WAAMsB,GAAN,eAAAnI,EAAA,+EAE6B0L,GAAaE,iBAAiB/E,GAF3D,cAEOmF,EAFP,OAGCpP,QAAQC,IAAI,aAAcmP,GAH3B,kBAIQA,GAJR,gCAMCpP,QAAQC,IAAI,6BAAZ,MAND,yDAAP,uDwDhGFiQ,gBACAmb,axDgCK,SAAsBjnB,EAAMf,GAC/B,IAAMoM,EAAW,eAAOpM,GAExB,OADAoM,EAAYL,cAAgBK,EAAYL,cAAclF,QAAO,SAAAohB,GAAY,OAAIA,EAAapmB,KAAOd,EAAKc,MAC/F6K,GAAc,GAAIN,IwDlC3B0b,gBxDoDK,SAAyBhb,EAAY9M,GAAyB,IAAlBgM,EAAiB,uDAAN,KACpDpL,EAAK,eAAOZ,EAAMW,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAMiB,KAAOiL,EAAWX,YACrE,GAAIvL,EAAO,CACP,IAAMmM,EAAUD,EAAWob,iBACpBpb,EAAWX,eACXW,EAAWob,iBACXpb,EAAWjM,UAClBD,EAAME,MAAMjC,OAAOkO,EAAS,EAAGD,GAEnC,IAAMV,EAAW,eAAOpM,GACxBoM,EAAYL,cAAgBK,EAAYL,cAAclF,QAAO,SAAAohB,GAAY,OAAIA,EAAapmB,KAAOiL,EAAWjL,MAC5G,IAAMmL,EAAc,CAAErG,KAAM,eAAgB/F,SAC5C,OAAO8L,GAAcM,EAAaZ,EAAaJ,KwD9DtCmc,GAAUhe,aAXvB,SAAyB1N,GACvB,MAAO,CACLuD,MAAOvD,EAAM+J,YAAYrJ,aASmB8M,GAAzBE,CAA6Cwd,I,qBCrF9DS,G,+MAIFC,cAAgB,SAAClc,GAEb,OADc,EAAKpD,MAAM/I,MAAMW,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAMiB,KAAOsK,KACpDzL,O,6CAGjB,WAAU,IAAD,OACGV,EAAUmJ,KAAKJ,MAAf/I,MACR,OAAgC,IAA5BA,EAAMsoB,WAAWjnB,OAAsB,uBAAKmI,UAAU,WAAf,UACvC,uBAAKA,UAAU,kBAAf,UACI,eAAC,KAAD,IACA,6CAEJ,oEAGA,uBAAKA,UAAU,WAAf,UACI,uBAAKA,UAAU,kBAAf,UACI,eAAC,KAAD,IACA,6CAEJ,qBAAIA,UAAU,2BAAd,SAEQxJ,EAAMsoB,WAAWrpB,KAAI,SAAA+M,GAAQ,OACzB,sBAAsBxC,UAAU,mBAAhC,UACI,uBAAMA,UAAU,gBAAhB,SAAgC,eAAC4M,GAAD,CAAc7V,OAAQyL,EAASE,aAC/D,uBAAK1C,UAAU,gBAAf,UACI,wBAAMA,UAAU,gBAAhB,UAAiCwC,EAASE,SAAS1L,SAAnD,OACA,6BAAIwL,EAASxO,MACZwO,EAASG,SAAW,gBAAC,IAAD,CAAM1C,GAAE,iBAAYzJ,EAAM7B,IAAlB,YAAyB6N,EAASG,QAAlC,YAA6CH,EAASjL,KAAKc,IAAnE,cAA2EmK,EAASjL,KAAKL,SAC7GsL,EAASG,SAAW,2CAAa,EAAKkc,cAAcrc,EAASG,YAC9D,eAAC,KAAD,CAAQ3C,UAAU,eAAe+e,SAAO,EAAxC,SAA0Cvc,EAASqW,iBAPlDrW,EAASnK,gB,GA3BlBkI,IAAMC,WAkDlC,IAGawe,GAAere,aAR5B,SAAyB1N,GACrB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,aAGN,GAGCgN,CAA6Cie,ICvDnEK,G,+MAEFC,Y,sBAAc,gCAAA3oB,EAAA,+DACuB,EAAKgJ,MAA9B/I,EADE,EACFA,MAAO2oB,EADL,EACKA,cADL,SAEJA,EAAc3oB,EAAM7B,KAFhB,OAGV,EAAK4K,MAAMG,QAAQ3K,KAAK,UAHd,2C,EAMdqqB,eAAiB,WACb,MAAwB,EAAK7f,MAArB/I,EAAR,EAAQA,MAAO8F,EAAf,EAAeA,KACf,OAAQA,EAAK+iB,SAAW7oB,EAAMqM,UAAUlO,MAAQ2H,EAAK3H,K,6CAGzD,WAAU,IAAD,OACL,OACI,2BAASqL,UAAU,2BAAnB,UACKL,KAAKyf,kBAAoB,uCACtB,mEACA,6DACA,yBAAQpf,UAAU,wBAAwBE,QAAS,kBAAM,EAAKgf,eAA9D,wBAEFvf,KAAKyf,kBAAoB,mF,GArBhB7e,IAAMC,WAkCjC,IAAMC,GAAqB,CACvB0e,c1DWG,SAAuB/hB,GAC1B,8CAAO,WAAMsB,GAAN,SAAAnI,EAAA,+EAEO0L,GAAa3M,OAAO8H,GAF3B,OAGCjK,QAAQC,IAAI,wBACZsL,EAAS,CACLvB,KAAM,eACNC,YANL,gDASCjK,QAAQC,IAAI,sBAAZ,MATD,yDAAP,wD0DTSksB,GAAc3e,aAV3B,SAAyB1N,GACrB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzB2I,KAAMrJ,EAAMsK,WAAWjB,QAOqBmE,GAAzBE,CAA6Cud,aAAWe,KC5B7EM,G,+MACFtsB,MAAQ,CACJusB,aAAc,G,EAGlBC,cAAgB,CAAC,CAAEpnB,GAAI,OAAQnB,MAAO,oBAAqB8U,KAAM,eAAC0Q,GAAD,IAAe3Q,UAAWyQ,IAC3F,CAAEnkB,GAAI,OAAQnB,MAAO,eAAgB8U,KAAM,eAAC,KAAD,IAAcD,UAAWkS,IACpE,CAAE5lB,GAAI,OAAQnB,MAAO,UAAW8U,KAAM,eAAC,KAAD,IAAmBD,UAAW4S,IACpE,CAAEtmB,GAAI,OAAQnB,MAAO,eAAgB8U,KAAM,eAAC,KAAD,IAAoBD,UAAWuT,K,EAW1EI,aAAe,SAACC,GACZ,EAAKtgB,UAAS,SAACyY,GAAD,mBAAC,eAAoBA,GAArB,IAAgC0H,YAAaG,Q,EAG/DC,YAAc,WACV,IAAQJ,EAAgB,EAAKvsB,MAArBusB,YACFK,EAAW,EAAKJ,cAAcD,GAEpC,OADArsB,QAAQC,IAAI,kBAAmBysB,GACxBA,EAAS9T,W,EAGpB+T,OAAS,WACL,EAAKzgB,UAAS,SAACyY,GAAD,mBAAC,eAAoBA,GAArB,IAAgC0H,aAAc,Q,EAIhEO,UAAY,WACR,IAAMxgB,EAAO,EAAKA,MACCiB,EAAc,EAAKif,cAAc,EAAKxsB,MAAMusB,aAAvDzT,UACR,OAAO,eAACvL,EAAD,eAAejB,K,EAG1BygB,aAAe,WACX,OAAO,iCACH,qBAAIhgB,UAAU,0BAAd,SACK,EAAKyf,cAAchqB,KAAI,SAACwqB,EAAK9qB,GAAN,OACpB,sBAAI+K,QAAS,kBAAM,EAAKwf,aAAavqB,IAArC,UACI,sBAAK6K,UAAU,OAAf,SAAuBigB,EAAIjU,OAC3B,6BAAIiU,EAAI/oB,UAFoC+oB,EAAI5nB,SAM5D,wBACA,eAAC2mB,GAAD,Q,wDAzCR,WACQrf,KAAKJ,MAAMrN,SAAS4pB,QAAQnc,KAAKN,UAAS,SAACyY,GAAD,mBAAC,eAAoBA,GAArB,IAAgC0H,YAAa,S,kCAG/F,WACI7f,KAAKN,UAAS,SAACyY,GAAD,mBAAC,eAAoBA,GAArB,IAAgC0H,aAAc,S,oBAwChE,WAAU,IAAD,OACL,EAA0G7f,KAAKJ,MAAvG2I,EAAR,EAAQA,QACAsX,GADR,EAAiBrF,oBAAjB,EAAsChB,oBAAtC,EAA2DD,SAA3D,EAAqEO,mBAArE,EAAyFS,aACjEva,KAAK1M,MAArBusB,aACR,OACI,uBAAKxf,UAAS,oBAAgBL,KAAKJ,MAAM2gB,WAAc,YAAc,IAArE,UACI,uBAAKlgB,UAAU,QAAf,UACI,uBAAMA,UAAS,oBAAgC,IAAjBwf,EAAsB,WAAa,GAAlD,KAAyDtf,QAAS,kBAAM,EAAK4f,UAA5F,SAAsG,eAAC,KAAD,MACtG,oBAAG9f,UAAU,aAAb,UAA6C,IAAjBwf,EAAqB,OAAS7f,KAAK8f,cAAcD,GAAatoB,QAC1F,uBAAM8I,UAAU,YAAYE,QAASgI,EAArC,SAA8C,eAAC,KAAD,SAElD,wBACA,sBAAKlI,UAAU,eAAf,UACsB,IAAjBwf,EAAqB,oBAAMQ,aAAN,IAAwB,oBAAMD,UAAN,a,GApE1Cxf,IAAMC,WAgF9B,IAGa2f,GAAWxf,aARxB,SAAyB1N,GACrB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,aAGN,GAGHgN,CAA6Cud,aAAWqB,KCtDhF,IAAM9e,GAAqB,CACvByC,kBAGSkd,GAAmBzf,aAVhC,SAAyB1N,GACrB,MAAO,CACHoJ,MAAOpJ,EAAMsK,WAAWlB,MACxB7F,MAAOvD,EAAM+J,YAAYrJ,aAOwB8M,GAAzBE,EAzCN,SAAC,GAAgD,IAA9C1M,EAA6C,EAA7CA,QAASuC,EAAoC,EAApCA,MAAO0M,EAA6B,EAA7BA,cAAegF,EAAc,EAAdA,QAExDK,qBAAU,WACN,OAAO,WACHL,OAEN,CAACA,IAOH,OACI,sBAAKlI,UAAU,cAAcF,MAAO,CAAE0L,MAAO,WAA7C,SACKvX,EAAQwB,KAAI,SAAAsB,GAAM,OACf,uBAAsBiJ,UAAU,6BAA6BE,QAAS,kBARzDwD,EAQ+E3M,EAAOpC,SAN3GuO,EAAc,CAAE/F,KAAM,sBAAuBuG,SAAUA,GAAYlN,GAF/C,IAACkN,GAQb,UACI,sBAAK1D,UAAU,sBACf,sBAAKF,MAAO,CAAE8J,MAAO,IAArB,SACI,eAACgD,GAAD,CAAc7V,OAAQA,MAE1B,sBAAKiJ,UAAU,qBAAf,SACI,6BAAIjJ,EAAOC,aAEf,sBAAKgJ,UAAU,sBAAf,SAAqC,eAAC,KAAD,QAR/BjJ,EAAOpC,aCN3B0rB,G,+MAEFptB,MAAQ,CACJqtB,cAAc,EACdC,WAAY,EAAKhhB,MAAM/I,MAAMU,MAC7BgpB,YAAY,EACZM,kBAAmB,EACnBC,oBAAoB,EACpBC,oBAAoB,G,EAGxBC,UAAYpgB,IAAMwT,Y,EAClB6M,WAAargB,IAAMwT,Y,EACnB8M,gBAAkBtgB,IAAMwT,Y,EAaxB+M,aAAe,WACX,IAAQN,EAAsB,EAAKvtB,MAA3ButB,kBACR,GAAIvuB,OAAOiZ,WAAa,IAAK,CACzB,GAA0B,IAAtBsV,EAAyB,OAC7B,EAAKnhB,SAAS,CAAEmhB,kBAAmB,QAChC,CACH,GAA0B,IAAtBA,EAAyB,OAC7B,EAAKnhB,SAAS,CAAEmhB,kBAAmB,M,EAU3C3f,mBAAqB,WACjB,MAAiC,EAAKtB,MAA9B/I,EAAR,EAAQA,MAAO0M,EAAf,EAAeA,cACf1M,EAAM0K,WAAa1K,EAAM0K,UACzBgC,EAAc,CAAE/F,KAAM,iBAAkB+D,UAAW1K,EAAM0K,WAAa1K,I,EAG1E8kB,YAAc,SAAC3B,GAAD,OAAWA,EAAMlR,OAAOsG,U,EAEtCvG,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAM5D,EAAc,EAAdA,MAC9B,EAAKzF,UAAS,SAACyY,GAAD,mBAAC,eAAoBA,GAArB,mBAAiCpP,EAAO5D,Q,EAG1Dic,mBAAqB,WACjB,MAAiC,EAAKxhB,MAA9B/I,EAAR,EAAQA,MAAO0M,EAAf,EAAeA,cACf1M,EAAMU,MAAQ,EAAKjE,MAAMstB,WACzB,IAAM/d,EAAW,CAAExO,IAAK0N,GAA2BlL,EAAMU,QACzDgM,EAAc,CAAE/F,KAAM,eAAgBjG,MAAOV,EAAMU,OAASV,EAAOgM,I,EAGvEwe,WAAa,WACT,EAAK3hB,UAAS,SAACyY,GAAD,mBAAC,eAAoBA,GAArB,IAAgCoI,YAAa,EAAKjtB,MAAMitB,iB,EAG1Ee,oBAAsB,WAClB,IAAMhtB,EAAO,YAAO,EAAKsL,MAAM/I,MAAMvC,SAErC,OADAA,EAAQoB,OAAO,EAAKpC,MAAMutB,mBACnBvsB,G,EAGXitB,sBAAwB,kBAAO,EAAK3hB,MAAM/I,MAAMvC,QAAQ4D,OAAS,EAAK5E,MAAMutB,mB,EAE5EW,eAAiB,kBAAM,EAAK9hB,SAAS,CAAEohB,oBAAoB,K,wDA3D3D,WACIxuB,OAAOmM,iBAAiB,SAAUuB,KAAKmhB,cACvCnhB,KAAKmhB,eACLnhB,KAAKJ,MAAMd,YACPkB,KAAKJ,MAAMrN,SAAS4pB,QAAQnc,KAAKN,SAAS,CAAE6gB,YAAY,M,kCAGhE,WACIjuB,OAAOoM,oBAAoB,SAAUsB,KAAKmhB,gB,gCAc9C,SAAmBpL,GACXA,EAAUlf,MAAMU,QAAUyI,KAAKJ,MAAM/I,MAAMU,OAC3CyI,KAAKN,SAAS,CAAEkhB,WAAY5gB,KAAKJ,MAAM/I,MAAMU,U,oBAqCrD,WAAU,IAAD,OACL,EAA2HyI,KAAKJ,MAAxH/I,EAAR,EAAQA,MAAO4qB,EAAf,EAAeA,kBAAmBjH,EAAlC,EAAkCA,oBAAqBhB,EAAvD,EAAuDA,oBAAqBD,EAA5E,EAA4EA,SAAUO,EAAtF,EAAsFA,mBAAoBS,EAA1G,EAA0GA,aAC1G,EAAyFva,KAAK1M,MAAtFstB,EAAR,EAAQA,WAAYL,EAApB,EAAoBA,WAAYI,EAAhC,EAAgCA,aAAcG,EAA9C,EAA8CA,mBAAoBC,EAAlE,EAAkEA,mBAC5DzsB,EAAU0L,KAAKshB,sBACfI,EAAqB1hB,KAAKuhB,wBAEhC,OACI,2BAASlhB,UAAU,eAAnB,UACI,uBAAKA,UAAU,YAAf,UACI,yBAAQA,UAAU,yBAAlB,SACI,wBAAOA,UAAU,cAAc7C,KAAK,OAAO2H,MAAOyb,EAAY7X,KAAK,aAAa8L,QAAS7U,KAAK2b,YAAa1S,SAAUjJ,KAAK6I,aAAc6N,OAAQ1W,KAAKohB,uBAEzJ,yBAAQ/gB,UAAS,iCAA6BxJ,EAAM0K,UAAa,UAAY,IAAMhB,QAAS,kBAAM,EAAKW,sBAAvG,SAA6H,eAAC,KAAD,MAJjI,KAKI,uBAAKb,UAAU,yBAAf,UAAwC,uBAAKA,UAAU,gBAAf,UACnC/L,EAAQwB,KAAI,SAACsB,EAAQ5B,GAAT,OACT,eAACyX,GAAD,CAA+B7V,OAAQA,EAAQ+I,MAAO,CAAEqL,MAAa,EAAPhW,IAA3C4B,EAAOpC,QAE7B0sB,EAAqB,GAClB,uBAEI7W,IAAK7K,KAAKihB,WAFd,UAII,sBAAK5gB,UAAU,0BAA0BF,MAAO,CAAEwhB,UAAU,cAAD,QAAoC,EAAnBrtB,EAAQ4D,OAAzB,QAA8CqI,QAAS,kBAAM,EAAKb,SAAS,CAAEohB,oBAAqBA,OAC7J,sBACIzgB,UAAU,gBACVF,MAAO,CAAEwhB,UAAU,cAAD,QAAoC,EAAnBrtB,EAAQ4D,OAAzB,QAFtB,oBAISwpB,KAERZ,GAAsB,eAACrX,GAAD,CAAgBlB,QAAS,kBAAM,EAAK7I,SAAS,CAAEohB,oBAAoB,KAAUvpB,MAAM,UAAUsT,IAAK7K,KAAKihB,WAAvG,SACnB,eAACR,GAAD,CAAkBnsB,QAASuC,EAAMvC,QAAQoJ,QAAO,SAAAtG,GAAM,OAAIA,EAAOpC,OAAMuT,QAASvI,KAAKwhB,yBAKjG,uBAAKnhB,UAAU,WAAWwK,IAAK7K,KAAKghB,UAApC,UACI,yBAAQzgB,QAAS,kBAAM,EAAKb,SAAS,CAAEihB,cAAeA,KAAiBtgB,UAAU,wBAAjF,oBACCsgB,GAAgB,eAAClX,GAAD,CAAgBlB,QAAS,kBAAM,EAAK7I,SAAS,CAAEihB,cAAc,KAAUppB,MAAM,iBAAiBsT,IAAK7K,KAAKghB,UAAxG,SACb,eAACxE,GAAD,eAIhB,sBAAKnc,UAAU,aAAf,UACMkgB,GAAc,uCACZ,uBAAKlgB,UAAU,WAAWwK,IAAK7K,KAAKkhB,gBAApC,UACI,yBAAQ7gB,UAAU,yBAAyBE,QAAS,kBAAM,EAAKb,SAAS,CAAEqhB,oBAAqBA,KAA/F,SAAsH,eAAC,KAAD,MACrHA,GAAsB,eAACtX,GAAD,CAAgBlB,QAAS,kBAAM,EAAK7I,SAAS,CAAEqhB,oBAAoB,KAAUxpB,MAAM,UAAUsT,IAAK7K,KAAKkhB,gBAAvG,SACnB,eAAC1E,GAAD,SAIR,0BAAQjc,QAAS,kBAAMkhB,GAAkB,IAAOphB,UAAS,mCAA+BkgB,EAAc,YAAc,IAApH,UAA0H,eAAC,KAAD,IAA1H,IAA6I,uBAAMlgB,UAAU,gBAAhB,0BAC7I,0BAAQE,QAAS,kBAAM,EAAK8gB,cAAchhB,UAAU,4BAApD,UAAgF,eAAC,KAAD,IAAhF,IAAqG,uBAAMA,UAAU,gBAAhB,+BAG7G,eAACmgB,GAAD,CAAUD,WAAYA,EAAYhY,QAAS,WAAQ,EAAK8Y,cAAgB7H,oBAAqBA,EAAqBgB,oBAAqBA,EAAqBjB,SAAUA,EAAUgB,aAAcA,EAAcT,mBAAoBA,W,GAnIrNlZ,IAAMC,WA+IjC,IAAMC,GAAqB,CACvBhC,aACAyE,kBAMSqe,GAAc5gB,aAd3B,SAAyB1N,GACrB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzB0I,MAAOpJ,EAAMsK,WAAWlB,SAWoBoE,GAAzBE,CAA6Cud,aAAWmC,KC9I7EmB,G,+MACJvuB,MAAQ,CACNsE,KAAM,KACNkqB,UAAW,I,EAgBbC,WAAa,SAACpkB,EAAQqF,GACpB,IAAMpL,EAAOoN,GAAgBJ,YAAYjH,EAAQqF,GACjD,EAAKtD,SAAS,CAAE9H,OAAMkqB,UAAWlqB,EAAKL,S,EAGxCsR,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAM5D,EAAc,EAAdA,MAChC,EAAKzF,UAAS,SAACyY,GAAD,mBAAC,eAAoBA,GAArB,mBAAiCpP,EAAO5D,Q,EAExDwW,YAAc,SAAC3B,GACbA,EAAMlR,OAAOsG,U,EAEf4S,OAAS,SAAChI,GACR,IAAMrW,EAAU,eAAQ,EAAKrQ,MAAMsE,MACnC+L,EAAWpM,MAAQ,EAAKjE,MAAMwuB,UAE9B,IAAMjf,EAAW,CACfxO,IAAK0N,KACLnK,KAAM+L,EACNX,QAAS,EAAKpD,MAAMoD,SAEtB,EAAKpD,MAAM8D,aACTC,EACA,EAAK/D,MAAMoD,QACX,EAAKpD,MAAM/I,MACXgM,GAEF,EAAKjD,MAAM0a,wBAAwBN,EAAO,KAAM,K,EAElDiI,SAAW,SAACjI,GACV,EAAKpa,MAAM0a,wBAAwBN,EAAO,KAAM,IAChD,EAAKpa,MAAM2a,aAAa,EAAK3a,MAAMoD,QAAS,EAAKpD,MAAMjC,S,EAEzDukB,cAAgB,SAAClI,GACf,MAA2B,EAAKpa,MAAxBoD,EAAR,EAAQA,QAASnM,EAAjB,EAAiBA,MACX8M,EAAU,eAAQ,EAAKrQ,MAAMsE,MACnC+L,EAAWjM,WAAY,EAEvB,EAAKkI,MAAMsiB,cAAcve,EAAYX,EAASnM,GAC9C,EAAK+I,MAAM0a,wBAAwBN,EAAO,KAAM,K,wDAnDlD,WACE,MAA4Bha,KAAKJ,MAAzBjC,EAAR,EAAQA,OAAQqF,EAAhB,EAAgBA,QAChBhD,KAAKJ,MAAMkE,YAAYnG,GACvBqC,KAAK+hB,WAAWpkB,EAAQqF,K,gCAG1B,SAAmB+S,GACjB,GAAIA,EAAUlf,QAAUmJ,KAAKJ,MAAM/I,MAAO,CACxC,MAA4BmJ,KAAKJ,MAAzBjC,EAAR,EAAQA,OAAQqF,EAAhB,EAAgBA,QAChBhD,KAAK+hB,WAAWpkB,EAAQqF,M,oBA+C5B,WACE,MAA4BhD,KAAK1M,MAAzBsE,EAAR,EAAQA,KAAMkqB,EAAd,EAAcA,UACd,EAMI9hB,KAAKJ,MALPoD,EADF,EACEA,QACAuW,EAFF,EAEEA,SACAC,EAHF,EAGEA,oBACAM,EAJF,EAIEA,mBACAhP,EALF,EAKEA,SAEF,OAAKlT,EAGH,uBACEyI,UAAU,yBACVF,MAAO,CACL2K,SAAU,QACVI,IAAKJ,EAASI,IACdM,KAAMV,EAASU,MALnB,UAQE,iCACE,uBAAKnL,UAAU,eAAeF,MAAO,CAAE8J,MAAOa,EAASb,OAAvD,UACGrS,EAAKuI,OAAS,eAACiZ,GAAD,CAAYC,UAAWzhB,EAAKuI,QAE3C,uBAAKE,UAAU,eAAf,UACGzI,EAAKC,UACJ,+BACE,eAACyhB,GAAD,CACEzhB,SAAUD,EAAKC,SACf0hB,SAAUA,EACVC,oBAAqBA,MAK3B,2BACEnZ,UAAU,cACV7C,KAAK,OACL2H,MAAO2c,EACP/Y,KAAK,YACLE,SAAUjJ,KAAK6I,aACfW,WAAS,EACTqL,QAAS7U,KAAK2b,cAGhB,eAACxB,GAAD,CACEviB,KAAMA,EACNoL,QAASA,EACT8W,mBAAoBA,UAI1B,yBAAQvZ,QAASP,KAAKgiB,OAAQ3hB,UAAU,0BAAxC,qBAIF,uBAAKA,UAAU,mCAAf,UACE,0BACEE,QAASP,KAAKiiB,SACd5hB,UAAU,qCAFZ,UAIE,uBAAMA,UAAU,0CAAhB,SACE,eAAC,KAAD,MAEF,iDAEF,sBAAKA,UAAU,qCAAf,SACE,eAAC+P,GAAD,CACEpH,KAAM,CACJqD,KAAMwF,KACNta,MAAO,cACP6U,UAAWyC,QAIjB,sBAAKxO,UAAU,qCAAf,SACE,eAAC+P,GAAD,CACEpH,KAAM,CACJqD,KAAMuF,KACNra,MAAO,iBACP6U,UAAWqB,QAIjB,sBAAKpN,UAAU,qCAAf,SACE,eAAC+P,GAAD,CACEpH,KAAM,CACJqD,KAAM4F,KACN1a,MAAO,eACP6U,UAAW+E,QAIjB,sBAAK9Q,UAAU,gDAAf,SACE,eAAC+P,GAAD,CACEpH,KAAM,CACJqD,KAAM0F,KACNxa,MAAO,aACP6U,UAAW2B,QAIjB,uBACE1N,UAAU,qCACVE,QAASP,KAAKkiB,cAFhB,UAIE,uBAAM7hB,UAAU,0CAAhB,SACE,eAAC,KAAD,MAEF,qDApGU,eAAC8D,GAAD,Q,GAvEStD,aAyL/B,IAAMC,GAAqB,CACzB4C,gBACAI,eACAoe,c9DvFK,SAAuBpD,EAAc9b,EAASnM,GAAyB,IAAlBgM,EAAiB,uDAAN,KAC7DpL,EAAK,eAAOZ,EAAMW,OAAO1C,MAAK,SAAA2C,GAAK,OAAIA,EAAMiB,KAAOsK,MACpDY,EAAUnM,EAAME,MAAMlC,WAAU,SAAAmC,GAAI,OAAIA,EAAKc,KAAOomB,EAAapmB,MACjEuK,EAAW,eAAOpM,GACxBioB,EAAa9b,QAAUA,EACvB8b,EAAaC,UAAYnb,EAEzBnM,EAAME,MAAMjC,OAAOkO,EAAS,GAE5BX,EAAYL,cAAgBK,EAAYL,cAAgBK,EAAYL,cAAgB,GACpFK,EAAYL,cAAcoF,QAAQ8W,GAClC,IAAMjb,EAAc,CAAErG,KAAM,eAAgB/F,SAC5C,OAAO8L,GAAcM,EAAaZ,EAAaJ,K8D8EtCsf,GAAkBnhB,aAZ/B,SAAyB1N,GACvB,MAAO,CACLuD,MAAOvD,EAAM+J,YAAYrJ,aAY3B8M,GAF6BE,CAG7B6gB,I,UC1NK,SAASO,GAAT,GAAmE,IAApCnrB,EAAmC,EAAnCA,kBAAmBorB,EAAgB,EAAhBA,aACvD7uB,QAAQC,IAAI,oBAAqBwD,GAEjC,IAAMiC,EAAO,CACX3E,OAAQwpB,OAAOC,KAAK/mB,GACpBqrB,SAAU,CACR,CACEhrB,MAAO,aACP4B,KAAM6kB,OAAOwE,OAAOtrB,GACpBoK,gBAAiBghB,EACjBG,YAAa,EACbC,YAAa,KAenB,OACE,uBAAKpiB,UAAU,QAAf,UACE,mDACA,eAAC,KAAD,CAAKnH,KAAMA,EAAMwpB,QAdL,CACdC,QAAS,CACPC,OAAQ,CACNruB,OAAQ,CACNsX,MAAO,QACP8G,QAAS,YCnBZ,SAASkQ,GAAT,GAAiE,IAAnC3rB,EAAkC,EAAlCA,iBAAkBmrB,EAAgB,EAAhBA,aAC/CnpB,EAAO,CACX3E,OAAQwpB,OAAOC,KAAK9mB,GACpBorB,SAAU,CACR,CACEhrB,MAAO,GACP4B,KAAM6kB,OAAOwE,OAAOrrB,GACpBmK,gBAAiBghB,EACjBG,YAAa,EACbC,YAAa,EACbK,UAAW,WAgCjB,OACE,uBAAKziB,UAAU,4BAA4BF,MAAO,CAAE4iB,UAAW,KAA/D,UACE,kDACA,eAAC,KAAD,CAAK7pB,KAAMA,EAAMgR,OAAQ,KACvBD,MAAO,KACPyY,QAhCU,CACdM,qBAAqB,EACrBL,QAAS,CACPC,OAAQ,CACNzS,SAAS,EACT5b,OAAQ,CACNuuB,UAAW,WAKjBG,OAAQ,CACNC,EAAG,CACDC,MAAO,CACLtX,MAAO,UAIXuX,EAAG,CACDD,MAAO,CACLtX,MAAO,iB,yBCpCV,SAASwX,GAAT,GAAqC,IAATC,EAAQ,EAARA,MAuEjC,OACE,sBAAKjjB,UAAU,sBAAf,SACE,eAAC,KAAD,CAAUnH,KAAMoqB,EAAOC,MAAO,GAAI3wB,OAxEvB,CACb4wB,OAAQ,CACNtY,IAAK,CACH/K,MAAO,CACLkD,WAAY,gCACZogB,WAAY,oBACZ/Q,SAAU,KAGdgR,OAAQ,CACNvjB,MAAO,CACLkD,WAAY,mCACZqP,SAAU,EACV7G,MAAO,UAGXZ,OAAQ,CACN9K,MAAO,CACLkD,WAAY,gCACZqP,SAAU,EACV7G,MAAO,WAET8X,cAAe,CACbtgB,WAAY,qCACZugB,WAAY,OACZ/X,MAAO,WAIbgY,SAAU,CACRtsB,MAAO,CACLD,MAAO,YACP6I,MAAO,CACLkD,WAAY,kCAGhBygB,KAAM,CACJ3jB,MAAO,CACLkB,gBAAiB,OACjBwK,MAAO,UAGXkY,kBAAmB,CACjB5jB,MAAO,CACLkB,gBAAiB,WAEnB2iB,KAAM,CACJ7jB,MAAO,CACLkB,gBAAiB,cAKzB4iB,aAAc,CACZ/N,KAAM,CACJ/V,MAAO,CACLkB,gBAAiB,QACjB6iB,aAAc,uBAGlBJ,KAAM,CACJK,WAAW,EACXhkB,MAAO,CACLkB,gBAAiB,UACjBuR,aAAc,EACdwR,UAAW,8B,ICxDfC,G,+MACJ/wB,MAAQ,CACNwD,WAAY,M,+FAEd,4BAAAF,EAAA,sEAC2B0L,GAAavM,eAAeiK,KAAKJ,MAAM/I,MAAM7B,KADxE,OACQ8B,EADR,OAEEkJ,KAAKN,SAAS,CAAE5I,eAFlB,gD,6EAKA,WACE,OAAOkJ,KAAKJ,MAAM/I,MAAMtC,OAAOuB,KAAI,SAACwB,GAClC,OAAOA,EAAMuU,W,oBAIjB,WACE,IAAQ/U,EAAekJ,KAAK1M,MAApBwD,WACAD,EAAUmJ,KAAKJ,MAAf/I,MAER,OADArD,QAAQC,IAAI,aAAcqD,GACrBA,EAEH,uBAAKuJ,UAAU,2CAAf,UACE,eAAC,IAAD,CAAMC,GAAE,iBAAYzJ,EAAM7B,KAA1B,SACA,yBACEqL,UAAU,YADZ,SAGE,eAAC,KAAD,QAGF,uBAAKA,UAAU,0BAAf,UACE,uBAAKA,UAAU,2BAAf,UACE,iCACE,4CACA,gCAAOvJ,EAAWE,gBAEpB,oBAAGqJ,UAAU,oBAAb,SACE,eAAC,KAAD,SAGJ,uBAAKA,UAAU,2BAAf,UACE,iCACE,4CACA,gCAAOvJ,EAAWC,iBAEpB,oBAAGsJ,UAAU,oBAAb,SACE,eAAC,KAAD,SAGJ,uBAAKA,UAAU,2BAAf,UACE,iCACE,0CACA,gCAAOxJ,EAAMvC,SAAWuC,EAAMvC,QAAQ4D,SACtC,iCAAQrB,EAAMvC,SAAW,OAE3B,oBAAG+L,UAAU,oBAAb,SACE,eAAC,KAAD,YAIN,uBAAKA,UAAU,cAAf,UACE,eAAC+hB,GAAD,CACE/hB,UAAU,QACVpJ,kBAAmBH,EAAWG,kBAC9BorB,aAAcriB,KAAKskB,cAGrB,eAACzB,GAAD,CACExiB,UAAU,QACVnJ,iBAAkBJ,EAAWI,iBAC7BmrB,aAAcriB,KAAKskB,iBAGvB,eAACjB,GAAD,CAAmBC,MAAOxsB,EAAWwsB,WArDjB,eAACnf,GAAD,Q,GAnBHtD,aAoFzB,IAEa0jB,GAAYvjB,aARzB,SAAyB1N,GACvB,MAAO,CACLuD,MAAOvD,EAAM+J,YAAYrJ,aAIF,GAEFgN,CAGvBqjB,IC1EIG,G,+MACJlxB,MAAQ,CACNkmB,qBAAqB,EACrB0B,cAAc,EACduJ,gBAAiB,CACfC,WAAY,KACZ1hB,QAAS,GACT8H,SAAU,K,EAkBd1H,UAAY,SAAC3F,EAASrJ,GACpB,EAAKwL,MAAMwD,UAAU3F,EAASrJ,I,EAEhCmmB,aAAe,SAACvX,EAASrF,GACvB,EAAKiC,MAAMG,QAAQ3K,KAAnB,UAA2B,EAAKwK,MAAM/I,MAAM7B,IAA5C,YAAmDgO,EAAnD,YAA8DrF,K,EAEhE4d,YAAc,SAACje,EAAQuF,GACrB,IAAM8hB,EAAernB,EAAOzG,OAAS,EAAK+I,MAAM/I,MAChD,EAAK+I,MAAM2D,cAAcjG,EAAQqnB,EAAc9hB,I,EAGjD4e,kBAAoB,SAAC1V,GACfA,EACF,EAAKnM,MAAMG,QAAQ3K,KAAnB,UAA2B,EAAKwK,MAAM/I,MAAM7B,IAA5C,eAEA,EAAK4K,MAAMG,QAAQ4M,U,EAIvB6N,oBAAsB,SAACR,GACrBA,EAAMtY,kBACN,EAAKhC,SAAS,CAAE8Z,qBAAsB,EAAKlmB,MAAMkmB,uB,EAEnDc,wBAA0B,SAACN,EAAOpiB,EAAMoL,GACtCgX,EAAMtY,kBACN,IAAMkjB,EAAgBhtB,EAAOoiB,EAAM6K,cAAcC,WAAa,KACxDha,EAAWlT,EAAOgtB,EAAc5Z,wBAA0B,GAChE,EAAKtL,SAAS,CAAE+kB,gBAAiB,CAAEC,WAAY9sB,EAAMoL,UAAS8H,e,EAEhEgP,mBAAqB,SAACtY,EAAIwB,EAASpL,GAEjC,GADA4J,EAAGE,mBACA9J,EAAKF,UAAR,CACA,IAAMqtB,EAAY,eAAQntB,GAC1BmtB,EAAaxS,YAAc3a,EAAK2a,WAChC,IAAM1P,EAAWkiB,EAAaxS,WAC1B,CACEle,IAAK0N,KACLnK,KAAMmtB,EACN/hB,QAASA,GAEX,CACE3O,IAAK0N,KACLnK,KAAMmtB,EACN/hB,QAASA,GAEf,EAAKpD,MAAM8D,aAAaqhB,EAAc/hB,EAAS,EAAKpD,MAAM/I,MAAOgM,K,EAEnE0W,SAAW,SAACzhB,GAEV,OADc,EAAK8H,MAAM/I,MAAMtC,OAAOO,MAAK,SAACwC,GAAD,OAAWA,EAAMoB,KAAOZ,M,EAGrEktB,gBAAkB,SAACC,GACjB,IAAQC,EAA8BD,EAA9BC,YAAaC,EAAiBF,EAAjBE,OAAQ3nB,EAASynB,EAATznB,KAC7B,GAAK0nB,EAAL,CACA,IAAM9b,EAAa,eAAQ,EAAKxJ,MAAM/I,OAEtC,GAAa,UAAT2G,EAAkB,CAAC,IAAD,EACd4nB,EAAehc,EAAc5R,OAAO9B,OAAOyvB,EAAO/K,MAAO,GAG/D,OAFA,EAAAhR,EAAc5R,QAAO9B,OAArB,SAA4BwvB,EAAY9K,MAAO,GAA/C,mBAAqDgL,UACrD,EAAKxlB,MAAM2D,cAAc,CAAE/F,KAAM,IAAM4L,GAGzC,IAAMic,EAAW,eACZjc,EAAc5R,OAAO1C,MAAK,SAAC2C,GAAD,OAAWA,EAAMiB,KAAOysB,EAAOpJ,gBAExDnkB,EAAOytB,EAAY1tB,MAAMjC,OAAOyvB,EAAO/K,MAAO,GAEpD,GAAI+K,EAAOpJ,cAAgBmJ,EAAYnJ,YAAa,CAAC,IAAD,GAClD,EAAAsJ,EAAY1tB,OAAMjC,OAAlB,SAAyBwvB,EAAY9K,MAAO,GAA5C,mBAAkDxiB,KAClD,IAAM0F,EAAS,CAAEE,KAAM,eAAgB/F,MAAO4tB,GAC9C,EAAKzlB,MAAM2D,cAAcjG,EAAQ8L,OAG9B,CAAC,IAAD,EACGkc,EAAgB,eACjBlc,EAAc5R,OAAO1C,MACtB,SAAC2C,GAAD,OAAWA,EAAMiB,KAAOwsB,EAAYnJ,gBAGpCuJ,EAAiB3tB,OACnB,EAAA2tB,EAAiB3tB,OAAMjC,OAAvB,SAA8BwvB,EAAY9K,MAAO,GAAjD,mBAAuDxiB,KACpD0tB,EAAiB3tB,MAAQ,CAACC,GAC/BwR,EAAc5R,OAAS4R,EAAc5R,OAAO1B,KAAI,SAACkO,GAC/C,OAAIA,EAAUtL,KAAOysB,EAAOpJ,YAAoBsJ,EAC5CrhB,EAAUtL,KAAOwsB,EAAYnJ,YAAoBuJ,EAC9CthB,KAET,EAAKpE,MAAM2D,cAAc,CAAE/F,KAAM,IAAM4L,M,EAG3C0P,eAAiB,WACf,EAAKpZ,SAAS,CAAEwb,cAAe,EAAK5nB,MAAM4nB,gB,EAE5CF,mBAAqB,SAAChY,GACpB,IAAMuiB,EAAa,eACd,EAAK3lB,MAAM/I,MAAMW,OAAO1C,MAAK,SAAC2C,GAAD,OAAWuL,IAAYvL,EAAMiB,OAE/D6sB,EAAc7tB,WAAY6tB,EAAc7tB,YACnC6tB,EAAc7tB,UAEnB,IAAMmL,EAAW,CAAExO,IAAK0N,GAA2BwjB,EAAchuB,QAC3D+F,EAAS,CAAEE,KAAM,eAAgB/F,MAAO8tB,GAC9C,EAAK3lB,MAAM2D,cAAcjG,EAAQ,EAAKsC,MAAM/I,MAAOgM,I,+FApHrD,qCAAAjM,EAAA,6DACU6G,EAAYuC,KAAKJ,MAAMnN,MAAM6G,OAA7BmE,QACFrJ,EAAW4L,KAAKJ,MAAMrN,SAAS4pB,OACrC3oB,QAAQC,IAAI,uBAAwBW,GAHtC,SAIQ4L,KAAKoD,UAAU3F,EAASrJ,GAJhC,OAKE0F,EAAcS,KAAK,gBAAiBkD,GACpC3D,EAAcI,GAAG,gBAAgB,YAA2B,IAAxBoD,EAAuB,EAAvBA,OAAQuF,EAAe,EAAfA,SACpC2iB,EAAcloB,EAAOzG,OAAS,EAAK+I,MAAM/I,MAC/C,EAAK+I,MAAM6lB,kBAAkBnoB,EAAQkoB,EAAa3iB,MARtD,gD,wFAWA,WACE7C,KAAKJ,MAAM8lB,e,oBA2Gb,WAAU,IAAD,OACC7uB,EAAUmJ,KAAKJ,MAAf/I,MACR,EAKImJ,KAAK1M,MAHPkmB,GAFF,EACEmM,gBADF,EAEEnM,qBACA0B,EAHF,EAGEA,aACAuJ,EAJF,EAIEA,gBAEF,OAAK5tB,GACFA,EAAM+L,eAAepP,QAAQC,IAAI,QAASoD,GAE3C,uBAAKwJ,UAAU,4BAAf,UACE,eAAC,KAAD,CAAOulB,KAAK,4BAA4BxZ,UAAWmY,KACnD,eAAC,KAAD,CAAOqB,KAAK,mCAAmCxZ,UAAWiM,KAE1D,eAACuJ,GAAD,CAAaH,kBAAmBzhB,KAAKyhB,kBAAmBjH,oBAAqBxa,KAAKwa,oBAAqBV,mBAAoB9Z,KAAK8Z,mBAAoBN,oBAAqBA,EAAqBD,SAAUvZ,KAAKuZ,SAAUgB,aAAcva,KAAKua,eAE1O,eAAC,KAAD,CAAiBsL,UAAW7lB,KAAKglB,gBAAjC,SACE,0BAAS3kB,UAAU,4BAAnB,SACE,sBAAKA,UAAU,0BAAf,SACE,eAAC,KAAD,CACE0b,YAAallB,EAAM7B,IACnB8wB,UAAU,aACVtoB,KAAK,QAHP,SAKG,SAACmd,EAAUiB,GAAX,OACC,iDACMjB,EAASqB,gBADf,IAEEnR,IAAK8P,EAASC,SACdva,UAAU,OAHZ,UAKGxJ,EAAMW,QACL,eAACykB,GAAD,CACEzkB,OAAQX,EAAMW,OACd+iB,aAAc,EAAKA,aACnBgB,YAAa,EAAKA,YAClBf,oBAAqB,EAAKA,oBAC1BhB,oBAAqBA,EACrBM,mBAAoB,EAAKA,mBACzBkB,mBAAoB,EAAKA,mBACzBV,wBAAyB,EAAKA,wBAC9Bf,SAAU,EAAKA,WAGlBoB,EAAShN,YAEV,uBAAKtN,UAAU,sBAAf,WACI6a,GACA,0BACE7a,UAAU,sCACVE,QAAS,EAAKuY,eAFhB,UAIE,oBAAGzY,UAAU,oBAAb,SACE,eAAC,KAAD,MAEF,kDAGH6a,GACC,eAAC/B,GAAD,CACEL,eAAgB,EAAKA,eACrBtb,KAAM,0BAWvBinB,EAAgBC,YACf,eAACvC,GAAD,CACExkB,OAAQ8mB,EAAgBC,WAAWhsB,GACnCsK,QAASyhB,EAAgBzhB,QACzB8H,SAAU2Z,EAAgB3Z,SAC1ByO,SAAUvZ,KAAKuZ,SACfO,mBAAoB9Z,KAAK8Z,mBACzBN,oBAAqBA,EACrBc,wBAAyBta,KAAKsa,wBAC9BC,aAAcva,KAAKua,eAGtBkK,EAAgBC,YACf,sBACEnkB,QAAS,SAACyZ,GAAD,OAAW,EAAKM,wBAAwBN,EAAO,KAAM,KADhE,SAGE,eAAC/V,GAAD,UAhFW,eAACE,GAAD,Q,GA1IKtD,aA8O5B,IAAMC,GAAqB,CACzBsC,aACAG,iBACAkiB,kBnEzCK,SAA2BnoB,EAAQzG,EAAOgM,GAC7C,8CAAO,WAAM9D,GAAN,eAAAnI,EAAA,sDACGqM,EAAcO,GAAiBlG,EAAQzG,GAC7CkI,EAAS,CACLvB,KAAM,eACN3G,MAAOoM,IAJR,2CAAP,uDmEyCFS,gBACAgiB,WnEtOK,WAEH,OADAzlB,SAASC,KAAKC,MAAMkD,WAAa,QAC1B,SAACtE,GACJA,EAAS,CACLvB,KAAM,iBACN3G,MAAO,UmEoONkvB,GAAe/kB,aAb5B,SAAyB1N,GACvB,MAAO,CACLuD,MAAOvD,EAAM+J,YAAYrJ,aAa3B8M,GAF0BE,CAG1BwjB,I,mBCpRa,OAA0B,4CCA1B,OAA0B,2CCcnCwB,G,+MAEF1yB,MAAQ,CACJ2L,YAAa,CACTY,SAAU,GACVC,SAAU,GACVzI,SAAU,IAEd4uB,SAAU,M,EASdC,SAAW,SAAC3D,GACR,IAAM4D,EAAS,GAcf,OAbK5D,EAAO1iB,SAED0iB,EAAO1iB,SAAS3H,OAAS,IAChCiuB,EAAOtmB,SAAW,oCAFlBsmB,EAAOtmB,SAAW,WAIlB0iB,EAAOziB,SAAS5H,OAAS,IACzBiuB,EAAOrmB,SAAW,sBAEjByiB,EAAOlrB,SAEDkrB,EAAOlrB,SAASa,OAAS,IAChCiuB,EAAO9uB,SAAW,oCAFlB8uB,EAAO9uB,SAAW,WAIf8uB,G,EAGXC,gBAAkB,SAAC7sB,GACf,IAAQuD,EAAYvD,EAAZuD,SAERupB,EAD0B,EAAKzmB,MAAvBymB,eACMvpB,GACd,EAAK8C,MAAMG,QAAQ3K,KAAK,W,EAG5BkxB,gBAAkB,SAAC/sB,GACf/F,QAAQC,IAAI,2BAA4B8F,I,EAG5C8V,SAAW,SAACkT,GACR,IAAQ0D,EAAa,EAAK3yB,MAAlB2yB,SACR,EAA8B,EAAKrmB,MAA3BZ,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,SACJ,UAAb+mB,EAAuBjnB,EAAQujB,GAAUrjB,EAASqjB,GAClD,EAAK3iB,MAAMG,QAAQ3K,KAAK,W,+FAvC5B,4BAAAwB,EAAA,sEACUoJ,KAAKJ,MAAMd,YADrB,OAEUmnB,EAA4C,WAAjCjmB,KAAKJ,MAAMrN,SAASgrB,SAAwB,QAAU,SACvEvd,KAAKN,SAAS,CAAEumB,aAHpB,gD,0EA0CA,WACI,MAAkCjmB,KAAK1M,MAA/B2L,EAAR,EAAQA,YAAagnB,EAArB,EAAqBA,SACrB,OACI,2BAAS5lB,UAAU,mCAAnB,UACI,uBAAKA,UAAU,sBAAf,UACI,eAAC,KAAD,IACA,qBAAIA,UAAU,YAAd,2BAEU,UAAb4lB,GAAwB,uBAAK5lB,UAAU,2BAAf,UACrB,uDACA,eAAC,KAAD,CAAQkmB,cAAetnB,EAAaoQ,SAAUrP,KAAKqP,SAAnD,SACI,gBAAC,KAAD,CAAMhP,UAAU,yBAAhB,UACI,eAAC,KAAD,CAAO7C,KAAK,WAAWmQ,YAAY,kBAAkB5E,KAAK,WAAWS,WAAS,IAC9E,eAAC,KAAD,CAAcT,KAAK,WAAWqD,UAAU,QACxC,eAAC,KAAD,CAAO5O,KAAK,WAAWmQ,YAAY,iBAAiB5E,KAAK,WAAWyd,aAAa,QACjF,eAAC,KAAD,CAAczd,KAAK,WAAWqD,UAAU,QACxC,yBAAQ5O,KAAK,SAAS6C,UAAU,8BAA8BF,MAAO,CAAC0L,MAAO,WAA7E,yBARa,KAYrB,wBACA,eAAC,eAAD,CACIxL,UAAU,oDACVomB,SAAS,2EACTC,WAAW,uBACX/yB,UAAWqM,KAAKomB,gBAChBO,UAAW3mB,KAAKsmB,gBAChBM,aAAc,uBAElB,eAAC,IAAD,CAAMtmB,GAAG,UAAT,uCAEU,WAAb2lB,GACG,uBAAK5lB,UAAU,2BAAf,UACI,2DACA,eAAC,KAAD,CAAQkmB,cAAetnB,EAAa4nB,kBAAkB,EAAOC,gBAAgB,EAAOZ,SAAUlmB,KAAKkmB,SAAU7W,SAAUrP,KAAKqP,SAA5H,SACI,gBAAC,KAAD,CAAMhP,UAAU,cAAhB,UACI,eAAC,KAAD,CAAO7C,KAAK,WAAWmQ,YAAY,kBAAkB5E,KAAK,WAAWS,WAAS,IAC9E,eAAC,KAAD,CAAcT,KAAK,WAAWqD,UAAU,MACxC,eAAC,KAAD,CAAO5O,KAAK,WAAWmQ,YAAY,kBAAkB5E,KAAK,aAC1D,eAAC,KAAD,CAAcA,KAAK,WAAWqD,UAAU,MACxC,eAAC,KAAD,CAAO5O,KAAK,WAAWmQ,YAAY,iBAAiB5E,KAAK,aACzD,eAAC,KAAD,CAAcA,KAAK,WAAWqD,UAAU,MACxC,yBAAQ5O,KAAK,SAAS6C,UAAU,8BAA8BF,MAAO,CAAC0L,MAAO,WAA7E,0BAIR,eAAC,IAAD,CAAMvL,GAAG,SAAT,iDAER,sBAAKD,UAAU,YAAf,SACI,sBAAKG,IAAKumB,GAAUrmB,IAAI,gBAE5B,sBAAKL,UAAU,WAAf,SACI,sBAAKG,IAAKwmB,GAAStmB,IAAI,sB,GAzGhBE,IAAMC,WAsHjC,IAAMC,GAAqB,CACvBhC,aACAE,WACAE,YACAmnB,c9E5FG,SAAuBvpB,GAC1B,8CAAO,WAAOiC,GAAP,eAAAnI,EAAA,+EAEoBgF,EAAYa,YAAYK,GAF5C,OAEOH,EAFP,OAGCoC,EAAS,CACLvB,KAAM,WACNb,SALL,gDAQCnJ,QAAQC,IAAI,eAAZ,MARD,yDAAP,wD8E8FSwzB,GAAcjmB,aAb3B,SAAyB1N,GACrB,MAAO,CACHqJ,KAAMrJ,EAAMsK,WAAWjB,QAWqBmE,GAAzBE,CAA6CglB,IC/GzDkB,GAtBA,CAAC,CACRtB,KAAM,kBACNxZ,UAAW2Z,IAEf,CACIH,KAAM,SACNxZ,UAAWzH,IAEf,CACIihB,KAAM,SACNxZ,UAAW6a,IAEf,CACIrB,KAAM,UACNxZ,UAAW6a,IAEf,CACIrB,KAAM,IACNxZ,UAAWrL,KCjBbomB,G,+MACF7zB,MAAQ,CACJiE,MAAO,GACP4I,MAAO,CACHhE,OAAQ,kHAEZirB,aAAc,G,EAGlBrd,UAAYnJ,IAAMwT,Y,EAYlB3J,YAAc,SAACjJ,GACP,EAAKuI,UAAUO,QAAQM,SAASpJ,EAAGsH,SAMvC,EAAKlJ,MAAM2I,W,EAGfM,aAAe,SAACrH,GACZ,IAAM+a,EAAQ/a,EAAGsH,OAAOC,KAClB5D,EAAQ3D,EAAGsH,OAAO3D,MACxB,EAAKzF,SAAL,2BAAmB,EAAKpM,OAAxB,mBAAgCipB,EAAQpX,M,EAG5CkiB,YAAc,SAAC7lB,EAAIhM,GACfgM,EAAGC,iBACH,IAAM6lB,EAAS9lB,EAAGsH,OAAOye,aAAa,OACtC,EAAK7nB,SAAL,2BAAmB,EAAKpM,OAAxB,IAA+B6M,MAAO,CAAEhE,OAAQmrB,GAAUF,aAAc5xB,M,EAG5EgyB,S,uCAAW,WAAOhmB,GAAP,eAAA5K,EAAA,yDACP4K,EAAGC,iBACE,EAAKnO,MAAMiE,MAFT,iEAGkB,EAAKqI,MAAM6nB,WAAW,EAAKn0B,OAH7C,OAGD6P,EAHC,OAIP,EAAKvD,MAAMG,QAAQ3K,KAAnB,iBAAkC+N,EAAWnO,MAC7C,EAAK4K,MAAM6D,gBAAe,GALnB,2C,8GAhCX,WACIxD,SAASxB,iBAAiB,YAAauB,KAAKyK,e,kCAIhD,WACIxK,SAASvB,oBAAoB,YAAasB,KAAKyK,aAC/CzK,KAAKJ,MAAM6D,gBAAe,K,oBAiC9B,WAAU,IAAD,OACCikB,EAAS,CAAC,kHACZ,+GACA,iHACA,+GACA,iHACA,iHACA,iHACA,iHACA,kHACJ,EAAgC1nB,KAAK1M,MAA7BiE,EAAR,EAAQA,MAAO6vB,EAAf,EAAeA,aACf,OACI,uBAAK/mB,UAAU,YAAYwK,IAAK7K,KAAK+J,UAArC,UACI,wBAAM1J,UAAU,iBAAiBgP,SAAUrP,KAAKwnB,SAAUrnB,MAAO,CAACkD,WAAY,UAAW/B,gBAAgB,OAAD,OAASomB,EAAON,GAAhB,MAAxG,UACI,wBAAO5d,WAAS,EAACnJ,UAAS,4BAAwB9I,EAAS,UAAY,IAAMivB,aAAa,MAAMhpB,KAAK,OAAOmQ,YAAY,kBAAkB5E,KAAK,QAAQ5D,MAAO5N,EAAO0R,SAAUjJ,KAAK6I,eACpL,yBAAQxI,UAAS,qBAAiB9I,EAAS,YAAc,IAAMiG,KAAK,SAApE,6BAEJ,sBAAK6C,UAAU,mBAAf,SACKqnB,EAAO5xB,KAAI,SAAC8mB,EAAOpnB,GAAR,OACR,yBAAQ6K,UAAS,kBAAc7K,IAAQ4xB,EAAgB,SAAW,IAAgB7mB,QAAS,SAACiB,GAAD,OAAQ,EAAK6lB,YAAY7lB,EAAIhM,IAAxH,SACI,sBAAK6K,UAAU,gBAAgBG,IAAKoc,EAAOlc,IAAKkc,KADyBpnB,e,GAtE7EoL,IAAMC,WAqF9B,IAAMC,GAAqB,CACvB2mB,WxERG,SAAoB5wB,GACvB,8CAAO,WAAMkI,GAAN,eAAAnI,EAAA,+EAE0B0L,GAAaC,KAAK1L,GAF5C,cAEO8wB,EAFP,OAGCn0B,QAAQC,IAAI,cAAek0B,GAC3B5oB,EAAS,CACLvB,KAAM,YACN3G,MAAO8wB,IAEX7tB,EAAcS,KAAK,UAAU,GAR9B,kBASQotB,GATR,kCAWCn0B,QAAQC,IAAI,mBAAZ,MAXD,0DAAP,uDwEQAgQ,mBAEEmkB,GAAsBrJ,aAAW4I,IAC1BU,GAAW7mB,aAVxB,SAAyB1N,GACrB,MAAO,CACHY,cAAeZ,EAAM+J,YAAYnJ,iBAQQ4M,GAAzBE,CAA6C4mB,ICzF/DE,G,+MACFC,aAAe,WACX,EAAKnoB,MAAMG,QAAQ3K,KAAK,UACxB,EAAKwK,MAAMR,Y,6CAGf,WAAU,IAAD,OAEL,OACI,uBAAKiB,UAAU,wBAAf,UAEI,uBAAKA,UAAU,YAAf,UACI,eAAC4M,GAAD,CAAcpS,KAAK,KAAKzD,OAAQ4I,KAAKJ,MAAMjD,OAC3C,iCACI,qBAAI0D,UAAU,qBAAd,SAAoCL,KAAKJ,MAAMjD,KAAKtF,WACpD,6BAAI2I,KAAKJ,MAAMjD,KAAKkD,iBAI5B,oBAAGQ,UAAU,gBAAgBE,QAAS,kBAAM,EAAKwnB,gBAAjD,4B,GAnBYnnB,IAAMC,WA+BlC,IAAMC,GAAqB,CACvB1B,aAEE4oB,GAA0BzJ,aAAWuJ,IAC9BG,GAAejnB,aAV5B,SAAyB1N,GACrB,MAAO,CACHqJ,KAAMrJ,EAAMsK,WAAWjB,QAQsBmE,GAAzBE,CAA6CgnB,ICvBnEE,G,+MACF50B,MAAQ,CACJ8nB,eAAe,G,EAGnB+M,YAAcvnB,IAAMwT,Y,EAEpBhV,SAAW,WACP,EAAKQ,MAAMR,Y,EAGfyC,YAAc,SAACsD,GACX,EAAKvF,MAAM6D,eAAe0B,I,EAG9BhE,WAAa,WACOlB,SAASuE,eAAe,WAChCC,KAAO,4B,6CAGnB,WAAU,IAAD,OACL,EAAgCzE,KAAKJ,MAA7BjD,EAAR,EAAQA,KAAMzI,EAAd,EAAcA,cACNknB,EAAkBpb,KAAK1M,MAAvB8nB,cACR,OAAKze,EAED,0BAAQ0D,UAAU,aAAlB,UACI,uBAAKA,UAAU,YAAf,UACI,uBAAKA,UAAU,aAAf,UACI,eAAC,IAAD,CAASC,GAAG,IAAZ,SAAgB,yBAAQC,QAAS,kBAAM,EAAKY,cAAcd,UAAU,sBAApD,SAA0E,eAAC,KAAD,QAC1F,eAAC,IAAD,CAASC,GAAG,SAAZ,SAAqB,0BAAQC,QAAS,kBAAM,EAAKY,cAAcd,UAAU,6BAApD,UAAiF,eAAC,KAAD,IAAjF,IAA8F,mDAEvH,gBAAC,IAAD,CAASA,UAAU,OAAOC,GAAG,IAA7B,UAAiC,eAAC,KAAD,IAAjC,IAA8C,oDAC9C,uBAAKD,UAAU,cAAf,UACI,yBAAQA,UAAU,aAAaE,QAAS,kBAAM,EAAKsB,aAAY,IAA/D,SAAsE,eAAC,KAAD,MACtE,yBAAQxB,UAAU,aAAlB,SAA+B,eAAC,KAAD,MAC/B,uBAAKA,UAAU,WAAWwK,IAAK7K,KAAKmoB,YAApC,UACI,yBAAQ5nB,QAAS,kBAAM,EAAKb,SAAS,CAAE0b,eAAgBA,KAAvD,SAAyE,eAACnO,GAAD,CAA6B7V,OAAQuF,GAAlBA,EAAK3H,OAChGomB,GAAiB,eAAC3R,GAAD,CAAgBlB,QAAS,kBAAM,EAAK7I,SAAS,CAAE0b,eAAe,KAAU7jB,MAAM,eAAesT,IAAK7K,KAAKmoB,YAAvG,SACd,eAACF,GAAD,CAAc7wB,OAAQuF,EAAMyC,SAAUY,KAAKZ,sBAK1DlL,GAAiB,eAAC2zB,GAAD,CAAUtf,QAAS,kBAAM,EAAK1G,aAAY,MAC3D3N,GAAiB,eAAC+P,GAAD,OArBR,eAACE,GAAD,Q,GAvBDvD,IAAMC,WAyD/B,IAAMC,GAAqB,CACvB9B,WACAE,YACAE,YACAN,aACAspB,WlF/DG,SAAoB9rB,GACvB,8CAAO,WAAMyC,GAAN,SAAAnI,EAAA,+EAEOgF,EAAYjG,OAAO2G,GAF1B,OAGCyC,EAAS,CAAEvB,KAAM,cAAelB,WAHjC,+CAKC9I,QAAQC,IAAI,iCAAZ,MALD,wDAAP,uDkF+DAgQ,mBAKS4kB,GAAYrnB,aAlBzB,SAAyB1N,GACrB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,UACzB2I,KAAMrJ,EAAMsK,WAAWjB,KACvBzI,cAAeZ,EAAM+J,YAAYnJ,iBAcS4M,GAAzBE,CAA6CknB,IChFhEI,G,qKAEF,WACI,IAAQ/K,EAAavd,KAAKJ,MAAMrN,SAAxBgrB,SACR,OAAQA,EAASzP,SAAS,UAAYyP,EAASzP,SAAS,Y,oBAG5D,WACI,OACI,uBAAKzN,UAAU,kBAAf,UACKL,KAAKuoB,eACF,eAACF,GAAD,IAEJ,uBAAMhoB,UAAU,WAAhB,SACI,eAAC,KAAD,UACK6mB,GAAOpxB,KAAI,SAAA0yB,GAAK,OAAI,eAAC,KAAD,CAAwBpc,UAAWoc,EAAMpc,UAAWwZ,KAAM4C,EAAM5C,MAApD4C,EAAM5C,oB,GAfxChlB,IAAMC,WA6B7B,IAAM4nB,GAAqBlK,aAAW+J,IACzBI,GAAU1nB,aAPvB,SAAyB1N,GACrB,MAAO,CACHuD,MAAOvD,EAAM+J,YAAYrJ,aAKVgN,CAAyBynB,I,OC1BhDE,IAASC,OACP,gBAAC,IAAMC,WAAP,WACE,gBAAC,IAAD,CAAU5qB,MAAOA,GAAjB,UACE,eAAC,IAAD,UACE,eAACyqB,GAAD,MACQ,OACA,OAEdzoB,SAASuE,eAAe,ShGAnB,SAAkB5R,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIi2B,IAAIC,GAAwBz2B,OAAOC,SAASkS,MACpDukB,SAAW12B,OAAOC,SAASy2B,OAIvC,OAGF12B,OAAOmM,iBAAiB,QAAQ,WAC9B,IAAM9L,EAAK,UAAMo2B,GAAN,sBAEP32B,IAgEV,SAAiCO,EAAOC,GAEtCid,MAAMld,EAAO,CACXs2B,QAAS,CAAE,iBAAkB,YAE5Bj2B,MAAK,SAACyG,GAEL,IAAMyvB,EAAczvB,EAASwvB,QAAQv0B,IAAI,gBAEnB,MAApB+E,EAASC,QACO,MAAfwvB,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5Ct2B,UAAUC,cAAcs2B,MAAMp2B,MAAK,SAACC,GAClCA,EAAao2B,aAAar2B,MAAK,WAC7BV,OAAOC,SAAS+2B,eAKpB52B,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFV81B,CAAwB52B,EAAOC,GAI/BC,UAAUC,cAAcs2B,MAAMp2B,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OgGzB/B42B,K","file":"static/js/main.6e221a1a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    boards: [],\r\n    currBoard: null,\r\n    lastRemovedBoard: null,\r\n    isAddingBoard: false,\r\n    currCardId: null,\r\n    filterBy: {\r\n        txt: '',\r\n        members: [],\r\n        labels: []\r\n    }\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    var newState = state\r\n    var boards\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            newState = { ...state, boards: action.boards }\r\n            break\r\n        case 'UPDATE_FILTER':\r\n            newState = {...state, filterBy: action.filterBy }\r\n            break\r\n        case 'SET_CURR_BOARD':\r\n            newState = { ...state, currBoard: action.board }\r\n            break\r\n        case 'REMOVE_BOARD':\r\n            const lastRemovedBoard = state.boards.find(board => board._id === action.boardId)\r\n            boards = state.boards.filter(board => board._id !== action.boardId)\r\n            newState = { ...state, boards, lastRemovedBoard }\r\n            break\r\n        case 'SET_ADDING_BOARD':\r\n            newState = { ...state, isAddingBoard: action.isAddingBoard }\r\n            break\r\n        case 'ADD_BOARD':\r\n            newState = { ...state, boards: [...state.boards, action.board] }\r\n            break\r\n        case 'UPDATE_BOARD':\r\n            // boards = state.boards.map(board => (board._id === action.board._id) ? action.board : board)\r\n            newState = { ...state, currBoard: action.board }\r\n            break\r\n        case 'SET_CARD_ID':\r\n            newState = { ...state, currCardId: action.cardId }\r\n            break\r\n        case 'UNDO_REMOVE_BOARD':\r\n            if (state.lastRemovedBoard) {\r\n                newState = { ...state, boards: [...state.boards, state.lastRemovedBoard], lastRemovedBoard: null }\r\n            }\r\n            break\r\n        default:\r\n    }\r\n    return newState\r\n\r\n}","export const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    postMany,\r\n    dashboardQuery\r\n}\r\n\r\n\r\nconst gBoards = require('../data/board.json');\r\nconst gUsers = require('../data/user.json');\r\n\r\nfunction query(entityType, delay = 500) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType))\r\n    if (!entities) {\r\n        entities = (entityType === 'board') ? gBoards : gUsers;\r\n        _save(entityType, entities)\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                // reject('OOOOPs')\r\n                resolve(entities)\r\n            }, delay)\r\n        })\r\n        // return Promise.resolve(entities)\r\n}\r\n\r\nasync function dashboardQuery(entityType, entityId, delay = 500) {\r\n    const boards = await query(entityType)\r\n    const board = boards.find(board => board._id === entityId)\r\n    const chartsData = {\r\n        groupsCount: 0,\r\n        cardsCount: 0,\r\n        tasksPerMemberMap: {},\r\n        tasksPerLabelMap: {}\r\n    };\r\n    if (board.members) {\r\n        board.members.forEach(member => {\r\n            chartsData.tasksPerMemberMap[member.fullname] = 0\r\n        })\r\n    }\r\n    if (board.labels) {\r\n        board.labels.forEach(label => {\r\n            chartsData.tasksPerLabelMap[label.title] = 0\r\n        })\r\n    }\r\n\r\n    if (board.groups) {\r\n        board.groups.forEach(group => {\r\n            if (!group.isArchive) {\r\n                chartsData.groupsCount = chartsData.groupsCount + 1\r\n                group.cards.forEach(card => {\r\n                    if (!card.isArchive) chartsData.cardsCount = chartsData.cardsCount + 1\r\n                    if (card.members) {\r\n                        card.members.forEach(member => {\r\n                            chartsData.tasksPerMemberMap[member.fullname]++;\r\n                        })\r\n                    }\r\n                    if (card.labelIds) {\r\n                        card.labelIds.forEach(labelId => {\r\n                            const label = _getLabel(board.labels, labelId);\r\n                            chartsData.tasksPerLabelMap[label.title]++\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(chartsData)\r\n        }, delay)\r\n    })\r\n}\r\n\r\n// function queryUsers(entityType, delay = 500) {\r\n//     var entities = JSON.parse(localStorage.getItem(entityType)) || gUsers;\r\n\r\n//     return new Promise((resolve, reject) => {\r\n//             setTimeout(() => {\r\n//                 // reject('OOOOPs')\r\n//                 resolve(entities)\r\n//             }, delay)\r\n//         })\r\n//         // return Promise.resolve(entities)\r\n// }\r\n\r\n\r\nfunction get(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => entities.find(entity => entity._id === entityId))\r\n}\r\n\r\nfunction post(entityType, newEntity) {\r\n    newEntity._id = _makeId()\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.push(newEntity)\r\n            _save(entityType, entities)\r\n            return newEntity\r\n        })\r\n}\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n            entities.splice(idx, 1, updatedEntity)\r\n            _save(entityType, entities)\r\n            return updatedEntity\r\n        })\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === entityId)\r\n            entities.splice(idx, 1)\r\n            _save(entityType, entities)\r\n        })\r\n}\r\n\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}\r\n\r\nfunction postMany(entityType, newEntities) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            newEntities = newEntities.map(entity => ({...entity, _id: _makeId() }))\r\n            entities.push(...newEntities)\r\n            _save(entityType, entities)\r\n            return entities\r\n        })\r\n}\r\n\r\nfunction _getLabel(labels, labelId) {\r\n    const label = labels.find((label) => label.id === labelId);\r\n    return label;\r\n};","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n// const BASE_URL = '/api/'\r\n// console.log(process.env.NODE_ENV);\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            sessionStorage.clear();\r\n            window.location.assign('/')\r\n        }\r\n        throw err\r\n    }\r\n}","import io from 'socket.io-client'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n// var socketIsReady = false;\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb=null) {\r\n      if (!socket) return;\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\n// function createDummySocketService() {\r\n//   var listenersMap = {}\r\n//   const socketService = {\r\n//     listenersMap,\r\n//     setup() {\r\n//       listenersMap = {}\r\n//     },\r\n//     terminate() {\r\n//       this.setup()\r\n//     },\r\n//     on(eventName, cb) {\r\n//       listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n//     },\r\n//     off(eventName, cb) {\r\n//       if (!listenersMap[eventName]) return\r\n//       if (!cb) delete listenersMap[eventName]\r\n//       else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n//     },\r\n//     emit(eventName, data) {\r\n//       if (!listenersMap[eventName]) return\r\n//       listenersMap[eventName].forEach(listener => {\r\n//         listener(data)\r\n//       })\r\n//     },\r\n//     debugMsg() {\r\n//       this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n//     },\r\n//   }\r\n//   window.listenersMap = listenersMap;\r\n//   return socketService\r\n// }\r\n\r\n\r\n// // Basic Tests\r\n// // function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\r\n// // socketService.on('baba', cb)\r\n// // socketService.on('baba', cb)\r\n// // socketService.on('baba', cb)\r\n// // socketService.on('mama', cb)\r\n// // socketService.emit('baba', 'Puk')\r\n// // socketService.off('baba', cb)\r\n\r\n\r\n// socketService.on(SOCKET_EVENT_REVIEW_ABOUT_YOU, review => {\r\n//   console.log('Review about me!', review);\r\n  \r\n// })\r\n\r\n","export const utilService = {\r\n    makeId,\r\n    makeLorem,\r\n    getRandomIntInclusive,\r\n    delay,\r\n    debounce\r\n    // handleChange\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction debounce(func, timeout = 300){\r\n    let timer;\r\n    return (...args) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => { func.apply(this, args); }, timeout);\r\n    };\r\n  }\r\n\r\nfunction makeLorem(size = 100) {\r\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn'];\r\n    var txt = '';\r\n    while (size > 0) {\r\n        size--;\r\n        txt += words[Math.floor(Math.random() * words.length)] + ' ';\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\n// function handleChange({ target: { name, value, type } }) {\r\n//     this.setState(prevState => ({ ...prevState, [name]: value }))\r\n// }\r\n\r\n","import { storageService } from './async-storage.service'\r\nimport { httpService } from './http.service'\r\nimport { socketService, SOCKET_EVENT_USER_UPDATED } from './socket.service'\r\nimport { utilService } from './util.service';\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\r\nvar gWatchedUser = null;\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedinUser,\r\n    getMiniUser,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getGueastUser,\r\n    googleLogin\r\n}\r\n\r\nwindow.userService = userService\r\n\r\n\r\nasync function getUsers() {\r\n    // const users = storageService.query('user')\r\n    // return users\r\n    const users = await httpService.get(`user`)\r\n    return users\r\n}\r\n\r\nasync function getById(userId) {\r\n    const user = await storageService.get('user', userId)\r\n        // const user = await httpService.get(`user/${userId}`)\r\n    gWatchedUser = user;\r\n    return user;\r\n}\r\n\r\nfunction remove(userId) {\r\n    return storageService.remove('user', userId)\r\n        // return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    await storageService.put('user', user)\r\n        // user = await httpService.put(`user/${user._id}`, user)\r\n        // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n    return user;\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // console.log('users: ', users)\r\n    // const user = users.find(user => user.username.toLocaleLowerCase() === userCred.username.toLocaleLowerCase())\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n        // socketService.emit('set-user-socket', user._id);\r\n    if (user) return _saveLocalUser(user)\r\n}\r\n\r\nasync function googleLogin(tokenId) {\r\n    try {\r\n        const user = await httpService.post('auth/googlelogin', { tokenId })\r\n        if (user) return _saveLocalUser(user)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    userCred.imgUrl = ''\r\n    userCred.mentions = []\r\n    userCred.boards = []\r\n        // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n        // socketService.emit('set-user-socket', user._id);\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\r\n        // socketService.emit('unset-user-socket');\r\n        // return await httpService.post('auth/logout')\r\n}\r\n\r\n\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    const loggedinUser = JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER) || 'null')\r\n    return loggedinUser\r\n}\r\n\r\nfunction getMiniUser() {\r\n    const fullUser = getLoggedinUser() || { _id: utilService.makeId(), fullname: 'Guest' }\r\n    return { _id: fullUser._id, fullname: fullUser.fullname, imgUrl: fullUser.imgUrl }\r\n}\r\n\r\nfunction getGueastUser() {\r\n    return { _id: utilService.makeId(), fullname: 'Guest' }\r\n}\r\n\r\n\r\n// (async () => {\r\n//     await login({ username: 'morty@smith.com' })\r\n// })();\r\n\r\n//     await userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 10000, isAdmin: true})\r\n//     await userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 10000})\r\n\r\n\r\n\r\n// This IIFE functions for Dev purposes \r\n// It allows testing of real time updates (such as sockets) by listening to storage events\r\n// (async () => {\r\n//     var user = getLoggedinUser()\r\n//     // Dev Helper: Listens to when localStorage changes in OTHER browser\r\n\r\n//     // Here we are listening to changes for the watched user (comming from other browsers)\r\n//     window.addEventListener('storage', async () => {\r\n//         if (!gWatchedUser) return;\r\n//         const freshUsers = await storageService.query('user')\r\n//         const watchedUser = freshUsers.find(u => u._id === gWatchedUser._id)\r\n//         if (!watchedUser) return;\r\n//         if (gWatchedUser.score !== watchedUser.score) {\r\n//             console.log('Watched user score changed - localStorage updated from another browser')\r\n//             socketService.emit(SOCKET_EVENT_USER_UPDATED, watchedUser)\r\n//         }\r\n//         gWatchedUser = watchedUser\r\n//     })\r\n// })();\r\n\r\n// This is relevant when backend is connected\r\n// (async () => {\r\n//     var user = getLoggedinUser()\r\n//     if (user) socketService.emit('set-user-socket', user._id)\r\n// })();","import { userService } from '../services/user.service.js'\r\n\r\n\r\nconst initialState = {\r\n    user: userService.getLoggedinUser() || userService.getGueastUser(),\r\n    users: [],\r\n    watchedUser: null\r\n}\r\nexport function userReducer(state = initialState, action) {\r\n    var newState = state;\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            newState = {...state, user: action.user }\r\n            break;\r\n        case 'SET_WATCHED_USER':\r\n            newState = {...state, watchedUser: action.user }\r\n            break;\r\n        case 'REMOVE_USER':\r\n            newState = {\r\n                ...state,\r\n                users: state.users.filter(user => user._id !== action.userId)\r\n            }\r\n            break;\r\n        case 'SET_USERS':\r\n            newState = {...state, users: action.users }\r\n            break;\r\n        default:\r\n    }\r\n    // For debug:\r\n    // window.userState = newState;\r\n    // console.log('State:', newState);\r\n    return newState;\r\n\r\n}","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","// const { createStore, applyMiddleware, combineReducers, compose } = Redux\r\n// const thunk = ReduxThunk.default\r\n\r\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nimport { boardReducer } from './board.reducer.js'\r\nimport { userReducer } from './user.reducer.js'\r\nimport { systemReducer } from './system.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    boardModule: boardReducer,\r\n    userModule: userReducer,\r\n    systemModule: systemReducer,\r\n})\r\n\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n// window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__();\r\n// Lets wire up thunk and also redux-dev-tools:\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n    // export const store = createStore(rootReducer, applyMiddleware(thunk))","function on(eventName, listener) {\r\n\r\n    const callListener = ({ detail }) => {\r\n        listener(detail);\r\n    };\r\n\r\n    window.addEventListener(eventName, callListener);\r\n\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener);\r\n    };\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\nexport const eventBusService = { on, emit };\r\n\r\nexport function showUserMsg(txt, type = '') {\r\n    eventBusService.emit('show-user-msg', { txt, type })\r\n}\r\nexport function showSuccessMsg(txt) {\r\n    showUserMsg(txt, 'success')\r\n}\r\nexport function showErrorMsg(txt) {\r\n    showUserMsg(txt, 'danger')\r\n}\r\n\r\nwindow.myBus = eventBusService;\r\nwindow.showUserMsg = showUserMsg;\r\n\r\n// eventBusService.on('baba', (x)=>console.log('Hi Baba', x))\r\n// eventBusService.on('baba', (x)=>console.log('Hello Baba Ji', x))\r\n// eventBusService.emit('baba', [5, 8, 11])\r\n// setTimeout(()=>{\r\n//     eventBusService.emit('baba', 17)\r\n// }, 2000)\r\n\r\n/* Listening Component...\r\n    import {eventBusService} from 'path...event-bus-service'\r\n    eventBusService.on('some-event', (dataFromEvent) => {\r\n    do something with dataFromEvent\r\n    })\r\n\r\n   Receiving Component...\r\n    eventBusService.emit('some-event', data)\r\n*/","import { userService } from \"../services/user.service.js\";\r\nimport { showErrorMsg } from '../services/event-bus.service.js'\r\nimport { socketService, SOCKET_EMIT_USER_WATCH, SOCKET_EVENT_USER_UPDATED } from \"../services/socket.service.js\";\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            // dispatch({ type: 'LOADING_START' })\r\n            const users = await userService.getUsers()\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('UserActions: err in loadUsers', err)\r\n        } \r\n        // finally {\r\n        //     dispatch({ type: 'LOADING_DONE' })\r\n        // }\r\n    }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.remove(userId)\r\n            dispatch({ type: 'REMOVE_USER', userId })\r\n        } catch (err) {\r\n            console.log('UserActions: err in removeUser', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onLogin(credentials) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.login(credentials)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user\r\n            })\r\n        } catch (err) {\r\n            console.log('Cannot login', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onGoogleLogin(tokenId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.googleLogin(tokenId)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user\r\n            })\r\n        } catch (err) {\r\n            console.log('Cannot login', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onSignup(credentials) {\r\n    return (dispatch) => {\r\n        userService.signup(credentials)\r\n            .then(user => {\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('Cannot signup', err)\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport function onLogout() {\r\n    return (dispatch) => {\r\n        userService.logout()\r\n            .then(() => dispatch({\r\n                type: 'SET_USER',\r\n                user: null\r\n            }))\r\n            .catch(err => {\r\n                console.log('Cannot logout', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function loadAndWatchUser(userId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.getById(userId);\r\n            dispatch({ type: 'SET_WATCHED_USER', user })\r\n            socketService.emit(SOCKET_EMIT_USER_WATCH, userId)\r\n            socketService.off(SOCKET_EVENT_USER_UPDATED)\r\n            socketService.on(SOCKET_EVENT_USER_UPDATED, user => {\r\n                console.log('USER UPADTED FROM SOCKET');\r\n                dispatch({ type: 'SET_WATCHED_USER', user })\r\n            })\r\n        } catch (err) {\r\n            showErrorMsg('Cannot load user')\r\n            console.log('Cannot load user', err)\r\n        }\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/hero.e8878a54.png\";","export default __webpack_public_path__ + \"static/media/homepage-product.162d5e7b.jpg\";","import React from 'react'\r\nimport { SiTrello } from 'react-icons/si'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { onLogin } from '../store/user.actions'\r\nimport heroImg from '../assets/img/hero.png'\r\nimport productImg from '../assets/img/homepage-product.jpg'\r\n\r\n\r\n\r\nclass _HomePage extends React.Component {\r\n\r\n    state = {\r\n        isNavbarBG: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.changeHeaderStyle)\r\n        document.body.style.overflowY = 'scroll'\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.changeHeaderStyle)\r\n        document.body.style.overflowY = 'hidden'\r\n    }\r\n\r\n    changeHeaderStyle = () => {\r\n        const { isNavbarBG } = this.state\r\n        if (window.scrollY > 50 && !isNavbarBG) {\r\n            this.setState({ isNavbarBG: true })\r\n        } else if (window.scrollY < 50 && isNavbarBG) {\r\n            this.setState({ isNavbarBG: false })\r\n        }\r\n    }\r\n\r\n    onGuestLogin = () => {\r\n        this.props.onLogin({username: 'rick@sanchez.com', password: 'rick123'})\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    render() {\r\n        const { isNavbarBG } = this.state\r\n        return (\r\n            <section className=\"home-page main-container\">\r\n                <header className={`home-header ${(isNavbarBG) ? 'bg-visible' : ''}`}>\r\n                    <span className=\"logo\"> <SiTrello /> Marshmello</span>\r\n                    <div className=\"header-buttons\">\r\n                        <Link to=\"/login\"><button className=\"login-btn nav-button\">Log in</button></Link>\r\n                        <Link to=\"/signup\"><button className=\"signup-btn nav-button\">Sign up</button></Link>\r\n                    </div>\r\n                </header>\r\n                <div className=\"home-first-fold\">\r\n                    <div className=\"first-fold-text\">\r\n                        <h1>Marshmello helps teams move work forward.</h1>\r\n                        <p>Collaborate, manage projects, and reach new productivity peaks.\r\n                            From high rises to the home office, the way your team works is unique—accomplish it all with Marshmello.</p>\r\n                        <button className=\"cta-btn nav-button\" onClick={() => this.onGuestLogin()}>Get Started!</button>\r\n                    </div>\r\n                    <div className=\"first-fold-img\">\r\n                        <img src={heroImg} alt=\"hero\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-second-fold\">\r\n                    <div className=\"second-fold-text\">\r\n                        <h1>It’s more than work. It’s a way of working together.</h1>\r\n                        <p>Start with a Marshmello board, lists, and cards. Customize and expand with more features as your teamwork grows. Manage projects, organize tasks, and build team spirit—all in one place.</p>\r\n                    </div>\r\n                    <div className=\"second-fold-img\">\r\n                        <img src={productImg} alt=\"hero\" />\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onLogin\r\n}\r\n\r\nexport const HomePage = connect(mapStateToProps, mapDispatchToProps)(_HomePage)","import React from 'react';\r\nimport { AiOutlineStar } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport function BoardPreview({ board, toggleStarredBoard, setFavicon }) {\r\n\r\n    function toggleIsStarred(ev) {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        toggleStarredBoard(board)\r\n    }\r\n\r\n    return (\r\n        <Link to={`/board/${board._id}`}><div onClick={() => setFavicon(board.style)} className=\"board-preview\" style={(board.style.bgColor) ? { backgroundColor: `${board.style.bgColor}` } : { backgroundImage: `url(${board.style.imgUrl})` }}>\r\n            <div className=\"preview-screen\">\r\n                <div className=\"preview-content\">\r\n                    <h4 className=\"board-title\">{board.title}</h4>\r\n                    <button className={`star-btn ${(board.isStarred) ? 'starred' : ''}`} onClick={(ev) => toggleIsStarred(ev)}><AiOutlineStar /></button>\r\n                </div>\r\n            </div>\r\n        </div></Link>\r\n    )\r\n}","import React from 'react';\r\nimport { BoardPreview } from './board-preview';\r\n\r\nexport function BoardList({ boards, toggleStarredBoard, setFavicon, setAddBoard, isWorkspace }) {\r\n    return (\r\n        <div className=\"board-list flex\">\r\n            {boards.map(board =>\r\n                <BoardPreview key={board._id} board={board} toggleStarredBoard={toggleStarredBoard} setFavicon={setFavicon} />)}\r\n\r\n            {isWorkspace && <div className=\"board-preview create-board-btn\" onClick={() => setAddBoard()}>\r\n                <h4>Create New Board</h4>\r\n            </div>}\r\n        </div>\r\n    );\r\n}","import { userService } from \"./user.service\"\r\n\r\nexport const activityTxtMap = {\r\n    addGroup: (listName) => {\r\n        return `Added list: ${listName}`\r\n    },\r\n    addCard: () => {\r\n        return `Added card:`\r\n    },\r\n    socketUpdate: ()=>{\r\n        return 'UPDATE_BY_SOCKET'\r\n    },\r\n    renameBoard: (boardName) => {\r\n        return `Renamed this board to: ${boardName}`\r\n    },\r\n    inviteMember: (memberName) => {\r\n        return `Invited ${memberName} to this board`\r\n    },\r\n    removeMember: (memberName) => {\r\n        return `Removed ${memberName} from this board`\r\n    },\r\n    changeBackground: () => {\r\n        return `Changed the background of this board`\r\n    },\r\n    editCard: () => {\r\n        return `Edited card title: `\r\n    },\r\n    archiveList: (listName) => {\r\n        return `Archived the list: ${listName}`\r\n    },\r\n    completeCard: () => {\r\n        return `Marked the following card as complete: `\r\n    },\r\n    unCompleteCard: () => {\r\n        return `Marked the following card as incomplete: `\r\n    },\r\n    changeDescription: () => {\r\n        return `Changed the description in card: `\r\n    },\r\n    changeGroupTitle: (groupName) => {\r\n        return `Changed the title in list: ${groupName}`\r\n    },\r\n    addMemberToCard: (memberName) => {\r\n        return `Added ${memberName} to a card`\r\n    },\r\n    removeMemberFromCard: (memberName) => {\r\n        return `Removed ${memberName} from a card`\r\n    },\r\n    addLabel: (labelName) => {\r\n        return `Added the label ${labelName} to a card`\r\n    },\r\n    removeLabel: (labelName) => {\r\n        return `Removed the label ${labelName} from a card`\r\n    },\r\n    addChecklist: (checklistName) => {\r\n        return `Added checklist ${checklistName} to a card`\r\n    }\r\n}\r\n\r\n","import { storageService } from './async-storage.service.js'\r\nimport { utilService } from './util.service.js'\r\nimport { userService } from './user.service.js'\r\nimport { httpService } from './http.service'\r\n\r\nconst STORAGE_KEY = 'board'\r\n    // const listeners = []\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    dashboardQuery,\r\n    getArchivedCards\r\n}\r\nwindow.cs = boardService;\r\n\r\n\r\nasync function query(filterByUser) {\r\n    // return storageService.query(STORAGE_KEY)\r\n    try {\r\n        const boards = await httpService.get('board', filterByUser)\r\n        return boards\r\n    } catch (err) {\r\n        console.log('Front: Error loading boards', err)\r\n    }\r\n}\r\n\r\nasync function getById(boardId, filterBy) {\r\n    // return storageService.get(STORAGE_KEY, boardId)\r\n    try {\r\n        if (typeof filterBy === 'object') {\r\n            filterBy = (new URLSearchParams(filterBy)).toString()\r\n        }\r\n        const board = await httpService.get(`board/${boardId}`, filterBy)\r\n        return board\r\n    } catch (err) {\r\n        console.log(`Front: Error loading board with ID: ${boardId}`, err)\r\n    }\r\n}\r\n\r\nasync function dashboardQuery(boardId) {\r\n    // const chartsData = await storageService.dashboardQuery(STORAGE_KEY, boardId)\r\n    // return chartsData\r\n    try {\r\n        const chartsData = await httpService.get(`board/dashboard/${boardId}`)\r\n        return chartsData\r\n    } catch (err) {\r\n        console.log('Front: Error loading chartsData', err)\r\n    }\r\n}\r\n\r\nasync function getArchivedCards(boardId) {\r\n    try {\r\n        const archivedCards = await httpService.get(`board/${boardId}/closed`)\r\n        console.log('archivedChards:', archivedCards)\r\n        return archivedCards\r\n    } catch (err) {\r\n        console.log('Front: Error loading archivedCards', err)\r\n    }\r\n}\r\n\r\n\r\nasync function remove(boardId) {\r\n    // return storageService.remove(STORAGE_KEY, boardId)\r\n        try {\r\n            return httpService.delete(`board/${boardId}`)\r\n        } catch (err) {\r\n            console.log(`Front: Error deleting board with ID: ${boardId}`);\r\n        }\r\n}\r\n\r\nasync function save(board, activity = null) {\r\n    if (board._id) {\r\n        if (activity) {\r\n            const newActivity = {\r\n                    txt: activity.txt,\r\n                    id: utilService.makeId(),\r\n                    byMember: userService.getMiniUser(),\r\n                    card: (activity.card) ? { id: activity.card.id, title: activity.card.title } : {},\r\n                    groupId: (activity.groupId) ? activity.groupId : null\r\n                }\r\n                // console.log('Activity from service: ', newActivity)\r\n                // board.activities.unshift(newActivity)\r\n                // console.log('Board activities from service: ', board.activities)\r\n            return httpService.put(`board/${board._id}`, { board: board, activity: newActivity })\r\n        } else {\r\n            // return storageService.put(STORAGE_KEY, board)\r\n            return httpService.put(`board/${board._id}`, { board: board, activity: null })\r\n        }\r\n    } else {\r\n        const boardToSave = {\r\n                title: board.title,\r\n                style: board.style,\r\n                createdBy: userService.getMiniUser(),\r\n                members: [userService.getMiniUser()],\r\n            }\r\n            // return storageService.post(STORAGE_KEY, boardToSave)\r\n        const addedBoard = await httpService.post(`board`, boardToSave)\r\n        return addedBoard\r\n    }\r\n}\r\n\r\n\r\n// function subscribe(listener) {\r\n//     listeners.push(listener)\r\n// }\r\n\r\n// function _notifySubscribersBoardsChanged(boards) {\r\n//     console.log('Notifying Listeners');\r\n//     listeners.forEach(listener => listener(boards))\r\n// }\r\n\r\n// window.addEventListener('storage', () => {\r\n//     console.log('Storage Changed from another Browser!');\r\n//     query()\r\n//         .then(boards => {\r\n//             _notifySubscribersCarsChanged(boards)\r\n//         }) \r\n// })","import { activityTxtMap } from \"../services/activity.service.js\";\r\nimport { boardService } from \"../services/board.service.js\";\r\nimport { socketService } from \"../services/socket.service.js\";\r\n// import { userService } from \"../services/user.service.js\";\r\n// import { showSuccessMsg, showErrorMsg } from '../services/event-bus.service.js';\r\n\r\n//BOARD\r\nexport function loadBoards(filterBy) {\r\n    return async(dispatch) => {\r\n        try {\r\n            const boards = await boardService.query(filterBy)\r\n            dispatch({\r\n                type: 'SET_BOARDS',\r\n                boards\r\n            })\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot load boards')\r\n            console.log('Cannot load boards', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadBoard(boardId, filterBy) {\r\n    return async(dispatch) => {\r\n        try {\r\n            const board = await boardService.getById(boardId, filterBy)\r\n            document.body.style.background = board.style.bgColor ? board.style.bgColor : `url(\"${board.style.imgUrl}\")`\r\n            document.body.style.backgroundSize = 'cover'\r\n\r\n\r\n            dispatch({\r\n                type: 'SET_CURR_BOARD',\r\n                board\r\n            })\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot load boards')\r\n            console.log('Cannot load board', err)\r\n        }\r\n    }\r\n}\r\nexport function resetBoard() {\r\n    document.body.style.background = 'unset'\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_CURR_BOARD',\r\n            board: null\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport function onRemoveBoard(boardId) {\r\n    return async(dispatch) => {\r\n        try {\r\n            await boardService.remove(boardId)\r\n            console.log('Deleted Succesfully!');\r\n            dispatch({\r\n                type: 'REMOVE_BOARD',\r\n                boardId\r\n            })\r\n        } catch (err) {\r\n            console.log('Cannot remove board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onUpdateBoard(action, board, activity = null) {\r\n    return async(dispatch) => {\r\n        const boardToSave = _getUpdatedBoard(action, board)\r\n        console.log(boardToSave)\r\n        dispatch({\r\n            type: 'UPDATE_BOARD',\r\n            board: boardToSave\r\n        })\r\n\r\n        try {\r\n            if (!action.type) action.board = board\r\n            socketService.emit('board-update', { action, activity })\r\n            await boardService.save(boardToSave, activity)\r\n        } catch (err) {\r\n            console.log('Cannot save board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onAddBoard(board) {\r\n    return async(dispatch) => {\r\n        try {\r\n            const savedBoard = await boardService.save(board)\r\n            console.log('Added Board', savedBoard);\r\n            dispatch({\r\n                type: 'ADD_BOARD',\r\n                board: savedBoard\r\n            })\r\n            socketService.emit('update', true)\r\n            return savedBoard\r\n        } catch (err) {\r\n            console.log('Cannot add board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setAddingBoard(isAddingBoard) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_ADDING_BOARD',\r\n            isAddingBoard: isAddingBoard\r\n        })\r\n    }\r\n}\r\n\r\n//CARD\r\nexport function onAddCard(newCard, groupId, board, activity) {\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    newCard = {...newCard, createdAt: Date.now(), isComplete: false };\r\n\r\n    group.cards = (group.cards) ? [...group.cards, newCard] : [newCard]\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, board, activity)\r\n}\r\n\r\nexport function onRemoveCard(card, board) {\r\n    const boardToSave = {...board }\r\n    boardToSave.archivedCards = boardToSave.archivedCards.filter(archivedCard => archivedCard.id !== card.id)\r\n    return onUpdateBoard({}, boardToSave)\r\n}\r\n\r\nexport function onArchiveCard(archivedCard, groupId, board, activity = null) {\r\n    const group = {...board.groups.find(group => group.id === groupId) }\r\n    const cardIdx = group.cards.findIndex(card => card.id === archivedCard.id)\r\n    const boardToSave = {...board }\r\n    archivedCard.groupId = groupId;\r\n    archivedCard.prevIndex = cardIdx;\r\n    // console.log('archivedCard in actions', archivedCard)\r\n    group.cards.splice(cardIdx, 1)\r\n        // delete boardToSave.archivedCards\r\n    boardToSave.archivedCards = boardToSave.archivedCards ? boardToSave.archivedCards : []\r\n    boardToSave.archivedCards.unshift(archivedCard)\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, boardToSave, activity)\r\n}\r\n\r\nexport function onUnArchiveCard(cardToSave, board, activity = null) {\r\n    const group = {...board.groups.find(group => group.id === cardToSave.groupId) }\r\n    if (group) {\r\n        const cardIdx = cardToSave.prevIndex\r\n        delete cardToSave.groupId\r\n        delete cardToSave.prevIndex\r\n        delete cardToSave.isArchive\r\n        group.cards.splice(cardIdx, 0, cardToSave)\r\n    }\r\n    const boardToSave = {...board }\r\n    boardToSave.archivedCards = boardToSave.archivedCards.filter(archivedCard => archivedCard.id !== cardToSave.id)\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, boardToSave, activity)\r\n}\r\n\r\n// export function onArchiveCard(cardToSave, groupId, board, activity = null) {\r\n//     return async(dispatch) => {\r\n//         const deepCopy = (item) => item\r\n//         const group = deepCopy(board.groups.find(group => group.id === groupId))\r\n//         const cardIdx = group.cards.findIndex(card => card.id === cardToSave.id)\r\n//         const groupToStore = deepCopy({...group, cards: [...group.cards.filter(card => cardToSave.id !== card.id)] })\r\n//         cardToSave.groupId = groupId;\r\n//         cardToSave.prevIndex = cardIdx;\r\n//         group.cards.splice(cardIdx, 1, cardToSave)\r\n//         const boardToSave = {...board }\r\n//         const boardToStore = {...board }\r\n//         boardToSave.groups = boardToSave.groups.map(currGroup => currGroup.id === group.id ? group : currGroup)\r\n//         boardToStore.groups = boardToStore.groups.map(currGroup => currGroup.id === groupToStore.id ? groupToStore : currGroup)\r\n//         try {\r\n//             await boardService.save(boardToSave, activity)\r\n//             dispatch({\r\n//                 type: 'UPDATE_BOARD',\r\n//                 board: boardToStore\r\n//             })\r\n//         } catch (err) {\r\n//             console.log('Cannot save board', err)\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nexport function loadArchivedCards(boardId) {\r\n    return async(dispatch) => {\r\n        try {\r\n            const archivedCards = await boardService.getArchivedCards(boardId)\r\n            console.log('in actions', archivedCards)\r\n            return archivedCards;\r\n        } catch (err) {\r\n            console.log('Cannot load archived cards', err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function onUpdateCard(cardToSave, groupId, board, activity = null) {\r\n    // console.log('cardToSave', cardToSave);\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    const cardIdx = group.cards.findIndex(card => card.id === cardToSave.id)\r\n        // console.log('cardIdx: ', -1)\r\n    group.cards.splice(cardIdx, 1, cardToSave)\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, board, activity)\r\n}\r\n\r\nexport function onSetCardId(cardId) {\r\n    return async(dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: 'SET_CARD_ID',\r\n                cardId\r\n            })\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot load boards')\r\n            console.log('Cannot set card', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onUpdateFilter(filterBy) {\r\n    return (dispatch) => {\r\n        const action = { type: 'UPDATE_FILTER', filterBy }\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport function outputUpdateBoard(action, board, activity) {\r\n    return async(dispatch) => {\r\n        const boardToSave = _getUpdatedBoard(action, board)\r\n        dispatch({\r\n            type: 'UPDATE_BOARD',\r\n            board: boardToSave\r\n        })\r\n\r\n    }\r\n}\r\n\r\n/* \r\nserver side filtering\r\nconst board =getBoardById()\r\nconst archived = []\r\nboard.lists.forEach((list)=>{\r\n    list.tasks.forEach(task => {\r\n        if (task.isClosed) {\r\n            task.listId = list.id\r\n            task.prevIdx\r\n        } \r\n    })\r\n})\r\n*/\r\n\r\n\r\nfunction _getUpdatedBoard(action, board) {\r\n    const boardToSave = {...board }\r\n    switch (action.type) {\r\n        case 'TOGGLE_STARRED':\r\n            boardToSave.isStarred = action.isStarred\r\n            break;\r\n        case 'CHANGE_BOARD_STYLE':\r\n            boardToSave.style = action.style\r\n            document.body.style.background = boardToSave.style.bgColor ? boardToSave.style.bgColor : `no-repeat url(\"${boardToSave.style.imgUrl}\")`\r\n            document.body.style.backgroundSize = 'cover'\r\n            break;\r\n        case 'CHANGE_TITLE':\r\n            boardToSave.title = action.title\r\n            break;\r\n        case 'ADD_BOARD_MEMBER':\r\n            console.log('members from action: ', boardToSave.members)\r\n            boardToSave.members = [...boardToSave.members, action.member]\r\n            break;\r\n        case 'REMOVE_BOARD_MEMBER':\r\n            console.log('members from action: ', boardToSave.members)\r\n            boardToSave.members = [...boardToSave.members.filter(member => member._id !== action.memberId)]\r\n            break;\r\n        case 'ADD_GROUP':\r\n            boardToSave.groups = [...boardToSave.groups, action.group]\r\n            break;\r\n        case 'UPDATE_GROUP':\r\n            boardToSave.groups = [...boardToSave.groups.map(currGroup => currGroup.id === action.group.id ? action.group : currGroup)]\r\n            break\r\n        case 'REMOVE_GROUP':\r\n            boardToSave.groups = [...boardToSave.groups.filter(currGroup => currGroup.id !== action.group.id)]\r\n            break\r\n    }\r\n    return boardToSave;\r\n}","export function OverlayScreen() {\r\n    return (\r\n        <div className=\"overlay-screen\"></div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loader.1a7da032.svg\";","import loader from '../../assets/img/loader.svg'\r\nexport function Loader() {\r\n    return (\r\n        <div className=\"loader\">\r\n            <img src={loader} alt=\"loading...\" />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardList } from '../cmps/board-list'\r\nimport { AiFillStar } from 'react-icons/ai'\r\nimport { SiTrello } from 'react-icons/si'\r\n\r\nimport { loadBoards, setAddingBoard, onUpdateBoard } from '../store/board.actions'\r\nimport { OverlayScreen } from '../cmps/overlay-screen'\r\nimport { Loader } from '../cmps/shared/loader'\r\nimport { socketService } from '../services/socket.service'\r\nimport { userService } from '../services/user.service'\r\n\r\n\r\nclass _BoardSelect extends React.Component {\r\n    state = {\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const user = userService.getMiniUser()\r\n        console.log(user)\r\n        await this.props.loadBoards(user)\r\n    }\r\n\r\n    getStarredBoards = () => {\r\n        return this.props.boards.filter(board => board.isStarred)\r\n    }\r\n\r\n    toggleStarredBoard = (board) => {\r\n        const { onUpdateBoard } = this.props\r\n        board.isStarred = !board.isStarred\r\n        onUpdateBoard({ type: 'TOGGLE_STARRED', isStarred: board.isStarred }, board)\r\n        socketService.emit('update', true)\r\n    }\r\n    setFavicon = (style) => {\r\n        const favicon = document.getElementById('favicon')\r\n        if (style.imgUrl) {\r\n            favicon.href = style.imgUrl\r\n        } else {\r\n            favicon.href = \"../../public/favicon.ico\"\r\n        }\r\n    }\r\n\r\n    setAddBoard = () => {\r\n        this.props.setAddingBoard(true)\r\n    }\r\n\r\n    render() {\r\n        const { boards, isAddingBoard } = this.props\r\n        if (!boards) return <Loader />\r\n        return (\r\n            <div className=\"board-select-wrapper\">\r\n            <div className=\"boards-select main-container\">\r\n                <h2> <AiFillStar /> Starred Boards</h2>\r\n                <div className=\"starred-boards\">\r\n                    <BoardList setFavicon={this.setFavicon} boards={this.getStarredBoards()} toggleStarredBoard={this.toggleStarredBoard} />\r\n                </div>\r\n                <h2> <SiTrello /> Workspace</h2>\r\n                <div className=\"workspace\">\r\n                    <BoardList boards={boards} toggleStarredBoard={this.toggleStarredBoard} setFavicon={this.setFavicon} setAddBoard={this.setAddBoard} isWorkspace={true} />\r\n                    {/* <div className=\"board-preview create-board-btn\" onClick={() => this.setAddBoard()}>\r\n                        <h4>Create New Board</h4>\r\n                    </div> */}\r\n                </div>\r\n                {isAddingBoard && <OverlayScreen />}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardModule.boards,\r\n        isAddingBoard: state.boardModule.isAddingBoard,\r\n        board: state.boardModule.currBoard,\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    setAddingBoard,\r\n    onUpdateBoard\r\n}\r\n\r\nexport const BoardSelect = connect(mapStateToProps, mapDispatchToProps)(_BoardSelect)\r\n","import { store } from '../store/store'\r\nimport { utilService } from './util.service'\r\n\r\nconst handleChecklistChange = (type, checklistId, value, newVal) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    if (checklistId) {\r\n        const checklist = card.checklists.find(checklist => checklist.id === checklistId)\r\n        if (type === 'addTodo') {\r\n            checklist.todos.push(value)\r\n\r\n        } else if (type === 'markTodo') {\r\n            const todo = checklist.todos.find(todo => todo.id === value)\r\n            todo.isDone = !todo.isDone\r\n\r\n        } else if (type === 'removeTodo') {\r\n            const idx = checklist.todos.findIndex(todo => todo.id === value)\r\n            checklist.todos.splice(idx, 1)\r\n\r\n        } else if (type === 'changeTitle') {\r\n            const todo = checklist.todos.find(todo => todo.id === value)\r\n            todo.title = newVal\r\n\r\n        } else if (type === 'removeChecklist') {\r\n            const idx = card.checklists.findIndex(checklist => checklist.id === checklistId)\r\n            card.checklists.splice(idx, 1)\r\n\r\n        }\r\n    } else {\r\n        if (type === 'addChecklist') {\r\n            if (!card.checklists) card.checklists = []\r\n            card.checklists.push({ id: utilService.makeId(), title: value, todos: [] })\r\n        }\r\n    }\r\n\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleMemberChange = (memberId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    let card = getCardById(cardId, groupId)\r\n\r\n    if (!card.members) card.members = []\r\n    const isMemberExist = card?.members?.some(member => member._id === memberId)\r\n    if (isMemberExist) card = { ...card, members: card?.members.filter(member => member._id !== memberId) }\r\n    else {\r\n        const memberToAdd = board.members.find(member => member._id === memberId)\r\n        card.members.push(memberToAdd)\r\n    }\r\n\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleLabelChange = (labelId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    let card = getCardById(cardId, groupId)\r\n    if (!card.labelIds) card.labelIds = []\r\n    const isLabelExist = card?.labelIds.some(id => id === labelId)\r\n    if (isLabelExist) card = { ...card, labelIds: card?.labelIds.filter(id => id !== labelId) }\r\n    else {\r\n        const labelToAdd = board.labels.find(label => label.id === labelId)\r\n        card.labelIds.push(labelToAdd.id)\r\n    }\r\n\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleDueDateChange = (timestamp) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    let card = getCardById(cardId, groupId)\r\n    card.dueDate = timestamp\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst getCardById = (cardId, groupId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    return group.cards.find(card => card.id === cardId)\r\n}\r\n\r\nconst getGroupById = (cardId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    return board.groups.find(group => group.cards.find(card => card.id === cardId))\r\n}\r\n\r\nconst getGroupId = (cardId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    return board.groups.find(group => group.cards.some(card => card.id === cardId))?.id\r\n}\r\n\r\nconst getFormattedTime = (timestamp) => {\r\n    if (!timestamp) return ''\r\n    const timeLeft = timestamp - Date.now()\r\n    if (timeLeft < 0) {\r\n        const date = new Date(timestamp)\r\n        const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n        const idx = date.getMonth()\r\n        const month = monthNames[idx]\r\n        const day = date.getDate()\r\n        return `${month} ${day} at 12:00 AM`\r\n    }\r\n    if (timeLeft <= (1000 * 60 * 60 * 24)) return 'tomorrow at 12:00 AM'\r\n    const date = new Date(timestamp)\r\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    const idx = date.getMonth()\r\n    const month = monthNames[idx]\r\n    const day = date.getDate()\r\n    return `${month} ${day} at 12:00 AM`\r\n}\r\n\r\nconst getUploadTime = (timestamp) => {\r\n    const timePassed = Date.now() - timestamp\r\n    if (timePassed < (1000 * 60)) return 'Added a few seconds ago'\r\n    else if (timePassed < (1000 * 60 * 2)) return 'Added 1 minute ago'\r\n    else if (timePassed < 1000 * 60 * 60) {\r\n        const minutes = Math.floor(timePassed / 1000 / 60)\r\n        return `Added ${minutes} minutes ago`\r\n    }\r\n    else if (timePassed < 1000 * 60 * 60 * 13) {\r\n        const hours = Math.floor(timePassed / 1000 / 60 / 60)\r\n        return `Added ${hours} hours ago`\r\n    } else {\r\n        const date = new Date(timestamp)\r\n        const minutes = (date.getMinutes() < 10) ? `0${date.getMinutes()}` : date.getMinutes()\r\n        if (timePassed < 1000 * 60 * 60 * 24) {\r\n            return `Added today at ${date.getHours()}:${minutes} `\r\n        } else if (timePassed < 1000 * 60 * 60 * 48) {\r\n            return `Added yesterday at ${date.getHours()}:${minutes}`\r\n        } else {\r\n            const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n            const idx = date.getMonth()\r\n            const month = monthNames[idx]\r\n            const day = date.getDate()\r\n            return `Added ${month} ${day} at ${date.getHours()}:${minutes}`\r\n        }\r\n    }\r\n}\r\n\r\nconst handleFileAdd = (url, title = 'Attachment') => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    if (!card.attachments) card.attachments = []\r\n    card.attachments.push({ url, title, addedAt: Date.now() })\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleFileRemove = (fileId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    const idx = card.attachments.findIndex(file => file.id === fileId)\r\n    card.attachments.splice(idx, 1)\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleMoveCard = (cardId, groupId, idx) => {\r\n    const initialBoard = store.getState().boardModule.currBoard\r\n    const initialGroup = initialBoard.groups.find(group => group.cards.some(card => card.id === cardId))\r\n    const card = getCardById(cardId, initialGroup.id)\r\n    const initialCardIdx = initialGroup.cards.findIndex(card => card.id === cardId)\r\n    initialGroup.cards.splice(initialCardIdx, 1)\r\n    let newGroup = initialBoard.groups.find(group => group.id === groupId)\r\n    newGroup.cards.splice(idx, 0, card)\r\n    return initialBoard\r\n}\r\n\r\nconst handleCopyCard = (cardId, groupId, idx, title) => {\r\n    const initialBoard = store.getState().boardModule.currBoard\r\n    const initialGroup = initialBoard.groups.find(group => group.cards.some(card => card.id === cardId))\r\n    const card = getCardById(cardId, initialGroup.id)\r\n    let newGroup = initialBoard.groups.find(group => group.id === groupId)\r\n    newGroup.cards.splice(idx, 0, { ...card, id: utilService.makeId(), title })\r\n    return initialBoard\r\n}\r\n\r\nconst handleToggleArchive = (cardId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    card.isArchive = !card.isArchive\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleRemoveCard = (cardId) => {\r\n    const board = { ...store.getState().boardModule.currBoard }\r\n    const group = board.groups.find(group => group.cards.some(card => card.id === cardId))\r\n    group.cards = group.cards.filter(card => card.id !== cardId)\r\n    // return board\r\n}\r\n\r\nconst onAddComment = (txt) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const user = store.getState().userModule.user\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    if (!card.comments) card.comments = []\r\n    card.comments.unshift({ id: utilService.makeId(), author: user, txt, addedAt: Date.now() })\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleCommentRemove = (commentId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    const idx = card.comments.findIndex(comment => comment.id === commentId)\r\n    card.comments.splice(idx, 1)\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst getCommentTime = (timestamp) => {\r\n    const timePassed = Date.now() - timestamp\r\n    if (timePassed < (1000 * 60)) return 'a few seconds ago'\r\n    else if (timePassed < (1000 * 60 * 2)) return '1 minute ago'\r\n    else if (timePassed < 1000 * 60 * 60) {\r\n        const minutes = Math.floor(timePassed / 1000 / 60)\r\n        return `${minutes} minutes ago`\r\n    }\r\n    else if (timePassed < 1000 * 60 * 60 * 13) {\r\n        const hours = Math.floor(timePassed / 1000 / 60 / 60)\r\n        return `${hours} hours ago`\r\n    } else {\r\n        const date = new Date(timestamp)\r\n        const minutes = (date.getMinutes() < 10) ? `0${date.getMinutes()}` : date.getMinutes()\r\n        if (timePassed < 1000 * 60 * 60 * 24) {\r\n            return `today at ${date.getHours()}:${minutes} `\r\n        } else if (timePassed < 1000 * 60 * 60 * 48) {\r\n            return `yesterday at ${date.getHours()}:${minutes}`\r\n        } else {\r\n            const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n            const idx = date.getMonth()\r\n            const month = monthNames[idx]\r\n            const day = date.getDate()\r\n            return `${month} ${day} at ${date.getHours()}:${minutes}`\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const cardEditService = {\r\n    handleChecklistChange,\r\n    handleMemberChange,\r\n    getGroupId,\r\n    getCardById,\r\n    handleLabelChange,\r\n    handleDueDateChange,\r\n    getFormattedTime,\r\n    getUploadTime,\r\n    handleFileAdd,\r\n    handleFileRemove,\r\n    getGroupById,\r\n    handleMoveCard,\r\n    handleCopyCard,\r\n    handleToggleArchive,\r\n    handleRemoveCard,\r\n    onAddComment,\r\n    handleCommentRemove,\r\n    getCommentTime\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateBoard } from '../../../store/board.actions'\r\n\r\n\r\nexport function _MoveCard({ board, currCardId, onUpdateBoard, onClose }) {\r\n    const [currGroup, setCurrGroup] = useState(null)\r\n    const [currPosition, setCurrPosition] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const group = cardEditService.getGroupById(currCardId, board._id)\r\n        setCurrGroup(group)\r\n        const idx = group.cards.findIndex(card => card.id === currCardId)\r\n        setCurrPosition(idx + 1)\r\n    }, [board])\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        if (name === 'group') {\r\n            const group = board.groups.find(item => item.id === value)\r\n            setCurrGroup(group)\r\n            setCurrPosition(group.cards.length + 1)\r\n        } else if (name === 'position') {\r\n            // setCurrPosition(currGroup.cards.length + 1)\r\n            setCurrPosition(value)\r\n        }\r\n    }\r\n\r\n    const getPositions = () => {\r\n        const length = currGroup.cards.length + 1\r\n        const positions = []\r\n        for (let i = 1; i <= length; i++) {\r\n            positions.push(i)\r\n        }\r\n        return positions\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const groupId = currGroup.id\r\n        const idx = currPosition - 1\r\n        // const initialGroup = cardEditService.handleMoveCardFrom(currCardId)\r\n        // onUpdateBoard({ type: 'UPDATE_GROUP', group: initialGroup }, board)\r\n        const boardToChange = cardEditService.handleMoveCard(currCardId, groupId, idx)\r\n        onUpdateBoard({ type: '' }, boardToChange)\r\n        // onUpdateBoard({ type: 'UPDATE_GROUP', group: newGroup }, board)\r\n        // onUpdateBoard({ type: 'UPDATE_GROUP', initialGroup }, board, activity)\r\n        onClose()\r\n    }\r\n\r\n    if (!currGroup) return null\r\n    return (\r\n        <div className=\"move-card\">\r\n            <h4>Select destination</h4>\r\n\r\n            <div className=\"select-board\">\r\n                <span className=\"label\">Board</span>\r\n                <span className=\"select-value\">{board.title}</span>\r\n                <select name=\"board\" onChange={handleChange}>\r\n                    {/* {boards.map(item => <option key={item._id} value={item._id}>{item.title}</option>)} */}\r\n                    <option value={board._id}>{board.title}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"flex bottom-container\">\r\n                <div className=\"select-group\">\r\n                    <span className=\"label\">List</span>\r\n                    <span className=\"select-value\">{currGroup.title}</span>\r\n                    <select name=\"group\" onChange={handleChange}>\r\n                        {board.groups.map(item => <option key={item.id} value={item.id}>{item.title}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"select-position\">\r\n                    <span className=\"label\">Position</span>\r\n                    <span className=\"select-value\">{currPosition}</span>\r\n                    <select name=\"position\" onChange={handleChange}>\r\n                        {getPositions().map((item, i) => <option key={i} value={item}>{item}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <button className=\"move-btn card-edit-btn secondary\" onClick={handleSubmit}>Move</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        boards: state.boardModule.boards,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const MoveCard = connect(mapStateToProps, mapDispatchToProps)(_MoveCard)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateBoard } from '../../../store/board.actions'\r\n\r\n\r\nexport function _CopyCard({ board, currCardId, onUpdateBoard, onClose }) {\r\n    const [currTitle, setCurrTitle] = useState('')\r\n    const [currGroup, setCurrGroup] = useState(null)\r\n    const [currPosition, setCurrPosition] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const group = cardEditService.getGroupById(currCardId, board._id)\r\n        const card = cardEditService.getCardById(currCardId, group.id)\r\n        setCurrTitle(card.title)\r\n        setCurrGroup(group)\r\n        const idx = group.cards.findIndex(card => card.id === currCardId)\r\n        setCurrPosition(idx + 1)\r\n    }, [board])\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        if (name === 'group') {\r\n            const group = board.groups.find(item => item.id === value)\r\n            setCurrGroup(group)\r\n            setCurrPosition(group.cards.length + 1)\r\n        } else if (name === 'position') {\r\n            setCurrPosition(value)\r\n        } else if (name === 'title') {\r\n            setCurrTitle(value)\r\n        }\r\n    }\r\n\r\n    const getPositions = () => {\r\n        const length = currGroup.cards.length + 1\r\n        const positions = []\r\n        for (let i = 1; i <= length; i++) {\r\n            positions.push(i)\r\n        }\r\n        return positions\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const groupId = currGroup.id\r\n        const idx = currPosition - 1\r\n        const boardToChange = cardEditService.handleCopyCard(currCardId, groupId, idx, currTitle)\r\n        onUpdateBoard({ type: '' }, boardToChange)\r\n        onClose()\r\n    }\r\n\r\n    if (!currGroup) return null\r\n    return (\r\n        <div className=\"copy-card\">\r\n            <label>Title</label>\r\n            <textarea name=\"title\" className=\"search-input\" autoFocus value={currTitle} onChange={handleChange} />\r\n\r\n\r\n            <label>Copy to...</label>\r\n            <div className=\"select-board\">\r\n                <span className=\"label\">Board</span>\r\n                <span className=\"select-value\">{board.title}</span>\r\n                <select name=\"board\" onChange={handleChange}>\r\n                    <option value={board._id}>{board.title}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"flex bottom-container\">\r\n                <div className=\"select-group\">\r\n                    <span className=\"label\">List</span>\r\n                    <span className=\"select-value\">{currGroup.title}</span>\r\n                    <select name=\"group\" onChange={handleChange}>\r\n                        {board.groups.map(item => <option key={item.id} value={item.id}>{item.title}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"select-position\">\r\n                    <span className=\"label\">Position</span>\r\n                    <span className=\"select-value\">{currPosition}</span>\r\n                    <select name=\"position\" onChange={handleChange}>\r\n                        {getPositions().map((item, i) => <option key={i} value={item}>{item}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <button className=\"copy-btn card-edit-btn secondary\" onClick={handleSubmit}>Create card</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        boards: state.boardModule.boards,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const CopyCard = connect(mapStateToProps, mapDispatchToProps)(_CopyCard)\r\n","import React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport { BsChevronLeft } from 'react-icons/bs'\r\n\r\n/*\r\n    How-to-use\r\n    1. The component shall recieve:\r\n       * an onClose function that closes the popover\r\n       * a title for the header\r\n       * the component that should be rendered inside of the popover (children)\r\n    2. The popover should be rendered on the same lavel as the element that \r\n       triggers the opening of the popover\r\n    3. The parrent element of both the trigger element and the popover should have\r\n       position relative (className=\"relative\")\r\n    4. The popover should recieve the parent ref (ref={parentRef})\r\n    5. The state for the opening and closing of the popover should be managed from \r\n       outside \r\n*/\r\n\r\nexport const DynamicPopover = React.forwardRef(({ onClose, title, children, isLabel, handleEdit }, parentRef) => {\r\n    const targetRef = useRef()\r\n    const [dimensions, setDimensions] = useState({ width: 0, height: 0 })\r\n\r\n    useLayoutEffect(() => {\r\n        if (targetRef.current) {\r\n            setDimensions({\r\n                width: targetRef.current.offsetWidth,\r\n                height: targetRef.current.offsetHeight\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleClick = e => {\r\n            const containerElement = targetRef.current\r\n            if (containerElement?.contains(e.target) || parentRef?.current?.contains(e.target)) return\r\n            onClose()\r\n        }\r\n\r\n        window.addEventListener(\"mouseup\", handleClick)\r\n        return () => {\r\n            window.removeEventListener(\"mouseup\", handleClick)\r\n        }\r\n    }, [onClose, parentRef])\r\n\r\n\r\n    const getLocation = () => {\r\n        const rect = parentRef.current?.getBoundingClientRect()\r\n        if (!rect) return\r\n\r\n        const bottomCheck = window.innerHeight - (rect.bottom + dimensions.height) < 20\r\n        const topCheck = rect.top - dimensions.height < 20\r\n        const rightCheck = window.innerWidth - (rect.left + dimensions.width) < 100\r\n\r\n        if (bottomCheck) {\r\n            let bottom\r\n            let top\r\n            if (topCheck) top = '-300%'\r\n            else bottom = rect.height + 8\r\n            if (rightCheck) return { bottom, top, right: 0 }\r\n            else return { bottom, top,  left: 0 }\r\n        }\r\n        if (rightCheck) return { top: rect.height + 8, right: 0 }\r\n\r\n        return { left: 0, top: rect.height + 8 }\r\n    }\r\n    \r\n    return (\r\n        <div ref={ref => targetRef.current = ref} className=\"dynamic-popover\" style={{ position: 'absolute', ...getLocation() }}>\r\n            \r\n            {title\r\n                ?\r\n                <div className=\"popover-header\">\r\n                    {isLabel && <span className=\"back-btn\" onClick={handleEdit}><BsChevronLeft /></span>}\r\n                    <p>{title}</p>\r\n                    <span className=\"close-btn\" onClick={onClose}><IoMdClose /></span>\r\n                </div>\r\n                :\r\n                <div className=\"relative\" style={{ height: 16 }}>\r\n                    <span className=\"close-popover-icon\" onClick={onClose}><IoMdClose /></span>\r\n                </div>}\r\n\r\n            <div className=\"popover-content\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nexport function EditSidebarLabel({ Icon, title }) {\r\n\r\n    const getStyle = () => {\r\n        if (title === \"Delete\") return { backgroundColor: '#b04632', color: '#fff' }\r\n        else return {}\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-container\">\r\n            <button className=\"sidebar-label card-edit-btn sidebar-btn\" style={{ position: 'relative', ...getStyle() }}>\r\n                <div className=\"list-item-layover\"></div>\r\n                <div className=\"btn-label-container flex\">\r\n                    <Icon />\r\n                    <p>{title}</p>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo, useRef, useState } from 'react'\r\nimport { DynamicPopover } from '../shared/dynamic-popover'\r\nimport { EditSidebarLabel } from '../card-edit/edit-sidebar-label'\r\n\r\n\r\nexport function CardEditActionsItem({ item }) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const itemRef = useRef()\r\n    const InnerPopperCmp = useMemo(() => item.component, [item])\r\n\r\n    return (\r\n        <div className=\"label-wrapper\">\r\n            <div ref={itemRef} className={`relative ${isOpen ? 'popover-open' : ''}`}>\r\n                <span onClick={() => setIsOpen(!isOpen)}>\r\n                    <EditSidebarLabel Icon={item.icon} title={item.title} />\r\n                </span>\r\n                {\r\n                    isOpen && <DynamicPopover onClose={() => setIsOpen(false)} title={item.title} ref={itemRef}>\r\n                        <InnerPopperCmp onClose={() => setIsOpen(false)} />\r\n                    </DynamicPopover>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BsArrowRight } from 'react-icons/bs'\r\nimport { MdContentCopy } from 'react-icons/md'\r\nimport { AiOutlineEye } from 'react-icons/ai'\r\nimport { GoArchive } from 'react-icons/go'\r\nimport { BsArrowCounterclockwise } from 'react-icons/bs'\r\nimport { AiOutlineMinus } from 'react-icons/ai'\r\nimport { MoveCard } from '../shared/popover-children/move-card'\r\nimport { CopyCard } from '../shared/popover-children/copy-card'\r\nimport { CardEditActionsItem } from './card-edit-actions-item'\r\nimport { EditSidebarLabel } from './edit-sidebar-label'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateBoard, onUpdateCard } from '../../store/board.actions'\r\n\r\n\r\nconst _CardEditActions = ({ currCardId, board, onUpdateCard, goBack, onUpdateBoard }) => {\r\n    const [isArchive, setIsArchive] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const card = cardEditService.getCardById(currCardId, groupId)\r\n        setIsArchive(card.isArchive || false)\r\n\r\n    }, [])\r\n\r\n    const toggleArchive = () => {\r\n        setIsArchive(!isArchive)\r\n        const res = cardEditService.handleToggleArchive(currCardId)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    // const removeCard = () => {\r\n    //     const boardToSave = cardEditService.handleRemoveCard(currCardId)\r\n    //     onUpdateBoard({ type: '' }, boardToSave)\r\n    //     goBack()\r\n    // }\r\n\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            <div className=\"card-edit-actions\">\r\n                <h3 className=\"sidebar-title\">Actions</h3>\r\n                <div className=\"actions-container\">\r\n                    {actions.map((item, idx) => (\r\n                        <CardEditActionsItem key={item.title + idx} item={item} />\r\n                    ))}\r\n                    {!isArchive && <div className=\"label-wrapper\" onClick={toggleArchive}>\r\n                        <EditSidebarLabel Icon={GoArchive} title='Archive' />\r\n                    </div>}\r\n                    {isArchive && <>\r\n                        <div className=\"label-wrapper\" onClick={toggleArchive}>\r\n                            <EditSidebarLabel Icon={BsArrowCounterclockwise} title='Send to board' />\r\n                        </div>\r\n                        <div className=\"label-wrapper\">\r\n                            <EditSidebarLabel Icon={AiOutlineMinus} title='Delete' />\r\n                        </div>\r\n                    </>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst actions = [{ icon: BsArrowRight, title: 'Move', component: MoveCard }, { icon: MdContentCopy, title: 'Copy', component: CopyCard }, { icon: AiOutlineEye, title: 'Watch' }]\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n    onUpdateBoard\r\n}\r\n\r\nexport const CardEditActions = connect(mapStateToProps, mapDispatchToProps)(_CardEditActions);\r\n","import Avatar from 'react-avatar';\r\n\r\n\r\n\r\nexport function MemberAvatar({ member, size, style = {} }) {\r\n\r\n    function getSize() {\r\n        switch (size) {\r\n            case 'sm':\r\n                return 20\r\n            case 'lg':\r\n                return 50\r\n            case 'md':\r\n            default:\r\n                return 32\r\n        }\r\n    }\r\n    // src={member.imgUrl}\r\n    return <Avatar name={member.fullname} src={member.imgUrl} size={getSize()} style={style} round />\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BsCheck } from 'react-icons/bs'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\n\r\nfunction _PopperMemberPreview({ member, currCardId, onUpdateCard }) {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const card = cardEditService.getCardById(currCardId, groupId)\r\n        const isMemberChecked = card.members?.find(m => m._id === member._id)\r\n        setIsChecked(isMemberChecked)\r\n    }, [currCardId, member._id])\r\n\r\n    const handleMemberClick = () => {\r\n        setIsChecked(!isChecked)\r\n        const res = cardEditService.handleMemberChange(member._id)\r\n        const activity = (isChecked) ? {txt: activityTxtMap.removeMemberFromCard(member.fullname), currCardId} : {txt: activityTxtMap.addMemberToCard(member.fullname), currCardId}\r\n        onUpdateCard(...res, activity)\r\n    }\r\n\r\n    return (\r\n        <div className=\"popper-member-preview flex\" onClick={handleMemberClick}>\r\n            <div className='list-item-layover'></div>\r\n            <div style={{ width: 32 }}>\r\n                <MemberAvatar member={member} />\r\n            </div>\r\n            <div className='popper-member-name'>\r\n                <p>{member.fullname}</p>\r\n            </div>\r\n            {isChecked && <div className='popper-member-check'><BsCheck /></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopperMemberPreview = connect(mapStateToProps, mapDispatchToProps)(_PopperMemberPreview);","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PopperMemberPreview } from '../../card-edit/popper-member-preview'\r\n\r\nconst _MemberList = ({ board }) => {\r\n    const [members, setMembers] = useState(board.members)\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        const matchingMembers = board.members.filter(member => member.fullname.toLowerCase().includes(value.toLowerCase()))\r\n        setMembers(matchingMembers)\r\n    }\r\n\r\n    return (<div className=\"member-list\">\r\n        <input className=\"search-input\" type=\"text\" autoFocus placeholder=\"Search...\" onChange={handleChange} />\r\n        <h4>Board Members</h4>\r\n        <div className=\"flex column\">\r\n            {members.map(member => (\r\n                <PopperMemberPreview\r\n                    key={member._id}\r\n                    member={member}\r\n                />\r\n            ))}\r\n        </div>\r\n    </div>)\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nexport const MemberList = connect(mapStateToProps)(_MemberList)","import React, { useState } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\n\r\n\r\n\r\nconst _CardEditDate = ({ onUpdateCard, onClose }) => {\r\n    const [startDate] = useState(new Date())\r\n    const [endDate] = useState(null)\r\n    const [dueDate, setDueDate] = useState(null)\r\n\r\n    const onChange = (date) => {\r\n        setDueDate(date.getTime())\r\n    }\r\n\r\n    const onReset = () => {\r\n        setDueDate(null)\r\n        handleSubmit()\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const res = cardEditService.handleDueDateChange(dueDate)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div className=\"date-picker\">\r\n            <DatePicker\r\n                selected={startDate}\r\n                onChange={onChange}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n                // selectsRange\r\n                inline\r\n                formatWeekDay={nameOfDay => nameOfDay.substr(0, 3)}\r\n            />\r\n            <div className=\"picker-btns flex column\">\r\n                <button className=\"card-edit-btn secondary long\" onClick={handleSubmit}>Save</button>\r\n                <button className=\"card-edit-btn long\" onClick={onReset}>Remove</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditDate = connect(null, mapDispatchToProps)(_CardEditDate);\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BiPencil } from 'react-icons/bi'\r\nimport { BsCheck } from 'react-icons/bs'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\nfunction _PopperLabelPreview({ label, currCardId, onUpdateCard, handleEdit }) {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const card = cardEditService.getCardById(currCardId, groupId)\r\n        const isLabelChecked = card.labelIds?.some(l => l === label.id)\r\n        setIsChecked(isLabelChecked)\r\n    }, [currCardId, label.id])\r\n\r\n    const handleLabelClick = () => {\r\n        setIsChecked(!isChecked)\r\n        const res = cardEditService.handleLabelChange(label.id)\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        // const activity = {txt: activityTxtMap.addLabel(label.title), groupId: groupId}\r\n        const activity = (isChecked) ? { txt: activityTxtMap.removeLabel(label.title), groupId: groupId } : { txt: activityTxtMap.addLabel(label.title), groupId: groupId }\r\n        onUpdateCard(...res, activity)\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-preview flex\" >\r\n            {/* <div className='list-item-layover'></div> */}\r\n            <div className=\"label-preview flex\" >\r\n                <div className=\"popper-label \" style={{ backgroundColor: label.color }} onClick={handleLabelClick}>\r\n                    <span> {label.title || ''}</span>\r\n                    {isChecked && <div className='popper-label-check'><BsCheck /></div>}\r\n                </div>\r\n                <div className=\"icon-wrapper\" onClick={() => handleEdit(label.color)}><BiPencil /></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopperLabelPreview = connect(mapStateToProps, mapDispatchToProps)(_PopperLabelPreview);\r\n","import React, { useState } from 'react'\r\nimport { PopperLabelPreview } from '../../card-edit/popper-label-preview'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction _LabelList({ board, handleEdit }) {\r\n    const [labels, setLabels] = useState(board.labels)\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        const matchingLabels = board.labels.filter(label => label.title.toLowerCase().includes(value.toLowerCase()))\r\n        setLabels(matchingLabels)\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-list-container\">\r\n            <input className=\"search-input\" type=\"text\" autoFocus placeholder=\"Search labels...\" onChange={handleChange} />\r\n            <h4>Labels</h4>\r\n            <div className=\"flex column label-list\">\r\n                {labels.map(label => <PopperLabelPreview key={label.id} label={label} handleEdit={handleEdit} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nexport const LabelList = connect(mapStateToProps)(_LabelList)\r\n\r\n\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../../services/activity.service'\r\n\r\nexport function _PopoverChecklist({ onUpdateCard, onClose }) {\r\n    const inputRef = useRef()\r\n    const [title, setTitle] = useState('Checklist')\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n        inputRef.current.select()\r\n    }, [])\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        setTitle(value)\r\n    }\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const res = cardEditService.handleChecklistChange('addChecklist', null, title)\r\n        const activity = {txt: activityTxtMap.addChecklist(title)}\r\n        onUpdateCard(...res, activity)\r\n        setTitle('')\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <form className=\"popover-checklist\" onSubmit={handleSubmit}>\r\n            <label htmlFor=\"checklist-title\">Title</label>\r\n            <input className=\"search-input\" ref={inputRef} value={title} onChange={handleChange} />\r\n            <button className=\"card-edit-btn secondary\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopoverChecklist = connect(mapStateToProps, mapDispatchToProps)(_PopoverChecklist);","export function uploadImg(ev) {\r\n    const CLOUD_NAME = 'dh4cdbmav'\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    // console.log('target', ev.target)\r\n    formData.append('file', ev.target.files[0])\r\n    console.log('ev.target.files[0]):', ev.target.files[0])\r\n    formData.append('upload_preset', 'wbls0qti');\r\n    // console.log('formData:', formData)\r\n\r\n    return fetch(UPLOAD_URL, {\r\n        method: 'POST',\r\n        body: formData\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => res.url)\r\n        .catch(err => console.error(err))\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { uploadImg } from '../../../services/cloudinary.service'\r\n\r\n\r\n\r\nfunction _PopoverAttachFile({ onUpdateCard, onClose }) {\r\n    const [title, setTitle] = useState('')\r\n    const [url, setUrl] = useState('')\r\n\r\n    const urlRef = useRef()\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const res = cardEditService.handleFileAdd(url, title)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    const handleImageUpload = async (ev) => {\r\n        const title = ev.target.files[0].name\r\n        const url = await uploadImg(ev)\r\n        const res = cardEditService.handleFileAdd(url, title)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div className=\"popover-attach-file\">\r\n            <div className=\"attach-from\">\r\n                <label htmlFor=\"upload\" >\r\n                    <span aria-hidden=\"true\">Computer</span>\r\n                    <input type=\"file\" id=\"upload\" style={{ display: 'none' }} onChange={handleImageUpload} />\r\n                </label>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"attach-link\">\r\n                <label>Attach a link</label>\r\n                <input ref={urlRef} className=\"search-input\" placeholder=\"Paste any link here...\" value={url} onChange={(ev) => setUrl(ev.target.value)} />\r\n                {url && <><label>Link name (optional)</label><input className=\"search-input\" value={title} onChange={(ev) => setTitle(ev.target.value)} /></>}\r\n                <button className=\"card-edit-btn\">Attach</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopoverAttachFile = connect(mapStateToProps, mapDispatchToProps)(_PopoverAttachFile);\r\n\r\n","import React, { useMemo, useRef, useState } from 'react'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { EditSidebarLabel } from '../edit-sidebar-label'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\n\r\n\r\nfunction _CardEditAddToCardItem({ item, currCardId }) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [color, setColor] = useState('')\r\n    const itemRef = useRef()\r\n    const InnerPopperCmp = useMemo(() => item.component, [item])\r\n    const EditComponent = useMemo(() => item.editComponent, [item])\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const currCard = cardEditService.getCardById(currCardId, groupId)\r\n\r\n    const checkIfCover = () => {\r\n        return (item.title !== 'Cover') || (!currCard?.style?.bgColor && !currCard?.style?.imgUrl)\r\n    }\r\n\r\n    const handleEdit = (color) => {\r\n        if (isEdit) setIsEdit(false)\r\n        else {\r\n            setColor(color)\r\n            setIsEdit(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-wrapper\">\r\n            {checkIfCover() && <div ref={itemRef} className={`relative ${isOpen ? 'popover-open' : ''}`}>\r\n                <span onClick={() => setIsOpen(!isOpen)}>\r\n                    <EditSidebarLabel Icon={item.icon} title={item.title} />\r\n                </span>\r\n                {\r\n                    isOpen && Boolean(item.editComponent) && <DynamicPopover handleEdit={handleEdit} onClose={() => setIsOpen(false)} title={item.title} ref={itemRef} isLabel={isEdit}>\r\n                        {isEdit ? <EditComponent color={color} handleEdit={handleEdit} onClose={() => setIsOpen(false)} /> : <InnerPopperCmp handleEdit={handleEdit} onClose={() => setIsOpen(false)} />}\r\n                    </DynamicPopover>\r\n                }\r\n                {\r\n                    isOpen && !Boolean(item.editComponent) && <DynamicPopover onClose={() => setIsOpen(false)} title={item.title} ref={itemRef}>\r\n                        <InnerPopperCmp onClose={() => setIsOpen(false)} />\r\n                    </DynamicPopover>\r\n                }\r\n            </div>}\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nexport const CardEditAddToCardItem = connect(mapStateToProps, null)(_CardEditAddToCardItem);\r\n","import React, { Component } from 'react'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\n\r\nclass _PopperCoverEdit extends Component {\r\n    state = {\r\n        currCard: null,\r\n        groupId: null,\r\n        selectedEl: null,\r\n        initialStyle: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { currCardId } = this.props\r\n        console.log(currCardId);\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const currCard = cardEditService.getCardById(currCardId, groupId)\r\n        console.log(currCard);\r\n        // if (currCard.style) {\r\n        //     if (currCard.style.bgColor) {\r\n\r\n        //     }\r\n        // }\r\n        this.setState({ currCard, groupId })\r\n    }\r\n\r\n    handleClick = (ev, value, type) => {\r\n        ev.target.classList.add('selected')\r\n        this.state.selectedEl?.classList.remove('selected')\r\n        this.setState({ selectedEl: ev.target })\r\n        const { board, currCardId, onUpdateCard } = this.props\r\n        const { currCard, groupId } = this.state\r\n        currCard.style = type === 'color' ? { bgColor: value } : { imgUrl: value }\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    handleCoverRemove = () => {\r\n        const { board, currCardId, onUpdateCard } = this.props\r\n        const { currCard, groupId } = this.state\r\n        currCard.style = null\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    handleInitialSelect = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { currCard } = this.state\r\n        if (!currCard) return ''\r\n        const colors = ['#7bc86c', '#f5dd29', '#ffaf3f', '#ef7564', '#cd8de5', '#517dab', '#29cce5', '#6deca9', '#ff8ed4', '#172b4d']\r\n        return (\r\n            <section className=\"modal-cover-edit flex column\">\r\n\r\n                <div className=\"size-container flex column\">\r\n                    <h4>Size</h4>\r\n                    <div className=\"size-options flex\">\r\n                        <div className=\"size-option\"></div>\r\n                        <div className=\"size-option\"></div>\r\n                    </div>\r\n                    <button className=\"card-edit-btn\" onClick={this.handleCoverRemove}>Remove cover</button>\r\n                </div>\r\n\r\n                <div className=\"flex column\">\r\n                    <h4>Colors</h4>\r\n                    <div className=\"color-container flex\">{colors.map((color, i) => <div key={i} className=\"cover-color-option\" style={{ backgroundColor: color }} onClick={ev => this.handleClick(ev, color, 'color')}></div>)}</div>\r\n                </div>\r\n\r\n                {currCard.attachments && Boolean(currCard.attachments.length) && <div className=\"flex column\">\r\n                    <h4>Attachments</h4>\r\n                    <div className=\"attachments-container flex\">{currCard.attachments.map(a => <div key={a.id} className=\"cover-image-option\" style={{ backgroundImage: `url(${a.url})` }} onClick={ev => this.handleClick(ev, a.url, 'img')}></div>)}</div>\r\n                </div>}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopperCoverEdit = connect(mapStateToProps, mapDispatchToProps)(_PopperCoverEdit);\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { AiOutlineCheck } from 'react-icons/ai'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { utilService } from '../../../services/util.service'\r\nimport { onUpdateBoard, onUpdateCard } from '../../../store/board.actions'\r\n\r\nfunction _LabelEdit({ color, board, onUpdateBoard, onClose, handleEdit, onUpdateCard }) {\r\n    const [selectedColor, setSelectedColor] = useState(null)\r\n    const [title, setTitle] = useState('')\r\n\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        setSelectedColor(color)\r\n        const label = board.labels.find(label => label.color === color)\r\n        setTitle(label?.title || '')\r\n        inputRef.current?.select()\r\n    }, [])\r\n\r\n    const handleClick = (ev) => {\r\n        setSelectedColor(ev.target.dataset.color)\r\n        const label = board.labels.find(label => label.color === ev.target.dataset.color)\r\n        setTitle(label?.title || '')\r\n    }\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        setTitle(value)\r\n    }\r\n\r\n    const handleSumbit = () => {\r\n        const boardToSave = { ...board }\r\n        let label = boardToSave.labels.find(label => label.color === selectedColor)\r\n        if (label) label.title = title\r\n        else {\r\n            label = { id: utilService.makeId(), color: selectedColor, title }\r\n            boardToSave.labels.push(label)\r\n        }\r\n        onUpdateBoard({ type: '' }, boardToSave)\r\n        handleEdit()\r\n        onClose()\r\n\r\n        const res = cardEditService.handleLabelChange(label.id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-edit\">\r\n            <div>\r\n                <label>Name</label>\r\n                <input ref={inputRef} className=\"search-input\" onChange={handleChange} value={title} />\r\n            </div>\r\n\r\n            <div>\r\n                <label>Select a color</label>\r\n                <div className=\"color-container flex\">\r\n                    {colors.map((c, i) => {\r\n                        return (<div key={i} data-color={c} className=\"label-color-option\" style={{ backgroundColor: c }} onClick={handleClick}\r\n                        >{(c === selectedColor) && <span><AiOutlineCheck /></span>}</div>)\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btns-container\">\r\n                <button className=\"card-edit-btn save-btn\" onClick={handleSumbit}>Save</button>\r\n                <button className=\"card-edit-btn delete-btn\">Delete</button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst colors = ['#7bc86c', '#f5dd29', '#ffaf3f', '#ef7564', '#cd8de5', '#517dab', '#29cce5', '#6deca9', '#ff8ed4', '#172b4d']\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n    onUpdateBoard\r\n}\r\n\r\nexport const LabelEdit = connect(mapStateToProps, mapDispatchToProps)(_LabelEdit);\r\n","import React from 'react'\r\nimport { MemberList } from '../../shared/popover-children/member-list'\r\nimport { CardEditDate } from '../../shared/popover-children/card-edit-date'\r\nimport { LabelList } from '../../shared/popover-children/label-list'\r\nimport { BsClock, BsCardChecklist } from 'react-icons/bs'\r\nimport { MdLabelOutline } from 'react-icons/md'\r\nimport { FiPaperclip } from 'react-icons/fi'\r\nimport { BiUser } from 'react-icons/bi'\r\nimport { PopoverChecklist } from '../../shared/popover-children/popover-checklist'\r\nimport { PopoverAttachFile } from '../../shared/popover-children/popover-attach-file'\r\nimport { CardEditAddToCardItem } from './card-edit-add-to-card-item'\r\nimport { PopperCoverEdit } from '../../shared/popover-children/popper-cover-edit'\r\nimport { CgCreditCard } from 'react-icons/cg'\r\nimport { LabelEdit } from '../../shared/popover-children/label-edit'\r\n\r\nexport const CardEditAddToCard = () => (\r\n    <div style={{ position: 'relative' }}>\r\n        <div className=\"add-to-card\">\r\n            <h3 className=\"sidebar-title\">Add to card</h3>\r\n            <div className=\"add-to-card-container\">\r\n            {addToCardItems.map((item, idx) => (\r\n                <CardEditAddToCardItem key={item.title + idx} item={item} />\r\n            ))}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst addToCardItems = [{ icon: BiUser, title: 'Members', component: MemberList }, { icon: MdLabelOutline, title: 'Labels', component: LabelList, editComponent: LabelEdit }, { icon: BsCardChecklist, title: 'Checklist', component: PopoverChecklist }, { icon: BsClock, title: 'Dates', component: CardEditDate }, { icon: FiPaperclip, title: 'Attachment', component: PopoverAttachFile }, { icon: CgCreditCard, title: 'Cover', component: PopperCoverEdit }]\r\n","import React, { Component } from 'react'\r\nimport { CardEditActions } from './card-edit-actions'\r\nimport { CardEditAddToCard } from './add-to-card/card-edit-add-to-card'\r\n\r\nexport class CardEditSidebar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar\">\r\n                <CardEditAddToCard />\r\n                <CardEditActions goBack={this.props.goBack} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { BsChevronDown } from 'react-icons/bs'\r\nimport { CardEditDate } from '../../shared/popover-children/card-edit-date'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { socketService } from '../../../services/socket.service'\r\n\r\nconst _CardEditDueDate = ({ currCardId, onUpdateCard, board }) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const dueDateRef = useRef()\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const currCard = cardEditService.getCardById(currCardId, groupId)\r\n    const dueDate = currCard?.dueDate\r\n    const time = cardEditService.getFormattedTime(dueDate)\r\n\r\n    const getDueDateLabel = () => {\r\n        if (currCard.isComplete) return { title: 'Complete', bgColor: '#61bd4f' }\r\n        if ((dueDate - Date.now()) < 0) return { title: 'Overdue', bgColor: '#eb5a46' }\r\n        if ((dueDate - Date.now()) <= (1000 * 60 * 60 * 24)) return { title: 'Due soon', bgColor: '#f2d600' }\r\n        else return { title: '', bgColor: '' }\r\n    }\r\n\r\n    const onToggleComplete = () => {\r\n        currCard.isComplete = !currCard.isComplete\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {dueDate && <div className=\"due-date-container\">\r\n                <h3 className=\"small-title\">Due date</h3>\r\n                <div className=\"due-date\" >\r\n                    <input type=\"checkbox\" className=\"main-checkbox\" checked={currCard.isComplete} onChange={onToggleComplete} />\r\n                    <div className=\"card-edit-btn\" ref={dueDateRef}>\r\n                        <span className=\"due-date-time\">{time}</span>\r\n                        <span style={{ backgroundColor: getDueDateLabel().bgColor, textTransform: 'uppercase', fontSize: 12, padding: '0 3px', borderRadius: 2 }}>{getDueDateLabel().title}</span>\r\n                        <span className=\"due-date-icon\"><BsChevronDown /></span>\r\n                        <div className=\"list-item-layover\" onClick={() => setIsOpen(!isOpen)}></div>\r\n                        {isOpen && <DynamicPopover onClose={() => setIsOpen(false)} title={'Dates'} ref={dueDateRef}>\r\n                            <CardEditDate onClose={() => setIsOpen(false)} />\r\n                        </DynamicPopover>}\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditDueDate = connect(mapStateToProps, mapDispatchToProps)(_CardEditDueDate);\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { LabelList } from '../../shared/popover-children/label-list'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { LabelEdit } from '../../shared/popover-children/label-edit'\r\n\r\nconst _CardEditLabels = ({ currCardId, board }) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [color, setColor] = useState('')\r\n    const addButtonRef = useRef()\r\n\r\n    const getCardLabels = (labelIds) => (\r\n        labelIds?.map(id => board.labels.find(label => label.id === id))\r\n    )\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const labelIds = cardEditService.getCardById(currCardId, groupId).labelIds\r\n    const labels = getCardLabels(labelIds)\r\n\r\n    const handleEdit = (color) => {\r\n        if (isEdit) setIsEdit(false)\r\n        else {\r\n            setColor(color)\r\n            setIsEdit(true)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {labelIds?.length ? <div className=\"labels-container\">\r\n                <h3 className=\"small-title\">Labels</h3>\r\n                <div className=\"labels\">\r\n                    {labels.map(label => <div key={label.id} className=\"card-label\" style={{ backgroundColor: label.color }}>\r\n                        {label.title || ''}\r\n                    </div>)}\r\n                    <div\r\n                        ref={addButtonRef}\r\n                        className=\"card-label add-label relative\"\r\n                    >\r\n                        <div className=\"list-item-layover\" onClick={() => setIsOpen(!isOpen)}></div>\r\n                        <AiOutlinePlus />\r\n                        {isOpen && <DynamicPopover handleEdit={handleEdit} onClose={() => setIsOpen(false)} title={'Labels'} ref={addButtonRef} isLabel={isEdit}>\r\n                            {!isEdit ? <LabelList handleEdit={handleEdit} onClose={() => setIsOpen(false)} /> : <LabelEdit handleEdit={handleEdit} color={color} onClose={() => setIsOpen(false)} />}\r\n                        </DynamicPopover>}\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nexport const CardEditLabels = connect(mapStateToProps, null)(_CardEditLabels);\r\n","import React from 'react'\r\nimport { MemberAvatar } from '../member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\n\r\nconst _MiniUser = ({ member, onUpdateCard }) => {\r\n\r\n    const onRemoveUser = () => {\r\n        const res = cardEditService.handleMemberChange(member._id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mini-user flex column\">\r\n\r\n            <div className=\"main flex\">\r\n                <MemberAvatar size=\"lg\" member={member} />\r\n                <div>\r\n                    <h3 className=\"mini-user-fullname\">{member.fullname}</h3>\r\n                    <p>{member.username}</p>\r\n                    {/* <p>Edit profile info</p> */}\r\n                </div>\r\n            </div>\r\n\r\n            <p className=\"remove-member\" onClick={onRemoveUser}>Remove from card</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const MiniUser = connect(null, mapDispatchToProps)(_MiniUser);\r\n","import React, { useRef, useState } from 'react'\r\nimport { DynamicPopover } from '../shared/dynamic-popover'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { MiniUser } from '../shared/popover-children/mini-user'\r\n\r\nexport function MembersContainerMemberPreview({ member }) {\r\n    const [isPreviewOpen, setIsPreviewOpen] = useState(false)\r\n    const userButtonRef = useRef()\r\n    return (\r\n        <div key={member._id} className=\"card-member relative\" ref={userButtonRef}>\r\n            <span style={{ cursor: 'pointer' }}>\r\n                <div className=\"list-item-layover round\" onClick={() => setIsPreviewOpen(!isPreviewOpen)}></div>\r\n                <MemberAvatar member={member} />\r\n            </span>\r\n            {isPreviewOpen && <DynamicPopover onClose={() => setIsPreviewOpen(false)} title={null} ref={userButtonRef}>\r\n                <MiniUser member={member} />\r\n            </DynamicPopover>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { MemberList } from '../../shared/popover-children/member-list'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { MembersContainerMemberPreview } from '../members-container-member-preview'\r\n\r\nconst _CardEditMembers = ({ currCardId }) => {\r\n    const [isListOpen, setIsListOpen] = useState(false)\r\n    \r\n    const addButtonRef = useRef()\r\n   \r\n    let members\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    members = cardEditService.getCardById(currCardId, groupId).members\r\n\r\n    return (\r\n        <>\r\n            {members?.length ? <div className=\"members-container\">\r\n                <h3 className=\"small-title\">Members</h3>\r\n                <div className=\"members\">\r\n                    {members.map(member => <MembersContainerMemberPreview key={member._id} member={member} />)}\r\n\r\n                    <div\r\n                        ref={addButtonRef}\r\n                        className=\"card-member add-member relative\"\r\n                    >\r\n                        <div className=\"list-item-layover round\" onClick={() => setIsListOpen(!isListOpen)}></div>\r\n                        <AiOutlinePlus />\r\n                        {isListOpen && <DynamicPopover onClose={() => setIsListOpen(false)} title={'Members'} ref={addButtonRef}>\r\n                            <MemberList />\r\n                        </DynamicPopover>}\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nexport const CardEditMembers = connect(mapStateToProps, null)(_CardEditMembers);\r\n\r\n\r\n","import { CardEditDueDate } from './labels-members/card-edit-duedate'\r\nimport { CardEditLabels } from './labels-members/card-edit-labels'\r\nimport { CardEditMembers } from './labels-members/card-edit-members'\r\n\r\nexport const LabelsMembers = () => (\r\n    <div className=\"members-labels-container\">\r\n        <CardEditMembers />\r\n        <CardEditLabels/>\r\n        <CardEditDueDate />\r\n    </div>\r\n)","import React from 'react'\r\n\r\nexport function ProgressBar({ bgColor, completed }) {\r\n\r\n    const containerStyles = {\r\n        height: 8,\r\n        width: '100%',\r\n        backgroundColor: \"#e0e0de\",\r\n        borderRadius: 50,\r\n        margin: '10px 0 10px 0px'\r\n    }\r\n\r\n    const fillerStyles = {\r\n        height: '100%',\r\n        width: `${completed}%`,\r\n        backgroundColor: bgColor,\r\n        borderRadius: 'inherit',\r\n        textAlign: 'right',\r\n        transition: 'width .5s ease-in-out'\r\n    }\r\n\r\n    return (\r\n        <div className=\"outer-container\" style={containerStyles}>\r\n            <div style={fillerStyles}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { IoMdClose } from 'react-icons/io'\r\n\r\nclass _TodoItem extends Component {\r\n    state = {\r\n        todoTitle: '',\r\n        isEditTodo: false\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    todoTextareaRef = React.createRef()\r\n    saveTodoBtnRef = React.createRef()\r\n\r\n    handleClick = (e) => {\r\n        if (this.todoTextareaRef?.current?.contains(e.target) || this.saveTodoBtnRef?.current?.contains(e.target) || this.newTodoTextarea?.current?.contains(e.target)) {\r\n            return\r\n        }\r\n        this.setState({ isEditTodo: false, todoTitle: '' })\r\n    }\r\n\r\n    handleMarkTodo = () => {\r\n        const res = cardEditService.handleChecklistChange('markTodo', this.props.checklistId, this.props.todo.id)\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    handleRemoveTodo = () => {\r\n        const res = cardEditService.handleChecklistChange('removeTodo', this.props.checklistId, this.props.todo.id)\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    handleTitleChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onChangeTitle = (ev) => {\r\n        ev.preventDefault()\r\n        const { checklistId, todo, onUpdateCard } = this.props\r\n        const { todoTitle } = this.state\r\n        const res = cardEditService.handleChecklistChange('changeTitle', checklistId, todo.id, todoTitle)\r\n        onUpdateCard(...res)\r\n        this.setState({ isEditTodo: false, todoTitle: '' })\r\n    }\r\n\r\n    render() {\r\n        const { todo } = this.props\r\n        const { isEditTodo, todoTitle } = this.state\r\n        return (\r\n            <div className=\"flex align-center todo-item\">\r\n                <input className=\"main-checkbox\" type=\"checkbox\" name={todo.id} checked={todo.isDone} onChange={this.handleMarkTodo} onClick={() => this.setState({ todoTitle: todo.title })}\r\n                    style={{ alignSelf: isEditTodo ? 'flex-start' : 'center' }} />\r\n                {!isEditTodo ? (\r\n                    <div>\r\n                        <span\r\n                            className={todo.isDone ? 'done' : ''}\r\n                            onClick={() => this.setState({ isEditTodo: true })}\r\n                        >\r\n                            {todo.title}\r\n                        </span>\r\n                        <span\r\n                            className=\"remove-todo-icon\"\r\n                            onClick={this.handleRemoveTodo}\r\n                        >\r\n                            <VscTrash />\r\n                        </span>\r\n                    </div>\r\n                ) :\r\n                    <form onSubmit={this.onChangeTitle} style={{ paddingBottom: 9 }}>\r\n                        <textarea\r\n                            className=\"description-textarea edit-todo\"\r\n                            onFocus={() => this.setState({ todoTitle: todo.title })}\r\n                            autoFocus\r\n                            name=\"todoTitle\"\r\n                            value={todoTitle}\r\n                            ref={this.todoTextareaRef}\r\n                            onChange={this.handleTitleChange} />\r\n\r\n                        <div className=\"description-btns\">\r\n                            <button ref={this.saveTodoBtnRef} className=\"card-edit-btn secondary\">Save</button>\r\n                            <button onClick={() => this.setState({ isEditTodo: false, todoTitle: '' })}><IoMdClose style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center' }} /></button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n}\r\n\r\nexport const TodoItem = connect(mapStateToProps, mapDispatchToProps)(_TodoItem);\r\n\r\n","import React, { Component } from 'react'\r\nimport { ProgressBar } from './progress-bar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { utilService } from '../../services/util.service'\r\nimport { BsCardChecklist } from 'react-icons/bs'\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport { TodoItem } from './todo-item'\r\n\r\nexport class _ChecklistEdit extends Component {\r\n    state = {\r\n        percentage: 0,\r\n        isAddTodo: false,\r\n        newTodo: ''\r\n    }\r\n\r\n    saveTodoBtnRef = React.createRef()\r\n    addTodoBtnRef = React.createRef()\r\n    newTodoTextarea = React.createRef()\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n        if (this.props.checklist.todos) this.setTodoPercentage()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.board !== this.props.board) {\r\n            this.setTodoPercentage()\r\n        }\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        if (this.saveTodoBtnRef?.current?.contains(e.target) || this.addTodoBtnRef?.current?.contains(e.target) || this.newTodoTextarea?.current?.contains(e.target)) {\r\n            return\r\n        }\r\n        this.setState({ isAddTodo: false, newTodo: '' })\r\n    }\r\n\r\n    setTodoPercentage = (todos = this.props.checklist.todos) => {\r\n        if (!todos?.length && !this.props.checklist?.todos.length) {\r\n            this.setState({ percentage: 0 })\r\n            return\r\n        }\r\n        const doneTodos = todos.filter(todo => todo.isDone)\r\n        const num = (doneTodos.length / todos.length) * 100\r\n        const percentage = (Number.isInteger(num)) ? num : num.toFixed(0)\r\n        this.setState({ percentage })\r\n    }\r\n\r\n    handleInputChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onAddTodo = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isAddTodo: false, newTodo: '' })\r\n        const res = cardEditService.handleChecklistChange(\"addTodo\", this.props.checklist.id, { id: utilService.makeId(), title: ev.target[0].value, isDone: false })\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    onRemoveChecklist = () => {\r\n        const res = cardEditService.handleChecklistChange(\"removeChecklist\", this.props.checklist.id)\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    render() {\r\n        const { checklist } = this.props\r\n        const { percentage, isAddTodo } = this.state\r\n        return (\r\n            <section className=\"checklist-preview flex column\">\r\n\r\n                <section className=\"flex space-between\">\r\n                    <div className=\"card-edit-title\">\r\n                        <span><BsCardChecklist /></span>\r\n                        <h3>{checklist.title}</h3>\r\n                    </div>\r\n                    <button className=\"card-edit-btn\" onClick={this.onRemoveChecklist}>Delete</button>\r\n                </section>\r\n\r\n                <div className=\"flex align-center\">\r\n                    <span style={{ fontSize: 11, width: 32, maxWidth: 32, minWidth: 32 }}>{percentage}%</span>\r\n                    <ProgressBar completed={percentage} bgColor={(percentage === 100) ? '#61bd4f' : '#5ba4cf'} />\r\n                </div>\r\n\r\n                {checklist.todos?.map(todo => {\r\n                    return <div className=\"todos-container\" key={todo.id}>\r\n                        <TodoItem todo={todo} checklistId={checklist.id} />\r\n                    </div>\r\n                })\r\n                }\r\n\r\n                {!isAddTodo\r\n                    ? <button className=\"card-edit-btn add-todo-btn\" style={{ alignSelf: 'flex-start' }} onClick={() => this.setState({ isAddTodo: true })}>Add an item</button>\r\n                    : <form onSubmit={this.onAddTodo}><textarea rows=\"2\"\r\n                        className=\"description-textarea add-todo\"\r\n                        ref={this.newTodoTextarea}\r\n                        autoFocus\r\n                        name=\"newTodo\"\r\n                        placeholder=\"Add an item\"\r\n                        onChange={this.handleInputChange} />\r\n\r\n                        <div className=\"description-btns add-todo-btns\">\r\n                            <button ref={this.addTodoBtnRef} className=\"card-edit-btn secondary\">Save</button>\r\n                            <button onClick={() => this.setState({ isAddTodo: false, newTodo: '' })}><IoMdClose style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center' }} /></button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const ChecklistEdit = connect(mapStateToProps, mapDispatchToProps)(_ChecklistEdit);\r\n","import React, { Component } from 'react'\r\nimport { IoMdClose, IoMdList } from 'react-icons/io'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\nclass _CardEditDescription extends Component {\r\n    state = {\r\n        currCard: {},\r\n        isDescriptionOpen: false\r\n    }\r\n\r\n    descriptionRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const currCard = cardEditService.getCardById(this.props.currCardId, groupId)\r\n        this.setState({ currCard })\r\n    }\r\n\r\n    setDescriptionTextarea = () => {\r\n        this.setState({ isDescriptionOpen: !this.state.isDescriptionOpen })\r\n    }\r\n\r\n    handleDescriptionChange = (card = this.state.currCard) => {\r\n        const { board } = this.props\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const activity = {txt: activityTxtMap.changeDescription(), card: card, groupId: groupId}\r\n        this.props.onUpdateCard(card, groupId, board, activity)\r\n    }\r\n\r\n    handleInputChange = ({ target: { value } }) => {\r\n        this.setState({ currCard: { ...this.state.currCard, description: value } })\r\n    }\r\n\r\n    render() {\r\n        const { currCard, isDescriptionOpen } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"description-container card-edit-title\">\r\n                    <span><IoMdList /></span>\r\n                    <h3>Description</h3>\r\n                    {currCard.description && !isDescriptionOpen && <button className=\"card-edit-btn\" onClick={() => {\r\n                        this.setDescriptionTextarea()\r\n                        this.descriptionRef.current.focus()\r\n                    }}> Edit</button>}\r\n                </div>\r\n                <div className=\"card-description\">\r\n                    <textarea\r\n                        ref={this.descriptionRef}\r\n                        className={`description-textarea ${isDescriptionOpen ? 'open' : ''} ${currCard.description ? 'filled' : ''}`}\r\n                        rows={isDescriptionOpen ? \"6\" : \"3\"}\r\n                        onFocus={this.setDescriptionTextarea}\r\n                        onBlur={() => {\r\n                            this.setDescriptionTextarea()\r\n                            this.handleDescriptionChange()\r\n                        }}\r\n                        value={currCard.description}\r\n                        onChange={this.handleInputChange}\r\n                        placeholder=\"Add a more detailed description...\"\r\n                    />\r\n                    {isDescriptionOpen &&\r\n                        <div className=\"description-btns\">\r\n                            <button className=\"card-edit-btn secondary\" onClick={() => this.handleDescriptionChange()}>Save</button>\r\n                            <button onClick={this.setDescriptionTextarea}><IoMdClose style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center' }} /></button>\r\n                        </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditDescription = connect(mapStateToProps, mapDispatchToProps)(_CardEditDescription);\r\n","import React from 'react'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\n\r\nfunction _CommentPreview({ comment, user, onUpdateCard }) {\r\n\r\n    const timeMsg = cardEditService.getCommentTime(comment.addedAt)\r\n\r\n    const onRemoveComment = () => {\r\n        const res = cardEditService.handleCommentRemove(comment.id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"comment-preview flex\">\r\n            <MemberAvatar member={comment.author} />\r\n            <div className=\"flex column comment-info\">\r\n                <div className=\"comment-data flex\">\r\n                    <span className=\"author-name\">{comment.author.fullname}</span>\r\n                    <span className=\"comment-time\">{timeMsg}</span>\r\n                </div>\r\n\r\n                <div className=\"comment-txt\">{comment.txt}</div>\r\n\r\n                {(comment.author._id === user._id) && <span className=\"remove-btn\" onClick={onRemoveComment}>Delete</span>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n}\r\n\r\nexport const CommentPreview = connect(mapStateToProps, mapDispatchToProps)(_CommentPreview)","import React, { Component } from 'react'\r\nimport { MdFormatListBulleted } from 'react-icons/md'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { Loader } from '../shared/loader'\r\nimport { CommentPreview } from './comment-preview'\r\n\r\n\r\nclass _CardEditActivities extends Component {\r\n    state = {\r\n        isFocus: false,\r\n        isTxt: false,\r\n        commentTxt: '',\r\n        currCard: null\r\n    }\r\n\r\n    commentRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const currCard = cardEditService.getCardById(this.props.currCardId, groupId)\r\n        this.setState({ currCard })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n\r\n    handleChange = ({ target: { value } }) => {\r\n        this.setState({ commentTxt: value })\r\n        if (value) this.setState({ isTxt: true })\r\n        else this.setState({ isTxt: false })\r\n    }\r\n\r\n    handleClick = e => {\r\n        if (this.commentRef?.current?.contains(e.target)) {\r\n            return\r\n        } else {\r\n            this.setState({ isFocus: false })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.stopPropagation()\r\n        const { isTxt, commentTxt } = this.state\r\n        const { onUpdateCard } = this.props\r\n        if (!isTxt) return\r\n        const res = cardEditService.onAddComment(commentTxt)\r\n        onUpdateCard(...res)\r\n        this.setState({ isFocus: false, commentTxt: '' })\r\n    }\r\n\r\n    render() {\r\n        const { currCard, isFocus, isTxt, commentTxt } = this.state\r\n        const { member } = this.props\r\n        if (!currCard) return <Loader />\r\n        return (\r\n            <div className=\"comments-section\">\r\n                <section className=\"flex space-between\">\r\n                    <div className=\"card-edit-title\">\r\n                        <span><MdFormatListBulleted /></span>\r\n                        <h3>Activity</h3>\r\n                    </div>\r\n                    <button className=\"card-edit-btn\">Show details</button>\r\n                </section>\r\n\r\n                <div className=\"add-comment-container flex\">\r\n                    <MemberAvatar member={member} />\r\n                    <div className=\"new-comment\" ref={this.commentRef} style={{ width: '100%', height: isFocus ? 84 : 36, backgroundColor: '#fff' }} onClick={() => this.setState({ isFocus: true })}>\r\n                        <textarea placeholder=\"Write a comment...\" style={{ width: '100%', height: isFocus ? '50%' : '100%' }} onChange={this.handleChange} value={commentTxt} />\r\n                        {isFocus && <button className={`save-comment-btn card-edit-btn ${isTxt ? 'active' : ''}`} onClick={this.handleSubmit}>Save</button>}\r\n                    </div>\r\n                </div>\r\n\r\n                {currCard.comments?.length > 0 && <div className=\"comments-container flex column\">\r\n                    {currCard.comments.map(comment => <CommentPreview key={comment.id} comment={comment} />)}\r\n                </div>}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n}\r\n\r\nexport const CardEditActivities = connect(mapStateToProps, mapDispatchToProps)(_CardEditActivities)","import React from 'react'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { CgCreditCard } from 'react-icons/cg'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\n\r\nfunction _AttachmentPreview({ attachment, currCardId, board, onUpdateCard }) {\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const currCard = cardEditService.getCardById(currCardId, groupId)\r\n    const addedAt = cardEditService.getUploadTime(attachment.addedAt)\r\n\r\n    const toggleCover = () => {\r\n        if (currCard?.style?.imgUrl === attachment.url) currCard.style = null\r\n        else currCard.style = { imgUrl: attachment.url }\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    const checkIfCover = () => {\r\n        return currCard?.style?.imgUrl === attachment.url\r\n    }\r\n\r\n    const onRemoveAttachment = () => {\r\n        const res = cardEditService.handleFileRemove(attachment.id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"attachment-preview flex\">\r\n            <a href={attachment.url} target=\"_blank\"><div className=\"image-container\">\r\n                <img src={attachment.url} alt={attachment.title} />\r\n            </div></a>\r\n\r\n            <div className=\"right-section flex column\">\r\n                <span className=\"attachment-title\">{attachment.title}</span>\r\n                <div className=\"middle-line\">\r\n                    <span>{addedAt}</span>-\r\n                    <span>Comment</span>-\r\n                    <span onClick={onRemoveAttachment}>Delete</span>-\r\n                    <span>Edit</span>\r\n                </div>\r\n                <div className=\"attachment-cover\">\r\n                    <span><CgCreditCard /></span>\r\n                    <span onClick={toggleCover}>{checkIfCover() ? 'Remove cover' : 'Make cover'}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const AttachmentPreview = connect(mapStateToProps, mapDispatchToProps)(_AttachmentPreview);\r\n","import React, { Component } from 'react'\r\n// import { IoMdClose } from 'react-icons/io'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { FiPaperclip } from 'react-icons/fi'\r\nimport { AttachmentPreview } from './attachment-preview'\r\n\r\n\r\nclass _CardEditAttachment extends Component {\r\n    state = {\r\n        currCard: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const currCard = cardEditService.getCardById(this.props.currCardId, groupId)\r\n        this.setState({ currCard })\r\n    }\r\n\r\n    render() {\r\n        const { currCard } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"attachment-container card-edit-title\">\r\n                    <span><FiPaperclip /></span>\r\n                    <h3>Attachments</h3>\r\n                </div>\r\n                <div className=\"card-attachments\">\r\n                    {currCard?.attachments?.map((attachment, i) => <AttachmentPreview key={attachment.title + i} attachment={attachment} />)}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditAttachment = connect(mapStateToProps, mapDispatchToProps)(_CardEditAttachment);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { CardEditSidebar } from './card-edit/card-edit-sidebar'\r\nimport { LabelsMembers } from './card-edit/labels-members'\r\nimport { ChecklistEdit } from './card-edit/checklist-edit'\r\nimport { onUpdateCard, onSetCardId } from '../store/board.actions'\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport { TiCreditCard } from 'react-icons/ti'\r\nimport { CgCreditCard } from 'react-icons/cg'\r\nimport { CardEditDescription } from './card-edit/card-edit-description'\r\nimport { CardEditActivities } from './card-edit/card-edit-activities'\r\nimport { CardEditAttachment } from './card-edit/card-edit-attachment'\r\nimport { DynamicPopover } from './shared/dynamic-popover'\r\nimport { PopperCoverEdit } from './shared/popover-children/popper-cover-edit'\r\nimport { BsArchive } from 'react-icons/bs'\r\nimport { Loader } from './shared/loader'\r\n\r\nclass _CardEdit extends Component {\r\n  state = {\r\n    currCard: null,\r\n    currGroup: null,\r\n    isOpen: false,\r\n  }\r\n\r\n  modalRef = React.createRef()\r\n  coverRef = React.createRef()\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClick)\r\n    this.handleLoad()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClick)\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.board !== this.props.board) this.handleLoad()\r\n  }\r\n\r\n  handleLoad = () => {\r\n    let currCard\r\n    let currGroup\r\n    const { cardId, groupId } = this.props.match.params\r\n    this.props.onSetCardId(cardId)\r\n    if (this.props.board.groups) {\r\n      currCard = this.getDataById(cardId, groupId).currentCard\r\n      currGroup = this.getDataById(cardId, groupId).currentGroup\r\n    }\r\n    this.setState({ currCard, currGroup })\r\n  }\r\n\r\n  handleClick = e => {\r\n    const { board } = this.props\r\n    if (!this.modalRef?.current?.contains(e.target)) {\r\n      this.props.history.push(`/board/${board._id}`)\r\n    }\r\n  }\r\n\r\n  getDataById = (cardId, groupId) => {\r\n    const board = this.props.board\r\n    const currentGroup = board.groups.find((group) => group.id === groupId)\r\n    const currentCard = currentGroup.cards.find((card) => card.id === cardId)\r\n    return { currentGroup, currentCard }\r\n  }\r\n\r\n  handleInputChange = ({ target: { name, value } }) => {\r\n    this.setState({ currCard: { ...this.state.currCard, [name]: value } })\r\n  }\r\n\r\n  handlePropertyChange = (card = this.state.currCard) => {\r\n    const { board } = this.props\r\n    const { groupId } = this.props.match.params\r\n    this.props.onUpdateCard(card, groupId, board)\r\n  }\r\n\r\n  checkCardBackground = () => {\r\n    const { currCard } = this.state\r\n    if (!currCard.style) return\r\n    if (currCard.style.bgColor)\r\n      return {\r\n        backgroundColor: currCard.style.bgColor,\r\n        minHeight: 116,\r\n        height: 116,\r\n      }\r\n    if (currCard.style.imgUrl)\r\n      return {\r\n        background: `center / contain no-repeat url(${currCard.style.imgUrl})`,\r\n        objectFit: 'cover',\r\n        minHeight: 160,\r\n        height: 160,\r\n      }\r\n  }\r\n\r\n  goBack = () => {\r\n    this.props.history.goBack()\r\n  }\r\n\r\n  render() {\r\n    const { currCard, currGroup } = this.state\r\n    const { board } = this.props\r\n    if (!currCard) return <Loader />\r\n    const bg = this.checkCardBackground()\r\n    return (\r\n      <div className='edit-modal-container'>\r\n\r\n        <section className='card-edit' ref={this.modalRef}>\r\n          {currCard.style && <div className='card-edit-bg' style={bg}></div>}\r\n          <Link to={`/board/${board._id}`}>\r\n            <button className='close-modal-btn'>\r\n              <IoMdClose />\r\n            </button>\r\n          </Link>\r\n\r\n          {currCard.style && (\r\n            <div ref={this.coverRef} className='btn-wrapper relative'>\r\n              <button\r\n                className='change-cover-btn'\r\n                onClick={() => this.setState({ isOpen: !this.state.isOpen })}\r\n              >\r\n                <span className='cover-icon'>\r\n                  <TiCreditCard />\r\n                </span>\r\n                <span>Cover</span>\r\n              </button>\r\n              {this.state.isOpen && (\r\n                <DynamicPopover\r\n                  onClose={() => this.setState({ isOpen: false })}\r\n                  title='Cover'\r\n                  ref={this.coverRef}\r\n                >\r\n                  <PopperCoverEdit\r\n                    onClose={() => this.setState({ isOpen: false })}\r\n                  />\r\n                </DynamicPopover>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {currCard.isArchive && (\r\n            <div className='archive-msg'>\r\n              <span>\r\n                <BsArchive />\r\n              </span>\r\n              <p>This card is archived</p>\r\n            </div>\r\n          )}\r\n\r\n          <div className='card-edit-header card-title-container'>\r\n            <span>\r\n              <CgCreditCard />\r\n            </span>\r\n            <input\r\n              className='title-input'\r\n              type='text'\r\n              value={currCard.title}\r\n              name='title'\r\n              onChange={this.handleInputChange}\r\n              onBlur={() => this.handlePropertyChange()}\r\n            />\r\n          </div>\r\n\r\n          <div className='list-name-container'>\r\n            <p>\r\n              in list <span className='list-name'>{currGroup.title}</span>\r\n            </p>\r\n          </div>\r\n\r\n          <div className='card-edit-main-container flex'>\r\n            <div className='card-edit-main'>\r\n              <LabelsMembers />\r\n\r\n              <CardEditDescription />\r\n\r\n              {currCard.attachments && currCard.attachments.length > 0 && (\r\n                <CardEditAttachment />\r\n              )}\r\n\r\n              {currCard.checklists?.map((checklist) => (\r\n                <div\r\n                  key={checklist.id}\r\n                  className='checklists-container flex column'\r\n                >\r\n                  <ChecklistEdit\r\n                    checklist={checklist}\r\n                    currCard={currCard}\r\n                    handlePropertyChange={this.handlePropertyChange}\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              <CardEditActivities member={this.props.user} />\r\n            </div>\r\n\r\n            <CardEditSidebar goBack={this.goBack} />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    user: state.userModule.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateCard,\r\n  onSetCardId,\r\n}\r\n\r\nexport const CardEdit = connect(mapStateToProps, mapDispatchToProps)(_CardEdit)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { onUpdateBoard, onUpdateCard, onAddCard } from '../../store/board.actions.js';\r\n\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport { GrClose } from 'react-icons/gr';\r\nimport { utilService } from '../../services/util.service';\r\nimport { activityTxtMap } from '../../services/activity.service.js'\r\n\r\n\r\nclass _AddBoardItem extends React.Component {\r\n  state = {\r\n    newItem: {\r\n      title: '',\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.textInput.focus();\r\n  }\r\n\r\n  handleChange = (ev) => {\r\n    const { target } = ev;\r\n    let newItem = this.state.newItem;\r\n    newItem[target.name] = target.value;\r\n    this.setState({ newItem });\r\n  };\r\n\r\n  onKeyUpEnter=(ev)=>{\r\n    if(ev.key==='Enter') this.onAddItem(ev)\r\n  }\r\n  \r\n  onAddItem = (ev) => {\r\n    ev.preventDefault();\r\n    const { newItem } = this.state;\r\n    if(!newItem.title) return\r\n    newItem.id = utilService.makeId();\r\n    if (this.props.type === 'group') {\r\n      if(!newItem.cards) newItem.cards=[]\r\n      \r\n      // ADD ACTIVITY\r\n      const activity = {txt: activityTxtMap.addGroup(newItem.title)}\r\n      \r\n      const action = { type: 'ADD_GROUP', group: newItem };\r\n      this.props.onUpdateBoard(action, this.props.board, activity);\r\n    }\r\n    else if (this.props.type === 'card') {\r\n      const newCard = {...newItem , isComplete: false };\r\n      \r\n      // ADD ACTIVITY\r\n      const activity = {txt: activityTxtMap.addCard(newCard.title), card: newCard, groupId: this.props.groupId}\r\n\r\n      this.props.onAddCard( newCard, this.props.groupId, this.props.board, activity);\r\n    }\r\n    this.setState({newItem: {title: ''}})\r\n  };\r\n\r\n  render() {\r\n    const { title } = this.state.newItem;\r\n    const { onToggleAddPop } = this.props;\r\n    const renderedType = this.props.type === 'card' ? this.props.type : 'list';\r\n    return (\r\n      <section className='add-board-item'>\r\n        <form onSubmit={this.onAddItem} onKeyUp={this.onKeyUpEnter}>\r\n          <textarea\r\n            placeholder={`Enter a title for this ${renderedType}`}\r\n            ref={(input) => {\r\n              this.textInput = input;\r\n            }}\r\n            value={title}\r\n            name='title'\r\n            onChange={this.handleChange}\r\n            onBlur={this.onAddItem}\r\n          />\r\n          <div className='form-btns flex align-center'>\r\n            <button type='submit'>Add {renderedType}</button>\r\n            <button onClick={onToggleAddPop}><IoMdClose className=\"icon\" style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center'  }} /></button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateBoard,\r\n  onUpdateCard,\r\n  onAddCard\r\n};\r\n\r\nexport const AddBoardItem = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_AddBoardItem);\r\n","export function CardHeader({ cardStyle }) {\r\n  return (\r\n    <div className='card-preview-header'>\r\n      {cardStyle.bgColor && (\r\n        <div\r\n          className='header-color'\r\n          style={{ backgroundColor: cardStyle.bgColor }}\r\n        ></div>\r\n      )}\r\n      {cardStyle.imgUrl && <div className=\"image-wrapper\"><img src={cardStyle.imgUrl} /></div>}\r\n    </div>\r\n  );\r\n}\r\n","export function CardLabelBarList({ labelIds, getLabel, isCardLabelListOpen }) {\r\n\r\n    return (\r\n        <ul\r\n        className={`label-bar-list flex clean-list ${\r\n          isCardLabelListOpen ? 'open' : 'close'\r\n        }`}\r\n      >\r\n        {labelIds.map((labelId) => {\r\n          const label = getLabel(labelId);\r\n          return (\r\n            <li\r\n              className='label-bar'\r\n              key={label.id}\r\n              style={{ backgroundColor: label.color }}\r\n            >\r\n              {isCardLabelListOpen && label.title && (\r\n                <span>{label.title}</span>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }","import { BsCheckBox } from 'react-icons/bs';\r\n\r\n\r\nexport function CardChecklists({ checklists }) {\r\n  const getChecklistStr = () => {\r\n    let todosCount = 0;\r\n    let doneTodosCount = 0;\r\n    checklists.forEach((checklist) => {\r\n      checklist.todos.forEach((todo) => {\r\n        todosCount++;\r\n        if (todo.isDone) doneTodosCount++;\r\n      });\r\n    });\r\n    return doneTodosCount + '/' + todosCount;\r\n  };\r\n  return (\r\n    <div className='checklist-box flex align-center'>\r\n      <BsCheckBox />\r\n      <span>{getChecklistStr()}</span>\r\n    </div>\r\n  );\r\n}\r\n","import { GrCheckbox } from 'react-icons/gr';\r\nimport { GrCheckboxSelected } from 'react-icons/gr';\r\nimport { FiClock } from 'react-icons/fi';\r\n\r\nexport function CardDueDate({ card, groupId, toggleCardComplete }) {\r\n  const getFormatedTime = (dueDate) => {\r\n    const date = new Date(dueDate);\r\n    const day = date.getDate();\r\n    const month = date.toLocaleString('en', { month: 'short' });\r\n    const formatedTime = month + ' ' + day;\r\n    return formatedTime;\r\n  };\r\n\r\n  const getDueTimeStyle = (card) => {\r\n    //complete\r\n    if (card.isComplete) return { backgroundColor: '#61BD4F' };\r\n    //due soon\r\n    else if (\r\n      card.dueDate - Date.now() > 0 &&\r\n      card.dueDate - Date.now() < 1000 * 60 * 60 * 24\r\n    )\r\n      return { backgroundColor: '#F2D600' };\r\n    //overdue\r\n    else if (card.dueDate - Date.now() < 0)\r\n      return { backgroundColor: '#EB5A46' };\r\n    //none of the above\r\n    return { backgroundColor: 'inherit', color: 'unset' };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='due-date-box flex align-center'\r\n      style={getDueTimeStyle(card)}\r\n      onClick={(event) => toggleCardComplete(event, groupId, card)}\r\n    >\r\n      <span className='clock-icon flex align-center'>\r\n        <FiClock />\r\n      </span>\r\n      <span className='check-icon'>\r\n        {card.isComplete ? (\r\n          <GrCheckboxSelected color={'inherit'} />\r\n        ) : (\r\n          <GrCheckbox />\r\n        )}\r\n      </span>\r\n      <span>{getFormatedTime(card.dueDate)}</span>\r\n    </div>\r\n  );\r\n}\r\n","import { GrTextAlignFull } from 'react-icons/gr';\r\nimport { ImAttachment } from 'react-icons/im';\r\n\r\nimport { MemberAvatar } from '../../cmps/shared/member-avatar.jsx';\r\nimport { CardChecklists } from './card-checklists';\r\nimport { CardDueDate } from '../card-preview/card-duedate.jsx';\r\n\r\nexport function CardFooter({card, groupId, toggleCardComplete}) {\r\n\r\n    return (\r\n        \r\n        <div className='card-preview-footer flex align-center'>\r\n        {card.dueDate && (\r\n          <CardDueDate\r\n            card={card}\r\n            groupId={groupId}\r\n            toggleCardComplete={toggleCardComplete}\r\n          />\r\n        )}\r\n\r\n        {card.description && (\r\n          <GrTextAlignFull title={'This card has a description'} />\r\n        )}\r\n\r\n        {card.attachments && card.attachments.length > 0 && (\r\n          <div className='attachment-box flex align-center'>\r\n            <span className='flex align-center'>\r\n              <ImAttachment />\r\n            </span>\r\n            <span>{card.attachments.length}</span>\r\n          </div>\r\n        )}\r\n\r\n        {card.checklists && (\r\n            <CardChecklists checklists={card.checklists} />\r\n        )}\r\n\r\n        {card.isArchive && (\r\n          <span>\r\n            Archived\r\n          </span>\r\n        )}\r\n\r\n        {card.members && (\r\n          <div className='card-members-list flex'>\r\n            {card.members.map((member, index) => (\r\n              <MemberAvatar\r\n                member={member}\r\n                size={'md'}\r\n                key={index}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n}","\r\nimport { CardHeader } from '../card-preview/card-header.jsx';\r\nimport { CardLabelBarList } from '../card-preview/card-label-bar-list.jsx';\r\nimport { CardFooter } from '../card-preview/card-footer.jsx';\r\nimport { HiOutlinePencil } from 'react-icons/hi';\r\n\r\nexport function CardPreviewContent({\r\n    card,\r\n    groupId,\r\n    onToggleQuickCardEditor,\r\n    openCardEdit,\r\n    toggleCardComplete,\r\n    getLabel,\r\n    toggleCardLabelList,\r\n    isCardLabelListOpen\r\n}) {\r\n  return (\r\n    <div\r\n      className='card-preview flex space-between'\r\n      // onClick={() => openCardEdit(groupId, card.id)}\r\n    >\r\n      {!card.isArchive && (\r\n        <button\r\n          className='hover-edit-btn'\r\n          onClick={(event) => onToggleQuickCardEditor(event, card, groupId)}\r\n        >\r\n          <HiOutlinePencil />\r\n        </button>\r\n      )}\r\n\r\n      {card.style && <CardHeader cardStyle={card.style} />}\r\n\r\n      <div className='card-details'>\r\n        {card.labelIds && (\r\n          <div onClick={toggleCardLabelList}>\r\n            <CardLabelBarList\r\n              labelIds={card.labelIds}\r\n              getLabel={getLabel}\r\n              isCardLabelListOpen={isCardLabelListOpen}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <p>{card.title}</p>\r\n\r\n        <CardFooter\r\n          card={card}\r\n          groupId={groupId}\r\n          toggleCardComplete={toggleCardComplete}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from 'react-redux';\r\n\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport { HiOutlinePencil } from 'react-icons/hi';\r\n\r\nimport { CardHeader } from '../card-preview/card-header.jsx';\r\nimport { CardLabelBarList } from '../card-preview/card-label-bar-list.jsx';\r\nimport { CardFooter } from '../card-preview/card-footer.jsx';\r\n\r\nimport {CardPreviewContent} from './card-preview-content.jsx'\r\n\r\nfunction _CardPreview({\r\n  card,\r\n  groupId,\r\n  openCardEdit,\r\n  isCardLabelListOpen,\r\n  toggleCardLabelList,\r\n  toggleCardComplete,\r\n  onToggleQuickCardEditor,\r\n  index,\r\n  getLabel,\r\n}) {\r\n  return (\r\n    <div\r\n      className='card-wrapper'\r\n      onClick={() => openCardEdit(groupId, card.id)}\r\n\r\n      // style={{ display: card.isArchive ? 'none' : 'unset' }}\r\n    >\r\n      <Draggable draggableId={card.id} index={index}>\r\n        {(provided) => {\r\n          return (\r\n            <li\r\n              ref={provided.innerRef}\r\n              {...provided.dragHandleProps}\r\n              {...provided.draggableProps}\r\n            >\r\n              <CardPreviewContent \r\n                card={card}\r\n                groupId={groupId}\r\n                openCardEdit={openCardEdit}\r\n                isCardLabelListOpen={isCardLabelListOpen}\r\n                toggleCardLabelList={toggleCardLabelList}\r\n                toggleCardComplete={toggleCardComplete}\r\n                onToggleQuickCardEditor={onToggleQuickCardEditor}\r\n                getLabel={getLabel}\r\n              />\r\n              {/* <div\r\n                className='card-preview flex space-between'\r\n                onClick={() => openCardEdit(groupId, card.id)}\r\n              >\r\n                {!card.isArchive && (\r\n                  <button\r\n                    className='hover-edit-btn'\r\n                    onClick={(event) =>\r\n                      onToggleQuickCardEditor(event, card, groupId)\r\n                    }\r\n                  >\r\n                    <HiOutlinePencil />\r\n                  </button>\r\n                )}\r\n\r\n                {card.style && <CardHeader cardStyle={card.style} />}\r\n\r\n                <div className='card-details'>\r\n                  {card.labelIds && (\r\n                    <div onClick={toggleCardLabelList}>\r\n                      <CardLabelBarList\r\n                        labelIds={card.labelIds}\r\n                        getLabel={getLabel}\r\n                        isCardLabelListOpen={isCardLabelListOpen}\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  <p>{card.title}</p>\r\n\r\n                  <CardFooter\r\n                    card={card}\r\n                    groupId={groupId}\r\n                    toggleCardComplete={toggleCardComplete}\r\n                  />\r\n                </div>\r\n              </div> */}\r\n            </li>\r\n          );\r\n        }}\r\n      </Draggable>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nexport const CardPreview = connect(mapStateToProps)(_CardPreview);\r\n","export function GroupActions({groupId , onToggleAddPop, toggleGroupArchive}) {\r\n  return (\r\n    <div className='group-actions flex column'>\r\n      <button onClick={onToggleAddPop}>Add card...</button>\r\n      <button onClick={()=>toggleGroupArchive(groupId)}>Archive this list...</button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\n\r\nimport { BsThreeDots } from 'react-icons/bs';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport { GrClose } from 'react-icons/gr';\r\nimport { CardPreview } from './card-preview.jsx';\r\n\r\nimport { GroupActions } from '../shared/popover-children/group-actions.jsx';\r\nimport { AddBoardItem } from '../shared/add-board-item.jsx';\r\nimport { DynamicPopover } from '../shared/dynamic-popover.jsx';\r\nimport { activityTxtMap } from '../../services/activity.service.js';\r\n\r\nexport class GroupPreview extends Component {\r\n  state = {\r\n    isAddPopOpen: false,\r\n    groupTitle: '',\r\n    isPopoverOpen: false,\r\n  };\r\n\r\n  groupEditRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      ...this.state,\r\n      groupTitle: this.props.group.title,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.group !== this.props.group) {\r\n      this.setState({\r\n        ...this.state,\r\n        groupTitle: this.props.group.title,\r\n      });\r\n    }\r\n  }\r\n\r\n  onToggleAddPop = () => {\r\n    this.setState({ isAddPopOpen: !this.state.isAddPopOpen });\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  onChangeGroupTitle = () => {\r\n    const group = this.props.group;\r\n    group.title = this.state.groupTitle;\r\n    const action = { type: 'UPDATE_GROUP', group };\r\n    const activity = {txt: activityTxtMap.changeGroupTitle(group.title)}\r\n    this.props.updateBoard(action, activity);\r\n  };\r\n\r\n  blurFocus = (event) => {\r\n    event.target.blur()\r\n  };\r\n\r\n  setFocus = (event) => {\r\n    event.target.focus();\r\n  };\r\n\r\n  handleFocus = (event) => {\r\n    event.target.select();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      group,\r\n      openCardEdit,\r\n      toggleCardLabelList,\r\n      isCardLabelListOpen,\r\n      index,\r\n      toggleCardComplete,\r\n      toggleGroupArchive,\r\n      onToggleQuickCardEditor,\r\n      getLabel\r\n    } = this.props;\r\n    const { isAddPopOpen, groupTitle, isPopoverOpen } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={'group-wrapper'}\r\n        style={{ display: group.isArchive ? 'none' : 'unset' }}\r\n      >\r\n        <Draggable draggableId={group.id} index={index}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              className='group-preview flex column'\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              <div className='group-header flex space-between align-center'>\r\n                <input\r\n                  className='clean-input'\r\n                  type='text'\r\n                  value={groupTitle}\r\n                  name='groupTitle'\r\n                  // onFocus={this.handleFocus}\r\n                  onMouseDown={this.blurFocus}\r\n                  onMouseUp={this.setFocus}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.onChangeGroupTitle}\r\n                />\r\n\r\n                <div\r\n                  className='relative'\r\n                  ref={this.groupEditRef}\r\n                  onClick={() =>\r\n                    this.setState({ isPopoverOpen: !isPopoverOpen })\r\n                  }\r\n                >\r\n                  <button>\r\n                    <BsThreeDots />\r\n                  </button>\r\n                  {isPopoverOpen && (\r\n                    <DynamicPopover\r\n                      onClose={() => this.setState({ isPopoverOpen: false })}\r\n                      ref={this.groupEditRef}\r\n                      title='List actions'\r\n                    >\r\n                      <GroupActions\r\n                        groupId={group.id}\r\n                        onToggleAddPop={this.onToggleAddPop}\r\n                        toggleGroupArchive={toggleGroupArchive}\r\n                      />\r\n                    </DynamicPopover>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <Droppable droppableId={group.id}>\r\n                {(provided) => (\r\n                  <ul\r\n                    className='card-list clean-list'\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {group.cards &&\r\n                      group.cards.map((card, index) => {\r\n                        return (\r\n                          <CardPreview\r\n                            key={card.id}\r\n                            card={card}\r\n                            index={index}\r\n                            groupId={group.id}\r\n                            openCardEdit={openCardEdit}\r\n                            toggleCardLabelList={toggleCardLabelList}\r\n                            isCardLabelListOpen={isCardLabelListOpen}\r\n                            toggleCardComplete={toggleCardComplete}\r\n                            onToggleQuickCardEditor={onToggleQuickCardEditor}\r\n                            getLabel={getLabel}\r\n                          />\r\n                        );\r\n                      })}\r\n                    {provided.placeholder}\r\n                    {isAddPopOpen && (\r\n                      <AddBoardItem\r\n                        onToggleAddPop={this.onToggleAddPop}\r\n                        type={'card'}\r\n                        groupId={group.id}\r\n                      />\r\n                    )}\r\n                  </ul>\r\n                )}\r\n              </Droppable>\r\n\r\n                {!isAddPopOpen && (\r\n              <div className='group-footer flex space-between align-center'>\r\n                  <button\r\n                    className='add-boarditem-btn flex align-center'\r\n                    onClick={this.onToggleAddPop}\r\n                  >\r\n                    <i className='flex align-center'>\r\n                      <AiOutlinePlus />\r\n                    </i>\r\n                    <span>Add a card</span>\r\n                  </button>\r\n              </div>\r\n                )}\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// import React, { Component } from 'react';\r\n\r\nimport { GroupPreview } from './group-preview.jsx';\r\n\r\nexport function GroupList({\r\n  groups,\r\n  openCardEdit,\r\n  updateBoard,\r\n  toggleCardLabelList,\r\n  isCardLabelListOpen,\r\n  toggleCardComplete,\r\n  toggleGroupArchive,\r\n  onToggleQuickCardEditor,\r\n  getLabel\r\n}) {\r\n  return (\r\n    <ul className='group-list clean-list flex'>\r\n      {groups.map((group, index) => {\r\n        return (\r\n          <GroupPreview\r\n            key={group.id}\r\n            index={index}\r\n            group={group}\r\n            openCardEdit={openCardEdit}\r\n            updateBoard={updateBoard}\r\n            toggleCardLabelList={toggleCardLabelList}\r\n            isCardLabelListOpen={isCardLabelListOpen}\r\n            toggleCardComplete={toggleCardComplete}\r\n            toggleGroupArchive={toggleGroupArchive}\r\n            onToggleQuickCardEditor={onToggleQuickCardEditor}\r\n            getLabel={getLabel}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { MemberAvatar } from '../shared/member-avatar';\r\nimport { onUpdateBoard } from '../../store/board.actions'\r\nimport { IoCheckmarkSharp } from 'react-icons/io5'\r\nimport { activityTxtMap } from '../../services/activity.service';\r\nimport { socketService } from '../../services/socket.service';\r\n\r\nclass _InviteMembers extends React.Component {\r\n\r\n    state = {\r\n        search: ''\r\n    }\r\n\r\n    getMembersIds = () => {\r\n        const { board } = this.props\r\n        const boardMembersIds = board.members.map(member => member._id)\r\n        return boardMembersIds\r\n    }\r\n\r\n    inviteToBoard = (user) => {\r\n        const { board, onUpdateBoard } = this.props\r\n        // const members = board.members\r\n        // members.push({_id: user._id, fullname: user.fullname, imgUrl: user.imgUrl})\r\n        const memberIds = this.getMembersIds()\r\n        const memberToAdd = { _id: user._id, fullname: user.fullname, imgUrl: user.imgUrl }\r\n        if (memberIds.includes(memberToAdd._id)) {\r\n            const activity = { txt: activityTxtMap.removeMember(user.fullname) }\r\n            onUpdateBoard({ type: 'REMOVE_BOARD_MEMBER', memberId: user._id }, board, activity)\r\n            return\r\n        }\r\n        const activity = { txt: activityTxtMap.inviteMember(user.fullname) }\r\n        onUpdateBoard({ type: 'ADD_BOARD_MEMBER', member: memberToAdd }, board, activity)\r\n        console.log(board.members)\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ ...this.state, [field]: value });\r\n    }\r\n\r\n    render() {\r\n        const { search } = this.state\r\n        const { users } = this.props\r\n        const memberIds = this.getMembersIds()\r\n\r\n        return (\r\n            <div className=\"invite-members\">\r\n                <input className=\"search-input\" type=\"text\" onChange={this.handleChange} name=\"search\" value={search} autoFocus placeholder=\"Search...\" />\r\n                <ul className=\"member-list clean-list\">\r\n                    {users.filter(user => user.fullname.includes(search)).map(user =>\r\n                        <li className=\"user-preview\" key={user._id} onClick={() => this.inviteToBoard(user)} >\r\n                            <div className=\"user-details\">\r\n                                <MemberAvatar member={user} />\r\n                                <span className=\"user-name\">{user.fullname}</span>\r\n                            </div>\r\n                            <span>{(memberIds.includes(user._id)) ? <IoCheckmarkSharp /> : ''}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users,\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const InviteMembers = connect(mapStateToProps, mapDispatchToProps)(_InviteMembers);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { activityTxtMap } from '../../services/activity.service';\r\n\r\nimport { onUpdateBoard } from '../../store/board.actions'\r\n\r\nclass _ChangeBG extends React.Component {\r\n\r\n    setBoardBG = (backGround) => {\r\n        const { board, onUpdateBoard } = this.props\r\n        const style = (backGround[0] === '#') ? { bgColor: backGround } : { imgUrl: backGround }\r\n        // const style = (backGround[0] === '#') ? { bgColor: backGround } : { imgUrl: backGround }\r\n      const activity = {txt: activityTxtMap.changeBackground()}\r\n        onUpdateBoard({ type: \"CHANGE_BOARD_STYLE\", style }, board, activity)\r\n    }\r\n\r\n    render() {\r\n        const images = ['https://images.pexels.com/photos/1914982/pexels-photo-1914982.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260', 'https://images.pexels.com/photos/844297/pexels-photo-844297.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/3293148/pexels-photo-3293148.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/911738/pexels-photo-911738.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/3274903/pexels-photo-3274903.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/3683056/pexels-photo-3683056.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/2170473/pexels-photo-2170473.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/2529973/pexels-photo-2529973.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/1982485/pexels-photo-1982485.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/1408221/pexels-photo-1408221.jpeg?cs=srgb&dl=pexels-irina-iriser-1408221.jpg&fm=jpg']\r\n        const colors = ['#82E0AA', '#F1948A', '#AAB7B8 ', '#C39BD3', '#85C1E9', '#F8C471']\r\n\r\n        return (\r\n            <div className=\"change-bg\">\r\n                <div className=\"images\">\r\n                    {images.map((image, idx) =>\r\n                        <div key={idx} className=\"img-container\" onClick={() => this.setBoardBG(image)}>\r\n                            <img src={image} alt={image} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <hr />\r\n                <div className=\"colors\">\r\n                    {colors.map((color, idx) =>\r\n                        <div style={{ backgroundColor: `${color}` }} key={idx} className=\"color-container\" onClick={() => this.setBoardBG(color)}></div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    };\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard,\r\n};\r\n\r\nexport const ChangeBG = connect(mapStateToProps, mapDispatchToProps)(_ChangeBG);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass _BoardIcon extends React.Component {\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        return (\r\n            <div className=\"icon\" style={(board.style.bgColor) ? { backgroundColor: board.style.bgColor } : {}} >\r\n                {board.style.imgUrl && <img src={board.style.imgUrl} alt=\"\" />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nexport const BoardIcon = connect(mapStateToProps)(_BoardIcon);","import React from \"react\";\r\nimport { IoCheckmarkSharp } from \"react-icons/io5\";\r\nimport { connect } from \"react-redux\";\r\nimport { PopperLabelPreview } from \"../card-edit/popper-label-preview\";\r\nimport { MemberAvatar } from \"../shared/member-avatar\";\r\n\r\nimport { onUpdateFilter, loadBoard } from \"../../store/board.actions\"\r\nimport { withRouter } from \"react-router\";\r\nimport { utilService } from \"../../services/util.service\";\r\n\r\nclass _SearchCards extends React.Component {\r\n    state = {\r\n        filterBy: {\r\n            txt: '',\r\n            members: [],\r\n            labels: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { location, filterBy } = this.props\r\n        const { search } = location\r\n        const params = new URLSearchParams(search)\r\n        const searchHasFilter = Object.keys(filterBy).some(filterKey => params.get(filterKey))\r\n        if (search && searchHasFilter) {\r\n            const txt = params.get('txt') || ''\r\n            const members = params.get('members')?.split(',') || []\r\n            console.log('members: ', members);\r\n            const labels = params.get('labels')?.split(',') || []\r\n            console.log('labels: ', labels);\r\n            this.props.onUpdateFilter({ txt, members, labels })\r\n            this.updateUrlSearchParams(this.props.filterBy)\r\n\r\n            console.log('filterBy from search cards: ', this.props.filterBy)\r\n        } else {\r\n            this.props.onUpdateFilter({ txt: '', members: [], labels: [] })\r\n            this.updateUrlSearchParams(this.props.filterBy)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate({ filterBy: prevFilterBy }) {\r\n        const { filterBy: currFilterBy } = this.props\r\n        if (prevFilterBy !== currFilterBy) {\r\n            this.updateUrlSearchParams(currFilterBy)\r\n            this.getFilteredBoard.bind(this)()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onUpdateFilter({ txt: '', members: [], labels: [] })\r\n        this.updateUrlSearchParams(this.props.filterBy)\r\n        this.getFilteredBoard.bind(this)()\r\n    }\r\n\r\n    updateUrlSearchParams = (filterBy) => {\r\n        const { history, location } = this.props\r\n        const urlSearchFilterBy = { ...filterBy }\r\n        for (const key in urlSearchFilterBy) {\r\n            const currVal = urlSearchFilterBy[key]\r\n            if (!currVal || (Array.isArray(currVal) && !currVal.length)) delete urlSearchFilterBy[key]\r\n        }\r\n        const search = new URLSearchParams(urlSearchFilterBy)\r\n        history.replace(`${location.pathname}?${search.toString()}`)\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        const filterBy = { ...this.props.filterBy, [field]: value }\r\n        this.props.onUpdateFilter(filterBy)\r\n    }\r\n\r\n    getFilteredBoard = utilService.debounce(() => {\r\n        const newFilterBy = { ...this.props.filterBy }\r\n        for (const key in newFilterBy) {\r\n            const currVal = newFilterBy[key]\r\n            if (!currVal || (Array.isArray(currVal) && !currVal.length)) delete newFilterBy[key]\r\n        }\r\n        this.props.loadBoard(this.props.match.params.boardId, newFilterBy)\r\n    }, 100)\r\n\r\n    handleUserClick = (user) => {\r\n        if (this.props.filterBy.members.includes(user._id)) {\r\n            const clickedIdx = this.props.filterBy.members.findIndex(member => member === user._id)\r\n            this.props.filterBy.members.splice(clickedIdx, 1)\r\n            const filterBy = { ...this.props.filterBy, members: [...this.props.filterBy.members] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        } else {\r\n            const filterBy = { ...this.props.filterBy, members: [...this.props.filterBy.members, user._id] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        }\r\n    }\r\n\r\n    handleLabelClick = (label) => {\r\n        if (this.props.filterBy.labels.includes(label.id)) {\r\n            const clickedIdx = this.props.filterBy.labels.findIndex(label => label === label)\r\n            this.props.filterBy.labels.splice(clickedIdx, 1)\r\n            const filterBy = { ...this.props.filterBy, labels: [...this.props.filterBy.labels] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        } else {\r\n            const filterBy = { ...this.props.filterBy, labels: [...this.props.filterBy.labels, label.id] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        }\r\n    }\r\n    render() {\r\n        const { board } = this.props\r\n        const { filterBy } = this.props\r\n        return (\r\n            <div className=\"search-cards\">\r\n                <input className=\"search-input\" type=\"text\" onChange={this.handleChange} name=\"txt\" value={filterBy.txt} autoFocus placeholder=\"Search...\" />\r\n                <p className=\"search-desc\">Search by term, label, member, or due time</p>\r\n\r\n                <hr />\r\n\r\n                <ul className=\"label-list clean-list\">\r\n                    {board.labels.map(label =>\r\n                        <li className=\"label-preview\" key={label.id} onClick={() => this.handleLabelClick(label)}>\r\n                            <div className=\"label-details\">\r\n                                <div className=\"label-color\" style={{ backgroundColor: label.color }} ></div>\r\n                                <p>{label.title}</p>\r\n                            </div>\r\n                            <span>{(filterBy.labels.includes(label.id)) ? <IoCheckmarkSharp /> : ''}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n                <hr />\r\n                <ul className=\"member-list clean-list\">\r\n                    {board.members.map(member =>\r\n                        <li className=\"user-preview\" key={member._id} onClick={() => this.handleUserClick(member)} >\r\n                            <div className=\"user-details\">\r\n                                <MemberAvatar member={member} />\r\n                                <span className=\"user-name\">{member.fullname}</span>\r\n                            </div>\r\n                            <span>{(filterBy.members.includes(member._id)) ? <IoCheckmarkSharp /> : ''}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        filterBy: state.boardModule.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateFilter,\r\n    loadBoard\r\n}\r\n\r\nexport const SearchCards = connect(mapStateToProps, mapDispatchToProps)(withRouter(_SearchCards));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadArchivedCards, onUpdateCard, onRemoveCard, onUnArchiveCard } from '../../store/board.actions.js';\r\nimport { Loader } from '../shared/loader.jsx';\r\nimport { CardPreviewContent } from '../board/card-preview-content.jsx';\r\n\r\nclass _Archive extends React.Component {\r\n  state = {\r\n    archivedCards: null,\r\n  };\r\n  componentDidMount() {\r\n    this.loadArchivedCards();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.board.archivedCards !== this.props.board.archivedCards) {\r\n      this.loadArchivedCards();\r\n    }\r\n  }\r\n  loadArchivedCards =  () => {\r\n    const {board} =this.props\r\n    const archivedCards = board.archivedCards ? board.archivedCards : [];\r\n    this.setState({ archivedCards });\r\n  };\r\n  // loadArchivedCards = async () => {\r\n  //   const boardId = this.props.board._id;\r\n  //   const archivedCards = await this.props.loadArchivedCards(boardId);\r\n  //   this.setState({ archivedCards });\r\n  // };\r\n  onUnarchiveCard = (card) => {\r\n    this.props.onUnArchiveCard(card, this.props.board);\r\n  };\r\n  onDeleteCard=(card)=>{\r\n    this.props.onRemoveCard(card, this.props.board)\r\n  }\r\n  render() {\r\n    const { archivedCards } = this.state;\r\n    const {\r\n      isCardLabelListOpen,\r\n      toggleCardLabelList,\r\n      getLabel,\r\n      toggleCardComplete,\r\n      openCardEdit,\r\n    } = this.props;\r\n    console.log('archivedCards in archive page', archivedCards)\r\n    return (\r\n      <div className='archive'>\r\n        {!archivedCards && <Loader />}\r\n        {archivedCards && archivedCards.length === 0 && (\r\n          <div>No archived cards...</div>\r\n        )}\r\n        {archivedCards && archivedCards.length > 0 && (\r\n          <ul className='archived-cards-list clean-list flex column align-center'>\r\n            {archivedCards.map((card, index) => {\r\n              return (\r\n                <li key={card.id}>\r\n                  <CardPreviewContent\r\n                    card={card}\r\n                    groupId={card.groupId}\r\n                    toggleCardLabelList={toggleCardLabelList}\r\n                    isCardLabelListOpen={isCardLabelListOpen}\r\n                    getLabel={getLabel}\r\n                    toggleCardComplete={toggleCardComplete}\r\n                    openCardEdit={openCardEdit}\r\n                  />\r\n                  <div className='archived-btns'>\r\n                    <button onClick={() => this.onUnarchiveCard(card)}>\r\n                      Send to board\r\n                    </button>\r\n                    <button onClick={()=>this.onDeleteCard(card)}>Delete</button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  loadArchivedCards,\r\n  onUpdateCard,\r\n  onRemoveCard,\r\n  onUnArchiveCard\r\n};\r\nexport const Archive = connect(mapStateToProps, mapDispatchToProps)(_Archive);\r\n","import React from 'react';\r\nimport { GrList } from 'react-icons/gr';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { MemberAvatar } from '../shared/member-avatar';\r\nimport Moment from 'react-moment'\r\n\r\nclass _ActivityList extends React.Component {\r\n\r\n    \r\n\r\n    getGroupTitle = (groupId) => {\r\n        const group = this.props.board.groups.find(group => group.id === groupId)\r\n        return group.title\r\n    }\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        if (board.activities.length === 0) return (<div className=\"activity\">\r\n            <div className=\"activity-header\">\r\n                <GrList />\r\n                <p>Activity</p>\r\n            </div>\r\n            <p>No Activities in this board yet</p>\r\n        </div>)\r\n        return (\r\n            <div className=\"activity\">\r\n                <div className=\"activity-header\">\r\n                    <GrList />\r\n                    <p>Activity</p>\r\n                </div>\r\n                <ul className=\"activity-list clean-list\" >\r\n                    {\r\n                        board.activities.map(activity =>\r\n                            <li key={activity.id} className=\"activity-preview\">\r\n                                <span className=\"member-avatar\"><MemberAvatar member={activity.byMember} /></span>\r\n                                <div className=\"activity-text\">\r\n                                    <span className=\"user-fullname\">{activity.byMember.fullname} </span>\r\n                                    <p>{activity.txt}</p>\r\n                                    {activity.groupId && <Link to={`/board/${board._id}/${activity.groupId}/${activity.card.id}`}> {activity.card.title}</Link>}\r\n                                    {activity.groupId && <p>in list: {this.getGroupTitle(activity.groupId)}</p>}\r\n                                    <Moment className=\"publish-time\" fromNow>{activity.createdAt}</Moment>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const ActivityList = connect(mapStateToProps, mapDispatchToProps)(_ActivityList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { onRemoveBoard } from '../../store/board.actions'\r\n\r\nclass _RemoveBoard extends React.Component {\r\n\r\n    removeBoard = async () => {\r\n        const { board, onRemoveBoard } = this.props\r\n        await onRemoveBoard(board._id)\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    checkIfAllowed = () => {\r\n        const { board, user } = this.props\r\n        return (user.isAdmin || board.createdBy._id === user._id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"remove-board flex column\">\r\n                {this.checkIfAllowed() && <>\r\n                    <p>Remove this board from workspace?</p>\r\n                    <p>This action is IRREVERSIBLE</p>\r\n                    <button className=\"remove-btn nav-button\" onClick={() => this.removeBoard()}>Remove</button>\r\n                </>}\r\n                {!this.checkIfAllowed() && <p>You Are not allowed to perform this action</p>}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        user: state.userModule.user\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onRemoveBoard\r\n};\r\n\r\nexport const RemoveBoard = connect(mapStateToProps, mapDispatchToProps)(withRouter(_RemoveBoard));","import React from 'react';\r\nimport { IoIosArrowBack, IoMdClose } from 'react-icons/io';\r\nimport { BiSearch } from 'react-icons/bi';\r\nimport { connect } from 'react-redux';\r\nimport { ChangeBG } from './change-bg';\r\nimport { BsArchiveFill } from 'react-icons/bs';\r\nimport { BoardIcon } from './board-icon';\r\nimport { SearchCards } from './search-cards';\r\nimport { Archive } from './archive';\r\nimport { ActivityList } from './activity-list';\r\nimport { withRouter } from 'react-router'\r\nimport { RemoveBoard } from './remove-board';\r\nimport { HiOutlineTrash } from 'react-icons/hi';\r\n\r\n\r\nclass _SideMenu extends React.Component {\r\n    state = {\r\n        currViewIdx: -1\r\n    }\r\n\r\n    _cmpsToRender = [{ id: 'c101', title: 'Change Background', icon: <BoardIcon />, component: ChangeBG },\r\n    { id: 'c102', title: 'Search Cards', icon: <BiSearch />, component: SearchCards },\r\n    { id: 'c103', title: 'Archive', icon: <BsArchiveFill />, component: Archive },\r\n    { id: 'c104', title: 'Remove Board', icon: <HiOutlineTrash />, component: RemoveBoard }]\r\n    // { id: 'c103', title: 'Archive - Under Construction 🚧', icon: <BsArchiveFill />, component: Archive }]\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.search) this.setState((prevState) => ({ ...prevState, currViewIdx: 1 }))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState((prevState) => ({ ...prevState, currViewIdx: -1 }))\r\n    }\r\n\r\n    onSelectView = (viewId) => {\r\n        this.setState((prevState) => ({ ...prevState, currViewIdx: viewId }))\r\n    }\r\n\r\n    getViewById = () => {\r\n        const { currViewIdx } = this.state\r\n        const currView = this._cmpsToRender[currViewIdx]\r\n        console.log('selected view: ', currView)\r\n        return currView.component\r\n    }\r\n\r\n    onBack = () => {\r\n        this.setState((prevState) => ({ ...prevState, currViewIdx: -1 }))\r\n    }\r\n\r\n    /* priavte cmps */\r\n    _CurrView = () => {\r\n        const props= this.props\r\n        const { component: Component } = this._cmpsToRender[this.state.currViewIdx]\r\n        return <Component {...props} />\r\n    }\r\n\r\n    _DefaultView = () => {\r\n        return <div>\r\n            <ul className=\"default-menu clean-list\">\r\n                {this._cmpsToRender.map((cmp, idx) =>\r\n                    <li onClick={() => this.onSelectView(idx)} key={cmp.id}>\r\n                        <div className=\"icon\">{cmp.icon}</div>\r\n                        <p>{cmp.title}</p>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            <hr />\r\n            <ActivityList />\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        const { onClose, toggleCardLabelList, isCardLabelListOpen, getLabel, toggleCardComplete, openCardEdit } = this.props\r\n        const { currViewIdx } = this.state\r\n        return (\r\n            <div className={`side-menu ${(this.props.isMenuOpen) ? 'menu-open' : ''}`}>\r\n                <div className=\"title\">\r\n                    <span className={`back-btn ${(currViewIdx !== -1) ? 'show-btn' : ''} `} onClick={() => this.onBack()}><IoIosArrowBack /></span>\r\n                    <p className=\"menu-title\" >{currViewIdx === -1 ? 'Menu' : this._cmpsToRender[currViewIdx].title}</p>\r\n                    <span className=\"close-btn\" onClick={onClose}><IoMdClose /></span>\r\n                </div>\r\n                <hr />\r\n                <div className=\"rendered-cmp\">\r\n                    {currViewIdx === -1 ? <this._DefaultView /> : <this._CurrView />}\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const SideMenu = connect(mapStateToProps, mapDispatchToProps)(withRouter(_SideMenu));","import React, { useEffect } from 'react'\r\nimport { MemberAvatar } from '../../shared/member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateBoard } from '../../../store/board.actions'\r\nimport { IoCheckmarkSharp } from 'react-icons/io5'\r\n\r\n\r\nconst _BoardEditMembers = ({ members, board, onUpdateBoard, onClose }) => {\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            onClose()\r\n        }\r\n    },[onClose])\r\n\r\n    const removeFromBoard = (memberId) => {\r\n        // const activity = {txt: activityTxtMap.inviteMember(user.fullname)}\r\n        onUpdateBoard({ type: 'REMOVE_BOARD_MEMBER', memberId: memberId }, board)\r\n    }\r\n\r\n    return (\r\n        <div className=\"member-list\" style={{ color: '#172b4d' }}>\r\n            {members.map(member => (\r\n                <div key={member._id} className=\"popper-member-preview flex\" onClick={() => removeFromBoard(member._id)}>\r\n                    <div className='list-item-layover'></div>\r\n                    <div style={{ width: 32 }}>\r\n                        <MemberAvatar member={member} />\r\n                    </div>\r\n                    <div className='popper-member-name'>\r\n                        <p>{member.fullname}</p>\r\n                    </div>\r\n                    <div className='popper-member-check'><IoCheckmarkSharp /></div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users,\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const BoardEditMembers = connect(mapStateToProps, mapDispatchToProps)(_BoardEditMembers);\r\n ","import React from 'react'\r\nimport { AiOutlineStar } from 'react-icons/ai'\r\nimport { RiBarChartFill } from 'react-icons/ri'\r\nimport { HiDotsHorizontal } from 'react-icons/hi'\r\nimport { FaUserAlt } from 'react-icons/fa'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\n\r\nimport { onUpdateBoard } from '../../store/board.actions.js'\r\nimport { loadUsers } from '../../store/user.actions.js'\r\nimport { MemberAvatar } from '../shared/member-avatar.jsx'\r\nimport { InviteMembers } from './invite-members.jsx'\r\nimport { DynamicPopover } from '../shared/dynamic-popover.jsx'\r\nimport { SideMenu } from '../side-menu/side-menu.jsx'\r\nimport { BoardEditMembers } from '../shared/popover-children/board-edit-members'\r\nimport { withRouter } from 'react-router'\r\n\r\nclass _BoardHeader extends React.Component {\r\n\r\n    state = {\r\n        isInviteOpen: false,\r\n        boardTitle: this.props.board.title,\r\n        isMenuOpen: false,\r\n        numOfShownMembers: 5,\r\n        isExtraMembersOpen: false,\r\n        isTotalMembersOpen: false\r\n    }\r\n\r\n    inviteRef = React.createRef()\r\n    membersRef = React.createRef()\r\n    totalMembersRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.handleResize)\r\n        this.handleResize()\r\n        this.props.loadUsers()\r\n        if (this.props.location.search) this.setState({ isMenuOpen: true })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize)\r\n    }\r\n\r\n    handleResize = () => {\r\n        const { numOfShownMembers } = this.state\r\n        if (window.innerWidth < 800) {\r\n            if (numOfShownMembers === 3) return\r\n            this.setState({ numOfShownMembers: 3 })\r\n        } else {\r\n            if (numOfShownMembers === 5) return\r\n            this.setState({ numOfShownMembers: 5 })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.board.title !== this.props.board.title) {\r\n            this.setState({ boardTitle: this.props.board.title })\r\n        }\r\n    }\r\n\r\n    toggleStarredBoard = () => {\r\n        const { board, onUpdateBoard } = this.props\r\n        board.isStarred = !board.isStarred\r\n        onUpdateBoard({ type: 'TOGGLE_STARRED', isStarred: board.isStarred }, board)\r\n    }\r\n\r\n    handleFocus = (event) => event.target.select();\r\n\r\n    handleChange = ({ target: { name, value } }) => {\r\n        this.setState((prevState) => ({ ...prevState, [name]: value }));\r\n    }\r\n\r\n    onChangeBoardTitle = () => {\r\n        const { board, onUpdateBoard } = this.props\r\n        board.title = this.state.boardTitle\r\n        const activity = { txt: activityTxtMap.renameBoard(board.title) }\r\n        onUpdateBoard({ type: 'CHANGE_TITLE', title: board.title }, board, activity)\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState((prevState) => ({ ...prevState, isMenuOpen: !this.state.isMenuOpen }))\r\n    }\r\n\r\n    getRemainingMembers = () => {\r\n        const members = [...this.props.board.members]\r\n        members.splice(this.state.numOfShownMembers)\r\n        return members\r\n    }\r\n\r\n    getExtraMembersLength = () => (this.props.board.members.length - this.state.numOfShownMembers)\r\n\r\n    onMembersClose = () => this.setState({ isExtraMembersOpen: false })\r\n\r\n    render() {\r\n        const { board, onToggleDashboard, toggleCardLabelList, isCardLabelListOpen, getLabel, toggleCardComplete, openCardEdit } = this.props\r\n        const { boardTitle, isMenuOpen, isInviteOpen, isExtraMembersOpen, isTotalMembersOpen } = this.state\r\n        const members = this.getRemainingMembers()\r\n        const extraMembersLength = this.getExtraMembersLength()\r\n\r\n        return (\r\n            <section className=\"board-header\">\r\n                <div className=\"left-btns\">\r\n                    <button className=\"board-title nav-button\">\r\n                        <input className='clean-input' type='text' value={boardTitle} name='boardTitle' onFocus={this.handleFocus} onChange={this.handleChange} onBlur={this.onChangeBoardTitle} />\r\n                    </button>\r\n                    <button className={`starred-btn nav-button ${(board.isStarred) ? 'starred' : ''}`} onClick={() => this.toggleStarredBoard()}><AiOutlineStar /></button> |\r\n                    <div className=\"members-container flex\"><div className=\"user-previews\">\r\n                        {members.map((member, idx) =>\r\n                            <MemberAvatar key={member._id} member={member} style={{ left: idx * -5 }} />\r\n                        )}\r\n                        {extraMembersLength > 0 && (\r\n                            <div\r\n\r\n                                ref={this.membersRef}\r\n                            >\r\n                                <div className=\"list-item-layover round\" style={{ transform: `translateX(${(members.length) * -5}px)` }} onClick={() => this.setState({ isExtraMembersOpen: !isExtraMembersOpen })}></div>\r\n                                <div\r\n                                    className=\"show-more-btn\"\r\n                                    style={{ transform: `translateX(${(members.length) * -5}px)` }}\r\n                                >\r\n                                    {`+${extraMembersLength}`}\r\n                                </div>\r\n                                {isExtraMembersOpen && <DynamicPopover onClose={() => this.setState({ isExtraMembersOpen: false })} title=\"Members\" ref={this.membersRef}>\r\n                                    <BoardEditMembers members={board.members.filter(member => member._id)} onClose={this.onMembersClose} />\r\n                                </DynamicPopover>}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                        <div className='relative' ref={this.inviteRef}>\r\n                            <button onClick={() => this.setState({ isInviteOpen: !isInviteOpen })} className=\"invite-btn nav-button\">Invite</button>\r\n                            {isInviteOpen && <DynamicPopover onClose={() => this.setState({ isInviteOpen: false })} title=\"Invite Members\" ref={this.inviteRef}>\r\n                                <InviteMembers />\r\n                            </DynamicPopover>}\r\n                        </div></div>\r\n                </div>\r\n                <div className=\"right-btns\">\r\n                    {!isMenuOpen && <>\r\n                        <div className=\"relative\" ref={this.totalMembersRef}>\r\n                            <button className=\"nav-button members-btn\" onClick={() => this.setState({ isTotalMembersOpen: !isTotalMembersOpen })}><FaUserAlt /></button>\r\n                            {isTotalMembersOpen && <DynamicPopover onClose={() => this.setState({ isTotalMembersOpen: false })} title=\"Members\" ref={this.totalMembersRef}>\r\n                                <InviteMembers />\r\n                            </DynamicPopover>}\r\n                        </div>\r\n\r\n                        <button onClick={() => onToggleDashboard(true)} className={`dashboard-btn nav-button ${(isMenuOpen) ? 'menu-open' : ''}`}><RiBarChartFill /> <span className=\"right-btn-txt\">Dashboard</span></button>\r\n                        <button onClick={() => this.toggleMenu()} className=\"right-menu-btn nav-button\"><HiDotsHorizontal /> <span className=\"right-btn-txt\">Show Menu</span></button>\r\n                    </>}\r\n                </div>\r\n                <SideMenu isMenuOpen={isMenuOpen} onClose={() => { this.toggleMenu() }} isCardLabelListOpen={isCardLabelListOpen} toggleCardLabelList={toggleCardLabelList} getLabel={getLabel} openCardEdit={openCardEdit} toggleCardComplete={toggleCardComplete} />\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        users: state.userModule.users,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    onUpdateBoard\r\n\r\n}\r\n\r\n\r\n\r\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoardHeader))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { CgCreditCard } from 'react-icons/cg';\r\nimport { MdLabelOutline } from 'react-icons/md';\r\nimport { BiUser } from 'react-icons/bi';\r\nimport { BsClock } from 'react-icons/bs';\r\nimport { GoArchive } from 'react-icons/go';\r\n\r\nimport { CardEditDate } from '../cmps/shared/popover-children/card-edit-date';\r\nimport { PopperCoverEdit } from '../cmps/shared/popover-children/popper-cover-edit.jsx';\r\nimport { CardHeader } from '../cmps/card-preview/card-header.jsx';\r\nimport { CardLabelBarList } from '../cmps/card-preview/card-label-bar-list.jsx';\r\nimport { CardFooter } from '../cmps/card-preview/card-footer.jsx';\r\nimport { cardEditService } from '../services/card-edit.service.js';\r\nimport { Loader } from './shared/loader.jsx';\r\nimport {\r\n  onUpdateCard,\r\n  onSetCardId,\r\n  onArchiveCard,\r\n} from '../store/board.actions';\r\nimport { CardEditAddToCardItem } from '../cmps/card-edit/add-to-card/card-edit-add-to-card-item.jsx';\r\nimport { LabelList } from '../cmps/shared/popover-children/label-list.jsx';\r\nimport { MemberList } from '../cmps/shared/popover-children/member-list.jsx';\r\nimport { activityTxtMap } from '../services/activity.service.js';\r\n\r\nclass _QuickCardEditor extends Component {\r\n  state = {\r\n    card: null,\r\n    cardTitle: '',\r\n    // isArchive:false\r\n  };\r\n  componentDidMount() {\r\n    const { cardId, groupId } = this.props;\r\n    this.props.onSetCardId(cardId);\r\n    this.uploadCard(cardId, groupId);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.board !== this.props.board) {\r\n      const { cardId, groupId } = this.props;\r\n      this.uploadCard(cardId, groupId);\r\n    }\r\n  }\r\n\r\n  uploadCard = (cardId, groupId) => {\r\n    const card = cardEditService.getCardById(cardId, groupId);\r\n    this.setState({ card, cardTitle: card.title });\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n  handleFocus = (event) => {\r\n    event.target.select();\r\n  };\r\n  onSave = (event) => {\r\n    const cardToSave = { ...this.state.card };\r\n    cardToSave.title = this.state.cardTitle;\r\n    // cardToSave.isArchive=this.state.isArchive\r\n    const activity = {\r\n      txt: activityTxtMap.editCard(),\r\n      card: cardToSave,\r\n      groupId: this.props.groupId,\r\n    };\r\n    this.props.onUpdateCard(\r\n      cardToSave,\r\n      this.props.groupId,\r\n      this.props.board,\r\n      activity\r\n    );\r\n    this.props.onToggleQuickCardEditor(event, null, '');\r\n  };\r\n  openCard = (event) => {\r\n    this.props.onToggleQuickCardEditor(event, null, '');\r\n    this.props.openCardEdit(this.props.groupId, this.props.cardId);\r\n  };\r\n  onArchiveCard = (event) => {\r\n    const { groupId, board } = this.props;\r\n    const cardToSave = { ...this.state.card };\r\n    cardToSave.isArchive = true;\r\n    // console.log('cardToSave', cardToSave)\r\n    this.props.onArchiveCard(cardToSave, groupId, board);\r\n    this.props.onToggleQuickCardEditor(event, null, '');\r\n    // this.setState({isArchive: true},()=> this.onSave(event))\r\n    \r\n  };\r\n\r\n  render() {\r\n    const { card, cardTitle } = this.state;\r\n    const {\r\n      groupId,\r\n      getLabel,\r\n      isCardLabelListOpen,\r\n      toggleCardComplete,\r\n      position,\r\n    } = this.props;\r\n    if (!card) return <Loader />;\r\n    // console.log(card);\r\n    return (\r\n      <div\r\n        className='quick-card-editor flex'\r\n        style={{\r\n          position: 'fixed',\r\n          top: position.top,\r\n          left: position.left,\r\n        }}\r\n      >\r\n        <div>\r\n          <div className='card-preview' style={{ width: position.width }}>\r\n            {card.style && <CardHeader cardStyle={card.style} />}\r\n\r\n            <div className='card-details'>\r\n              {card.labelIds && (\r\n                <div>\r\n                  <CardLabelBarList\r\n                    labelIds={card.labelIds}\r\n                    getLabel={getLabel}\r\n                    isCardLabelListOpen={isCardLabelListOpen}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <textarea\r\n                className='clean-input'\r\n                type='text'\r\n                value={cardTitle}\r\n                name='cardTitle'\r\n                onChange={this.handleChange}\r\n                autoFocus\r\n                onFocus={this.handleFocus}\r\n              />\r\n\r\n              <CardFooter\r\n                card={card}\r\n                groupId={groupId}\r\n                toggleCardComplete={toggleCardComplete}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button onClick={this.onSave} className='card-edit-btn secondary'>\r\n            Save\r\n          </button>\r\n        </div>\r\n        <div className='quick-editor-sidebar flex column'>\r\n          <button\r\n            onClick={this.openCard}\r\n            className='quick-editor-btn flex align-center'\r\n          >\r\n            <span className='quick-editor-btn-icon flex align-center'>\r\n              <CgCreditCard />\r\n            </span>\r\n            <span>Open card</span>\r\n          </button>\r\n          <div className='quick-editor-btn flex align-center'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: MdLabelOutline,\r\n                title: 'Edit labels',\r\n                component: LabelList,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='quick-editor-btn flex align-center'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: BiUser,\r\n                title: 'Change members',\r\n                component: MemberList,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='quick-editor-btn flex align-center'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: CgCreditCard,\r\n                title: 'Change cover',\r\n                component: PopperCoverEdit,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='quick-editor-btn flex align-center datepicker'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: BsClock,\r\n                title: 'Edit dates',\r\n                component: CardEditDate,\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            className='quick-editor-btn flex align-center'\r\n            onClick={this.onArchiveCard}\r\n          >\r\n            <span className='quick-editor-btn-icon flex align-center'>\r\n              <GoArchive />\r\n            </span>\r\n            <span>Archive</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateCard,\r\n  onSetCardId,\r\n  onArchiveCard,\r\n};\r\n\r\nexport const QuickCardEditor = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_QuickCardEditor);\r\n","import { Pie } from 'react-chartjs-2';\r\n\r\nexport function TasksPerMemberChart({ tasksPerMemberMap, labelsColors }) {\r\n  console.log('tasksPerMemberMap', tasksPerMemberMap);\r\n  // console.log('Object.keys(tasksPerMemberMap)', Object.keys(tasksPerMemberMap))\r\n  const data = {\r\n    labels: Object.keys(tasksPerMemberMap),\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: Object.values(tasksPerMemberMap),\r\n        backgroundColor: labelsColors,\r\n        borderWidth: 2,\r\n        hoverOffset: 2\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: 'black',\r\n          padding: 10\r\n        }\r\n      },\r\n    } ,\r\n  };\r\n\r\n  return (\r\n    <div className='chart'>\r\n      <h1>Tasks per Member</h1>\r\n      <Pie data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nexport function TasksPerLabelChart({ tasksPerLabelMap, labelsColors }) {\r\n  const data = {\r\n    labels: Object.keys(tasksPerLabelMap),\r\n    datasets: [\r\n      {\r\n        label: '',\r\n        data: Object.values(tasksPerLabelMap),\r\n        backgroundColor: labelsColors,\r\n        borderWidth: 2,\r\n        hoverOffset: 2,\r\n        fontColor: 'black'\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n        labels: {\r\n          fontColor: 'black'\r\n          // fontColor: '#f00'\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        ticks: {\r\n          color: 'black'\r\n          // color: 'white'\r\n        }\r\n      },\r\n      x: {\r\n        ticks: {\r\n          color: 'black'\r\n          // color: 'white'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='chart bar-chart-container' style={{ maxHeight: 400 }}>\r\n      <h1>Tasks per Label</h1>\r\n      <Bar data={data} height={null}\r\n        width={null}\r\n        options={options} />\r\n    </div>\r\n  );\r\n}\r\n","import TimeLine from \"react-gantt-timeline\";\r\n\r\nexport function TasksPerDateChart({tasks}) {\r\n  const config = {\r\n    header: {\r\n      top: {\r\n        style: {\r\n          background: \"linear-gradient( grey, black)\",\r\n          textShadow: \"0.5px 0.5px black\",\r\n          fontSize: 12\r\n        }\r\n      },\r\n      middle: {\r\n        style: {\r\n          background: \"linear-gradient( #b686c2, white)\",\r\n          fontSize: 9,\r\n          color: \"black\"\r\n        }\r\n      },\r\n      bottom: {\r\n        style: {\r\n          background: \"linear-gradient( grey, black)\",\r\n          fontSize: 9,\r\n          color: \"#b686c2\"\r\n        },\r\n        selectedStyle: {\r\n          background: \"linear-gradient( #d011dd ,#d011dd)\",\r\n          fontWeight: \"bold\",\r\n          color: \"white\"\r\n        }\r\n      }\r\n    },\r\n    taskList: {\r\n      title: {\r\n        label: \"Task Todo\",\r\n        style: {\r\n          background: \"linear-gradient( grey, black)\"\r\n        }\r\n      },\r\n      task: {\r\n        style: {\r\n          backgroundColor: \"grey\",\r\n          color: \"white\"\r\n        }\r\n      },\r\n      verticalSeparator: {\r\n        style: {\r\n          backgroundColor: \"#fbf9f9\",\r\n        },\r\n        grip: {\r\n          style: {\r\n            backgroundColor: \"#b686c2\",\r\n          }\r\n        }\r\n      }\r\n    },\r\n    dataViewPort: {\r\n      rows: {\r\n        style: {\r\n          backgroundColor: \"white\",\r\n          borderBottom: \"solid 0.5px silver\"\r\n        }\r\n      },\r\n      task: {\r\n        showLabel: false,\r\n        style: {\r\n          backgroundColor: \"#b686c2\",\r\n          borderRadius: 1,\r\n          boxShadow: \"2px 2px 8px #888888\"\r\n                }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"time-line-container\">\r\n      <TimeLine data={tasks} links={[]} config={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { IoMdClose } from 'react-icons/io';\r\nimport { BsCardText } from 'react-icons/bs';\r\nimport { AiOutlineGroup } from 'react-icons/ai';\r\nimport { CgProfile } from 'react-icons/cg';\r\nimport { TasksPerMemberChart } from './dashboard/tasks-per-members-chart.jsx';\r\nimport { TasksPerLabelChart } from './dashboard/tasks-per-labels-chart.jsx';\r\nimport {TasksPerDateChart} from './dashboard/tasks-per-date-chart.jsx'\r\nimport { boardService } from '../services/board.service.js';\r\nimport { Loader } from '../cmps/shared/loader.jsx';\r\nclass _Dashboard extends Component {\r\n  state = {\r\n    chartsData: null,\r\n  };\r\n  async componentDidMount() {\r\n    const chartsData = await boardService.dashboardQuery(this.props.board._id);\r\n    this.setState({ chartsData });\r\n  }\r\n\r\n  get labelsColor() {\r\n    return this.props.board.labels.map((label) => {\r\n      return label.color;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { chartsData } = this.state;\r\n    const { board } = this.props;\r\n    console.log('chartsDate', chartsData);\r\n    if (!chartsData) return <Loader />;\r\n    return (\r\n      <div className='dashboard-modal flex column align-center'>\r\n        <Link to={`/board/${board._id}`}>\r\n        <button\r\n          className='close-btn'\r\n        >\r\n          <IoMdClose />\r\n        </button>\r\n        </Link>\r\n        <div className='jeneral-statistics flex'>\r\n          <div className='stats flex space-between'>\r\n            <div>\r\n              <h3>All Tasks</h3>\r\n              <span>{chartsData.cardsCount}</span>\r\n            </div>\r\n            <i className='flex align-center'>\r\n              <BsCardText />\r\n            </i>\r\n          </div>\r\n          <div className='stats flex space-between'>\r\n            <div>\r\n              <h3>All Lists</h3>\r\n              <span>{chartsData.groupsCount}</span>\r\n            </div>\r\n            <i className='flex align-center'>\r\n              <AiOutlineGroup />\r\n            </i>\r\n          </div>\r\n          <div className='stats flex space-between'>\r\n            <div>\r\n              <h3>Members</h3>\r\n              <span>{board.members && board.members.length}</span>\r\n              <span>{!board.members && 0}</span>\r\n            </div>\r\n            <i className='flex align-center'>\r\n              <CgProfile />\r\n            </i>\r\n          </div>\r\n        </div>\r\n        <div className='charts flex'>\r\n          <TasksPerMemberChart\r\n            className='chart'\r\n            tasksPerMemberMap={chartsData.tasksPerMemberMap}\r\n            labelsColors={this.labelsColor}\r\n          />\r\n\r\n          <TasksPerLabelChart\r\n            className='chart'\r\n            tasksPerLabelMap={chartsData.tasksPerLabelMap}\r\n            labelsColors={this.labelsColor}\r\n          />\r\n        </div>\r\n        <TasksPerDateChart tasks={chartsData.tasks}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport const Dashboard = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_Dashboard);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from 'react-router';\r\n\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\n\r\nimport {\r\n  loadBoard,\r\n  onUpdateBoard,\r\n  onUpdateCard,\r\n  outputUpdateBoard,\r\n  resetBoard,\r\n} from '../store/board.actions.js';\r\n\r\nimport { CardEdit } from '../cmps/card-edit.jsx';\r\nimport { AddBoardItem } from '../cmps/shared/add-board-item.jsx';\r\nimport { GroupList } from '../cmps/board/group-list.jsx';\r\nimport { BoardHeader } from '../cmps/board/board-header.jsx';\r\nimport { OverlayScreen } from '../cmps/overlay-screen.jsx';\r\nimport { QuickCardEditor } from '../cmps/quick-card-editor.jsx';\r\nimport { Loader } from '../cmps/shared/loader.jsx';\r\nimport { activityTxtMap } from '../services/activity.service.js';\r\nimport { socketService } from '../services/socket.service.js';\r\nimport { userService } from '../services/user.service.js';\r\nimport { Dashboard } from '../cmps/dashboard.jsx';\r\n\r\nclass _BoardDetails extends Component {\r\n  state = {\r\n    isCardLabelListOpen: false,\r\n    isAddPopOpen: false,\r\n    quickCardEditor: {\r\n      cardToEdit: null,\r\n      groupId: '',\r\n      position: {},\r\n    },\r\n    // isDashboardOpen: false,\r\n  };\r\n  async componentDidMount() {\r\n    const { boardId } = this.props.match.params;\r\n    const filterBy = this.props.location.search;\r\n    console.log('from Board details: ', filterBy);\r\n    await this.loadBoard(boardId, filterBy);\r\n    socketService.emit('member-joined', boardId);\r\n    socketService.on('board-update', ({ action, activity }) => {\r\n      const boardToSend = action.board || this.props.board;\r\n      this.props.outputUpdateBoard(action, boardToSend, activity);\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.resetBoard();\r\n  }\r\n  loadBoard = (boardId, filterBy) => {\r\n    this.props.loadBoard(boardId, filterBy);\r\n  };\r\n  openCardEdit = (groupId, cardId) => {\r\n    this.props.history.push(`${this.props.board._id}/${groupId}/${cardId}`);\r\n  };\r\n  updateBoard = (action, activity) => {\r\n    const updatedBoard = action.board || this.props.board;\r\n    this.props.onUpdateBoard(action, updatedBoard, activity);\r\n  };\r\n\r\n  onToggleDashboard = (isOpen) => {\r\n    if (isOpen) {\r\n      this.props.history.push(`${this.props.board._id}/dashboard`);\r\n    } else {\r\n      this.props.history.goBack();\r\n    }\r\n    // this.setState({isDashboardOpen: isOpen})\r\n  };\r\n  toggleCardLabelList = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({ isCardLabelListOpen: !this.state.isCardLabelListOpen });\r\n  };\r\n  onToggleQuickCardEditor = (event, card, groupId) => {\r\n    event.stopPropagation();\r\n    const parentElement = card ? event.currentTarget.parentNode : null;\r\n    const position = card ? parentElement.getBoundingClientRect() : {};\r\n    this.setState({ quickCardEditor: { cardToEdit: card, groupId, position } });\r\n  };\r\n  toggleCardComplete = (ev, groupId, card) => {\r\n    ev.stopPropagation();\r\n    if(card.isArchive) return;\r\n    const cardToUpdate = { ...card };\r\n    cardToUpdate.isComplete = !card.isComplete;\r\n    const activity = cardToUpdate.isComplete\r\n      ? {\r\n          txt: activityTxtMap.completeCard(),\r\n          card: cardToUpdate,\r\n          groupId: groupId,\r\n        }\r\n      : {\r\n          txt: activityTxtMap.unCompleteCard(),\r\n          card: cardToUpdate,\r\n          groupId: groupId,\r\n        };\r\n    this.props.onUpdateCard(cardToUpdate, groupId, this.props.board, activity);\r\n  };\r\n  getLabel = (labelId) => {\r\n    const label = this.props.board.labels.find((label) => label.id === labelId);\r\n    return label;\r\n  };\r\n  handleOnDragEnd = (result) => {\r\n    const { destination, source, type } = result;\r\n    if (!destination) return;\r\n    const boardToChange = { ...this.props.board };\r\n    //group dragged -\r\n    if (type === 'group') {\r\n      const draggedGroup = boardToChange.groups.splice(source.index, 1);\r\n      boardToChange.groups.splice(destination.index, 0, ...draggedGroup);\r\n      this.props.onUpdateBoard({ type: '' }, boardToChange);\r\n      return;\r\n    }\r\n    const sourceGroup = {\r\n      ...boardToChange.groups.find((group) => group.id === source.droppableId),\r\n    };\r\n    const card = sourceGroup.cards.splice(source.index, 1);\r\n    //card dragged in the same group -\r\n    if (source.droppableId === destination.droppableId) {\r\n      sourceGroup.cards.splice(destination.index, 0, ...card);\r\n      const action = { type: 'UPDATE_GROUP', group: sourceGroup };\r\n      this.props.onUpdateBoard(action, boardToChange);\r\n    }\r\n    //card dragged to another group\r\n    else {\r\n      const destinationGroup = {\r\n        ...boardToChange.groups.find(\r\n          (group) => group.id === destination.droppableId\r\n        ),\r\n      };\r\n      if (destinationGroup.cards)\r\n        destinationGroup.cards.splice(destination.index, 0, ...card);\r\n      else destinationGroup.cards = [card];\r\n      boardToChange.groups = boardToChange.groups.map((currGroup) => {\r\n        if (currGroup.id === source.droppableId) return sourceGroup;\r\n        if (currGroup.id === destination.droppableId) return destinationGroup;\r\n        return currGroup;\r\n      });\r\n      this.props.onUpdateBoard({ type: '' }, boardToChange);\r\n    }\r\n  };\r\n  onToggleAddPop = () => {\r\n    this.setState({ isAddPopOpen: !this.state.isAddPopOpen });\r\n  };\r\n  toggleGroupArchive = (groupId) => {\r\n    const groupToUpdate = {\r\n      ...this.props.board.groups.find((group) => groupId === group.id),\r\n    };\r\n    groupToUpdate.isArchive = groupToUpdate.isArchive\r\n      ? !groupToUpdate.isArchive\r\n      : true;\r\n    const activity = { txt: activityTxtMap.archiveList(groupToUpdate.title) };\r\n    const action = { type: 'UPDATE_GROUP', group: groupToUpdate };\r\n    this.props.onUpdateBoard(action, this.props.board, activity);\r\n  };\r\n\r\n  render() {\r\n    const { board } = this.props;\r\n    const {\r\n      isDashboardOpen,\r\n      isCardLabelListOpen,\r\n      isAddPopOpen,\r\n      quickCardEditor,\r\n    } = this.state;\r\n    if (!board) return <Loader />;\r\n    if(board.archivedCards) console.log('board', board)\r\n    return (\r\n      <div className='board-details flex column'>\r\n        <Route path='/board/:boardId/dashboard' component={Dashboard} />\r\n        <Route path='/board/:boardId/:groupId/:cardId' component={CardEdit} />\r\n\r\n        <BoardHeader onToggleDashboard={this.onToggleDashboard} toggleCardLabelList={this.toggleCardLabelList} toggleCardComplete={this.toggleCardComplete} isCardLabelListOpen={isCardLabelListOpen} getLabel={this.getLabel} openCardEdit={this.openCardEdit}/>\r\n\r\n        <DragDropContext onDragEnd={this.handleOnDragEnd}>\r\n          <section className='group-list-container flex'>\r\n            <div className='group-list-wrapper flex'>\r\n              <Droppable\r\n                droppableId={board._id}\r\n                direction='horizontal'\r\n                type='group'\r\n              >\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                    className='flex'\r\n                  >\r\n                    {board.groups && (\r\n                      <GroupList\r\n                        groups={board.groups}\r\n                        openCardEdit={this.openCardEdit}\r\n                        updateBoard={this.updateBoard}\r\n                        toggleCardLabelList={this.toggleCardLabelList}\r\n                        isCardLabelListOpen={isCardLabelListOpen}\r\n                        toggleCardComplete={this.toggleCardComplete}\r\n                        toggleGroupArchive={this.toggleGroupArchive}\r\n                        onToggleQuickCardEditor={this.onToggleQuickCardEditor}\r\n                        getLabel={this.getLabel}\r\n                      />\r\n                    )}\r\n                    {provided.placeholder}\r\n\r\n                    <div className='add-group-container'>\r\n                      {!isAddPopOpen && (\r\n                        <button\r\n                          className='add-boarditem-btn flex align-center'\r\n                          onClick={this.onToggleAddPop}\r\n                        >\r\n                          <i className='flex align-center'>\r\n                            <AiOutlinePlus />\r\n                          </i>\r\n                          <span>Add a list</span>\r\n                        </button>\r\n                      )}\r\n                      {isAddPopOpen && (\r\n                        <AddBoardItem\r\n                          onToggleAddPop={this.onToggleAddPop}\r\n                          type={'group'}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </div>\r\n          </section>\r\n        </DragDropContext>\r\n\r\n        {quickCardEditor.cardToEdit && (\r\n          <QuickCardEditor\r\n            cardId={quickCardEditor.cardToEdit.id}\r\n            groupId={quickCardEditor.groupId}\r\n            position={quickCardEditor.position}\r\n            getLabel={this.getLabel}\r\n            toggleCardComplete={this.toggleCardComplete}\r\n            isCardLabelListOpen={isCardLabelListOpen}\r\n            onToggleQuickCardEditor={this.onToggleQuickCardEditor}\r\n            openCardEdit={this.openCardEdit}\r\n          />\r\n        )}\r\n        {quickCardEditor.cardToEdit && (\r\n          <div\r\n            onClick={(event) => this.onToggleQuickCardEditor(event, null, '')}\r\n          >\r\n            <OverlayScreen />\r\n          </div>\r\n        )}\r\n        {/* {isDashboardOpen && (\r\n          <div\r\n            onClick={() => this.onToggleDashboard(false)}\r\n          >\r\n            <OverlayScreen />\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  loadBoard,\r\n  onUpdateBoard,\r\n  outputUpdateBoard,\r\n  onUpdateCard,\r\n  resetBoard,\r\n};\r\n\r\nexport const BoardDetails = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_BoardDetails);\r\n","export default __webpack_public_path__ + \"static/media/login-svg-right.df08073f.svg\";","export default __webpack_public_path__ + \"static/media/login-svg-left.ff7c7688.svg\";","import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport { connect } from 'react-redux'\r\nimport { GoogleLogin } from 'react-google-login'\r\n\r\n// import { userService } from '../services/user.service'\r\nimport { onLogin, onSignup, loadUsers, onGoogleLogin } from '../store/user.actions'\r\nimport { Link } from 'react-router-dom'\r\nimport { SiTrello } from 'react-icons/si'\r\nimport svgRight from '../assets/img/login-svg-right.svg'\r\nimport svgLeft from '../assets/img/login-svg-left.svg'\r\n\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID\r\n\r\nclass _LoginSignup extends React.Component {\r\n\r\n    state = {\r\n        credentials: {\r\n            username: '',\r\n            password: '',\r\n            fullname: ''\r\n        },\r\n        pageMode: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadUsers()\r\n        const pageMode = this.props.location.pathname === '/login' ? 'login' : 'signup'\r\n        this.setState({ pageMode })\r\n    }\r\n\r\n    validate = (values) => {\r\n        const errors = {}\r\n        if (!values.username) {\r\n            errors.username = 'Required'\r\n        } else if (values.username.length < 6) {\r\n            errors.username = 'Please use at least 6 characters'\r\n        }\r\n        if (values.password.length < 4) {\r\n            errors.password = 'Password too short'\r\n        }\r\n        if (!values.fullname) {\r\n            errors.fullname = 'Required'\r\n        } else if (values.fullname.length < 4) {\r\n            errors.fullname = 'Please use at least 4 characters'\r\n        }\r\n        return errors\r\n    }\r\n\r\n    onSuccessGoogle = (res) => {\r\n        const { tokenId } = res\r\n        const { onGoogleLogin } = this.props\r\n        onGoogleLogin(tokenId)\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    onFailureGoogle = (res) => {\r\n        console.log('Login with google failed', res)\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        const { pageMode } = this.state\r\n        const { onLogin, onSignup } = this.props\r\n        pageMode === 'login' ? onLogin(values) : onSignup(values)\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    render() {\r\n        const { credentials, pageMode } = this.state\r\n        return (\r\n            <section className=\"login-signup-page main-container\">\r\n                <div className=\"login-signup-header\">\r\n                    <SiTrello />\r\n                    <h3 className=\"logo-text\">Marshmello</h3>\r\n                </div>\r\n                {pageMode === 'login' && <div className=\"login-signup flex column\">\r\n                    <h3>Log in to Marshmello</h3>\r\n                    <Formik initialValues={credentials} onSubmit={this.onSubmit} >\r\n                        <Form className=\"login-form flex column\">\r\n                            <Field type=\"username\" placeholder=\"Enter user name\" name=\"username\" autoFocus />\r\n                            <ErrorMessage name=\"username\" component=\"div\" />\r\n                            <Field type=\"password\" placeholder=\"Enter password\" name=\"password\" autoComplete=\"off\" />\r\n                            <ErrorMessage name=\"password\" component=\"div\" />\r\n                            <button type=\"submit\" className=\"login-signup-btn nav-button\" style={{color: '#172b4d'}}>Log in</button>\r\n                        </Form>\r\n                    </Formik>\r\n                    OR\r\n                    <br />\r\n                    <GoogleLogin\r\n                        className=\"google-login-btn flex align-center justify-center\"\r\n                        clientId='209268489709-ofnqpgb55aikiprlelkbiafntgld4mhg.apps.googleusercontent.com'\r\n                        buttonText='Continue with Google'\r\n                        onSuccess={this.onSuccessGoogle}\r\n                        onFailure={this.onFailureGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                    <Link to=\"/signup\">Sign up for an account</Link>\r\n                </div>}\r\n                {pageMode === 'signup' &&\r\n                    <div className=\"login-signup flex column\">\r\n                        <h3>Sign up for your account</h3>\r\n                        <Formik initialValues={credentials} validateOnChange={false} validateOnBlur={false} validate={this.validate} onSubmit={this.onSubmit}>\r\n                            <Form className=\"flex column\">\r\n                                <Field type=\"fullname\" placeholder=\"Enter full name\" name=\"fullname\" autoFocus />\r\n                                <ErrorMessage name=\"fullname\" component=\"p\" />\r\n                                <Field type=\"username\" placeholder=\"Enter user name\" name=\"username\" />\r\n                                <ErrorMessage name=\"username\" component=\"p\" />\r\n                                <Field type=\"password\" placeholder=\"Enter password\" name=\"password\" />\r\n                                <ErrorMessage name=\"password\" component=\"p\" />\r\n                                <button type=\"submit\" className=\"login-signup-btn nav-button\" style={{color: '#172b4d'}}>Sign up</button>\r\n                            </Form>\r\n                        </Formik>\r\n                        {/* <hr /> */}\r\n                        <Link to=\"/login\">Already have an account ? Log In</Link>\r\n                    </div>}\r\n                <div className=\"right-svg\">\r\n                    <img src={svgRight} alt=\"right-svg\" />\r\n                </div>\r\n                <div className=\"left-svg\">\r\n                    <img src={svgLeft} alt=\"left-svg\" />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    onLogin,\r\n    onSignup,\r\n    onGoogleLogin\r\n}\r\n\r\nexport const LoginSignup = connect(mapStateToProps, mapDispatchToProps)(_LoginSignup)","import { HomePage } from './pages/home-page.jsx'\r\nimport { BoardSelect } from './pages/boards-select.jsx'\r\nimport { BoardDetails } from './pages/board-details.jsx'\r\nimport { LoginSignup } from './pages/login-signup.jsx';\r\n\r\n// Routes accesible from the main navigation (in AppHeader)\r\nconst routes = [{\r\n        path: '/board/:boardId',\r\n        component: BoardDetails,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: BoardSelect,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: LoginSignup\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: LoginSignup \r\n    },\r\n    {\r\n        path: '/',\r\n        component: HomePage,\r\n    }\r\n]\r\n\r\nexport default routes;","import React, { createRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { onAddBoard, setAddingBoard } from '../../store/board.actions.js'\r\n\r\n\r\nclass _BoardAdd extends React.Component {\r\n    state = {\r\n        title: '',\r\n        style: {\r\n            imgUrl: 'https://images.pexels.com/photos/3683056/pexels-photo-3683056.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'\r\n        },\r\n        chosenImgIdx: 5\r\n    }\r\n\r\n    targetRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n        this.props.setAddingBoard(false)\r\n    }\r\n\r\n    handleClick = (ev) => {\r\n        if (this.targetRef.current.contains(ev.target)) {\r\n            // || element?.contains(ev.target)\r\n            // inside click\r\n            return\r\n        }\r\n        // outside click \r\n        this.props.onClose()\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ ...this.state, [field]: value });\r\n    }\r\n\r\n    handleImage = (ev, idx) => {\r\n        ev.preventDefault()\r\n        const imgSrc = ev.target.getAttribute('src')\r\n        this.setState({ ...this.state, style: { imgUrl: imgSrc }, chosenImgIdx: idx })\r\n    }\r\n\r\n    addBoard = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        const addedBoard = await this.props.onAddBoard(this.state)\r\n        this.props.history.push(`/board/${addedBoard._id}`)\r\n        this.props.setAddingBoard(false)\r\n    }\r\n\r\n    render() {\r\n        const images = ['https://images.pexels.com/photos/1914982/pexels-photo-1914982.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n            'https://images.pexels.com/photos/844297/pexels-photo-844297.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/3293148/pexels-photo-3293148.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/911738/pexels-photo-911738.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/3274903/pexels-photo-3274903.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/3683056/pexels-photo-3683056.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/2170473/pexels-photo-2170473.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/2529973/pexels-photo-2529973.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/1982485/pexels-photo-1982485.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940']\r\n        const { title, chosenImgIdx } = this.state\r\n        return (\r\n            <div className=\"board-add\" ref={this.targetRef}>\r\n                <form className=\"board-add-form\" onSubmit={this.addBoard} style={{background: '#000000', backgroundImage: `url(${images[chosenImgIdx]})` }} >\r\n                    <input autoFocus className={`board-title-input ${(title) ? 'editing' : ''}`} autoComplete=\"off\" type=\"text\" placeholder=\"Add board title\" name=\"title\" value={title} onChange={this.handleChange} />\r\n                    <button className={`create-btn ${(title) ? 'clickable' : ''}`} type=\"submit\">Create Board</button>\r\n                </form>\r\n                <div className=\"images-container\">\r\n                    {images.map((image, idx) =>\r\n                        <button className={`img-btn ${(idx === chosenImgIdx) ? 'chosen' : ''}`} key={idx} onClick={(ev) => this.handleImage(ev, idx)}>\r\n                            <img className=\"add-board-img\" src={image} alt={image} />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAddingBoard: state.boardModule.isAddingBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onAddBoard,\r\n    setAddingBoard\r\n}\r\nconst _BoardAddWithRouter = withRouter(_BoardAdd)\r\nexport const BoardAdd = connect(mapStateToProps, mapDispatchToProps)(_BoardAddWithRouter)","import React from 'react'\r\nimport { MemberAvatar } from '../member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { onLogout } from '../../../store/user.actions'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { withRouter } from 'react-router'\r\n\r\nclass _LoggedinUser extends React.Component {\r\n    onLogoutUser = () => {\r\n        this.props.history.push('/login')\r\n        this.props.onLogout()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"mini-user flex column\">\r\n\r\n                <div className=\"main flex\">\r\n                    <MemberAvatar size=\"lg\" member={this.props.user} />\r\n                    <div>\r\n                        <h3 className=\"mini-user-fullname\">{this.props.user.fullname}</h3>\r\n                        <p>{this.props.user.username}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"remove-member\" onClick={() => this.onLogoutUser()}>Log Out</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout\r\n}\r\nconst _LoggedinUserWithRouter = withRouter(_LoggedinUser)\r\nexport const LoggedinUser = connect(mapStateToProps, mapDispatchToProps)(_LoggedinUserWithRouter);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { CgHome } from 'react-icons/cg';\r\nimport { AiOutlinePlus, AiOutlineBell } from 'react-icons/ai';\r\nimport { SiTrello } from 'react-icons/si';\r\n\r\n\r\n// import routes from '../routes'\r\nimport { onLogin, onLogout, onSignup, loadUsers, removeUser, loadAndWatchUser } from '../store/user.actions.js'\r\nimport { userService } from '../services/user.service.js';\r\nimport { setAddingBoard } from '../store/board.actions'\r\nimport { BoardAdd } from './board/board-add.jsx';\r\nimport { MemberAvatar } from './shared/member-avatar.jsx';\r\nimport { OverlayScreen } from '../cmps/overlay-screen'\r\nimport { DynamicPopover } from './shared/dynamic-popover.jsx';\r\nimport { LoggedinUser } from './shared/popover-children/loggedin-user.jsx';\r\nimport { Loader } from './shared/loader'\r\n\r\n\r\nclass _AppHeader extends React.Component {\r\n    state = {\r\n        isPopoverOpen: false\r\n    }\r\n\r\n    userMenuRef = React.createRef()\r\n\r\n    onLogout = () => {\r\n        this.props.onLogout()\r\n    }\r\n\r\n    setAddBoard = (value) => {\r\n        this.props.setAddingBoard(value)\r\n    }\r\n\r\n    setFavicon = () => {\r\n        const favicon = document.getElementById('favicon')\r\n        favicon.href = '../../public/favicon.ico'\r\n    }\r\n\r\n    render() {\r\n        const { user, isAddingBoard } = this.props\r\n        const { isPopoverOpen } = this.state\r\n        if (!user) return <Loader />\r\n        return (\r\n            <header className=\"app-header\">\r\n                <nav className=\"nav-links\">\r\n                    <div className=\"left-links\">\r\n                        <NavLink to=\"/\"><button onClick={() => this.setFavicon()} className=\"home-btn nav-button\"><CgHome /></button></NavLink>\r\n                        <NavLink to=\"/board\"><button onClick={() => this.setFavicon()} className=\"boards-btn flex nav-button\"><SiTrello /> <span>Boards</span></button></NavLink>\r\n                    </div>\r\n                    <NavLink className=\"logo\" to=\"/\"><SiTrello /> <span> Marshmello </span></NavLink>\r\n                    <div className=\"right-links\">\r\n                        <button className=\"nav-button\" onClick={() => this.setAddBoard(true)}><AiOutlinePlus /></button>\r\n                        <button className=\"nav-button\"><AiOutlineBell /></button>\r\n                        <div className='relative' ref={this.userMenuRef}>\r\n                            <button onClick={() => this.setState({ isPopoverOpen: !isPopoverOpen })}><MemberAvatar key={user._id} member={user} /></button>\r\n                            {isPopoverOpen && <DynamicPopover onClose={() => this.setState({ isPopoverOpen: false })} title=\"User Details\" ref={this.userMenuRef}>\r\n                                <LoggedinUser member={user} onLogout={this.onLogout} />\r\n                            </DynamicPopover>}\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                {isAddingBoard && <BoardAdd onClose={() => this.setAddBoard(false)} />}\r\n                {isAddingBoard && <OverlayScreen />}\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        user: state.userModule.user,\r\n        isAddingBoard: state.boardModule.isAddingBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onLogin,\r\n    onSignup,\r\n    onLogout,\r\n    loadUsers,\r\n    removeUser,\r\n    setAddingBoard\r\n}\r\n\r\n\r\n\r\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)","import React from 'react'\r\nimport { Switch, Route, withRouter } from 'react-router'\r\nimport routes from './routes'\r\nimport { AppHeader } from './cmps/app-header'\r\nimport { connect } from 'react-redux'\r\nimport { socketService } from './services/socket.service'\r\nimport { userService } from './services/user.service'\r\n\r\nclass _RootCmp extends React.Component {\r\n\r\n    get isHeaderShown() {\r\n        const { pathname } = this.props.location\r\n        return (pathname.includes('board') || pathname.includes('boards'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app flex column\">\r\n                {this.isHeaderShown &&\r\n                    <AppHeader />\r\n                }\r\n                <main className=\"main-app\">\r\n                    <Switch>\r\n                        {routes.map(route => <Route key={route.path} component={route.component} path={route.path} />)}\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst _RootCmpWithRouter = withRouter(_RootCmp)\r\nexport const RootCmp = connect(mapStateToProps)(_RootCmpWithRouter)\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport { store } from './store/store';\nimport { RootCmp } from './root-cmp';\nimport './assets/styles/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <RootCmp />\n      </Router>{' '}\n    </Provider>{' '}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}