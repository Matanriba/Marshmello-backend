{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","store/board.reducer.js","services/async-storage.service.js","services/http.service.js","services/socket.service.js","services/util.service.js","services/user.service.js","store/user.reducer.js","store/system.reducer.js","store/store.js","services/event-bus.service.js","store/user.actions.js","assets/img/hero.png","assets/img/homepage-product.jpg","pages/home-page.jsx","cmps/board-preview.jsx","cmps/board-list.jsx","services/activity.service.js","services/board.service.js","store/board.actions.js","cmps/overlay-screen.jsx","assets/img/loader.svg","cmps/shared/loader.jsx","pages/boards-select.jsx","services/card-edit.service.js","cmps/shared/popover-children/move-card.jsx","cmps/shared/popover-children/copy-card.jsx","cmps/shared/popover-header.jsx","cmps/shared/dynamic-popover.jsx","cmps/card-edit/edit-sidebar-label.jsx","cmps/card-edit/card-edit-actions-item.jsx","cmps/card-edit/card-edit-actions.jsx","cmps/shared/member-avatar.jsx","cmps/card-edit/popper-member-preview.jsx","cmps/shared/popover-children/member-list.jsx","cmps/shared/popover-children/card-edit-date.jsx","cmps/card-edit/popper-label-preview.jsx","cmps/shared/popover-children/label-list.jsx","cmps/shared/popover-children/popover-checklist.jsx","services/cloudinary.service.js","cmps/shared/popover-children/popover-attach-file.jsx","cmps/card-edit/add-to-card/card-edit-add-to-card-item.jsx","cmps/shared/popover-children/popper-cover-edit.jsx","cmps/shared/popover-children/label-edit.jsx","cmps/card-edit/add-to-card/card-edit-add-to-card.jsx","cmps/card-edit/card-edit-sidebar.jsx","cmps/card-edit/labels-members/card-edit-duedate.jsx","cmps/card-edit/labels-members/card-edit-labels.jsx","cmps/shared/popover-children/mini-user.jsx","cmps/card-edit/members-container-member-preview.jsx","cmps/card-edit/labels-members/card-edit-members.jsx","cmps/card-edit/labels-members.jsx","cmps/card-edit/progress-bar.jsx","cmps/card-edit/todo-item.jsx","cmps/card-edit/checklist-edit.jsx","cmps/card-edit/card-edit-description.jsx","cmps/card-edit/comment-preview.jsx","cmps/card-edit/card-edit-activity-preview.jsx","cmps/card-edit/card-edit-activities.jsx","cmps/shared/popover-children/edit-attachment.jsx","cmps/card-edit/attachment-preview.jsx","cmps/card-edit/card-edit-attachment.jsx","cmps/card-edit.jsx","cmps/shared/add-board-item.jsx","cmps/card-preview/card-header.jsx","cmps/card-preview/card-label-bar-list.jsx","cmps/card-preview/card-checklists.jsx","cmps/card-preview/card-duedate.jsx","cmps/card-preview/card-footer.jsx","cmps/board/card-preview-content.jsx","cmps/board/card-preview.jsx","cmps/shared/popover-children/group-actions.jsx","cmps/board/group-preview.jsx","cmps/board/group-list.jsx","cmps/board/invite-members.jsx","services/unsplash.service.js","cmps/side-menu/change-bg.jsx","cmps/side-menu/board-icon.jsx","cmps/side-menu/search-cards.jsx","cmps/side-menu/archive.jsx","cmps/side-menu/activity-list.jsx","cmps/side-menu/remove-board.jsx","cmps/side-menu/side-menu.jsx","cmps/shared/popover-children/board-edit-members.jsx","cmps/board/board-header.jsx","cmps/quick-card-editor.jsx","cmps/dashboard/tasks-per-members-chart.jsx","cmps/dashboard/tasks-per-labels-chart.jsx","cmps/dashboard/tasks-per-date-chart.jsx","cmps/dashboard.jsx","pages/board-details.jsx","assets/img/login-svg-right.svg","assets/img/login-svg-left.svg","pages/login-signup.jsx","routes.js","cmps/board/board-add.jsx","cmps/shared/popover-children/loggedin-user.jsx","cmps/shared/popover-children/notifications.jsx","cmps/app-header.jsx","root-cmp.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialState","boards","currBoard","filteredBoard","lastRemovedBoard","isAddingBoard","currCardId","filterBy","txt","members","labels","require","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","dir","response","status","sessionStorage","clear","assign","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","utilService","makeId","length","possible","i","charAt","Math","floor","random","makeLorem","size","words","getRandomIntInclusive","min","max","ceil","delay","ms","Promise","resolve","setTimeout","debounce","func","timer","timeout","args","clearTimeout","apply","STORAGE_KEY_LOGGEDIN_USER","userService","login","logout","signup","getLoggedinUser","getMiniUser","fullUser","_id","fullname","imgUrl","getUsers","getById","update","getGueastUser","googleLogin","addUserMention","userId","mention","addMentionToStorage","users","user","updatedUser","_saveLocalUser","userCred","tokenId","mentions","removeItem","unshift","setItem","JSON","stringify","parse","getItem","watchedUser","isLoading","rootReducer","combineReducers","boardModule","action","newState","type","board","find","boardId","filter","cardId","userModule","systemModule","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","eventBusService","listener","callListener","detail","addEventListener","removeEventListener","dispatchEvent","CustomEvent","showUserMsg","loadUsers","dispatch","onLogin","credentials","onSignup","err","onLogout","onUpdateUser","myBus","_HomePage","isNavbarBG","changeHeaderStyle","scrollY","setState","onGuestLogin","props","username","password","history","push","this","document","body","style","overflowY","className","to","onClick","src","heroImg","alt","productImg","React","Component","mapDispatchToProps","HomePage","connect","BoardPreview","toggleStarredBoard","setFavicon","bgColor","backgroundColor","backgroundImage","title","isStarred","ev","preventDefault","stopPropagation","toggleIsStarred","BoardList","setAddBoard","isWorkspace","map","activityTxtMap","listName","boardName","memberName","groupName","labelName","checklistName","boardService","query","save","remove","dashboardQuery","getArchivedCards","filterByUser","URLSearchParams","toString","chartsData","archivedCards","activity","newActivity","id","byMember","card","groupId","boardToSave","createdBy","addedBoard","loadBoard","background","backgroundSize","onUpdateBoard","_getUpdatedBoard","setAddingBoard","onRemoveCard","archivedCard","onArchiveCard","isArchive","group","groups","cardIdx","cards","findIndex","prevIndex","splice","groupAction","onUnArchiveCard","cardToSave","onUpdateCard","onSetCardId","member","memberId","currGroup","OverlayScreen","cs","Loader","loader","_BoardSelect","getStarredBoards","favicon","getElementById","href","loadBoards","BoardSelect","getCardById","getState","getGroupId","some","cardEditService","handleChecklistChange","checklistId","value","newVal","checklist","checklists","todos","todo","isDone","idx","handleMemberChange","memberToAdd","handleLabelChange","labelId","labelIds","labelToAdd","label","handleDueDateChange","timestamp","dueDate","getFormattedTime","timeLeft","Date","now","date","month","getMonth","day","getDate","getUploadTime","timePassed","minutes","hours","getMinutes","getHours","handleFileAdd","attachments","addedAt","handleFileRemove","fileId","file","getGroupById","handleMoveCard","initialBoard","initialGroup","initialCardIdx","handleCopyCard","handleToggleArchive","handleRemoveCard","onAddComment","comments","author","handleCommentRemove","commentId","comment","getCommentTime","handleAttachmentEdit","attachmentId","attachment","MoveCard","onClose","useState","setCurrGroup","currPosition","setCurrPosition","useEffect","handleChange","target","name","item","onChange","positions","getPositions","boardToChange","CopyCard","currTitle","setCurrTitle","autoFocus","PopoverHeader","isMultiView","onGoBack","DynamicPopover","forwardRef","parentRef","children","targetRef","useRef","contentRef","top","bottom","right","left","setLocation","getLocation","width","current","offsetWidth","height","offsetHeight","handleClick","e","containerElement","parentElement","contains","rect","getBoundingClientRect","rightCheck","innerWidth","isOverflowY","innerHeight","parentEl","classList","add","transform","maxHeight","ref","EditSidebarLabel","Icon","position","color","CardEditActionsItem","isOpen","setIsOpen","itemRef","InnerPopperCmp","useMemo","component","icon","actions","BsArrowRight","MdContentCopy","CardEditActions","goBack","setIsArchive","setGroupId","currCard","setCurrCard","BsArrowCounterclockwise","AiOutlineMinus","GoArchive","MemberAvatar","getSize","round","PopperMemberPreview","onAddUserMention","isChecked","setIsChecked","isMemberChecked","m","createdAt","MemberList","setMembers","placeholder","matchingMembers","toLowerCase","includes","CardEditDate","startDate","endDate","setDueDate","handleSubmit","selected","getTime","inline","formatWeekDay","nameOfDay","substr","PopperLabelPreview","isLabelChecked","l","LabelList","setLabels","matchingLabels","PopoverChecklist","inputRef","setTitle","focus","select","onSubmit","htmlFor","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","json","PopoverAttachFile","setUrl","urlRef","handleImageUpload","display","CardEditAddToCardItem","isEdit","setIsEdit","setColor","EditComponent","editComponent","handleEdit","checkIfCover","_PopperCoverEdit","selectedEl","initialStyle","currStyle","selectedSize","handleCoverRemove","handleSizeChange","isFull","PopperCoverEdit","colors","LabelEdit","selectedColor","setSelectedColor","dataset","c","CardEditAddToCard","addToCardItems","BiUser","MdLabelOutline","BsCardChecklist","BsClock","FiPaperclip","CgCreditCard","CardEditSidebar","CardEditDueDate","dueDateRef","time","getDueDateLabel","isComplete","checked","textTransform","fontSize","padding","borderRadius","CardEditLabels","addButtonRef","getCardLabels","MiniUser","MembersContainerMemberPreview","isPreviewOpen","setIsPreviewOpen","userButtonRef","cursor","CardEditMembers","isListOpen","setIsListOpen","LabelsMembers","ProgressBar","completed","fillerStyles","textAlign","transition","margin","_TodoItem","todoTitle","isEditTodo","todoTextareaRef","createRef","saveTodoBtnRef","newTodoTextarea","handleMarkTodo","handleRemoveTodo","handleTitleChange","onChangeTitle","alignSelf","paddingBottom","onFocus","alignItems","justifyContent","TodoItem","_ChecklistEdit","percentage","isAddTodo","newTodo","addTodoBtnRef","setTodoPercentage","doneTodos","num","Number","isInteger","toFixed","handleInputChange","onAddTodo","onRemoveChecklist","prevProps","maxWidth","minWidth","rows","ChecklistEdit","_CardEditDescription","isDescriptionOpen","descriptionRef","setDescriptionTextarea","handleDescriptionChange","description","onBlur","CardEditDescription","CommentPreview","timeMsg","fromNow","_CardEditActivities","isFocus","isTxt","commentTxt","activities","commentRef","getCardActivities","cardActivities","CardEditActivities","EditAttachment","titleRef","AttachmentPreview","isEditOpen","setIsEditOpen","editRef","_CardEditAttachment","CardEditAttachment","_CardEdit","modalRef","coverRef","handleLoad","getDataById","currentCard","currentGroup","handlePropertyChange","checkCardBackground","minHeight","objectFit","bg","CardEdit","_AddBoardItem","newItem","onKeyUpEnter","key","onAddItem","newCard","onAddCard","textInput","onToggleAddPop","renderedType","onKeyUp","input","AddBoardItem","CardHeader","cardStyle","CardLabelBarList","getLabel","isCardLabelListOpen","CardChecklists","todosCount","doneTodosCount","forEach","getChecklistStr","CardDueDate","toggleCardComplete","getDueTimeStyle","event","toLocaleString","getFormatedTime","CardFooter","index","CardPreviewContent","onToggleQuickCardEditor","openCardEdit","toggleCardLabelList","CardPreview","draggableId","provided","innerRef","dragHandleProps","draggableProps","GroupActions","toggleGroupArchive","GroupPreview","isAddPopOpen","groupTitle","isPopoverOpen","groupEditRef","prevState","onChangeGroupTitle","updateBoard","blurFocus","blur","setFocus","handleFocus","snapshot","onMouseDown","onMouseUp","droppableId","droppableProps","GroupList","_InviteMembers","search","getMembersIds","inviteToBoard","memberIds","field","InviteMembers","API_KEY","unsplashService","getPreviewImgs","keyword","get","results","pic","preview","urls","small","full","_ChangeBG","pics","getPics","onSearch","setBoardBG","backGround","ChangeBG","_BoardIcon","BoardIcon","_SearchCards","updateUrlSearchParams","urlSearchFilterBy","currVal","Array","isArray","replace","pathname","onUpdateFilter","getFilteredBoard","newFilterBy","handleUserClick","clickedIdx","handleLabelClick","searchHasFilter","Object","keys","filterKey","split","prevFilterBy","currFilterBy","bind","SearchCards","withRouter","_Archive","loadArchivedCards","onUnarchiveCard","onDeleteCard","Archive","_ActivityList","getGroupTitle","ActivityList","_RemoveBoard","removeBoard","onRemoveBoard","checkIfAllowed","isAdmin","RemoveBoard","_SideMenu","currViewIdx","_cmpsToRender","onSelectView","viewId","getViewById","currView","onBack","_CurrView","_DefaultView","cmp","isMenuOpen","SideMenu","BoardEditMembers","_BoardHeader","isInviteOpen","boardTitle","numOfShownMembers","isExtraMembersOpen","isTotalMembersOpen","inviteRef","membersRef","totalMembersRef","handleResize","onChangeBoardTitle","toggleMenu","getRemainingMembers","getExtraMembersLength","onMembersClose","onToggleDashboard","extraMembersLength","BoardHeader","_QuickCardEditor","cardTitle","uploadCard","onSave","openCard","QuickCardEditor","TasksPerMemberChart","tasksPerMemberMap","labelsColors","datasets","values","borderWidth","hoverOffset","options","plugins","legend","TasksPerLabelChart","tasksPerLabelMap","fontColor","maintainAspectRatio","scales","y","ticks","x","TasksPerDateChart","tasks","links","header","textShadow","middle","selectedStyle","fontWeight","taskList","task","verticalSeparator","grip","dataViewPort","borderBottom","showLabel","boxShadow","_Dashboard","cardsCount","groupsCount","labelsColor","Dashboard","_BoardDetails","quickCardEditor","cardToEdit","updatedBoard","currentTarget","parentNode","cardToUpdate","handleOnDragEnd","result","destination","source","draggedGroup","sourceGroup","destinationGroup","groupToUpdate","boardToSend","outputUpdateBoard","resetBoard","isDashboardOpen","path","onDragEnd","direction","BoardDetails","_LoginSignup","pageMode","validate","errors","onSuccessGoogle","onGoogleLogin","onFailureGoogle","initialValues","autoComplete","clientId","buttonText","onFailure","cookiePolicy","validateOnChange","validateOnBlur","svgRight","svgLeft","LoginSignup","routes","_BoardAdd","chosenImgIdx","handleImage","imgSrc","getAttribute","addBoard","onAddBoard","images","image","savedBoard","_BoardAddWithRouter","BoardAdd","_LoggedinUser","onLogoutUser","_LoggedinUserWithRouter","LoggedinUser","_Notifications","markAsSeen","mentionId","currMentionIdx","Notifications","_AppHeader","isUserPopoverOpen","isNotificationPopoverOpen","userMenuRef","notificationsRef","getUnreadMentions","count","isRead","markAllMentionsAsRead","onReceiveMention","removeUser","AppHeader","_RootCmp","isHeaderShown","route","_RootCmpWithRouter","RootCmp","ReactDOM","render","StrictMode","URL","process","origin","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"wjWAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MC9FjE,I,gCCAMC,EAAe,CACjBC,OAAQ,GACRC,UAAW,KACXC,cAAe,KACfC,iBAAkB,KAClBC,eAAe,EACfC,WAAY,KACZC,SAAU,CACNC,IAAK,GACLC,QAAS,GACTC,OAAQ,K,4BCCAC,EAAQ,KACTA,EAAQ,K,sBCVjBC,EACF,QAOAC,EAAQC,IAAMC,OAAO,CACrBC,iBAAiB,IAGRC,EAAc,SACnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IAFxBF,EAAc,SAIlBC,EAAUC,GACX,OAAOC,EAAKF,EAAU,OAAQC,IALzBF,EAAc,SAOnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IARxBF,EAAc,SAUhBC,EAAUC,GACb,OAAOC,EAAKF,EAAU,SAAUC,I,SAIzBC,E,8EAAf,WAAoBF,GAApB,+BAAAG,EAAA,6DAA8BC,EAA9B,+BAAuC,MAAOH,EAA9C,+BAAqD,KAArD,kBAE0BN,EAAM,CACpBU,IAAI,GAAD,OAAKX,GAAL,OAAgBM,GACnBI,SACAH,OACAK,OAAoB,QAAXF,EAAoBH,EAAO,OANhD,cAEcM,EAFd,yBAQeA,EAAIN,MARnB,sCAUQzB,QAAQC,IAAR,qBAA0B2B,EAA1B,yCAAiEJ,EAAjE,wBAAyFC,IACzFzB,QAAQgC,IAAR,MACI,KAAIC,UAAoC,MAAxB,KAAIA,SAASC,SAC7BC,eAAeC,QACftD,OAAOC,SAASsD,OAAO,MAdnC,8D,8CCpBaC,EASb,WACE,IAAIC,EAAS,KACPD,EAAgB,CACpBE,MADoB,WAElBD,EAASE,IAd0C,KAgBrDC,GAJoB,SAIjBC,EAAWC,GACZL,EAAOG,GAAGC,EAAWC,IAEvBC,IAPoB,SAOhBF,GAAqB,IAAVC,EAAS,uDAAN,KACXL,IACAK,EACAL,EAAOM,IAAIF,EAAWC,GADlBL,EAAOO,mBAAmBH,KAGrCI,KAZoB,SAYfJ,EAAWlB,GACdc,EAAOQ,KAAKJ,EAAWlB,IAEzBuB,UAfoB,WAgBlBT,EAAS,OAGb,OAAOD,EA9BoBW,GAG7BnE,OAAOwD,cAAgBA,EAGvBA,EAAcE,QCfP,IAAMU,EAAc,CACvBC,OAQJ,WAII,IAJyB,IAAbC,EAAY,uDAAH,EACjBtC,EAAM,GACNuC,EAAW,iEAENC,EAAI,EAAGA,EAAIF,EAAQE,IACxBxC,GAAOuC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASD,SAG/D,OAAOtC,GAfP6C,UA0BJ,WAAgC,IAAbC,EAAY,uDAAL,IAClBC,EAAQ,CAAC,UAAW,QAAS,WAAY,MAAO,0BAA2B,QAAS,KAAM,iBAAkB,IAAK,MAAO,gBAAiB,eAAgB,IAAK,IAAK,MAAO,YAAa,aAAc,sBAAuB,MAAO,eAAgB,UAAW,gBAAiB,YAAa,KAAM,MAAO,oBAAqB,IAAK,KAAM,MAAO,aAAc,KAAM,QACpW/C,EAAM,GACV,KAAO8C,EAAO,GACVA,IACA9C,GAAO+C,EAAML,KAAKC,MAAMD,KAAKE,SAAWG,EAAMT,SAAW,IAE7D,OAAOtC,GAhCPgD,sBAmCJ,SAA+BC,EAAKC,GAGhC,OAFAD,EAAMP,KAAKS,KAAKF,GAChBC,EAAMR,KAAKC,MAAMO,GACVR,KAAKC,MAAMD,KAAKE,UAAYM,EAAMD,EAAM,IAAMA,GArCrDG,MAwCJ,WAA2B,IAAZC,EAAW,uDAAN,KAChB,OAAO,IAAIC,SAAQ,SAAAC,GACfC,WAAWD,EAASF,OAzCxBI,SAeJ,SAAkBC,GAAqB,IAC/BC,EAD8B,OAAdC,EAAc,uDAAJ,IAE9B,OAAO,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAClBC,aAAaH,GACbA,EAAQH,YAAW,WAAQE,EAAKK,MAAM,EAAMF,KAAUD,MCpB5D,IAAMI,EAA4B,eAGrBC,EAAc,CACvBC,M,4CACAC,O,2CACAC,O,4CACAC,kBACAC,YA6FJ,WACI,IAAMC,EAAWF,KAAqB,CAAEG,IAAKpC,EAAYC,SAAUoC,SAAU,SAC7E,MAAO,CAAED,IAAKD,EAASC,IAAKC,SAAUF,EAASE,SAAUC,OAAQH,EAASG,SA9F1EC,S,2CACAC,Q,4CAEAC,O,4CACAC,cA6FJ,WACI,MAAO,CAAEN,IAAKpC,EAAYC,SAAUoC,SAAU,UA7F9CM,Y,4CACAC,eA+FJ,SAAwBC,EAAQC,GAC5BzE,EAAA,eAAwBwE,EAAxB,YAA0CC,IA/F1CC,oB,yFAMJ,4BAAAtE,EAAA,sEAGwBJ,EAAA,QAHxB,cAGU2E,EAHV,yBAIWA,GAJX,4C,kEAOA,WAAuBH,GAAvB,eAAApE,EAAA,sEAEuBJ,EAAA,eAAwBwE,IAF/C,cAEUI,EAFV,OAGmBA,EAHnB,kBAIWA,GAJX,4C,kEAYA,WAAsBA,GAAtB,eAAAxE,EAAA,sEAE8BJ,EAAA,eAAwB4E,EAAKb,KAAOa,GAFlE,cAEUC,EAFV,OAIQjB,IAAkBG,MAAQa,EAAKb,KAAKe,EAAeD,GAJ3D,kBAKWA,GALX,4C,kEAQA,WAAqBE,GAArB,eAAA3E,EAAA,sEAMuBJ,EAAiB,aAAc+E,GANtD,YAMUH,EANV,iDAQqBE,EAAeF,IARpC,4C,kEAWA,WAA2BI,GAA3B,eAAA5E,EAAA,+EAE2BJ,EAAiB,mBAAoB,CAAEgF,YAFlE,YAEcJ,EAFd,iDAGyBE,EAAeF,IAHxC,4H,kEASA,WAAsBG,GAAtB,eAAA3E,EAAA,6DACI2E,EAASd,OAAS,GAClBc,EAASE,SAAW,GACpBF,EAAS/F,OAAS,GAHtB,SAKuBgB,EAAiB,cAAe+E,GALvD,cAKUH,EALV,yBAOWE,EAAeF,IAP1B,4C,kEASA,sBAAAxE,EAAA,sDACIQ,eAAesE,WAAW3B,GAD9B,4C,kEAMA,WAAmCkB,GAAnC,eAAArE,EAAA,uDACUwE,EAAOpB,EAAYI,mBACpBqB,SAASE,QAAQV,GACtBK,EAAeF,GAHnB,4C,sBAOA,SAASE,EAAeF,GAEpB,OADAhE,eAAewE,QAAQ7B,EAA2B8B,KAAKC,UAAUV,IAC1DA,EAGX,SAAShB,IAEL,OADqByB,KAAKE,MAAM3E,eAAe4E,QAAQjC,IAA8B,QA9EzFhG,OAAOiG,YAAcA,EA8HrB,sBAAC,4BAAApD,EAAA,uDACOwE,EAAOhB,MACD7C,EAAcS,KAAK,kBAAmBoD,EAAKb,KAFxD,0CAAD,GClJA,IAAMhF,EAAe,CACjB6F,KAAMpB,EAAYI,mBAAqBJ,EAAYa,gBACnDM,MAAO,GACPc,YAAa,MCNjB,IAAM1G,EAAe,CACnB2G,WAAW,GCUb,IAAMC,EAAcC,YAAgB,CAChCC,YREG,WAAqD,IAEpD7G,EAFqBT,EAA8B,uDAAtBQ,EAAc+G,EAAQ,uCACnDC,EAAWxH,EAEf,OAAQuH,EAAOE,MACX,IAAK,aACDD,EAAQ,2BAAQxH,GAAR,IAAeS,OAAQ8G,EAAO9G,SACtC,MACJ,IAAK,gBACD+G,EAAQ,2BAAOxH,GAAP,IAAce,SAAUwG,EAAOxG,WACvC,MACJ,IAAK,iBAiBL,IAAK,eAEDyG,EAAQ,2BAAQxH,GAAR,IAAeU,UAAW6G,EAAOG,QACzC,MAjBJ,IAAK,qBACDF,EAAQ,2BAAQxH,GAAR,IAAeW,cAAe4G,EAAOG,QAC7C,MACJ,IAAK,eACD,IAAM9G,EAAmBZ,EAAMS,OAAOkH,MAAK,SAAAD,GAAK,OAAIA,EAAMlC,MAAQ+B,EAAOK,WACzEnH,EAAST,EAAMS,OAAOoH,QAAO,SAAAH,GAAK,OAAIA,EAAMlC,MAAQ+B,EAAOK,WAC3DJ,EAAQ,2BAAQxH,GAAR,IAAeS,SAAQG,qBAC/B,MACJ,IAAK,mBACD4G,EAAQ,2BAAQxH,GAAR,IAAea,cAAe0G,EAAO1G,gBAC7C,MACJ,IAAK,YACD2G,EAAQ,2BAAQxH,GAAR,IAAeS,OAAO,GAAD,mBAAMT,EAAMS,QAAZ,CAAoB8G,EAAOG,UACxD,MAKJ,IAAK,cACDF,EAAQ,2BAAQxH,GAAR,IAAec,WAAYyG,EAAOO,SAC1C,MACJ,IAAK,oBACG9H,EAAMY,mBACN4G,EAAQ,2BAAQxH,GAAR,IAAeS,OAAO,GAAD,mBAAMT,EAAMS,QAAZ,CAAoBT,EAAMY,mBAAmBA,iBAAkB,QAKxG,OAAO4G,GQ1CPO,WFLG,WAAoD,IAA/B/H,EAA8B,uDAAtBQ,EAAc+G,EAAQ,uCAClDC,EAAWxH,EACf,OAAQuH,EAAOE,MACX,IAAK,WACDD,EAAQ,2BAAQxH,GAAR,IAAeqG,KAAMkB,EAAOlB,OACpC,MACJ,IAAK,mBACDmB,EAAQ,2BAAQxH,GAAR,IAAekH,YAAaK,EAAOlB,OAC3C,MACJ,IAAK,cACD,IAAMA,EAAI,2BAAQrG,EAAMqG,MAAd,IAAoBK,SAAS,CAAEa,EAAOrB,SAAV,mBAAsBlG,EAAMqG,KAAKK,aACvEc,EAAQ,2BAAQxH,GAAR,IAAeqG,SACvB,MACJ,IAAK,cACDmB,EAAQ,2BACDxH,GADC,IAEJoG,MAAOpG,EAAMoG,MAAMyB,QAAO,SAAAxB,GAAI,OAAIA,EAAKb,MAAQ+B,EAAOtB,YAE1D,MACJ,IAAK,YACDuB,EAAQ,2BAAQxH,GAAR,IAAeoG,MAAOmB,EAAOnB,QAO7C,OAAOoB,GErBPQ,aDVG,WAA4D,IAApChI,EAAmC,uDAA3BQ,EAAc+G,EAAa,uDAAJ,GAC5D,OAAQA,EAAOE,MACb,IAAK,gBACH,OAAO,2BAAKzH,GAAZ,IAAmBmH,WAAW,IAChC,IAAK,eACH,OAAO,2BAAKnH,GAAZ,IAAmBmH,WAAW,IAChC,QAAS,OAAOnH,MCWdiI,EAAmBjJ,OAAOkJ,sCAAwCC,IAC3DC,EAAQC,YAAYjB,EAAaa,EAAiBK,YAAgBC,O,gDCLxE,IAAMC,GAAkB,CAAE5F,GAjBjC,SAAYC,EAAW4F,GAEnB,IAAMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBF,EAASE,IAKb,OAFA3J,OAAO4J,iBAAiB/F,EAAW6F,GAE5B,WACH1J,OAAO6J,oBAAoBhG,EAAW6F,KAQTzF,KAJrC,SAAcJ,EAAWlB,GACrB3C,OAAO8J,cAAc,IAAIC,YAAYlG,EAAW,CAAE8F,OAAQhH,OAKvD,SAASqH,GAAYhI,GAAiB,IAAZyG,EAAW,uDAAJ,GACpCe,GAAgBvF,KAAK,gBAAiB,CAAEjC,MAAKyG,SChB1C,SAASwB,KACZ,8CAAO,WAAMC,GAAN,eAAArH,EAAA,+EAGqBoD,EAAYU,WAHjC,OAGOS,EAHP,OAIC8C,EAAS,CAAEzB,KAAM,YAAarB,UAJ/B,gDAMClG,QAAQC,IAAI,gCAAZ,MAND,yDAAP,sDAyBG,SAASgJ,GAAQC,GACpB,8CAAO,WAAOF,GAAP,eAAArH,EAAA,+EAEoBoD,EAAYC,MAAMkE,GAFtC,OAEO/C,EAFP,OAGC6C,EAAS,CACLzB,KAAM,WACNpB,SALL,gDAQCnG,QAAQC,IAAI,eAAZ,MARD,yDAAP,sDA2BG,SAASkJ,GAASD,GACrB,OAAO,SAACF,GACJjE,EAAYG,OAAOgE,GACd1J,MAAK,SAAA2G,GACF6C,EAAS,CACLzB,KAAM,WACNpB,YAGP/F,OAAM,SAAAgJ,GACHpJ,QAAQC,IAAI,gBAAiBmJ,OAMtC,SAASC,KACZ,OAAO,SAACL,GACJjE,EAAYE,SACPzF,MAAK,kBAAMwJ,EAAS,CACjBzB,KAAM,WACNpB,KAAM,UAET/F,OAAM,SAAAgJ,GACHpJ,QAAQC,IAAI,gBAAiBmJ,OAiCtC,SAASE,GAAanD,GACzB,8CAAO,WAAO6C,GAAP,eAAArH,EAAA,+EAE2BoD,EAAYY,OAAOQ,GAF9C,OAEOC,EAFP,OAGC4C,EAAS,CACLzB,KAAM,WACNpB,KAAMC,IALX,gDAQCpG,QAAQC,IAAI,qBAAZ,MARD,yDAAP,sDDvFJnB,OAAOyK,MAAQjB,GACfxJ,OAAOgK,YAAcA,GE9BN,WAA0B,iCCA1B,OAA0B,6C,QCUnCU,G,4MAEF1J,MAAQ,CACJ2J,YAAY,G,EAahBC,kBAAoB,WAChB,IAAQD,EAAe,EAAK3J,MAApB2J,WACJ3K,OAAO6K,QAAU,KAAOF,EACxB,EAAKG,SAAS,CAAEH,YAAY,IACrB3K,OAAO6K,QAAU,IAAMF,GAC9B,EAAKG,SAAS,CAAEH,YAAY,K,EAIpCI,aAAe,WACX,EAAKC,MAAMb,QAAQ,CAACc,SAAU,SAAUC,SAAU,aAClD,EAAKF,MAAMG,QAAQC,KAAK,W,uDArB5B,WACIpL,OAAO4J,iBAAiB,SAAUyB,KAAKT,mBACvCU,SAASC,KAAKC,MAAMC,UAAY,W,kCAGpC,WACIzL,OAAO6J,oBAAoB,SAAUwB,KAAKT,mBAC1CU,SAASC,KAAKC,MAAMC,UAAY,W,oBAiBpC,WAAU,IAAD,OACGd,EAAeU,KAAKrK,MAApB2J,WACR,OACI,2BAASe,UAAU,2BAAnB,UACI,0BAAQA,UAAS,sBAAkBf,EAAc,aAAe,IAAhE,UACI,wBAAMe,UAAU,OAAhB,cAAwB,eAAC,KAAD,IAAxB,iBACA,uBAAKA,UAAU,iBAAf,UACI,eAAC,IAAD,CAAMC,GAAG,SAAT,SAAkB,yBAAQD,UAAU,uBAAlB,sBAClB,eAAC,IAAD,CAAMC,GAAG,UAAT,SAAmB,yBAAQD,UAAU,wBAAlB,6BAG3B,uBAAKA,UAAU,kBAAf,UACI,uBAAKA,UAAU,kBAAf,UACI,4EACA,+MAEA,yBAAQA,UAAU,qBAAqBE,QAAS,kBAAM,EAAKb,gBAA3D,iCAEJ,sBAAKW,UAAU,iBAAf,SACI,sBAAKG,IAAKC,GAASC,IAAI,cAG/B,uBAAKL,UAAU,mBAAf,UACI,uBAAKA,UAAU,mBAAf,UACI,iGACA,mOAEJ,sBAAKA,UAAU,kBAAf,SACI,sBAAKG,IAAKG,GAAYD,IAAI,qB,GA1D1BE,IAAMC,WAwE9B,IAAMC,GAAqB,CACvBhC,YAGSiC,GAAWC,aAVxB,SAAyBrL,GACrB,MAAO,CACHoG,MAAOpG,EAAM+H,WAAW3B,SAQiB+E,GAAzBE,CAA6C3B,I,SCjF9D,SAAS4B,GAAT,GAAkE,IAA1C5D,EAAyC,EAAzCA,MAAO6D,EAAkC,EAAlCA,mBAAoBC,EAAc,EAAdA,WAQtD,OACI,eAAC,IAAD,CAAMb,GAAE,iBAAYjD,EAAMlC,KAA1B,SAAiC,sBAAKoF,QAAS,kBAAMY,EAAW9D,EAAM8C,QAAQE,UAAU,gBAAgBF,MAAQ9C,EAAM8C,MAAMiB,QAAW,CAAEC,gBAAgB,GAAD,OAAKhE,EAAM8C,MAAMiB,UAAc,CAAEE,gBAAgB,OAAD,OAASjE,EAAM8C,MAAM9E,OAArB,MAAvK,SAC7B,sBAAKgF,UAAU,iBAAf,SACI,uBAAKA,UAAU,kBAAf,UACI,qBAAIA,UAAU,cAAd,SAA6BhD,EAAMkE,QACnC,yBAAQlB,UAAS,mBAAehD,EAAMmE,UAAa,UAAY,IAAMjB,QAAS,SAACkB,GAAD,OAX9F,SAAyBA,GACrBA,EAAGC,iBACHD,EAAGE,kBACHT,EAAmB7D,GAQ+EuE,CAAgBH,IAAtG,SAA2G,eAAC,KAAD,eCfxH,SAASI,GAAT,GAA0F,IAArEzL,EAAoE,EAApEA,OAAQ8K,EAA4D,EAA5DA,mBAAoBC,EAAwC,EAAxCA,WAAYW,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAC7E,OACI,uBAAK1B,UAAU,kBAAf,UACKjK,EAAO4L,KAAI,SAAA3E,GAAK,OACb,eAAC4D,GAAD,CAA8B5D,MAAOA,EAAO6D,mBAAoBA,EAAoBC,WAAYA,GAA7E9D,EAAMlC,QAE5B4G,GAAe,sBAAK1B,UAAU,iCAAiCE,QAAS,kBAAMuB,KAA/D,SACZ,wDCRT,IAAMG,GACC,SAACC,GACP,MAAM,eAAN,OAAsBA,IAFjBD,GAIA,WACL,MAAM,eALDA,GAUI,SAACE,GACV,MAAM,0BAAN,OAAiCA,IAX5BF,GAaK,SAACG,GACX,MAAM,WAAN,OAAkBA,EAAlB,mBAdKH,GAgBK,SAACG,GACX,MAAM,WAAN,OAAkBA,EAAlB,qBAjBKH,GAmBS,WACd,MAAM,wCApBDA,GAsBC,WACN,MAAM,uBAvBDA,GAyBI,SAACC,GACV,MAAM,sBAAN,OAA6BA,IA1BxBD,GA4BK,WACV,MAAM,2CA7BDA,GA+BO,WACZ,MAAM,6CAhCDA,GAkCU,WACf,MAAM,qCAnCDA,GAqCS,SAACI,GACf,MAAM,8BAAN,OAAqCA,IAtChCJ,GAwCQ,SAACG,GACd,MAAM,SAAN,OAAgBA,EAAhB,eAzCKH,GA2Ca,SAACG,GACnB,MAAM,WAAN,OAAkBA,EAAlB,iBA5CKH,GA8CC,SAACK,GACP,MAAM,mBAAN,OAA0BA,EAA1B,eA/CKL,GAiDI,SAACK,GACV,MAAM,qBAAN,OAA4BA,EAA5B,iBAlDKL,GAoDK,SAACM,GACX,MAAM,mBAAN,OAA0BA,EAA1B,eC/CKC,GAAe,CACxBC,M,6CACAlH,Q,+CACAmH,K,6CACAC,O,6CACAC,e,6CACAC,iB,4FAKJ,WAAqBC,GAArB,eAAAtL,EAAA,+EAG6BJ,EAAgB,QAAS0L,GAHtD,cAGc1M,EAHd,yBAIeA,GAJf,gCAMQP,QAAQC,IAAI,8BAAZ,MANR,0D,oEAUA,WAAuByH,EAAS7G,GAAhC,eAAAc,EAAA,sEAGgC,kBAAbd,IACPA,EAAY,IAAIqM,gBAAgBrM,GAAWsM,YAJvD,SAM4B5L,EAAA,gBAAyBmG,GAAW7G,GANhE,cAMc2G,EANd,yBAOeA,GAPf,gCASQxH,QAAQC,IAAR,8CAAmDyH,GAAnD,MATR,0D,oEAaA,WAA8BA,GAA9B,eAAA/F,EAAA,+EAIiCJ,EAAA,0BAAmCmG,IAJpE,cAIc0F,EAJd,yBAKeA,GALf,gCAOQpN,QAAQC,IAAI,kCAAZ,MAPR,0D,oEAWA,WAAgCyH,GAAhC,eAAA/F,EAAA,+EAEoCJ,EAAA,gBAAyBmG,EAAzB,YAFpC,cAEc2F,EAFd,OAGQrN,QAAQC,IAAI,kBAAmBoN,GAHvC,kBAIeA,GAJf,gCAMQrN,QAAQC,IAAI,qCAAZ,MANR,0D,oEAWA,WAAsByH,GAAtB,SAAA/F,EAAA,wFAGmBJ,EAAA,gBAA4BmG,KAH/C,gCAKY1H,QAAQC,IAAR,+CAAoDyH,IALhE,yD,oEASA,WAAoBF,GAApB,iCAAA7F,EAAA,yDAA2B2L,EAA3B,+BAAsC,MAC9B9F,EAAMlC,IADd,qBAEYgI,EAFZ,uBAGkBC,EAAc,CACZzM,IAAKwM,EAASxM,IACd0M,GAAItK,EAAYC,SAChBsK,SAAU1I,EAAYK,cACtBsI,KAAOJ,EAASI,KAAQ,CAAEF,GAAIF,EAASI,KAAKF,GAAI9B,MAAO4B,EAASI,KAAKhC,OAAU,GAC/EiC,QAAUL,EAASK,QAAWL,EAASK,QAAU,MARrE,kBAamBpM,EAAA,gBAAyBiG,EAAMlC,KAAO,CAAEkC,MAAOA,EAAO8F,SAAUC,KAbnF,gCAgBmBhM,EAAA,gBAAyBiG,EAAMlC,KAAO,CAAEkC,MAAOA,EAAO8F,SAAU,QAhBnF,sCAmBcM,EAAc,CACZlC,MAAOlE,EAAMkE,MACbpB,MAAO9C,EAAM8C,MACbuD,UAAW9I,EAAYK,cACvBrE,QAAS,CAACgE,EAAYK,gBAvBtC,UA0BiC7D,EAAA,QAA0BqM,GA1B3D,eA0BcE,EA1Bd,yBA2BeA,GA3Bf,4C,yBCnDO,SAASC,GAAUrG,EAAS7G,GAC/B,8CAAO,WAAMmI,GAAN,eAAArH,EAAA,+EAEqBgL,GAAajH,QAAQgC,EAAS7G,GAFnD,OAEO2G,EAFP,OAGC4C,SAASC,KAAKC,MAAM0D,WAAaxG,EAAM8C,MAAMiB,QAAU/D,EAAM8C,MAAMiB,QAAlC,eAAoD/D,EAAM8C,MAAM9E,OAAhE,MACjC4E,SAASC,KAAKC,MAAM2D,eAAiB,QAGrCjF,EAAS,CACLzB,KAAM,iBACNC,UATL,gDAaCxH,QAAQC,IAAI,oBAAZ,MAbD,yDAAP,sDA2CG,SAASiO,GAAc7G,EAAQG,GAAyB,IAAlB8F,EAAiB,uDAAN,KACpD,8CAAO,WAAMtE,GAAN,eAAArH,EAAA,6DACGiM,EAAcO,GAAiB9G,EAAQG,GAC7CxH,QAAQC,IAAI2N,GACZ5E,EAAS,CACLzB,KAAM,eACNC,MAAOoG,IALR,SAQMvG,EAAOE,OAAMF,EAAOG,MAAQA,GACjClF,EAAcS,KAAK,eAAgB,CAAEsE,SAAQiG,aAT9C,SAUOX,GAAaE,KAAKe,EAAaN,GAVtC,yDAYCtN,QAAQC,IAAI,oBAAZ,MAZD,0DAAP,sDAkCG,SAASmO,GAAezN,GAC3B,OAAO,SAACqI,GACJA,EAAS,CACLzB,KAAM,mBACN5G,cAAeA,KAepB,SAAS0N,GAAaX,EAAMlG,GAC/B,IAAMoG,EAAW,eAAOpG,GAExB,OADAoG,EAAYP,cAAgBO,EAAYP,cAAc1F,QAAO,SAAA2G,GAAY,OAAIA,EAAad,KAAOE,EAAKF,MAC/FU,GAAc,GAAIN,GAGtB,SAASW,GAAcD,EAAcX,EAASnG,GAAyB,IAAlB8F,EAAiB,uDAAN,KACnEgB,EAAaE,WAAY,EACzB,IAAMC,EAAK,eAAOjH,EAAMkH,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMjB,KAAOG,MACpDgB,EAAUF,EAAMG,MAAMC,WAAU,SAAAnB,GAAI,OAAIA,EAAKF,KAAOc,EAAad,MACjEI,EAAW,eAAOpG,GACxB8G,EAAaX,QAAUA,EACvBW,EAAaQ,UAAYH,EAEzBF,EAAMG,MAAMG,OAAOJ,EAAS,GAE5Bf,EAAYP,cAAgBO,EAAYP,cAAgBO,EAAYP,cAAgB,GACpFO,EAAYP,cAAc3G,QAAQ4H,GAClC,IAAMU,EAAc,CAAEzH,KAAM,eAAgBkH,SAC5C,OAAOP,GAAcc,EAAapB,EAAaN,GAG5C,SAAS2B,GAAgBC,EAAY1H,GAAyB,IAAlB8F,EAAiB,uDAAN,KACpDmB,EAAK,eAAOjH,EAAMkH,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMjB,KAAO0B,EAAWvB,YACrE,GAAIc,EAAO,CACP,IAAME,EAAUO,EAAWJ,iBACpBI,EAAWvB,eACXuB,EAAWJ,iBACXI,EAAWV,UAClBC,EAAMG,MAAMG,OAAOJ,EAAS,EAAGO,GAEnC,IAAMtB,EAAW,eAAOpG,GACxBoG,EAAYP,cAAgBO,EAAYP,cAAc1F,QAAO,SAAA2G,GAAY,OAAIA,EAAad,KAAO0B,EAAW1B,MAC5G,IAAMwB,EAAc,CAAEzH,KAAM,eAAgBkH,SAC5C,OAAOP,GAAcc,EAAapB,EAAaN,GAgB5C,SAAS6B,GAAaD,EAAYvB,EAASnG,GAAyB,IAAlB8F,EAAiB,uDAAN,KAE1DmB,EAAQjH,EAAMkH,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMjB,KAAOG,KAChDgB,EAAUF,EAAMG,MAAMC,WAAU,SAAAnB,GAAI,OAAIA,EAAKF,KAAO0B,EAAW1B,MAErEiB,EAAMG,MAAMG,OAAOJ,EAAS,EAAGO,GAC/B,IAAMF,EAAc,CAAEzH,KAAM,eAAgBkH,SAC5C,OAAOP,GAAcc,EAAaxH,EAAO8F,GAGtC,SAAS8B,GAAYxH,GACxB,8CAAO,WAAMoB,GAAN,SAAArH,EAAA,sDACH,IACIqH,EAAS,CACLzB,KAAM,cACNK,WAEN,MAAOwB,GAELpJ,QAAQC,IAAI,kBAAmBmJ,GARhC,2CAAP,sDA8CJ,SAAS+E,GAAiB9G,EAAQG,GAC9B,IAAMoG,EAAW,eAAOpG,GACxB,OAAQH,EAAOE,MACX,IAAK,iBACDqG,EAAYjC,UAAYtE,EAAOsE,UAC/B,MACJ,IAAK,qBACDiC,EAAYtD,MAAQjD,EAAOiD,MAC3BF,SAASC,KAAKC,MAAM0D,WAAaJ,EAAYtD,MAAMiB,QAAUqC,EAAYtD,MAAMiB,QAA9C,yBAA0EqC,EAAYtD,MAAM9E,OAA5F,MACjC4E,SAASC,KAAKC,MAAM2D,eAAiB,QACrC,MACJ,IAAK,eACDL,EAAYlC,MAAQrE,EAAOqE,MAC3B,MACJ,IAAK,mBACD1L,QAAQC,IAAI,wBAAyB2N,EAAY7M,SACjD6M,EAAY7M,QAAZ,sBAA0B6M,EAAY7M,SAAtC,CAA+CsG,EAAOgI,SACtD,MACJ,IAAK,sBACDrP,QAAQC,IAAI,wBAAyB2N,EAAY7M,SACjD6M,EAAY7M,QAAZ,YAA0B6M,EAAY7M,QAAQ4G,QAAO,SAAA0H,GAAM,OAAIA,EAAO/J,MAAQ+B,EAAOiI,aACrF,MACJ,IAAK,YACD1B,EAAYc,OAAZ,sBAAyBd,EAAYc,QAArC,CAA6CrH,EAAOoH,QACpD,MACJ,IAAK,eACDb,EAAYc,OAAZ,YAAyBd,EAAYc,OAAOvC,KAAI,SAAAoD,GAAS,OAAIA,EAAU/B,KAAOnG,EAAOoH,MAAMjB,GAAKnG,EAAOoH,MAAQc,MAC/G,MACJ,IAAK,eACD3B,EAAYc,OAAZ,YAAyBd,EAAYc,OAAO/G,QAAO,SAAA4H,GAAS,OAAIA,EAAU/B,KAAOnG,EAAOoH,MAAMjB,OAGtG,OAAOI,ECnQJ,SAAS4B,KACZ,OACI,sBAAKhF,UAAU,mBFcvB1L,OAAO2Q,GAAK9C,GGhBG,WAA0B,mCCClC,SAAS+C,KACZ,OACI,sBAAKlF,UAAU,SAAf,SACI,sBAAKG,IAAKgF,GAAQ9E,IAAI,iB,ICS5B+E,G,4MACF9P,MAAQ,G,EASR+P,iBAAmB,WACf,OAAO,EAAK/F,MAAMvJ,OAAOoH,QAAO,SAAAH,GAAK,OAAIA,EAAMmE,c,EAGnDN,mBAAqB,SAAC7D,GAClB,IAAQ0G,EAAkB,EAAKpE,MAAvBoE,cACR1G,EAAMmE,WAAanE,EAAMmE,UACzBuC,EAAc,CAAE3G,KAAM,iBAAkBoE,UAAWnE,EAAMmE,WAAanE,GACtElF,EAAcS,KAAK,UAAU,I,EAEjCuI,WAAa,SAAChB,GACV,IAAMwF,EAAU1F,SAAS2F,eAAe,WACpCzF,EAAM9E,OACNsK,EAAQE,KAAO1F,EAAM9E,OAErBsK,EAAQE,KAAO,4B,EAIvB/D,YAAc,WACV,EAAKnC,MAAMsE,gBAAe,I,8FA1B9B,4BAAAzM,EAAA,6DACUwE,EAAOpB,EAAYK,cAD7B,SAGU+E,KAAKL,MAAMmG,WAAW9J,GAHhC,gD,0EA6BA,WACI,MAAkCgE,KAAKL,MAA/BvJ,EAAR,EAAQA,OAAQI,EAAhB,EAAgBA,cAChB,OAAKJ,EAED,sBAAKiK,UAAU,uBAAf,SACA,uBAAKA,UAAU,+BAAf,UACI,oCAAK,eAAC,KAAD,IAAL,qBACA,sBAAKA,UAAU,iBAAf,SACI,eAACwB,GAAD,CAAWV,WAAYnB,KAAKmB,WAAY/K,OAAQ4J,KAAK0F,mBAAoBxE,mBAAoBlB,KAAKkB,uBAEtG,oCAAK,eAAC,KAAD,IAAL,gBACA,sBAAKb,UAAU,YAAf,SACI,eAACwB,GAAD,CAAWzL,OAAQA,EAAQ8K,mBAAoBlB,KAAKkB,mBAAoBC,WAAYnB,KAAKmB,WAAYW,YAAa9B,KAAK8B,YAAaC,aAAa,MAKpJvL,GAAiB,eAAC6O,GAAD,SAfN,eAACE,GAAD,Q,GAnCD3E,IAAMC,WAkEjC,IAAMC,GAAqB,CACvBgF,WJzEG,SAAoBpP,GACvB,8CAAO,WAAMmI,GAAN,eAAArH,EAAA,+EAEsBgL,GAAaC,MAAM/L,GAFzC,OAEON,EAFP,OAGCyI,EAAS,CACLzB,KAAM,aACNhH,WALL,gDASCP,QAAQC,IAAI,qBAAZ,MATD,yDAAP,uDIyEAmO,kBACAF,kBAGSgC,GAAc/E,aAf3B,SAAyBrL,GACrB,MAAO,CACHS,OAAQT,EAAMsH,YAAY7G,OAC1BI,cAAeb,EAAMsH,YAAYzG,cACjC6G,MAAO1H,EAAMsH,YAAY5G,UACzB2F,KAAMrG,EAAM+H,WAAW1B,QAUqB8E,GAAzBE,CAA6CyE,I,uDCHlEO,GAAc,SAACvI,EAAQ+F,GAGzB,OAFczF,EAAMkI,WAAWhJ,YAAY5G,UACvBkO,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMjB,KAAOG,KACzCiB,MAAMnH,MAAK,SAAAiG,GAAI,OAAIA,EAAKF,KAAO5F,MAQ1CyI,GAAa,SAACzI,GAAY,IAAD,EAE3B,iBADcM,EAAMkI,WAAWhJ,YAAY5G,UAC9BkO,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMG,MAAM0B,MAAK,SAAA5C,GAAI,OAAIA,EAAKF,KAAO5F,eAAvE,aAAO,EAA0E4F,IAuKxE+C,GAAkB,CAC3BC,sBApQ0B,SAACjJ,EAAMkJ,EAAaC,EAAOC,GACrD,IAAM/I,EAASM,EAAMkI,WAAWhJ,YAAYxG,WACtC4G,EAAQU,EAAMkI,WAAWhJ,YAAY5G,UACrCmN,EAAU0C,GAAWzI,GACrB8F,EAAOyC,GAAYvI,EAAQ+F,GACjC,GAAI8C,EAAa,CACb,IAAMG,EAAYlD,EAAKmD,WAAWpJ,MAAK,SAAAmJ,GAAS,OAAIA,EAAUpD,KAAOiD,KACrE,GAAa,YAATlJ,EACAqJ,EAAUE,MAAM5G,KAAKwG,QAElB,GAAa,aAATnJ,EAAqB,CAC5B,IAAMwJ,EAAOH,EAAUE,MAAMrJ,MAAK,SAAAsJ,GAAI,OAAIA,EAAKvD,KAAOkD,KACtDK,EAAKC,QAAUD,EAAKC,YAEjB,GAAa,eAATzJ,EAAuB,CAC9B,IAAM0J,EAAML,EAAUE,MAAMjC,WAAU,SAAAkC,GAAI,OAAIA,EAAKvD,KAAOkD,KAC1DE,EAAUE,MAAM/B,OAAOkC,EAAK,QAEzB,GAAa,gBAAT1J,EAAwB,CAC/B,IAAMwJ,EAAOH,EAAUE,MAAMrJ,MAAK,SAAAsJ,GAAI,OAAIA,EAAKvD,KAAOkD,KACtDK,EAAKrF,MAAQiF,OAEV,GAAa,oBAATpJ,EAA4B,CACnC,IAAM0J,EAAMvD,EAAKmD,WAAWhC,WAAU,SAAA+B,GAAS,OAAIA,EAAUpD,KAAOiD,KACpE/C,EAAKmD,WAAW9B,OAAOkC,EAAK,QAInB,iBAAT1J,IACKmG,EAAKmD,aAAYnD,EAAKmD,WAAa,IACxCnD,EAAKmD,WAAW3G,KAAK,CAAEsD,GAAItK,EAAYC,SAAUuI,MAAOgF,EAAOI,MAAO,MAI9E,MAAO,CAACpD,EAAMC,EAASnG,IAmOvB0J,mBAhOuB,SAAC5B,GAAc,IAAD,MAC/B1H,EAASM,EAAMkI,WAAWhJ,YAAYxG,WACtC4G,EAAQU,EAAMkI,WAAWhJ,YAAY5G,UACrCmN,EAAU0C,GAAWzI,GACvB8F,EAAOyC,GAAYvI,EAAQ+F,GAI/B,GAFKD,EAAK3M,UAAS2M,EAAK3M,QAAU,IACf,UAAG2M,SAAH,iBAAG,EAAM3M,eAAT,aAAG,EAAeuP,MAAK,SAAAjB,GAAM,OAAIA,EAAO/J,MAAQgK,KAChD5B,EAAI,2BAAQA,GAAR,IAAc3M,QAAO,UAAE2M,SAAF,aAAE,EAAM3M,QAAQ4G,QAAO,SAAA0H,GAAM,OAAIA,EAAO/J,MAAQgK,WACvF,CACD,IAAM6B,EAAc3J,EAAMzG,QAAQ0G,MAAK,SAAA4H,GAAM,OAAIA,EAAO/J,MAAQgK,KAChE5B,EAAK3M,QAAQmJ,KAAKiH,GAGtB,MAAO,CAACzD,EAAMC,EAASnG,IAmNvB6I,cACAF,eACAiB,kBAlNsB,SAACC,GAAa,IAAD,IAC7BzJ,EAASM,EAAMkI,WAAWhJ,YAAYxG,WACtC4G,EAAQU,EAAMkI,WAAWhJ,YAAY5G,UACrCmN,EAAU0C,GAAWzI,GACvB8F,EAAOyC,GAAYvI,EAAQ+F,GAG/B,GAFKD,EAAK4D,WAAU5D,EAAK4D,SAAW,IAClB,UAAG5D,SAAH,aAAG,EAAM4D,SAAShB,MAAK,SAAA9C,GAAE,OAAIA,IAAO6D,KACpC3D,EAAI,2BAAQA,GAAR,IAAc4D,SAAQ,UAAE5D,SAAF,aAAE,EAAM4D,SAAS3J,QAAO,SAAA6F,GAAE,OAAIA,IAAO6D,WAC5E,CACD,IAAME,EAAa/J,EAAMxG,OAAOyG,MAAK,SAAA+J,GAAK,OAAIA,EAAMhE,KAAO6D,KAC3D3D,EAAK4D,SAASpH,KAAKqH,EAAW/D,IAGlC,MAAO,CAACE,EAAMC,EAASnG,IAsMvBiK,oBAnMwB,SAACC,GACzB,IAAM9J,EAASM,EAAMkI,WAAWhJ,YAAYxG,WACtC4G,EAAQU,EAAMkI,WAAWhJ,YAAY5G,UACrCmN,EAAU0C,GAAWzI,GACvB8F,EAAOyC,GAAYvI,EAAQ+F,GAE/B,OADAD,EAAKiE,QAAUD,EACR,CAAChE,EAAMC,EAASnG,IA8LvBoK,iBA3KqB,SAACF,GACtB,IAAKA,EAAW,MAAO,GACvB,IAAMG,EAAWH,EAAYI,KAAKC,MAClC,GAAIF,EAAW,EAAG,CACd,IAAMG,EAAO,IAAIF,KAAKJ,GAGhBO,EAFa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrFD,EAAKE,YAEXC,EAAMH,EAAKI,UACjB,MAAM,GAAN,OAAUH,EAAV,YAAmBE,EAAnB,gBAEJ,GAAIN,GAAa,MAAsB,MAAO,uBAC9C,IAAMG,EAAO,IAAIF,KAAKJ,GAGhBO,EAFa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrFD,EAAKE,YAEXC,EAAMH,EAAKI,UACjB,MAAM,GAAN,OAAUH,EAAV,YAAmBE,EAAnB,iBA2JAE,cAxJkB,SAACX,GACnB,IAAMY,EAAaR,KAAKC,MAAQL,EAChC,GAAIY,EAAc,IAAY,MAAO,0BAChC,GAAIA,EAAc,KAAgB,MAAO,qBACzC,GAAIA,EAAa,KAAgB,CAClC,IAAMC,EAAU/O,KAAKC,MAAM6O,EAAa,IAAO,IAC/C,MAAM,SAAN,OAAgBC,EAAhB,gBAEC,GAAID,EAAa,MAAqB,CACvC,IAAME,EAAQhP,KAAKC,MAAM6O,EAAa,IAAO,GAAK,IAClD,MAAM,SAAN,OAAgBE,EAAhB,cAEA,IAAMR,EAAO,IAAIF,KAAKJ,GAChBa,EAAWP,EAAKS,aAAe,GAArB,WAA+BT,EAAKS,cAAiBT,EAAKS,aAC1E,GAAIH,EAAa,MACb,MAAM,kBAAN,OAAyBN,EAAKU,WAA9B,YAA4CH,EAA5C,KACG,GAAID,EAAa,OACpB,MAAM,sBAAN,OAA6BN,EAAKU,WAAlC,YAAgDH,GAEhD,IAEMN,EAFa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrFD,EAAKE,YAEXC,EAAMH,EAAKI,UACjB,MAAM,SAAN,OAAgBH,EAAhB,YAAyBE,EAAzB,eAAmCH,EAAKU,WAAxC,YAAsDH,IAkI9DI,cA7HkB,SAAC9Q,GAA+B,IAA1B6J,EAAyB,uDAAjB,aAC1B9D,EAASM,EAAMkI,WAAWhJ,YAAYxG,WACtC4G,EAAQU,EAAMkI,WAAWhJ,YAAY5G,UACrCmN,EAAU0C,GAAWzI,GACrB8F,EAAOyC,GAAYvI,EAAQ+F,GAGjC,OAFKD,EAAKkF,cAAalF,EAAKkF,YAAc,IAC1ClF,EAAKkF,YAAY1I,KAAK,CAAEsD,GAAItK,EAAYC,SAAUtB,MAAK6J,QAAOmH,QAASf,KAAKC,QACrE,CAACrE,EAAMC,EAASnG,IAuHvBsL,iBApHqB,SAACC,GACtB,IAAMnL,EAASM,EAAMkI,WAAWhJ,YAAYxG,WACtC4G,EAAQU,EAAMkI,WAAWhJ,YAAY5G,UACrCmN,EAAU0C,GAAWzI,GACrB8F,EAAOyC,GAAYvI,EAAQ+F,GAC3BsD,EAAMvD,EAAKkF,YAAY/D,WAAU,SAAAmE,GAAI,OAAIA,EAAKxF,KAAOuF,KAE3D,OADArF,EAAKkF,YAAY7D,OAAOkC,EAAK,GACtB,CAACvD,EAAMC,EAASnG,IA8GvByL,aAzLiB,SAACrL,GAElB,OADcM,EAAMkI,WAAWhJ,YAAY5G,UAC9BkO,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMG,MAAMnH,MAAK,SAAAiG,GAAI,OAAIA,EAAKF,KAAO5F,SAwLvEsL,eA5GmB,SAACtL,EAAQ+F,EAASsD,GACrC,IAAMkC,EAAejL,EAAMkI,WAAWhJ,YAAY5G,UAC5C4S,EAAeD,EAAazE,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMG,MAAM0B,MAAK,SAAA5C,GAAI,OAAIA,EAAKF,KAAO5F,QACtF8F,EAAOyC,GAAYvI,EAAQwL,EAAa5F,IACxC6F,EAAiBD,EAAaxE,MAAMC,WAAU,SAAAnB,GAAI,OAAIA,EAAKF,KAAO5F,KAIxE,OAHAwL,EAAaxE,MAAMG,OAAOsE,EAAgB,GAC3BF,EAAazE,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMjB,KAAOG,KACrDiB,MAAMG,OAAOkC,EAAK,EAAGvD,GACvByF,GAqGPG,eAlGmB,SAAC1L,EAAQ+F,EAASsD,EAAKvF,GAC1C,IAAMyH,EAAejL,EAAMkI,WAAWhJ,YAAY5G,UAC5C4S,EAAeD,EAAazE,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMG,MAAM0B,MAAK,SAAA5C,GAAI,OAAIA,EAAKF,KAAO5F,QACtF8F,EAAOyC,GAAYvI,EAAQwL,EAAa5F,IAG9C,OAFe2F,EAAazE,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMjB,KAAOG,KACrDiB,MAAMG,OAAOkC,EAAK,EAA3B,2BAAmCvD,GAAnC,IAAyCF,GAAItK,EAAYC,SAAUuI,WAC5DyH,GA6FPI,oBA1FwB,SAAC3L,GACzB,IAAMJ,EAAQU,EAAMkI,WAAWhJ,YAAY5G,UACrCmN,EAAU0C,GAAWzI,GACrB8F,EAAOyC,GAAYvI,EAAQ+F,GAEjC,OADAD,EAAKc,WAAad,EAAKc,UAChB,CAACd,EAAMC,EAASnG,IAsFvBgM,iBAnFqB,SAAC5L,GACtB,IACM6G,EADK,eAAQvG,EAAMkI,WAAWhJ,YAAY5G,WAC5BkO,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMG,MAAM0B,MAAK,SAAA5C,GAAI,OAAIA,EAAKF,KAAO5F,QAC9E6G,EAAMG,MAAQH,EAAMG,MAAMjH,QAAO,SAAA+F,GAAI,OAAIA,EAAKF,KAAO5F,MAiFrD6L,aA7EiB,SAAC3S,GAClB,IAAM8G,EAASM,EAAMkI,WAAWhJ,YAAYxG,WACtC4G,EAAQU,EAAMkI,WAAWhJ,YAAY5G,UACrC2F,EAAO+B,EAAMkI,WAAWvI,WAAW1B,KACnCwH,EAAU0C,GAAWzI,GACrB8F,EAAOyC,GAAYvI,EAAQ+F,GAGjC,OAFKD,EAAKgG,WAAUhG,EAAKgG,SAAW,IACpChG,EAAKgG,SAAShN,QAAQ,CAAE8G,GAAItK,EAAYC,SAAUwQ,OAAQxN,EAAMrF,MAAK+R,QAASf,KAAKC,QAC5E,CAACrE,EAAMC,EAASnG,IAsEvBoM,oBAnEwB,SAACC,GACzB,IAAMjM,EAASM,EAAMkI,WAAWhJ,YAAYxG,WACtC4G,EAAQU,EAAMkI,WAAWhJ,YAAY5G,UACrCmN,EAAU0C,GAAWzI,GACrB8F,EAAOyC,GAAYvI,EAAQ+F,GAC3BsD,EAAMvD,EAAKgG,SAAS7E,WAAU,SAAAiF,GAAO,OAAIA,EAAQtG,KAAOqG,KAE9D,OADAnG,EAAKgG,SAAS3E,OAAOkC,EAAK,GACnB,CAACvD,EAAMC,EAASnG,IA6DvBuM,eA1DmB,SAACrC,GACpB,IAAMY,EAAaR,KAAKC,MAAQL,EAChC,GAAIY,EAAc,IAAY,MAAO,oBAChC,GAAIA,EAAc,KAAgB,MAAO,eACzC,GAAIA,EAAa,KAAgB,CAClC,IAAMC,EAAU/O,KAAKC,MAAM6O,EAAa,IAAO,IAC/C,MAAM,GAAN,OAAUC,EAAV,gBAEC,GAAID,EAAa,MAAqB,CACvC,IAAME,EAAQhP,KAAKC,MAAM6O,EAAa,IAAO,GAAK,IAClD,MAAM,GAAN,OAAUE,EAAV,cAEA,IAAMR,EAAO,IAAIF,KAAKJ,GAChBa,EAAWP,EAAKS,aAAe,GAArB,WAA+BT,EAAKS,cAAiBT,EAAKS,aAC1E,GAAIH,EAAa,MACb,MAAM,YAAN,OAAmBN,EAAKU,WAAxB,YAAsCH,EAAtC,KACG,GAAID,EAAa,OACpB,MAAM,gBAAN,OAAuBN,EAAKU,WAA5B,YAA0CH,GAE1C,IAEMN,EAFa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrFD,EAAKE,YAEXC,EAAMH,EAAKI,UACjB,MAAM,GAAN,OAAUH,EAAV,YAAmBE,EAAnB,eAA6BH,EAAKU,WAAlC,YAAgDH,IAoCxDyB,qBA/ByB,SAACC,EAAcvI,GACxC,GAAKuI,EAAL,CACA,IAAMrM,EAASM,EAAMkI,WAAWhJ,YAAYxG,WACtC4G,EAAQU,EAAMkI,WAAWhJ,YAAY5G,UACrCmN,EAAU0C,GAAWzI,GACrB8F,EAAOyC,GAAYvI,EAAQ+F,GAGjC,OAFmBD,EAAKkF,YAAYnL,MAAK,SAAAyM,GAAU,OAAIA,EAAW1G,KAAOyG,KAC9DvI,MAAQA,EACZ,CAACgC,EAAMC,EAASnG,MC7K3B,IAQMyD,GAAqB,CACvBiD,kBAGSiG,GAAWhJ,aAZA,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBD,OAAQT,EAAMsH,YAAY7G,OAC1BK,WAAYd,EAAMsH,YAAYxG,cAQWqK,GAAzBE,EA3FjB,YAAmE,IAA9C3D,EAA6C,EAA7CA,MAAO5G,EAAsC,EAAtCA,WAAYsN,EAA0B,EAA1BA,cAAekG,EAAW,EAAXA,QAC1D,EAAkCC,mBAAS,MAA3C,oBAAO9E,EAAP,KAAkB+E,EAAlB,KACA,EAAwCD,mBAAS,MAAjD,oBAAOE,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACN,IAAMhG,EAAQ8B,GAAgB0C,aAAarS,EAAY4G,EAAMlC,KAC7DgP,EAAa7F,GACb,IAAMwC,EAAMxC,EAAMG,MAAMC,WAAU,SAAAnB,GAAI,OAAIA,EAAKF,KAAO5M,KACtD4T,EAAgBvD,EAAM,KACvB,CAACzJ,IAEJ,IAAMkN,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMlE,EAAc,EAAdA,MACpC,GAAa,UAATkE,EAAkB,CAClB,IAAMnG,EAAQjH,EAAMkH,OAAOjH,MAAK,SAAAoN,GAAI,OAAIA,EAAKrH,KAAOkD,KACpD4D,EAAa7F,GACb+F,EAAgB/F,EAAMG,MAAMxL,OAAS,OACrB,aAATwR,GAEPJ,EAAgB9D,IAyBxB,OAAKnB,EAED,uBAAK/E,UAAU,YAAf,UACI,qDAEA,uBAAKA,UAAU,eAAf,UACI,uBAAMA,UAAU,QAAhB,mBACA,uBAAMA,UAAU,eAAhB,SAAgChD,EAAMkE,QACtC,yBAAQkJ,KAAK,QAAQE,SAAUJ,EAA/B,SAEI,yBAAQhE,MAAOlJ,EAAMlC,IAArB,SAA2BkC,EAAMkE,aAIzC,uBAAKlB,UAAU,wBAAf,UACI,uBAAKA,UAAU,eAAf,UACI,uBAAMA,UAAU,QAAhB,kBACA,uBAAMA,UAAU,eAAhB,SAAgC+E,EAAU7D,QAC1C,yBAAQkJ,KAAK,QAAQE,SAAUJ,EAA/B,SACKlN,EAAMkH,OAAOvC,KAAI,SAAA0I,GAAI,OAAI,yBAAsBnE,MAAOmE,EAAKrH,GAAlC,SAAuCqH,EAAKnJ,OAA/BmJ,EAAKrH,YAIpD,uBAAKhD,UAAU,kBAAf,UACI,uBAAMA,UAAU,QAAhB,sBACA,uBAAMA,UAAU,eAAhB,SAAgC+J,IAChC,yBAAQK,KAAK,WAAWE,SAAUJ,EAAlC,SA/CK,WAGjB,IAFA,IAAMtR,EAASmM,EAAUX,MAAMxL,OAAS,EAClC2R,EAAY,GACTzR,EAAI,EAAGA,GAAKF,EAAQE,IACzByR,EAAU7K,KAAK5G,GAEnB,OAAOyR,EA0CUC,GAAe7I,KAAI,SAAC0I,EAAMvR,GAAP,OAAa,yBAAgBoN,MAAOmE,EAAvB,SAA8BA,GAAjBvR,cAI1D,yBAAQkH,UAAU,mCAAmCE,QA3CxC,WACjB,IAAMiD,EAAU4B,EAAU/B,GACpByD,EAAMsD,EAAe,EAGrBU,EAAgB1E,GAAgB2C,eAAetS,EAAY+M,EAASsD,GAC1E/C,EAAc,CAAE3G,KAAM,IAAM0N,GAG5Bb,KAkCI,qBA/Be,QCsC3B,IAQMnJ,GAAqB,CACvBiD,kBAGSgH,GAAW/J,aAZA,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBD,OAAQT,EAAMsH,YAAY7G,OAC1BK,WAAYd,EAAMsH,YAAYxG,cAQWqK,GAAzBE,EA7FjB,YAAmE,IAA9C3D,EAA6C,EAA7CA,MAAO5G,EAAsC,EAAtCA,WAAYsN,EAA0B,EAA1BA,cAAekG,EAAW,EAAXA,QAC1D,EAAkCC,mBAAS,IAA3C,oBAAOc,EAAP,KAAkBC,EAAlB,KACA,EAAkCf,mBAAS,MAA3C,oBAAO9E,EAAP,KAAkB+E,EAAlB,KACA,EAAwCD,mBAAS,MAAjD,oBAAOE,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACN,IAAMhG,EAAQ8B,GAAgB0C,aAAarS,EAAY4G,EAAMlC,KACvDoI,EAAO6C,GAAgBJ,YAAYvP,EAAY6N,EAAMjB,IAC3D4H,EAAa1H,EAAKhC,OAClB4I,EAAa7F,GACb,IAAMwC,EAAMxC,EAAMG,MAAMC,WAAU,SAAAnB,GAAI,OAAIA,EAAKF,KAAO5M,KACtD4T,EAAgBvD,EAAM,KACvB,CAACzJ,IAEJ,IAAMkN,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMlE,EAAc,EAAdA,MACpC,GAAa,UAATkE,EAAkB,CAClB,IAAMnG,EAAQjH,EAAMkH,OAAOjH,MAAK,SAAAoN,GAAI,OAAIA,EAAKrH,KAAOkD,KACpD4D,EAAa7F,GACb+F,EAAgB/F,EAAMG,MAAMxL,OAAS,OACrB,aAATwR,EACPJ,EAAgB9D,GACA,UAATkE,GACPQ,EAAa1E,IAqBrB,OAAKnB,EAED,uBAAK/E,UAAU,YAAf,UACI,2CACA,2BAAUoK,KAAK,QAAQpK,UAAU,eAAe6K,WAAS,EAAC3E,MAAOyE,EAAWL,SAAUJ,IAGtF,gDACA,uBAAKlK,UAAU,eAAf,UACI,uBAAMA,UAAU,QAAhB,mBACA,uBAAMA,UAAU,eAAhB,SAAgChD,EAAMkE,QACtC,yBAAQkJ,KAAK,QAAQE,SAAUJ,EAA/B,SACI,yBAAQhE,MAAOlJ,EAAMlC,IAArB,SAA2BkC,EAAMkE,aAIzC,uBAAKlB,UAAU,wBAAf,UACI,uBAAKA,UAAU,eAAf,UACI,uBAAMA,UAAU,QAAhB,kBACA,uBAAMA,UAAU,eAAhB,SAAgC+E,EAAU7D,QAC1C,yBAAQkJ,KAAK,QAAQE,SAAUJ,EAA/B,SACKlN,EAAMkH,OAAOvC,KAAI,SAAA0I,GAAI,OAAI,yBAAsBnE,MAAOmE,EAAKrH,GAAlC,SAAuCqH,EAAKnJ,OAA/BmJ,EAAKrH,YAIpD,uBAAKhD,UAAU,kBAAf,UACI,uBAAMA,UAAU,QAAhB,sBACA,uBAAMA,UAAU,eAAhB,SAAgC+J,IAChC,yBAAQK,KAAK,WAAWE,SAAUJ,EAAlC,SA7CK,WAGjB,IAFA,IAAMtR,EAASmM,EAAUX,MAAMxL,OAAS,EAClC2R,EAAY,GACTzR,EAAI,EAAGA,GAAKF,EAAQE,IACzByR,EAAU7K,KAAK5G,GAEnB,OAAOyR,EAwCUC,GAAe7I,KAAI,SAAC0I,EAAMvR,GAAP,OAAa,yBAAgBoN,MAAOmE,EAAvB,SAA8BA,GAAjBvR,cAI1D,yBAAQkH,UAAU,mCAAmCE,QAzCxC,WACjB,IAAMiD,EAAU4B,EAAU/B,GACpByD,EAAMsD,EAAe,EACrBU,EAAgB1E,GAAgB+C,eAAe1S,EAAY+M,EAASsD,EAAKkE,GAC/EjH,EAAc,CAAE3G,KAAM,IAAM0N,GAC5Bb,KAoCI,4BAjCe,Q,SC7CdkB,GAAgB,SAAC,GAA+C,IAA7C5J,EAA4C,EAA5CA,MAAO6J,EAAqC,EAArCA,YAAanB,EAAwB,EAAxBA,QAASoB,EAAe,EAAfA,SACzD,OACI,qCACK9J,EAEG,uBAAKlB,UAAU,iBAAf,UACK+K,GAAe,uBAAM/K,UAAU,WAAWE,QAAS8K,EAApC,SAA8C,eAAC,KAAD,MAC9D,8BAAK9J,IACL,uBAAMlB,UAAU,YAAYE,QAAS0J,EAArC,SAA8C,eAAC,KAAD,SAGlD,sBAAK5J,UAAU,kCAAf,SACI,uBAAMA,UAAU,qBAAqBE,QAAS0J,EAA9C,SAAuD,eAAC,KAAD,WCE9DqB,GAAiB1K,IAAM2K,YAAW,WAAsDC,GAAe,IAAlEvB,EAAiE,EAAjEA,QAAS1I,EAAwD,EAAxDA,MAAOkK,EAAiD,EAAjDA,SAAUL,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,SAC/EK,EAAYC,mBACZC,EAAaD,mBACnB,EAAgCzB,mBAAS,CACrC2B,IAAK,KACLC,OAAQ,KACRC,MAAO,KACPC,KAAM,OAJV,oBAAOpX,EAAP,KAAiBqX,EAAjB,KAOA3B,qBAAU,WAAO,IAAD,IACZ4B,EAAY,CACRC,MAAK,UAAET,EAAUU,eAAZ,aAAE,EAAmBC,YAC1BC,OAAM,UAAEZ,EAAUU,eAAZ,aAAE,EAAmBG,eAG/B,IAAMC,EAAc,SAAAC,GAChB,IAAMC,EAAmBhB,EAAUU,QAC7BO,EAAgBnB,EAAUY,SACZ,OAAhBM,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBE,SAASH,EAAEjC,WAA7B,OAAwCmC,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAeC,SAASH,EAAEjC,UACtEP,KAMJ,OAHAtV,OAAO4J,iBAAiB,UAAWiO,GACnC7X,OAAO4J,iBAAiB,SAAU2N,GAE3B,WACHvX,OAAO6J,oBAAoB,UAAWgO,GACtC7X,OAAO6J,oBAAoB,SAAU0N,MAE1C,CAACV,IAGJ,IAAMU,EAAc,SAAC,GAAuB,IAAD,EAApBC,EAAoB,EAApBA,MAAOG,EAAa,EAAbA,OACpBO,EAAI,UAAGrB,EAAUY,eAAb,aAAG,EAAmBU,wBAChC,GAAKD,EAAL,CACA,IAAIb,EAAMD,EAAOF,EACXkB,EAAapY,OAAOqY,YAAcH,EAAKb,KAAOG,GAAS,GAEvDc,GADYJ,EAAKd,MACFpX,OAAOuY,YAAcZ,EAAS,GAAM,GACzD,GAAI3X,OAAOqY,WAAa,IAAK,CACzB,IAAMG,EAAWzB,EAAUU,QAM3B,OALAe,EAASC,UAAUzK,OAAO,gBAC1BwK,EAASC,UAAUC,IAAI,aACvBF,EAAShN,MAAM0L,IAAf,UAAyBgB,EAAKf,OAAS,EAAvC,MACAqB,EAAShN,MAAM6L,KAAO,WACtBmB,EAAShN,MAAMmN,UAAY,oBAO/B,GAHAzB,EAAMgB,EAAKP,OAAS,EAChBS,EAAYhB,EAAQ,EACnBC,EAAO,EACRiB,EACArB,EAAWQ,QAAQjM,MAAMoN,UAAzB,UAAwC5Y,OAAOuY,YAAcL,EAAKf,OAAS,GAA3E,UACG,CAEH,IAAMyB,EAAajB,EAAU,IAAO3X,OAAOuY,YAAcL,EAAKf,OAAS,GAEnEF,EAAWQ,UAASR,EAAWQ,QAAQjM,MAAMoN,UAAzB,UAAwCA,EAAxC,OAE5BtB,EAAY,CAAEJ,MAAKC,OAzBGA,UAyBKC,QAAOC,WAItC,OACI,uBAAKwB,IAAK,SAAAA,GAAG,OAAI9B,EAAUU,QAAUoB,GAAKnN,UAAU,+BAA+BF,MAAK,eAAOvL,GAA/F,UAEI,eAAC,GAAD,CAAe2M,MAAOA,GAAS,KAAM6J,YAAaA,EAAaC,SAAUA,EAAUpB,QAASA,IAE5F,sBAAK5J,UAAU,kBAAkBmN,IAAK5B,EAAtC,SACKH,UCvFV,SAASgC,GAAT,GAA4C,IAAhBC,EAAe,EAAfA,KAAMnM,EAAS,EAATA,MAOrC,OACI,sBAAKlB,UAAU,kBAAf,SACI,0BAAQA,UAAU,0CAA0CF,MAAK,aAAIwN,SAAU,YANrE,WAAVpM,EAA2B,CAAEF,gBAAiB,UAAWuM,MAAO,QACxD,IAKR,UACI,sBAAKvN,UAAU,sBACf,uBAAKA,UAAU,2BAAf,UACI,eAACqN,EAAD,IACA,6BAAInM,YCVjB,SAASsM,GAAT,GAAwC,IAATnD,EAAQ,EAARA,KAClC,EAA4BR,oBAAS,GAArC,oBAAO4D,EAAP,KAAeC,EAAf,KACMC,EAAUrC,mBACVsC,EAAiBC,mBAAQ,kBAAMxD,EAAKyD,YAAW,CAACzD,IAEtD,OACI,sBAAKrK,UAAU,gBAAf,SACI,uBAAKmN,IAAKQ,EAAS3N,UAAS,uBAAkByN,EAAS,eAAiB,IAAxE,UACI,uBAAMvN,QAAS,kBAAMwN,GAAWD,IAAhC,SACI,eAACL,GAAD,CAAkBC,KAAMhD,EAAK0D,KAAM7M,MAAOmJ,EAAKnJ,UAG/CuM,GAAU,eAACxC,GAAD,CAAgBrB,QAAS,kBAAM8D,GAAU,IAAQxM,MAAOmJ,EAAKnJ,MAAOiM,IAAKQ,EAAzE,SACN,eAACC,EAAD,CAAgBhE,QAAS,kBAAM8D,GAAU,aCHjE,IAsDMM,GAAU,CAAC,CAAED,KAAME,KAAc/M,MAAO,OAAQ4M,UAAWnE,IAAY,CAAEoE,KAAMG,KAAehN,MAAO,OAAQ4M,UAAWpD,KASxHjK,GAAqB,CACvBsD,iBACAU,mBACAZ,iBAGSsK,GAAkBxN,aAbP,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBI,WAAYd,EAAMsH,YAAYxG,cAUkBqK,GAAzBE,EArEN,SAAC,GAAiF,IAA/EvK,EAA8E,EAA9EA,WAAY4G,EAAkE,EAAlEA,MAAO+G,EAA2D,EAA3DA,cAAeU,EAA4C,EAA5CA,gBAAiBZ,EAA2B,EAA3BA,aAAcuK,EAAa,EAAbA,OACzF,EAAkCvE,oBAAS,GAA3C,oBAAO7F,EAAP,KAAkBqK,EAAlB,KACA,EAA8BxE,mBAAS,MAAvC,oBAAO1G,EAAP,KAAgBmL,EAAhB,KACA,EAAgCzE,mBAAS,MAAzC,oBAAO0E,EAAP,KAAiBC,EAAjB,KAEAvE,qBAAU,WACN,IAAM9G,EAAU4C,GAAgBF,WAAWzP,GACrC8M,EAAO6C,GAAgBJ,YAAYvP,EAAY+M,GACrDkL,EAAanL,EAAKc,YAAa,GAC/BsK,EAAWnL,GACXqL,EAAYtL,KACb,IAiBH,OACI,sBAAKlD,UAAU,eAAf,SACI,uBAAKA,UAAU,oBAAf,UACI,qBAAIA,UAAU,gBAAd,qBACA,uBAAKA,UAAU,oBAAf,UACKgO,GAAQrM,KAAI,SAAC0I,EAAM5D,GAAP,OACT,eAAC+G,GAAD,CAA4CnD,KAAMA,GAAxBA,EAAKnJ,MAAQuF,MAEzCzC,EAII,uCACE,sBAAKhE,UAAU,gBAAgBE,QAtB3B,WACxBuE,EAAgB8J,EAAUvR,GAC1BqR,GAAa,IAoBO,SACI,eAACjB,GAAD,CAAkBC,KAAMoB,KAAyBvN,MAAM,oBAE3D,sBAAKlB,UAAU,gBAAgBE,QApB9B,WACrB2D,EAAa0K,EAAUvR,IAmBH,SACI,eAACoQ,GAAD,CAAkBC,KAAMqB,KAAgBxN,MAAM,gBARtD,sBAAKlB,UAAU,gBAAgBE,QAxBzB,WACtB6D,EAAcwK,EAAUpL,EAASnG,GACjCqR,GAAa,GACbD,KAqBgB,SACI,eAAChB,GAAD,CAAkBC,KAAMsB,KAAWzN,MAAM,yB,UCjD9D,SAAS0N,GAAT,GAAqD,IAA7B/J,EAA4B,EAA5BA,OAAQzL,EAAoB,EAApBA,KAAoB,IAAd0G,aAAc,MAAN,GAAM,EAcvD,OAAO,eAAC,KAAD,CAAQsK,KAAMvF,EAAO9J,SAAUoF,IAAK0E,EAAO7J,OAAQ5B,KAZ1D,WACI,OAAQA,GACJ,IAAK,KACD,OAAO,GACX,IAAK,KACD,OAAO,GAEX,QACI,OAAO,IAI6CyV,GAAW/O,MAAOA,EAAOgP,OAAK,ICqDlG,IAOMrO,GAAqB,CACzBkE,iBAIWoK,GAAsBpO,aAZX,SAACrL,GACvB,MAAO,CACLc,WAAYd,EAAMsH,YAAYxG,WAC9BuF,KAAMrG,EAAM+H,WAAW1B,QAWzB8E,GAFiCE,EAxEnC,YAMI,IALFkE,EAKC,EALDA,OACAzO,EAIC,EAJDA,WACAuO,EAGC,EAHDA,aACAhJ,EAEC,EAFDA,KAGA,GADC,EADDqT,iBAEkCnF,oBAAS,IAA3C,oBAAOoF,EAAP,KAAkBC,EAAlB,KAmCA,OAjCAjF,qBAAU,WAAO,IAAD,EACR9G,EAAU4C,GAAgBF,WAAWzP,GAErC+Y,EAAe,UADRpJ,GAAgBJ,YAAYvP,EAAY+M,GACxB5M,eAAR,aAAG,EAAc0G,MAAK,SAACmS,GAAD,OAAOA,EAAEtU,MAAQ+J,EAAO/J,OACnEoU,EAAaC,KACZ,CAAC/Y,EAAYyO,EAAO/J,MA6BrB,uBAAKkF,UAAU,6BAA6BE,QA3BpB,WACxBgP,GAAcD,GACd,IAAM1X,EAAMwO,GAAgBW,mBAAmB7B,EAAO/J,KAChDgI,EAAWmM,EACb,CACA3Y,IAAKsL,GAAoCiD,EAAO9J,UAChD3E,cAEA,CAAEE,IAAKsL,GAA+BiD,EAAO9J,UAAW3E,cAC5DuO,EAAY,WAAZ,cAAgBpN,GAAhB,QAAqBuL,KACrB,IAAMK,EAAU5L,EAAI,GACdyF,EAAQzF,EAAI,GACZ2L,EAAO3L,EAAI,GACXiE,EAAU,CACdwH,GAAItK,EAAYC,SAChBgD,OACAkB,OAAQoS,EAAY,UAAY,QAChCjS,MAAO,CAACE,QAASF,EAAMlC,IAAKoG,MAAOlE,EAAMkE,OACzCgC,KAAM,CAAC9F,OAAQ8F,EAAKF,GAAI9B,MAAOgC,EAAKhC,OACpCiC,UACAkM,UAAW/H,KAAKC,OAElBzP,EAAcS,KAAK,eAAiB,CAACgD,OAAQsJ,EAAO/J,IAAKU,YACzDjB,EAAYe,eAAeuJ,EAAO/J,IAAKU,IAIvC,UACE,sBAAKwE,UAAU,sBACf,sBAAKF,MAAO,CAAEgM,MAAO,IAArB,SACE,eAAC8C,GAAD,CAAc/J,OAAQA,MAExB,sBAAK7E,UAAU,qBAAf,SACE,6BAAI6E,EAAO9J,aAEZkU,GACC,sBAAKjP,UAAU,sBAAf,SACE,eAAC,KAAD,YC/BGsP,GAAa3O,aANF,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,aAIP2K,EA7BN,SAAC,GAAe,IAAb3D,EAAY,EAAZA,MACnB,EAA8B6M,mBAAS7M,EAAMzG,SAA7C,oBAAOA,EAAP,KAAgBgZ,EAAhB,KAOA,OAAQ,uBAAKvP,UAAU,cAAf,UACJ,wBAAOA,UAAU,eAAejD,KAAK,OAAO8N,WAAS,EAAC2E,YAAY,YAAYlF,SAN7D,SAAC,GAA2B,IAAfpE,EAAc,EAAxBiE,OAAUjE,MACxBuJ,EAAkBzS,EAAMzG,QAAQ4G,QAAO,SAAA0H,GAAM,OAAIA,EAAO9J,SAAS2U,cAAcC,SAASzJ,EAAMwJ,kBACpGH,EAAWE,MAKX,gDACA,sBAAKzP,UAAU,cAAf,SACKzJ,EAAQoL,KAAI,SAAAkD,GAAM,OACf,eAACkK,GAAD,CAEIlK,OAAQA,GADHA,EAAO/J,gB,qBC8B1B2F,I,OAAqB,CACvBkE,kBAGSiL,GAAejP,YAAQ,KAAMF,GAAdE,EA3CN,SAAC,GAA+B,IAA7BgE,EAA4B,EAA5BA,aAAciF,EAAc,EAAdA,QACnC,EAAoBC,mBAAS,IAAIvC,MAA1BuI,EAAP,qBACA,EAAkBhG,mBAAS,MAApBiG,EAAP,qBACA,EAA8BjG,mBAAS,MAAvC,oBAAO1C,EAAP,KAAgB4I,EAAhB,KAWMC,EAAe,WACjB,IAAMzY,EAAMwO,GAAgBkB,oBAAoBE,GAChDxC,EAAY,WAAZ,cAAgBpN,IAChBqS,KAGJ,OACI,uBAAK5J,UAAU,cAAf,UACI,eAAC,KAAD,CACIiQ,SAAUJ,EACVvF,SAnBK,SAAC9C,GACduI,EAAWvI,EAAK0I,YAmBRL,UAAWA,EACXC,QAASA,EAETK,QAAM,EACNC,cAAe,SAAAC,GAAS,OAAIA,EAAUC,OAAO,EAAG,MAEpD,uBAAKtQ,UAAU,0BAAf,UACI,yBAAQA,UAAU,+BAA+BE,QAAS8P,EAA1D,kBACA,yBAAQhQ,UAAU,qBAAqBE,QAxBnC,WACZ6P,EAAW,MACXC,KAsBQ,6B,SCDhB,IAMMvP,GAAqB,CACvBkE,iBAGS4L,GAAqB5P,aAVV,SAAArL,GACpB,MAAO,CACHc,WAAYd,EAAMsH,YAAYxG,cAQqBqK,GAAzBE,EA3ClC,YAA6E,IAA9CqG,EAA6C,EAA7CA,MAAO5Q,EAAsC,EAAtCA,WAAYuO,EAA0B,EAA1BA,aAAcqG,EAAY,EAAZA,SAC5D,EAAkCnB,oBAAS,GAA3C,oBAAOoF,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAjF,qBAAU,WAAO,IAAD,EACN9G,EAAU4C,GAAgBF,WAAWzP,GAErCoa,EAAc,UADPzK,GAAgBJ,YAAYvP,EAAY+M,GACzB2D,gBAAR,aAAG,EAAehB,MAAK,SAAA2K,GAAC,OAAIA,IAAMzJ,EAAMhE,MAC5DkM,EAAasB,KACd,CAACpa,EAAY4Q,EAAMhE,KAYlB,sBAAKhD,UAAU,qBAAf,SAEI,uBAAKA,UAAU,qBAAf,UACI,uBAAKA,UAAU,gBAAgBF,MAAO,CAAEkB,gBAAiBgG,EAAMuG,OAASrN,QAb3D,WACrBgP,GAAcD,GACd,IAAM1X,EAAMwO,GAAgBa,kBAAkBI,EAAMhE,IAC9CG,EAAU4C,GAAgBF,WAAWzP,GAErC0M,EAAYmM,EAAa,CAAE3Y,IAAKsL,GAA2BoF,EAAM9F,OAAQiC,QAASA,GAAY,CAAE7M,IAAKsL,GAAwBoF,EAAM9F,OAAQiC,QAASA,GAC1JwB,EAAY,WAAZ,cAAgBpN,GAAhB,QAAqBuL,MAOb,UACI,sCAAQkE,EAAM9F,OAAS,MACtB+N,GAAa,sBAAKjP,UAAU,qBAAf,SAAoC,eAAC,KAAD,SAEtD,sBAAKA,UAAU,eAAeE,QAAS,kBAAM8K,EAAShE,EAAMuG,QAA5D,SAAoE,eAAC,KAAD,cCZpF,IAMamD,GAAY/P,aAND,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,aAIR2K,EAzBzB,YAA0C,IAApB3D,EAAmB,EAAnBA,MAAOgO,EAAY,EAAZA,SACzB,EAA4BnB,mBAAS7M,EAAMxG,QAA3C,oBAAOA,EAAP,KAAema,EAAf,KAOA,OACI,uBAAK3Q,UAAU,uBAAf,UACI,wBAAOA,UAAU,eAAejD,KAAK,OAAO8N,WAAS,EAAC2E,YAAY,mBAAmBlF,SAPxE,SAAC,GAA2B,IAAfpE,EAAc,EAAxBiE,OAAUjE,MACxB0K,EAAiB5T,EAAMxG,OAAO2G,QAAO,SAAA6J,GAAK,OAAIA,EAAM9F,MAAMwO,cAAcC,SAASzJ,EAAMwJ,kBAC7FiB,EAAUC,MAMN,yCACA,sBAAK5Q,UAAU,yBAAf,SACKxJ,EAAOmL,KAAI,SAAAqF,GAAK,OAAI,eAACuJ,GAAD,CAAmCvJ,MAAOA,EAAOgE,SAAUA,GAAlChE,EAAMhE,e,SCoBpE,IAMMvC,GAAqB,CACvBkE,iBAGSkM,GAAmBlQ,aAVR,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,aAQwByK,GAAzBE,EAzCzB,YAAuD,IAA1BgE,EAAyB,EAAzBA,aAAciF,EAAW,EAAXA,QACxCkH,EAAWxF,mBACjB,EAA0BzB,mBAAS,aAAnC,oBAAO3I,EAAP,KAAc6P,EAAd,KAoBA,OAlBA9G,qBAAU,WACN6G,EAAS/E,QAAQiF,QACjBF,EAAS/E,QAAQkF,WAClB,IAgBC,wBAAMjR,UAAU,oBAAoBkR,SAVnB,SAAC9P,GAClBA,EAAGC,iBACH,IAAM9J,EAAMwO,GAAgBC,sBAAsB,eAAgB,KAAM9E,GAClE4B,EAAW,CAACxM,IAAKsL,GAA4BV,IACnDyD,EAAY,WAAZ,cAAgBpN,GAAhB,QAAqBuL,KACrBiO,EAAS,IACTnH,KAIA,UACI,wBAAOuH,QAAQ,kBAAf,mBACA,wBAAOnR,UAAU,eAAemN,IAAK2D,EAAU5K,MAAOhF,EAAOoJ,SAhBhD,SAAC,GAA2B,IAAfpE,EAAc,EAAxBiE,OAAUjE,MAC9B6K,EAAS7K,MAgBL,yBAAQlG,UAAU,0BAAlB,uBChCL,SAASoR,GAAUhQ,GACtB,IACMiQ,EAAU,0CADG,YACH,iBAEVC,EAAW,IAAIC,SAOrB,OALAD,EAASE,OAAO,OAAQpQ,EAAG+I,OAAOsH,MAAM,IACxCjc,QAAQC,IAAI,uBAAwB2L,EAAG+I,OAAOsH,MAAM,IACpDH,EAASE,OAAO,gBAAiB,YAG1BE,MAAML,EAAY,CACrBja,OAAQ,OACRyI,KAAMyR,IAELtc,MAAK,SAAAuC,GAAG,OAAIA,EAAIoa,UAChB3c,MAAK,SAAAuC,GAAG,OAAIA,EAAIF,OAChBzB,OAAM,SAAAgJ,GAAG,OAAIpJ,QAAQK,MAAM+I,MC+BpC,IAMM6B,GAAqB,CACvBkE,iBAGSiN,GAAoBjR,aAVT,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,aAQyByK,GAAzBE,EAlDjC,YAAwD,IAA1BgE,EAAyB,EAAzBA,aAAciF,EAAW,EAAXA,QACxC,EAA0BC,mBAAS,IAAnC,oBAAO3I,EAAP,KAAc6P,EAAd,KACA,EAAsBlH,mBAAS,IAA/B,oBAAOxS,EAAP,KAAYwa,EAAZ,KAEMC,EAASxG,mBASTyG,EAAiB,uCAAG,WAAO3Q,GAAP,mBAAAjK,EAAA,6DAChB+J,EAAQE,EAAG+I,OAAOsH,MAAM,GAAGrH,KADX,SAEJgH,GAAUhQ,GAFN,OAEhB/J,EAFgB,OAGhBE,EAAMwO,GAAgBoC,cAAc9Q,EAAK6J,GAC/CyD,EAAY,WAAZ,cAAgBpN,IAChBqS,IALsB,2CAAH,sDAQvB,OACI,uBAAK5J,UAAU,sBAAf,UACI,sBAAKA,UAAU,cAAf,SACI,yBAAOmR,QAAQ,SAAf,UACI,uBAAM,cAAY,OAAlB,sBACA,wBAAOpU,KAAK,OAAOiG,GAAG,SAASlD,MAAO,CAAEkS,QAAS,QAAU1H,SAAUyH,SAI7E,wBAAMb,SAxBO,SAAC9P,GAClBA,EAAGC,iBACH,IAAM9J,EAAMwO,GAAgBoC,cAAc9Q,EAAK6J,GAC/CyD,EAAY,WAAZ,cAAgBpN,IAChBqS,KAoBkC5J,UAAU,cAAxC,UACI,mDACA,wBAAOmN,IAAK2E,EAAQ9R,UAAU,eAAewP,YAAY,yBAAyBtJ,MAAO7O,EAAKiT,SAAU,SAAClJ,GAAD,OAAQyQ,EAAOzQ,EAAG+I,OAAOjE,UAChI7O,GAAO,uCAAE,0DAAmC,wBAAO2I,UAAU,eAAekG,MAAOhF,EAAOoJ,SAAU,SAAClJ,GAAD,OAAQ2P,EAAS3P,EAAG+I,OAAOjE,aAChI,yBAAQlG,UAAU,gBAAlB,6BCShB,IAOaiS,GAAwBtR,aAPb,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBI,WAAYd,EAAMsH,YAAYxG,cAIwB,KAAzBuK,EAnDrC,YAAuD,IAArB0J,EAAoB,EAApBA,KAAMjU,EAAc,EAAdA,WACpC,EAA4ByT,oBAAS,GAArC,oBAAO4D,EAAP,KAAeC,EAAf,KACA,EAA4B7D,oBAAS,GAArC,oBAAOqI,EAAP,KAAeC,EAAf,KACA,EAA0BtI,mBAAS,IAAnC,oBAAO0D,EAAP,KAAc6E,EAAd,KACMzE,EAAUrC,mBACVsC,EAAiBC,mBAAQ,kBAAMxD,EAAKyD,YAAW,CAACzD,IAChDgI,EAAgBxE,mBAAQ,kBAAMxD,EAAKiI,gBAAe,CAACjI,IAEnDlH,EAAU4C,GAAgBF,WAAWzP,GACrCmY,EAAWxI,GAAgBJ,YAAYvP,EAAY+M,GAMnDoP,EAAa,SAAChF,GACZ2E,EAAQC,GAAU,IAElBC,EAAS7E,GACT4E,GAAU,KAIlB,OACI,sBAAKnS,UAAU,gBAAf,SAbiB,WAAO,IAAD,IACvB,MAAuB,UAAfqK,EAAKnJ,SAAuB,OAACqN,QAAD,IAACA,GAAD,UAACA,EAAUzO,aAAX,aAAC,EAAiBiB,YAAW,OAACwN,QAAD,IAACA,GAAD,UAACA,EAAUzO,aAAX,aAAC,EAAiB9E,QAa9EwX,IAAkB,uBAAKrF,IAAKQ,EAAS3N,UAAS,uBAAkByN,EAAS,eAAiB,IAAxE,UACf,uBAAMvN,QAAS,kBAAMwN,GAAWD,IAAhC,SACI,eAACL,GAAD,CAAkBC,KAAMhD,EAAK0D,KAAM7M,MAAOmJ,EAAKnJ,UAG/CuM,GAAUpZ,QAAQgW,EAAKiI,gBAAkB,eAACrH,GAAD,CAAgBD,SAAUuH,EAAY3I,QAAS,kBAAM8D,GAAU,IAAQxM,MAAOmJ,EAAKnJ,MAAOiM,IAAKQ,EAAS5C,YAAamH,EAArH,SACpCA,EAAS,eAACG,EAAD,CAAe9E,MAAOA,EAAOvC,SAAUuH,EAAY3I,QAAS,kBAAM8D,GAAU,MAAa,eAACE,EAAD,CAAgB5C,SAAUuH,EAAY3I,QAAS,kBAAM8D,GAAU,QAItKD,IAAWpZ,QAAQgW,EAAKiI,gBAAkB,eAACrH,GAAD,CAAgBrB,QAAS,kBAAM8D,GAAU,IAAQxM,MAAOmJ,EAAKnJ,MAAOiM,IAAKQ,EAAzE,SACtC,eAACC,EAAD,CAAgBhE,QAAS,kBAAM8D,GAAU,gBCtC3D+E,G,4MACFnd,MAAQ,CACJiZ,SAAU,KACVpL,QAAS,KACTuP,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,aAAc,Q,EAiBlB1G,YAAc,SAAC/K,EAAI8E,EAAOnJ,GAAU,IAAD,EAC/BqE,EAAG+I,OAAO4C,UAAUC,IAAI,YACxB,YAAK1X,MAAMod,kBAAX,SAAuB3F,UAAUzK,OAAO,YACxC,EAAKlD,SAAS,CAAEsT,WAAYtR,EAAG+I,SAC/B,MAAgC,EAAK7K,MAA7BtC,EAAR,EAAQA,MAAO2H,EAAf,EAAeA,aACf,EAA8B,EAAKrP,MAA3BiZ,EAAR,EAAQA,SAAUpL,EAAlB,EAAkBA,QAClB,EAAK/D,SAAS,CAAEwT,UAAoB,UAAT7V,EAAmB,CAAEiE,gBAAiBkF,GAAU,CAAEjF,gBAAgB,OAAD,OAASiF,EAAT,QAC5FqI,EAASzO,MAAiB,UAAT/C,EAAmB,CAAEgE,QAASmF,GAAU,CAAElL,OAAQkL,GACnEvB,EAAa4J,EAAUpL,EAASnG,I,EAGpC8V,kBAAoB,WAChB,MAAgC,EAAKxT,MAA7BtC,EAAR,EAAQA,MAAO2H,EAAf,EAAeA,aACf,EAA8B,EAAKrP,MAA3BiZ,EAAR,EAAQA,SAAUpL,EAAlB,EAAkBA,QAClBoL,EAASzO,MAAQ,KACjB6E,EAAa4J,EAAUpL,EAASnG,I,EAGpC+V,iBAAmB,SAAC3Z,GAChB,MAAgC,EAAKkG,MAA7BtC,EAAR,EAAQA,MAAO2H,EAAf,EAAeA,aACf,EAA8B,EAAKrP,MAA3BiZ,EAAR,EAAQA,SAAUpL,EAAlB,EAAkBA,QAClBoL,EAASzO,MAAMkT,OAAmB,SAAT5Z,EACzB,EAAKgG,SAAS,CAAEyT,aAAczZ,IAC9BuL,EAAa4J,EAAUpL,EAASnG,I,uDArCpC,WACI,IAAQ5G,EAAeuJ,KAAKL,MAApBlJ,WACF+M,EAAU4C,GAAgBF,WAAWzP,GACrCmY,EAAWxI,GAAgBJ,YAAYvP,EAAY+M,GACrDoL,EAASzO,QACLyO,EAASzO,MAAMkT,QACfrT,KAAKP,SAAS,CAAEyT,aAAetE,EAASzO,MAAMkT,OAAU,OAAS,SAEjEzE,EAASzO,MAAMiB,QAASpB,KAAKP,SAAS,CAAEwT,UAAW,CAAE5R,gBAAiBuN,EAASzO,MAAMiB,WAChFwN,EAASzO,MAAM9E,QAAQ2E,KAAKP,SAAS,CAAEwT,UAAW,CAAE3R,gBAAgB,OAAD,OAASsN,EAASzO,MAAM9E,OAAxB,SAEhF2E,KAAKP,SAAS,CAAEmP,WAAUpL,c,oBA6B9B,WAAU,IAAD,OACL,EAA8CxD,KAAKrK,MAA3CiZ,EAAR,EAAQA,SAAUqE,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAC7B,IAAKtE,EAAU,MAAO,GAGtB,OADA/Y,QAAQC,IAAImd,GAER,2BAAS5S,UAAU,+BAAnB,UAEI,uBAAKA,UAAU,6BAAf,UACI,uCACA,uBAAKA,UAAU,oBAAf,UAEI,uBAAKA,UAAS,2BAAuC,SAAjB6S,EAA0B,WAAa,IAAM3S,QAAS,kBAAM,EAAK6S,iBAAiB,SAAtH,UACI,sBAAK/S,UAAU,eAAeF,MAAO8S,IACrC,uBAAK5S,UAAU,oBAAf,UACI,sBAAKA,UAAU,eACf,sBAAKA,UAAU,gBACf,uBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,mBACf,sBAAKA,UAAU,uBAEnB,sBAAKA,UAAU,iBAIvB,sBAAKA,UAAS,2BAAuC,SAAjB6S,EAA0B,WAAa,IAAM,YAAU,OAAO3S,QAAS,kBAAM,EAAK6S,iBAAiB,SAASjT,MAAO8S,EAAvJ,SACI,uBAAK5S,UAAU,oBAAf,UACI,sBAAKA,UAAU,eACf,sBAAKA,UAAU,wBAI3B,yBAAQA,UAAU,gBAAgBE,QAASP,KAAKmT,kBAAhD,6BAGJ,uBAAK9S,UAAU,cAAf,UACI,yCACA,sBAAKA,UAAU,uBAAf,SAlCG,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAkCzD2B,KAAI,SAAC4L,EAAOzU,GAAR,OAAc,sBAAakH,UAAU,qBAAqBF,MAAO,CAAEkB,gBAAiBuM,GAASrN,QAAS,SAAAkB,GAAE,OAAI,EAAK+K,YAAY/K,EAAImM,EAAO,WAAhHzU,WAG7EyV,EAASnG,aAAe/T,QAAQka,EAASnG,YAAYxP,SAAW,uBAAKoH,UAAU,cAAf,UAC7D,8CACA,sBAAKA,UAAU,6BAAf,SAA6CuO,EAASnG,YAAYzG,KAAI,SAAAxK,GAAC,OAAI,sBAAgB6I,UAAU,qBAAqBF,MAAO,CAAEmB,gBAAgB,OAAD,OAAS9J,EAAEE,IAAX,MAAqB6I,QAAS,SAAAkB,GAAE,OAAI,EAAK+K,YAAY/K,EAAIjK,EAAEE,IAAK,SAA7HF,EAAE6L,mB,GA5F5ExC,aA2GzBC,GAAqB,CACvBkE,iBAGSsO,GAAkBtS,aAXP,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBI,WAAYd,EAAMsH,YAAYxG,cAQkBqK,GAAzBE,CAA6C8R,I,SC5C5E,IAAMS,GAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAS7GzS,GAAqB,CACvBkE,gBACAjB,kBAGSyP,GAAYxS,aAZD,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBI,WAAYd,EAAMsH,YAAYxG,cASYqK,GAAzBE,EA/EzB,YAAuF,IAAjE4M,EAAgE,EAAhEA,MAAOvQ,EAAyD,EAAzDA,MAAO0G,EAAkD,EAAlDA,cAAekG,EAAmC,EAAnCA,QAASoB,EAA0B,EAA1BA,SAAUrG,EAAgB,EAAhBA,aAClE,EAA0CkF,mBAAS,MAAnD,oBAAOuJ,EAAP,KAAsBC,EAAtB,KACA,EAA0BxJ,mBAAS,IAAnC,oBAAO3I,EAAP,KAAc6P,EAAd,KAEMD,EAAWxF,mBAEjBrB,qBAAU,WAAO,IAAD,EACZoJ,EAAiB9F,GACjB,IAAMvG,EAAQhK,EAAMxG,OAAOyG,MAAK,SAAA+J,GAAK,OAAIA,EAAMuG,QAAUA,KACzDwD,GAAc,OAAL/J,QAAK,IAALA,OAAA,EAAAA,EAAO9F,QAAS,IACzB,UAAA4P,EAAS/E,eAAT,SAAkBkF,WACnB,IAEH,IAAM9E,EAAc,SAAC/K,GACjBiS,EAAiBjS,EAAG+I,OAAOmJ,QAAQ/F,OACnC,IAAMvG,EAAQhK,EAAMxG,OAAOyG,MAAK,SAAA+J,GAAK,OAAIA,EAAMuG,QAAUnM,EAAG+I,OAAOmJ,QAAQ/F,SAC3EwD,GAAc,OAAL/J,QAAK,IAALA,OAAA,EAAAA,EAAO9F,QAAS,KAuB7B,OACI,uBAAKlB,UAAU,aAAf,UACI,iCACI,0CACA,wBAAOmN,IAAK2D,EAAU9Q,UAAU,eAAesK,SAxBtC,SAAC,GAA2B,IAAfpE,EAAc,EAAxBiE,OAAUjE,MAC9B6K,EAAS7K,IAuBsEA,MAAOhF,OAGlF,iCACI,oDACA,sBAAKlB,UAAU,uBAAf,SACKkT,GAAOvR,KAAI,SAAC4R,EAAGza,GACZ,OAAQ,sBAAa,aAAYya,EAAGvT,UAAU,qBAAqBF,MAAO,CAAEkB,gBAAiBuS,GAAKrT,QAASiM,EAAnG,SACLoH,IAAMH,GAAkB,gCAAM,eAAC,KAAD,OADfta,WAO9B,uBAAKkH,UAAU,iBAAf,UACI,yBAAQA,UAAU,yBAAyBE,QAnClC,WACjB,IAAMkD,EAAW,eAAQpG,GACrBgK,EAAQ5D,EAAY5M,OAAOyG,MAAK,SAAA+J,GAAK,OAAIA,EAAMuG,QAAU6F,KACzDpM,EAAOA,EAAM9F,MAAQA,GAErB8F,EAAQ,CAAEhE,GAAItK,EAAYC,SAAU4U,MAAO6F,EAAelS,SAC1DkC,EAAY5M,OAAOkJ,KAAKsH,IAE5BtD,EAAc,CAAE3G,KAAM,IAAMqG,GAC5B4H,IACApB,IAEA,IAAMrS,EAAMwO,GAAgBa,kBAAkBI,EAAMhE,IACpD2B,EAAY,WAAZ,cAAgBpN,KAsBR,kBACA,yBAAQyI,UAAU,2BAAlB,6BCnDHwT,GAAoB,kBAC7B,sBAAK1T,MAAO,CAAEwN,SAAU,YAAxB,SACI,uBAAKtN,UAAU,cAAf,UACI,qBAAIA,UAAU,gBAAd,yBACA,sBAAKA,UAAU,wBAAf,SACCyT,GAAe9R,KAAI,SAAC0I,EAAM5D,GAAP,OAChB,eAACwL,GAAD,CAA8C5H,KAAMA,GAAxBA,EAAKnJ,MAAQuF,cAOnDgN,GAAiB,CAAC,CAAE1F,KAAM2F,KAAQxS,MAAO,UAAW4M,UAAWwB,IAAc,CAAEvB,KAAM4F,KAAgBzS,MAAO,SAAU4M,UAAW4C,GAAW4B,cAAea,IAAa,CAAEpF,KAAM6F,KAAiB1S,MAAO,YAAa4M,UAAW+C,IAAoB,CAAE9C,KAAM8F,KAAS3S,MAAO,QAAS4M,UAAW8B,IAAgB,CAAE7B,KAAM+F,KAAa5S,MAAO,aAAc4M,UAAW8D,IAAqB,CAAE7D,KAAMgG,KAAc7S,MAAO,QAAS4M,UAAWmF,KCxBpae,GAAb,4JAEI,WACI,OACI,uBAAKhU,UAAU,UAAf,UACI,eAAC,GAAD,IACA,eAACmO,GAAD,CAAiBC,OAAQzO,KAAKL,MAAM8O,gBANpD,GAAqC5N,aCsD/BC,GAAqB,CACvBkE,iBAGSsP,GAAkBtT,aAXP,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBI,WAAYd,EAAMsH,YAAYxG,cAQkBqK,GAAzBE,EArDN,SAAC,GAAyC,IAAvCvK,EAAsC,EAAtCA,WAAYuO,EAA0B,EAA1BA,aAAc3H,EAAY,EAAZA,MAClD,EAA4B6M,oBAAS,GAArC,oBAAO4D,EAAP,KAAeC,EAAf,KACMwG,EAAa5I,mBAEbnI,EAAU4C,GAAgBF,WAAWzP,GACrCmY,EAAWxI,GAAgBJ,YAAYvP,EAAY+M,GACnDgE,EAAO,OAAGoH,QAAH,IAAGA,OAAH,EAAGA,EAAUpH,QACpBgN,EAAOpO,GAAgBqB,iBAAiBD,GAExCiN,EAAkB,WACpB,OAAI7F,EAAS8F,WAAmB,CAAEnT,MAAO,WAAYH,QAAS,WACzDoG,EAAUG,KAAKC,MAAS,EAAU,CAAErG,MAAO,UAAWH,QAAS,WAC/DoG,EAAUG,KAAKC,OAAW,MAA6B,CAAErG,MAAO,WAAYH,QAAS,WAC9E,CAAEG,MAAO,GAAIH,QAAS,KAQtC,OACI,qCACKoG,GAAW,uBAAKnH,UAAU,qBAAf,UACR,qBAAIA,UAAU,cAAd,sBACA,uBAAKA,UAAU,WAAf,UACI,wBAAOjD,KAAK,WAAWiD,UAAU,gBAAgBsU,QAAS/F,EAAS8F,WAAY/J,SAVtE,WACrBiE,EAAS8F,YAAc9F,EAAS8F,WAChC1P,EAAa4J,EAAUpL,EAASnG,MASpB,uBAAKgD,UAAU,gBAAgBmN,IAAK+G,EAApC,UACI,uBAAMlU,UAAU,gBAAhB,SAAiCmU,IACjC,uBAAMrU,MAAO,CAAEkB,gBAAiBoT,IAAkBrT,QAASwT,cAAe,YAAaC,SAAU,GAAIC,QAAS,QAASC,aAAc,GAArI,SAA2IN,IAAkBlT,QAC7J,uBAAMlB,UAAU,gBAAhB,SAAgC,eAAC,KAAD,MAChC,sBAAKA,UAAU,oBAAoBE,QAAS,kBAAMwN,GAAWD,MAC5DA,GAAU,eAACxC,GAAD,CAAgBrB,QAAS,kBAAM8D,GAAU,IAAQxM,MAAO,QAASiM,IAAK+G,EAAtE,SACP,eAACtE,GAAD,CAAchG,QAAS,kBAAM8D,GAAU,sBCkBtDiH,GAAiBhU,aAPN,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBI,WAAYd,EAAMsH,YAAYxG,cAIiB,KAAzBuK,EApDN,SAAC,GAA2B,IAAzBvK,EAAwB,EAAxBA,WAAY4G,EAAY,EAAZA,MACnC,EAA4B6M,oBAAS,GAArC,oBAAO4D,EAAP,KAAeC,EAAf,KACA,EAA4B7D,oBAAS,GAArC,oBAAOqI,EAAP,KAAeC,EAAf,KACA,EAA0BtI,mBAAS,IAAnC,oBAAO0D,EAAP,KAAc6E,EAAd,KACMwC,EAAetJ,mBAMfnI,EAAU4C,GAAgBF,WAAWzP,GACrC0Q,EAAWf,GAAgBJ,YAAYvP,EAAY+M,GAAS2D,SAC5DtQ,EANgB,SAACsQ,GAAD,cAClBA,QADkB,IAClBA,OADkB,EAClBA,EAAUnF,KAAI,SAAAqB,GAAE,OAAIhG,EAAMxG,OAAOyG,MAAK,SAAA+J,GAAK,OAAIA,EAAMhE,KAAOA,QAKjD6R,CAAc/N,GAEvByL,EAAa,SAAChF,GACZ2E,EAAQC,GAAU,IAElBC,EAAS7E,GACT4E,GAAU,KAGlB,OACI,sCACa,OAARrL,QAAQ,IAARA,OAAA,EAAAA,EAAUlO,QAAS,uBAAKoH,UAAU,mBAAf,UAChB,qBAAIA,UAAU,cAAd,oBACA,uBAAKA,UAAU,SAAf,UACKxJ,EAAOmL,KAAI,SAAAqF,GAAK,OAAI,sBAAoBhH,UAAU,aAAaF,MAAO,CAAEkB,gBAAiBgG,EAAMuG,OAA3E,SAChBvG,EAAM9F,OAAS,IADW8F,EAAMhE,OAGrC,uBACImK,IAAKyH,EACL5U,UAAU,oCAFd,UAII,sBAAKA,UAAU,oBAAoBE,QAAS,kBAAMwN,GAAWD,MAC7D,eAAC,KAAD,IACCA,GAAU,eAACxC,GAAD,CAAgBD,SAAUuH,EAAY3I,QAAS,kBAAM8D,GAAU,IAAQxM,MAAO,SAAUiM,IAAKyH,EAAc7J,YAAamH,EAAxH,SACLA,EAAgF,eAACiB,GAAD,CAAWnI,SAAUuH,EAAYhF,MAAOA,EAAO3D,QAAS,kBAAM8D,GAAU,MAA/I,eAACgD,GAAD,CAAW1F,SAAUuH,EAAY3I,QAAS,kBAAM8D,GAAU,iBAI5E,UClBfjN,GAAqB,CACvBkE,iBAGSmQ,GAAWnU,YAAQ,KAAMF,GAAdE,EA5BN,SAAC,GAA8B,IAA5BkE,EAA2B,EAA3BA,OAAQF,EAAmB,EAAnBA,aAOzB,OACI,uBAAK3E,UAAU,wBAAf,UAEI,uBAAKA,UAAU,YAAf,UACI,eAAC4O,GAAD,CAAcxV,KAAK,KAAKyL,OAAQA,IAChC,iCACI,qBAAI7E,UAAU,qBAAd,SAAoC6E,EAAO9J,WAC3C,6BAAI8J,EAAOtF,iBAKnB,oBAAGS,UAAU,gBAAgBE,QAjBhB,WACjB,IAAM3I,EAAMwO,GAAgBW,mBAAmB7B,EAAO/J,KACtD6J,EAAY,WAAZ,cAAgBpN,KAeZ,oCCpBL,SAASwd,GAAT,GAAoD,IAAXlQ,EAAU,EAAVA,OAC5C,EAA0CgF,oBAAS,GAAnD,oBAAOmL,EAAP,KAAsBC,EAAtB,KACMC,EAAgB5J,mBACtB,OACI,uBAAsBtL,UAAU,2BAA2BmN,IAAK+H,EAAhE,UACI,wBAAMpV,MAAO,CAAEqV,OAAQ,WAAvB,UACI,sBAAKnV,UAAU,0BAA0BE,QAAS,kBAAM+U,GAAkBD,MAC1E,eAACpG,GAAD,CAAc/J,OAAQA,OAEzBmQ,GAAiB,eAAC/J,GAAD,CAAgBrB,QAAS,kBAAMqL,GAAiB,IAAQ/T,MAAO,KAAMiM,IAAK+H,EAA1E,SACd,eAACJ,GAAD,CAAUjQ,OAAQA,QANhBA,EAAO/J,KCDzB,IAwCasa,GAAkBzU,aAPP,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBI,WAAYd,EAAMsH,YAAYxG,cAIkB,KAAzBuK,EAxCN,SAAC,GAAoB,IAAD,EAKrCpK,EALoBH,EAAiB,EAAjBA,WACxB,EAAoCyT,oBAAS,GAA7C,oBAAOwL,EAAP,KAAmBC,EAAnB,KAEMV,EAAetJ,mBAIfnI,EAAU4C,GAAgBF,WAAWzP,GAG3C,OAFAG,EAAUwP,GAAgBJ,YAAYvP,EAAY+M,GAAS5M,QAGvD,sCACY,QAAP,EAAAA,SAAA,eAASqC,QAAS,uBAAKoH,UAAU,oBAAf,UACf,qBAAIA,UAAU,cAAd,qBACA,uBAAKA,UAAU,UAAf,UACKzJ,EAAQoL,KAAI,SAAAkD,GAAM,OAAI,eAACkQ,GAAD,CAAgDlQ,OAAQA,GAApBA,EAAO/J,QAElE,uBACIqS,IAAKyH,EACL5U,UAAU,sCAFd,UAII,sBAAKA,UAAU,0BAA0BE,QAAS,kBAAMoV,GAAeD,MACvE,eAAC,KAAD,IACCA,GAAc,eAACpK,GAAD,CAAgBrB,QAAS,kBAAM0L,GAAc,IAAQpU,MAAO,UAAWiM,IAAKyH,EAA5E,SACX,eAACtF,GAAD,eAIP,UChCRiG,GAAgB,kBACzB,uBAAKvV,UAAU,2BAAf,UACI,eAACoV,GAAD,IACA,eAACT,GAAD,IACA,eAACV,GAAD,QCND,SAASuB,GAAT,GAA8C,IAAvBzU,EAAsB,EAAtBA,QAAS0U,EAAa,EAAbA,UAU7BC,EAAe,CACjBzJ,OAAQ,OACRH,MAAM,GAAD,OAAK2J,EAAL,KACLzU,gBAAiBD,EACjB2T,aAAc,UACdiB,UAAW,QACXC,WAAY,yBAGhB,OACI,sBAAK5V,UAAU,kBAAkBF,MAlBb,CACpBmM,OAAQ,EACRH,MAAO,OACP9K,gBAAiB,UACjB0T,aAAc,GACdmB,OAAQ,mBAaR,SACI,sBAAK/V,MAAO4V,M,cChBlBI,G,4MACFxgB,MAAQ,CACJygB,UAAW,GACXC,YAAY,G,EAUhBC,gBAAkB1V,IAAM2V,Y,EACxBC,eAAiB5V,IAAM2V,Y,EAEvB/J,YAAc,SAACC,GAAO,IAAD,aACb,YAAK6J,uBAAL,mBAAsBlK,eAAtB,eAA+BQ,SAASH,EAAEjC,WAA1C,UAAqD,EAAKgM,sBAA1D,iBAAqD,EAAqBpK,eAA1E,aAAqD,EAA8BQ,SAASH,EAAEjC,WAA9F,UAAyG,EAAKiM,uBAA9G,iBAAyG,EAAsBrK,eAA/H,aAAyG,EAA+BQ,SAASH,EAAEjC,UAGvJ,EAAK/K,SAAS,CAAE4W,YAAY,EAAOD,UAAW,M,EAGlDM,eAAiB,WAAO,IAAD,EACb9e,EAAMwO,GAAgBC,sBAAsB,WAAY,EAAK1G,MAAM2G,YAAa,EAAK3G,MAAMiH,KAAKvD,KACtG,IAAK1D,OAAMqF,aAAX,oBAA2BpN,K,EAG/B+e,iBAAmB,WAAO,IAAD,EACf/e,EAAMwO,GAAgBC,sBAAsB,aAAc,EAAK1G,MAAM2G,YAAa,EAAK3G,MAAMiH,KAAKvD,KACxG,IAAK1D,OAAMqF,aAAX,oBAA2BpN,K,EAG/Bgf,kBAAoB,YAAkC,IAAD,IAA9BpM,OAAUC,EAAoB,EAApBA,KAAMlE,EAAc,EAAdA,MACnC,EAAK9G,SAAL,gBAAiBgL,EAAOlE,K,EAG5BsQ,cAAgB,SAACpV,GACbA,EAAGC,iBACH,MAA4C,EAAK/B,MAAzC2G,EAAR,EAAQA,YAAaM,EAArB,EAAqBA,KAAM5B,EAA3B,EAA2BA,aACnBoR,EAAc,EAAKzgB,MAAnBygB,UACFxe,EAAMwO,GAAgBC,sBAAsB,cAAeC,EAAaM,EAAKvD,GAAI+S,GACvFpR,EAAY,WAAZ,cAAgBpN,IAChB,EAAK6H,SAAS,CAAE4W,YAAY,EAAOD,UAAW,M,uDAtClD,WACInW,SAAS1B,iBAAiB,YAAayB,KAAKwM,e,kCAGhD,WACIvM,SAASzB,oBAAoB,YAAawB,KAAKwM,e,oBAoCnD,WAAU,IAAD,OACG5F,EAAS5G,KAAKL,MAAdiH,KACR,EAAkC5G,KAAKrK,MAA/B0gB,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,UACpB,OACI,uBAAK/V,UAAU,8BAAf,UACI,wBAAOA,UAAU,gBAAgBjD,KAAK,WAAWqN,KAAM7D,EAAKvD,GAAIsR,QAAS/N,EAAKC,OAAQ8D,SAAU3K,KAAK0W,eAAgBnW,QAAS,kBAAM,EAAKd,SAAS,CAAE2W,UAAWxP,EAAKrF,SAChKpB,MAAO,CAAE2W,UAAWT,EAAa,aAAe,YAClDA,EAgBE,wBAAM9E,SAAUvR,KAAK6W,cAAe1W,MAAO,CAAE4W,cAAe,GAA5D,UACI,2BACI1W,UAAU,iCACV2W,QAAS,kBAAM,EAAKvX,SAAS,CAAE2W,UAAWxP,EAAKrF,SAC/C2J,WAAS,EACTT,KAAK,YACLlE,MAAO6P,EACP5I,IAAKxN,KAAKsW,gBACV3L,SAAU3K,KAAK4W,oBAEnB,uBAAKvW,UAAU,mBAAf,UACI,yBAAQmN,IAAKxN,KAAKwW,eAAgBnW,UAAU,0BAA5C,kBACA,yBAAQE,QAAS,kBAAM,EAAKd,SAAS,CAAE4W,YAAY,EAAOD,UAAW,MAArE,SAA4E,eAAC,KAAD,CAAWjW,MAAO,CAAEyN,MAAO,UAAWiH,SAAU,OAAQxC,QAAS,OAAQ4E,WAAY,SAAUC,eAAgB,oBA3BnM,iCACI,uBACI7W,UAAWuG,EAAKC,OAAS,OAAS,GAClCtG,QAAS,kBAAM,EAAKd,SAAS,CAAE4W,YAAY,KAF/C,SAIKzP,EAAKrF,QAEV,uBACIlB,UAAU,mBACVE,QAASP,KAAK2W,iBAFlB,SAII,eAAC,KAAD,gB,GAjEJ9V,aAgGlBC,GAAqB,CACvBkE,iBAGSmS,GAAWnW,aAVA,SAAArL,GACpB,MAAO,CACHc,WAAYd,EAAMsH,YAAYxG,cAQWqK,GAAzBE,CAA6CmV,ICjGxDiB,GAAb,4MACIzhB,MAAQ,CACJ0hB,WAAY,EACZC,WAAW,EACXC,QAAS,IAJjB,EAOIf,eAAiB5V,IAAM2V,YAP3B,EAQIiB,cAAgB5W,IAAM2V,YAR1B,EASIE,gBAAkB7V,IAAM2V,YAT5B,EA0BI/J,YAAc,SAACC,GAAO,IAAD,aACb,YAAK+J,sBAAL,mBAAqBpK,eAArB,eAA8BQ,SAASH,EAAEjC,WAAzC,UAAoD,EAAKgN,qBAAzD,iBAAoD,EAAoBpL,eAAxE,aAAoD,EAA6BQ,SAASH,EAAEjC,WAA5F,UAAuG,EAAKiM,uBAA5G,iBAAuG,EAAsBrK,eAA7H,aAAuG,EAA+BQ,SAASH,EAAEjC,UAGrJ,EAAK/K,SAAS,CAAE6X,WAAW,EAAOC,QAAS,MA9BnD,EAiCIE,kBAAoB,WAAyC,IAAD,EAAvC9Q,EAAuC,uDAA/B,EAAKhH,MAAM8G,UAAUE,MAC9C,IAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAO1N,UAAU,UAAC,EAAK0G,MAAM8G,iBAAZ,aAAC,EAAsBE,MAAM1N,QAAnD,CAIA,IAAMye,EAAY/Q,EAAMnJ,QAAO,SAAAoJ,GAAI,OAAIA,EAAKC,UACtC8Q,EAAOD,EAAUze,OAAS0N,EAAM1N,OAAU,IAC1Coe,EAAcO,OAAOC,UAAUF,GAAQA,EAAMA,EAAIG,QAAQ,GAC/D,EAAKrY,SAAS,CAAE4X,oBANZ,EAAK5X,SAAS,CAAE4X,WAAY,KAnCxC,EA4CIU,kBAAoB,YAAkC,IAAD,IAA9BvN,OAAUC,EAAoB,EAApBA,KAAMlE,EAAc,EAAdA,MACnC,EAAK9G,SAAL,gBAAiBgL,EAAOlE,KA7ChC,EAgDIyR,UAAY,SAACvW,GAAQ,IAAD,EAChBA,EAAGC,iBACH,EAAKjC,SAAS,CAAE6X,WAAW,EAAOC,QAAS,KAC3C,IAAM3f,EAAMwO,GAAgBC,sBAAsB,UAAW,EAAK1G,MAAM8G,UAAUpD,GAAI,CAAEA,GAAItK,EAAYC,SAAUuI,MAAOE,EAAG+I,OAAO,GAAGjE,MAAOM,QAAQ,KACrJ,IAAKlH,OAAMqF,aAAX,oBAA2BpN,KApDnC,EAuDIqgB,kBAAoB,WAAO,IAAD,EAChBrgB,EAAMwO,GAAgBC,sBAAsB,kBAAmB,EAAK1G,MAAM8G,UAAUpD,KAC1F,IAAK1D,OAAMqF,aAAX,oBAA2BpN,KAzDnC,uDAWI,WACIqI,SAAS1B,iBAAiB,YAAayB,KAAKwM,aACxCxM,KAAKL,MAAM8G,UAAUE,OAAO3G,KAAKyX,sBAb7C,kCAgBI,WACIxX,SAASzB,oBAAoB,YAAawB,KAAKwM,eAjBvD,gCAoBI,SAAmB0L,GACXA,EAAU7a,QAAU2C,KAAKL,MAAMtC,OAC/B2C,KAAKyX,sBAtBjB,oBA4DI,WAAU,IAAD,SACGhR,EAAczG,KAAKL,MAAnB8G,UACR,EAAkCzG,KAAKrK,MAA/B0hB,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UACpB,OACI,2BAASjX,UAAU,gCAAnB,UAEI,2BAASA,UAAU,qBAAnB,UACI,uBAAKA,UAAU,kBAAf,UACI,gCAAM,eAAC,KAAD,MACN,8BAAKoG,EAAUlF,WAEnB,yBAAQlB,UAAU,gBAAgBE,QAASP,KAAKiY,kBAAhD,uBAGJ,uBAAK5X,UAAU,oBAAf,UACI,wBAAMF,MAAO,CAAE0U,SAAU,GAAI1I,MAAO,GAAIgM,SAAU,GAAIC,SAAU,IAAhE,UAAuEf,EAAvE,OACA,eAACxB,GAAD,CAAaC,UAAWuB,EAAYjW,QAAyB,MAAfiW,EAAsB,UAAY,eAZxF,UAeK5Q,EAAUE,aAff,aAeK,EAAiB3E,KAAI,SAAA4E,GAClB,OAAO,sBAAKvG,UAAU,kBAAf,SACH,eAAC8W,GAAD,CAAUvQ,KAAMA,EAAMN,YAAaG,EAAUpD,MADJuD,EAAKvD,OAMpDiU,EAEI,wBAAM/F,SAAUvR,KAAKgY,UAArB,UAAgC,2BAAUK,KAAK,IAC7ChY,UAAU,gCACVmN,IAAKxN,KAAKyW,gBACVvL,WAAS,EACTT,KAAK,UACLoF,YAAY,cACZlF,SAAU3K,KAAK+X,oBAEf,uBAAK1X,UAAU,iCAAf,UACI,yBAAQmN,IAAKxN,KAAKwX,cAAenX,UAAU,0BAA3C,kBACA,yBAAQE,QAAS,kBAAM,EAAKd,SAAS,CAAE6X,WAAW,EAAOC,QAAS,MAAlE,SAAyE,eAAC,KAAD,CAAWpX,MAAO,CAAEyN,MAAO,UAAWiH,SAAU,OAAQxC,QAAS,OAAQ4E,WAAY,SAAUC,eAAgB,oBAX9L,yBAAQ7W,UAAU,6BAA6BF,MAAO,CAAE2W,UAAW,cAAgBvW,QAAS,kBAAM,EAAKd,SAAS,CAAE6X,WAAW,KAA7H,gCAvFtB,GAAoCzW,aAiH9BC,GAAqB,CACvBkE,iBAGSsT,GAAgBtX,aAVL,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,aAQqByK,GAAzBE,CAA6CoW,I,UCxHpEmB,G,4MACF5iB,MAAQ,CACJiZ,SAAU,GACV4J,mBAAmB,G,EAGvBC,eAAiB7X,IAAM2V,Y,EAQvBmC,uBAAyB,WACrB,EAAKjZ,SAAS,CAAE+Y,mBAAoB,EAAK7iB,MAAM6iB,qB,EAGnDG,wBAA0B,WAAiC,IAAhCpV,EAA+B,uDAAxB,EAAK5N,MAAMiZ,SACjCvR,EAAU,EAAKsC,MAAftC,MACFmG,EAAU4C,GAAgBF,WAAW,EAAKvG,MAAMlJ,YAChD0M,EAAW,CAACxM,IAAKsL,KAAoCsB,KAAMA,EAAMC,QAASA,GAChF,EAAK7D,MAAMqF,aAAazB,EAAMC,EAASnG,EAAO8F,I,EAGlD4U,kBAAoB,YAA4B,IAAfxR,EAAc,EAAxBiE,OAAUjE,MAC7B,EAAK9G,SAAS,CAAEmP,SAAS,2BAAM,EAAKjZ,MAAMiZ,UAAlB,IAA4BgK,YAAarS,O,uDAlBrE,WACI,IAAM/C,EAAU4C,GAAgBF,WAAWlG,KAAKL,MAAMlJ,YAChDmY,EAAWxI,GAAgBJ,YAAYhG,KAAKL,MAAMlJ,WAAY+M,GACpExD,KAAKP,SAAS,CAAEmP,e,oBAkBpB,WAAU,IAAD,OACL,EAAwC5O,KAAKrK,MAArCiZ,EAAR,EAAQA,SAAU4J,EAAlB,EAAkBA,kBAClB,OACI,uCACI,uBAAKnY,UAAU,wCAAf,UACI,gCAAM,eAAC,KAAD,MACN,8CACCuO,EAASgK,cAAgBJ,GAAqB,yBAAQnY,UAAU,gBAAgBE,QAAS,WACtF,EAAKmY,yBACL,EAAKD,eAAerM,QAAQiF,SAFe,sBAKnD,uBAAKhR,UAAU,mBAAf,UACI,2BACImN,IAAKxN,KAAKyY,eACVpY,UAAS,+BAA0BmY,EAAoB,OAAS,GAAvD,YAA6D5J,EAASgK,YAAc,SAAW,IACxGP,KAAMG,EAAoB,IAAM,IAChCxB,QAAShX,KAAK0Y,uBACdG,OAAQ,WACJ,EAAKH,yBACL,EAAKC,2BAETpS,MAAOqI,EAASgK,YAChBjO,SAAU3K,KAAK+X,kBACflI,YAAY,uCAEf2I,GACG,uBAAKnY,UAAU,mBAAf,UACI,yBAAQA,UAAU,0BAA0BE,QAAS,kBAAM,EAAKoY,2BAAhE,kBACA,yBAAQpY,QAASP,KAAK0Y,uBAAtB,SAA8C,eAAC,KAAD,CAAWvY,MAAO,CAAEyN,MAAO,UAAWiH,SAAU,OAAQxC,QAAS,OAAQ4E,WAAY,SAAUC,eAAgB,2B,GA1DtJrW,aAyE7BC,GAAqB,CACvBkE,iBAGS8T,GAAsB9X,aAXX,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBI,WAAYd,EAAMsH,YAAYxG,cAQsBqK,GAAzBE,CAA6CuX,IClDhF,IAMMzX,GAAqB,CACvBkE,iBAGS+T,GAAiB/X,aAVN,SAACrL,GACrB,MAAO,CACHqG,KAAMrG,EAAM+H,WAAW1B,QAQwB8E,GAAzBE,EArC9B,YAA2D,IAAhC2I,EAA+B,EAA/BA,QAAS3N,EAAsB,EAAtBA,KAAMgJ,EAAgB,EAAhBA,aAEhCgU,EAAU5S,GAAgBwD,eAAeD,EAAQjB,SAOvD,OACI,uBAAKrI,UAAU,uBAAf,UACI,eAAC4O,GAAD,CAAc/J,OAAQyE,EAAQH,SAC9B,uBAAKnJ,UAAU,2BAAf,UACI,uBAAKA,UAAU,oBAAf,UACI,uBAAMA,UAAU,cAAhB,SAA+BsJ,EAAQH,OAAOpO,WAC9C,uBAAMiF,UAAU,eAAhB,SAAgC2Y,OAGpC,sBAAK3Y,UAAU,cAAf,SAA8BsJ,EAAQhT,MAEpCgT,EAAQH,OAAOrO,MAAQa,EAAKb,KAAQ,uBAAMkF,UAAU,aAAaE,QAhBvD,WACpB,IAAM3I,EAAMwO,GAAgBqD,oBAAoBE,EAAQtG,IACxD2B,EAAY,WAAZ,cAAgBpN,KAc8B,6B,oBCAfoJ,aARf,SAACrL,GACrB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBI,WAAYd,EAAMsH,YAAYxG,cAKCuK,EAtBvC,YAAwD,IAApBmC,EAAmB,EAAnBA,SAEhC,OAFmD,EAAT9F,MAGtC,uBAAKgD,UAAU,mBAAf,UACI,uBAAMA,UAAU,gBAAhB,SAAgC,eAAC4O,GAAD,CAAc/J,OAAQ/B,EAASG,aAC/D,uBAAKjD,UAAU,gBAAf,UACI,wBAAMA,UAAU,gBAAhB,UAAiC8C,EAASG,SAASlI,SAAnD,OACA,6BAAI+H,EAASxM,MACb,eAAC,KAAD,CAAQ0J,UAAU,eAAe4Y,SAAO,EAAxC,SAA0C9V,EAASuM,qBAMnE,ICRMwJ,G,4MACFvjB,MAAQ,CACJwjB,SAAS,EACTC,OAAO,EACPC,WAAY,GACZzK,SAAU,KACV0K,WAAY,I,EAGhBC,WAAa3Y,IAAM2V,Y,EAenBiD,kBAAoB,WAChB,MAA8B,EAAK7Z,MAA3BtC,EAAR,EAAQA,MAAO5G,EAAf,EAAeA,WAETgjB,EADapc,EAAMic,WACS9b,QAAO,SAAA2F,GAAQ,OAAIA,EAASI,KAAKF,KAAO5M,KAC1E,EAAKgJ,SAAS,CAAE6Z,WAAYG,K,EAGhClP,aAAe,YAA4B,IAAfhE,EAAc,EAAxBiE,OAAUjE,MACxB,EAAK9G,SAAS,CAAE4Z,WAAY9S,IACxBA,EAAO,EAAK9G,SAAS,CAAE2Z,OAAO,IAC7B,EAAK3Z,SAAS,CAAE2Z,OAAO,K,EAGhC5M,YAAc,SAAAC,GAAM,IAAD,KACf,UAAI,EAAK8M,kBAAT,iBAAI,EAAiBnN,eAArB,aAAI,EAA0BQ,SAASH,EAAEjC,UAGrC,EAAK/K,SAAS,CAAE0Z,SAAS,K,EAIjC9I,aAAe,SAAC5O,GACZA,EAAGE,kBACH,MAA8B,EAAKhM,MAA3ByjB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACPrU,EAAiB,EAAKrF,MAAtBqF,aACR,GAAKoU,EAAL,CACA,IAAMxhB,EAAMwO,GAAgBkD,aAAa+P,GACzCrU,EAAY,WAAZ,cAAgBpN,IAChB,EAAK6H,SAAS,CAAE0Z,SAAS,EAAOE,WAAY,O,uDAzChD,WACIpZ,SAAS1B,iBAAiB,YAAayB,KAAKwM,aAC5C,IAAQ/V,EAAeuJ,KAAKL,MAApBlJ,WACF+M,EAAU4C,GAAgBF,WAAWzP,GACrCmY,EAAWxI,GAAgBJ,YAAYvP,EAAY+M,GACzDxD,KAAKwZ,oBACLxZ,KAAKP,SAAS,CAAEmP,e,kCAGpB,WACI3O,SAASzB,oBAAoB,YAAawB,KAAKwM,e,oBAkCnD,WAAU,IAAD,SACL,EAA6DxM,KAAKrK,MAA1DiZ,EAAR,EAAQA,SAAUuK,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,WAAYC,EAA9C,EAA8CA,WACtCpU,EAAWlF,KAAKL,MAAhBuF,OACR,OAAK0J,GAEL/Y,QAAQC,IAAIwjB,GAER,uBAAKjZ,UAAU,mBAAf,UACI,2BAASA,UAAU,qBAAnB,UACI,uBAAKA,UAAU,kBAAf,UACI,gCAAM,eAAC,KAAD,MACN,8CAEJ,yBAAQA,UAAU,gBAAlB,6BAKJ,uBAAKA,UAAU,6BAAf,UACI,eAAC4O,GAAD,CAAc/J,OAAQA,IACtB,uBAAK7E,UAAU,cAAcmN,IAAKxN,KAAKuZ,WAAYpZ,MAAO,CAAEgM,MAAO,OAAQG,OAAQ6M,EAAU,GAAK,GAAI9X,gBAAiB,QAAUd,QAAS,kBAAM,EAAKd,SAAS,CAAE0Z,SAAS,KAAzK,UACI,2BAAUtJ,YAAY,qBAAqB1P,MAAO,CAAEgM,MAAO,OAAQG,OAAQ6M,EAAU,MAAQ,QAAUxO,SAAU3K,KAAKuK,aAAchE,MAAO8S,IAC1IF,GAAW,yBAAQ9Y,UAAS,yCAAoC+Y,EAAQ,SAAW,IAAM7Y,QAASP,KAAKqQ,aAA5F,yBAInB,UAAAzB,EAASrF,gBAAT,eAAmBtQ,QAAS,GAAK,sBAAKoH,UAAU,iCAAf,SAC7BuO,EAASrF,SAASvH,KAAI,SAAA2H,GAAO,OAAI,eAACoP,GAAD,CAAiCpP,QAASA,GAArBA,EAAQtG,aAxBrD,eAACkC,GAAD,Q,GA1DI1E,aAkG5BC,GAAqB,CACvBkE,iBAGS0U,GAAqB1Y,aAXV,SAACrL,GACrB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBI,WAAYd,EAAMsH,YAAYxG,cAQqBqK,GAAzBE,CAA6CkY,IC5EzEpY,GAAqB,CACvBkE,iBAGS2U,GAAiB3Y,aAZN,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBD,OAAQT,EAAMsH,YAAY7G,OAC1BK,WAAYd,EAAMsH,YAAYxG,cAQiBqK,GAAzBE,EApCN,SAAC,GAA2C,IAAzC+I,EAAwC,EAAxCA,WAAY/E,EAA4B,EAA5BA,aAAciF,EAAc,EAAdA,QACjD,EAA0BC,mBAASH,EAAWxI,OAA9C,oBAAOA,EAAP,KAAc6P,EAAd,KACMwI,EAAWjO,mBAEjBrB,qBAAU,WAAO,IAAD,EACJ,OAARsP,QAAQ,IAARA,GAAA,UAAAA,EAAUxN,eAAV,SAAmBkF,WACpB,IASH,OACI,wBAAMC,SARW,WACjB,GAAKhQ,EAAL,CACA,IAAM3J,EAAMwO,GAAgByD,qBAAqBE,EAAW1G,GAAI9B,GAChEyD,EAAY,WAAZ,cAAgBpN,IAChBqS,MAI8B5J,UAAU,kBAAxC,UACI,+CACA,wBAAOmN,IAAKoM,EAAUvZ,UAAU,eAAekG,MAAOhF,EAAOoJ,SAAU,SAAClJ,GAAD,OAAQ2P,EAAS3P,EAAG+I,OAAOjE,UAClG,yBAAQlG,UAAU,0BAAlB,0BCwCZ,IAOMS,GAAqB,CACvBkE,iBAGS6U,GAAoB7Y,aAXT,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBI,WAAYd,EAAMsH,YAAYxG,cAQoBqK,GAAzBE,EAlEjC,YAA8E,IAAhD+I,EAA+C,EAA/CA,WAAYtT,EAAmC,EAAnCA,WAAY4G,EAAuB,EAAvBA,MAAO2H,EAAgB,EAAhBA,aACzD,EAAoCkF,qBAApC,oBAAO4P,EAAP,KAAmBC,EAAnB,KACMC,EAAUrO,mBAEVnI,EAAU4C,GAAgBF,WAAWzP,GACrCmY,EAAWxI,GAAgBJ,YAAYvP,EAAY+M,GACnDkF,EAAUtC,GAAgB8B,cAAc6B,EAAWrB,SAiBzD,OACI,uBAAKrI,UAAU,0BAAf,UACI,oBAAGwF,KAAMkE,EAAWrS,IAAK8S,OAAO,SAAhC,SAAyC,sBAAKnK,UAAU,kBAAf,SACrC,sBAAKG,IAAKuJ,EAAWrS,IAAKgJ,IAAKqJ,EAAWxI,YAG9C,uBAAKlB,UAAU,4BAAf,UACI,uBAAMA,UAAU,mBAAhB,SAAoC0J,EAAWxI,QAC/C,uBAAKlB,UAAU,cAAf,UACI,uBAAMA,UAAU,WAAhB,SAA4BqI,IADhC,IAEI,4CAFJ,IAGI,uBAAMnI,QAhBK,WACvB,IAAM3I,EAAMwO,GAAgBuC,iBAAiBoB,EAAW1G,IACxD2B,EAAY,WAAZ,cAAgBpN,KAcJ,oBAHJ,IAKI,uBAAK4V,IAAKwM,EAAS3Z,UAAU,eAA7B,UACI,sBAAKA,UAAU,oBAAoBE,QAAS,kBAAMwZ,GAAeD,MACjE,yCACCA,GAAc,eAACxO,GAAD,CAAgBrB,QAAS,kBAAM8P,GAAc,IAAQxY,MAAO,kBAAmBiM,IAAKwM,EAApF,SACX,eAACL,GAAD,CAAgB5P,WAAYA,EAAYE,QAAS,kBAAM8P,GAAc,cAKjF,uBAAK1Z,UAAU,mBAAf,UACI,gCAAM,eAAC,KAAD,MACN,uBAAME,QAvCF,WAAO,IAAD,GACV,OAARqO,QAAQ,IAARA,GAAA,UAAAA,EAAUzO,aAAV,eAAiB9E,UAAW0O,EAAWrS,IAAKkX,EAASzO,MAAQ,KAC5DyO,EAASzO,MAAQ,CAAE9E,OAAQ0O,EAAWrS,KAC3CsN,EAAa4J,EAAUpL,EAASnG,IAoCpB,SAjCK,WAAO,IAAD,EACvB,OAAe,OAARuR,QAAQ,IAARA,GAAA,UAAAA,EAAUzO,aAAV,eAAiB9E,UAAW0O,EAAWrS,IAgCLmb,GAAiB,eAAiB,2BC/C7EoH,G,4MACFtkB,MAAQ,CACJiZ,SAAU,I,uDAGd,WACI,IAAMpL,EAAU4C,GAAgBF,WAAWlG,KAAKL,MAAMlJ,YAChDmY,EAAWxI,GAAgBJ,YAAYhG,KAAKL,MAAMlJ,WAAY+M,GACpExD,KAAKP,SAAS,CAAEmP,e,oBAGpB,WAAU,IAAD,EACGA,EAAa5O,KAAKrK,MAAlBiZ,SACR,OACI,uCACI,uBAAKvO,UAAU,uCAAf,UACI,gCAAM,eAAC,KAAD,MACN,iDAEJ,sBAAKA,UAAU,mBAAf,gBACKuO,QADL,IACKA,GADL,UACKA,EAAUnG,mBADf,aACK,EAAuBzG,KAAI,SAAC+H,EAAY5Q,GAAb,OAAmB,eAAC0gB,GAAD,CAA8C9P,WAAYA,GAAlCA,EAAWxI,MAAQpI,e,GApB5E0H,aAkC5BC,GAAqB,CACvBkE,iBAGSkV,GAAqBlZ,aAXV,SAAArL,GACpB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBI,WAAYd,EAAMsH,YAAYxG,cAQqBqK,GAAzBE,CAA6CiZ,IC7BzEE,G,4MACJxkB,MAAQ,CACNiZ,SAAU,KACVxJ,UAAW,KACX0I,QAAQ,G,EAGVsM,SAAWxZ,IAAM2V,Y,EACjB8D,SAAWzZ,IAAM2V,Y,EAejB+D,WAAa,WACX,IAAI1L,EACAxJ,EACJ,EAA4B,EAAKzF,MAAM7K,MAAM6C,OAArC8F,EAAR,EAAQA,OAAQ+F,EAAhB,EAAgBA,QAChB,EAAK7D,MAAMsF,YAAYxH,GACnB,EAAKkC,MAAMtC,MAAMkH,SACnBqK,EAAW,EAAK2L,YAAY9c,EAAQ+F,GAASgX,YAC7CpV,EAAY,EAAKmV,YAAY9c,EAAQ+F,GAASiX,cAEhD,EAAKhb,SAAS,CAAEmP,WAAUxJ,e,EAG5BoH,YAAc,SAAAC,GAAM,IAAD,IACTpP,EAAU,EAAKsC,MAAftC,OACJ,UAAC,EAAK+c,gBAAN,iBAAC,EAAehO,eAAhB,aAAC,EAAwBQ,SAASH,EAAEjC,UACtC,EAAK7K,MAAMG,QAAQC,KAAnB,iBAAkC1C,EAAMlC,O,EAI5Cof,YAAc,SAAC9c,EAAQ+F,GACrB,IACMiX,EADQ,EAAK9a,MAAMtC,MACEkH,OAAOjH,MAAK,SAACgH,GAAD,OAAWA,EAAMjB,KAAOG,KAC3DgX,EAAcC,EAAahW,MAAMnH,MAAK,SAACiG,GAAD,OAAUA,EAAKF,KAAO5F,KAEhE,OADK+c,IAAaA,EAAc,EAAK7a,MAAMtC,MAAM6F,cAAc5F,MAAK,SAAAiG,GAAI,OAAIA,EAAKF,KAAO5F,MACjF,CAAEgd,eAAcD,gB,EAGzBzC,kBAAoB,YAAkC,IAAD,IAA9BvN,OAAUC,EAAoB,EAApBA,KAAMlE,EAAc,EAAdA,MACrC,EAAK9G,SAAS,CAAEmP,SAAS,2BAAM,EAAKjZ,MAAMiZ,UAAlB,mBAA6BnE,EAAOlE,O,EAG9DmU,qBAAuB,WAAiC,IAAhCnX,EAA+B,uDAAxB,EAAK5N,MAAMiZ,SAChCvR,EAAU,EAAKsC,MAAftC,MACAmG,EAAY,EAAK7D,MAAM7K,MAAM6C,OAA7B6L,QACR,EAAK7D,MAAMqF,aAAazB,EAAMC,EAASnG,I,EAGzCsd,oBAAsB,WACpB,IAAQ/L,EAAa,EAAKjZ,MAAlBiZ,SACR,GAAKA,EAASzO,MACd,OAAIyO,EAASzO,MAAMiB,QACV,CACLC,gBAAiBuN,EAASzO,MAAMiB,QAChCwZ,UAAW,IACXtO,OAAQ,KAERsC,EAASzO,MAAM9E,OACV,CACLwI,WAAW,kCAAD,OAAoC+K,EAASzO,MAAM9E,OAAnD,KACVwf,UAAW,QACXD,UAAW,IACXtO,OAAQ,UALZ,G,EASFmC,OAAS,WACP,IAAQpR,EAAU,EAAKsC,MAAftC,MACR,EAAKsC,MAAMG,QAAQC,KAAnB,iBAAkC1C,EAAMlC,O,uDAtE1C,WACE8E,SAAS1B,iBAAiB,YAAayB,KAAKwM,aAC5CxM,KAAKsa,e,kCAGP,WACEra,SAASzB,oBAAoB,YAAawB,KAAKwM,e,gCAGjD,SAAmB0L,GACbA,EAAU7a,QAAU2C,KAAKL,MAAMtC,OAAO2C,KAAKsa,e,oBA+DjD,WAAU,IAAD,SACP,EAAgCta,KAAKrK,MAA7BiZ,EAAR,EAAQA,SAAUxJ,EAAlB,EAAkBA,UACV/H,EAAU2C,KAAKL,MAAftC,MACR,IAAKuR,EAAU,OAAO,eAACrJ,GAAD,IACtB,IAAMuV,EAAK9a,KAAK2a,sBAChB,OACE,sBAAKta,UAAU,uBAAf,SAEE,2BAASA,UAAU,YAAYmN,IAAKxN,KAAKoa,SAAzC,UACGxL,EAASzO,OAAS,sBAAKE,UAAU,eAAeF,MAAO2a,IACxD,eAAC,IAAD,CAAMxa,GAAE,iBAAYjD,EAAMlC,KAA1B,SACE,yBAAQkF,UAAU,kBAAlB,SACE,eAAC,KAAD,QAIHuO,EAASzO,OACR,uBAAKqN,IAAKxN,KAAKqa,SAAUha,UAAU,2BAAnC,UACE,0BACEA,UAAU,mBACVE,QAAS,kBAAM,EAAKd,SAAS,CAAEqO,QAAS,EAAKnY,MAAMmY,UAFrD,UAIE,uBAAMzN,UAAU,aAAhB,SACE,eAAC,KAAD,MAEF,6CAEDL,KAAKrK,MAAMmY,QACV,eAACxC,GAAD,CACErB,QAAS,kBAAM,EAAKxK,SAAS,CAAEqO,QAAQ,KACvCvM,MAAM,QACNiM,IAAKxN,KAAKqa,SAHZ,SAKE,eAAC/G,GAAD,CACErJ,QAAS,kBAAM,EAAKxK,SAAS,CAAEqO,QAAQ,YAOhDc,EAASvK,WACR,uBAAKhE,UAAU,cAAf,UACE,gCACE,eAAC,KAAD,MAEF,0DAIJ,uBAAKA,UAAU,wCAAf,UACE,gCACE,eAAC,KAAD,MAEF,wBACEA,UAAU,cACVjD,KAAK,OACLmJ,MAAOqI,EAASrN,MAChBkJ,KAAK,QACLE,SAAU3K,KAAK+X,kBACfc,OAAQ,kBAAM,EAAK6B,6BAIvB,sBAAKra,UAAU,sBAAf,SACE,0CACU,uBAAMA,UAAU,YAAhB,SAA6B+E,EAAU7D,aAInD,uBAAKlB,UAAU,gCAAf,UACE,uBAAKA,UAAU,iBAAf,UACE,eAAC,GAAD,IAEA,eAACyY,GAAD,IAEClK,EAASnG,aAAemG,EAASnG,YAAYxP,OAAS,GACrD,eAACihB,GAAD,IANJ,UASGtL,EAASlI,kBATZ,aASG,EAAqB1E,KAAI,SAACyE,GAAD,OACxB,sBAEEpG,UAAU,mCAFZ,SAIE,eAACiY,GAAD,CACE7R,UAAWA,EACXmI,SAAUA,EACV8L,qBAAsB,EAAKA,wBANxBjU,EAAUpD,OAWnB,eAACqW,GAAD,CAAoBxU,OAAQlF,KAAKL,MAAM3D,UAGzC,eAAC,GAAD,CAAiByS,OAAQzO,KAAKyO,qB,GAnLlB5N,aAkMlBC,GAAqB,CACzBkE,gBACAC,gBAGW8V,GAAW/Z,aAZA,SAACrL,GACvB,MAAO,CACL0H,MAAO1H,EAAMsH,YAAY5G,UACzB2F,KAAMrG,EAAM+H,WAAW1B,QASsB8E,GAAzBE,CAA6CmZ,IC9M/Da,G,4MACJrlB,MAAQ,CACNslB,QAAS,CACP1Z,MAAO,K,EAQXgJ,aAAe,SAAC9I,GACd,IAAQ+I,EAAW/I,EAAX+I,OACJyQ,EAAU,EAAKtlB,MAAMslB,QACzBA,EAAQzQ,EAAOC,MAAQD,EAAOjE,MAC9B,EAAK9G,SAAS,CAAEwb,a,EAGlBC,aAAa,SAACzZ,GACA,UAATA,EAAG0Z,KAAe,EAAKC,UAAU3Z,I,EAGtC2Z,UAAY,SAAC3Z,GACXA,EAAGC,iBACH,IAAQuZ,EAAY,EAAKtlB,MAAjBslB,QACR,GAAIA,EAAQ1Z,MAAZ,CAEA,GADA0Z,EAAQ5X,GAAKtK,EAAYC,SACD,UAApB,EAAK2G,MAAMvC,KAAkB,CAC3B6d,EAAQxW,QAAOwW,EAAQxW,MAAM,IAGjC,IAAMtB,EAAW,CAACxM,IAAKsL,GAAwBgZ,EAAQ1Z,QAEjDrE,EAAS,CAAEE,KAAM,YAAakH,MAAO2W,GAC3C,EAAKtb,MAAMoE,cAAc7G,EAAQ,EAAKyC,MAAMtC,MAAO8F,QAEhD,GAAwB,SAApB,EAAKxD,MAAMvC,KAAiB,CACnC,IAAMie,EAAO,2BAAOJ,GAAP,IAAiBvG,YAAY,IAGpCvR,EAAW,CAACxM,IAAKsL,GAAuBoZ,EAAQ9Z,OAAQgC,KAAM8X,EAAS7X,QAAS,EAAK7D,MAAM6D,SAEjG,EAAK7D,MAAM2b,UAAWD,EAAS,EAAK1b,MAAM6D,QAAS,EAAK7D,MAAMtC,MAAO8F,GAEvE,EAAK1D,SAAS,CAACwb,QAAS,CAAC1Z,MAAO,Q,8FArClC,sBAAA/J,EAAA,sDACEwI,KAAKub,UAAUlK,QADjB,gD,0EAwCA,WAAU,IAAD,OACC9P,EAAUvB,KAAKrK,MAAMslB,QAArB1Z,MACAia,EAAmBxb,KAAKL,MAAxB6b,eACFC,EAAmC,SAApBzb,KAAKL,MAAMvC,KAAkB4C,KAAKL,MAAMvC,KAAO,OACpE,OACE,0BAASiD,UAAU,iBAAnB,SACE,wBAAMkR,SAAUvR,KAAKob,UAAWM,QAAS1b,KAAKkb,aAA9C,UACE,2BACErL,YAAW,iCAA4B4L,GACvCjO,IAAK,SAACmO,GACJ,EAAKJ,UAAYI,GAEnBpV,MAAOhF,EACPkJ,KAAK,QACLE,SAAU3K,KAAKuK,aACfsO,OAAQ7Y,KAAKob,YAEf,uBAAK/a,UAAU,8BAAf,UACE,0BAAQjD,KAAK,SAAb,iBAA2Bqe,KAC3B,yBAAQlb,QAASib,EAAjB,SAAiC,eAAC,KAAD,CAAWnb,UAAU,OAAOF,MAAO,CAAEyN,MAAO,UAAWiH,SAAU,OAAQxC,QAAS,OAAQ4E,WAAY,SAAUC,eAAgB,0B,GAlEjJtW,IAAMC,WAgFlC,IAAMC,GAAqB,CACzBiD,iBACAiB,gBACAsW,U5CiBK,SAAmBD,EAAS7X,EAASnG,EAAO8F,GAC/C,IAAMmB,EAAQjH,EAAMkH,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMjB,KAAOG,KAKtD,OAJA6X,EAAO,2BAAOA,GAAP,IAAgB3L,UAAW/H,KAAKC,MAAO8M,YAAY,IAE1DpQ,EAAMG,MAASH,EAAMG,MAAP,sBAAoBH,EAAMG,OAA1B,CAAiC4W,IAAW,CAACA,GAEpDtX,GADa,CAAE3G,KAAM,eAAgBkH,SACVjH,EAAO8F,K4CpBhCyY,GAAe5a,aAZ5B,SAAyBrL,GACvB,MAAO,CACL0H,MAAO1H,EAAMsH,YAAY5G,aAY3ByK,GAF0BE,CAG1Bga,ICpGK,SAASa,GAAT,GAA2C,IAArBC,EAAoB,EAApBA,UAAWva,EAAS,EAATA,MACtC,OACE,uBAAKlB,UAAU,sBAAf,UACGyb,EAAU1a,SACT,sBACEf,UAAU,eACVF,MAAO,CAAEkB,gBAAiBya,EAAU1a,SAFtC,SAIG0a,EAAUzI,QAAU,uBAAKhT,UAAU,oBAAf,cAAoC,6BAAIkB,SAGhEua,EAAUzgB,QACT,uBACEgF,UAAU,gBADZ,WAGIyb,EAAUzI,QAAU,sBAAK7S,IAAKsb,EAAUzgB,SACzCygB,EAAUzI,QAAU,sBAAKhT,UAAU,gCACpCF,MAAO,CAAEmB,gBAAgB,QAAD,OAAUwa,EAAUzgB,OAApB,OADH,SAEpB,6BAAIkG,YClBR,SAASwa,GAAT,GAAwE,IAA5C5U,EAA2C,EAA3CA,SAAU6U,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,oBAEnD,OACI,qBACA5b,UAAS,yCACP4b,EAAsB,OAAS,SAFjC,SAKC9U,EAASnF,KAAI,SAACkF,GACb,IAAMG,EAAQ2U,EAAS9U,GACvB,OACE,qBACE7G,UAAU,YAEVF,MAAO,CAAEkB,gBAAiBgG,EAAMuG,OAHlC,SAKGqO,GAAuB5U,EAAM9F,OAC5B,gCAAO8F,EAAM9F,SAJV8F,EAAMhE,S,iCCVlB,SAAS6Y,GAAT,GAAyC,IAAfxV,EAAc,EAAdA,WAY/B,OACE,uBAAKrG,UAAU,wCAAf,UACE,eAAC,KAAD,IACA,gCAdoB,WACtB,IAAI8b,EAAa,EACbC,EAAiB,EAOrB,OANA1V,EAAW2V,SAAQ,SAAC5V,GAClBA,EAAUE,MAAM0V,SAAQ,SAACzV,GACvBuV,IACIvV,EAAKC,QAAQuV,UAGdA,EAAiB,IAAMD,EAKrBG,QCdN,SAASC,GAAT,GAA6D,IAAtChZ,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,QAASgZ,EAAsB,EAAtBA,mBAyB3C,OACE,uBACEnc,UAAU,uCACVF,MAnBoB,SAACoD,GAEvB,OAAIA,EAAKmR,WAAmB,CAAErT,gBAAiB,WAG7CkC,EAAKiE,QAAUG,KAAKC,MAAQ,GAC5BrE,EAAKiE,QAAUG,KAAKC,MAAQ,MAErB,CAAEvG,gBAAiB,WAEnBkC,EAAKiE,QAAUG,KAAKC,MAAQ,EAC5B,CAAEvG,gBAAiB,WAErB,CAAEA,gBAAiB,UAAWuM,MAAO,SAMnC6O,CAAgBlZ,GACvBhD,QAAS,SAACmc,GAAD,OAAWF,EAAmBE,EAAOlZ,EAASD,IAHzD,UAKE,uBAAMlD,UAAU,gCAAhB,SACE,eAAC,KAAD,MAEF,uBAAMA,UAAU,aAAhB,SACGkD,EAAKmR,WACJ,eAAC,KAAD,CAAoB9G,MAAO,YAE3B,eAAC,KAAD,MAGJ,gCAxCoB,SAACpG,GACvB,IAAMK,EAAO,IAAIF,KAAKH,GAChBQ,EAAMH,EAAKI,UAGjB,OAFcJ,EAAK8U,eAAe,KAAM,CAAE7U,MAAO,UACpB,IAAME,EAoC1B4U,CAAgBrZ,EAAKiE,cCtC3B,SAASqV,GAAT,GAA4D,IAAtCtZ,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,QAASgZ,EAAsB,EAAtBA,mBAC1C,OACE,uBAAKnc,UAAU,wCAAf,UACGkD,EAAKiE,SACJ,eAAC+U,GAAD,CACEhZ,KAAMA,EACNC,QAASA,EACTgZ,mBAAoBA,IAIvBjZ,EAAKqV,aACJ,eAAC,KAAD,CAAiBrX,MAAO,gCAGzBgC,EAAKgG,UACJ,uBAAKlJ,UAAU,uCAAf,UACE,uBAAMA,UAAU,oBAAhB,SACE,eAAC,KAAD,MAEF,gCAAOkD,EAAKgG,SAAStQ,YAIxBsK,EAAKkF,aAAelF,EAAKkF,YAAYxP,OAAS,GAC7C,uBAAKoH,UAAU,yCAAf,UACE,uBAAMA,UAAU,oBAAhB,SACE,eAAC,KAAD,MAEF,gCAAOkD,EAAKkF,YAAYxP,YAI3BsK,EAAKmD,YAAc,eAACwV,GAAD,CAAgBxV,WAAYnD,EAAKmD,aAEpDnD,EAAKc,WAAa,6CAElBd,EAAK3M,SACJ,sBAAKyJ,UAAU,+BAAf,SACGkD,EAAK3M,QAAQoL,KAAI,SAACkD,EAAQ4X,GAAT,OAChB,eAAC7N,GAAD,CAAc/J,OAAQA,EAAQzL,KAAM,MAAWqjB,W,aC1CpD,SAASC,GAAT,GASH,IARFxZ,EAQC,EARDA,KACAC,EAOC,EAPDA,QACAwZ,EAMC,EANDA,wBAEAR,GAIC,EALDS,aAKC,EAJDT,oBACAR,EAGC,EAHDA,SACAkB,EAEC,EAFDA,oBACAjB,EACC,EADDA,oBAEA,OACE,uBACE5b,UAAU,kCADZ,WAIIkD,EAAKc,WACL,yBACEhE,UAAU,iBACVE,QAAS,SAACmc,GAAD,OAAWM,EAAwBN,EAAOnZ,EAAMC,IAF3D,SAIE,eAAC,KAAD,MAIHD,EAAKpD,OAAS,eAAC0b,GAAD,CAAYC,UAAWvY,EAAKpD,MAAOoB,MAAOgC,EAAKhC,UAE3DgC,EAAKpD,QAAUoD,EAAKpD,MAAMkT,SAC3B,uBAAKhT,UAAU,eAAf,UACGkD,EAAK4D,UACJ,sBAAK5G,QAAS2c,EAAd,SACE,eAACnB,GAAD,CACE5U,SAAU5D,EAAK4D,SACf6U,SAAUA,EACVC,oBAAqBA,MAK3B,6BAAI1Y,EAAKhC,QAET,eAACsb,GAAD,CACEtZ,KAAMA,EACNC,QAASA,EACTgZ,mBAAoBA,UCmDzB,IAAMW,GAAcnc,aAN3B,SAAyBrL,GACvB,MAAO,CACL0H,MAAO1H,EAAMsH,YAAY5G,aAIF2K,EAvF3B,YAUI,IATFuC,EASC,EATDA,KACAC,EAQC,EARDA,QACAyZ,EAOC,EAPDA,aACAhB,EAMC,EANDA,oBACAiB,EAKC,EALDA,oBACAV,EAIC,EAJDA,mBACAQ,EAGC,EAHDA,wBACAF,EAEC,EAFDA,MACAd,EACC,EADDA,SAEA,OACE,sBACE3b,UAAU,eACVE,QAAS,kBAAM0c,EAAazZ,EAASD,EAAKF,KAF5C,SAME,eAAC,KAAD,CAAW+Z,YAAa7Z,EAAKF,GAAIyZ,MAAOA,EAAxC,SACG,SAACO,GACA,OACE,yDACE7P,IAAK6P,EAASC,UACVD,EAASE,iBACTF,EAASG,gBAHf,aAKE,eAACT,GAAD,CACExZ,KAAMA,EACNC,QAASA,EACTyZ,aAAcA,EACdhB,oBAAqBA,EACrBiB,oBAAqBA,EACrBV,mBAAoBA,EACpBQ,wBAAyBA,EACzBhB,SAAUA,eC9CnB,SAASyB,GAAT,GAAuE,IAAhDja,EAA+C,EAA/CA,QAAUgY,EAAqC,EAArCA,eAAgBkC,EAAqB,EAArBA,mBACtD,OACE,uBAAKrd,UAAU,4BAAf,UACE,yBAAQE,QAASib,EAAjB,yBACA,yBAAQjb,QAAS,kBAAImd,EAAmBla,IAAxC,qCCQC,IAAMma,GAAb,4MACEhoB,MAAQ,CACNioB,cAAc,EACdC,WAAY,GACZC,eAAe,GAJnB,EAOEC,aAAend,IAAM2V,YAPvB,EAyBEiF,eAAiB,WACf,EAAK/b,SAAS,CAAEme,cAAe,EAAKjoB,MAAMioB,gBA1B9C,EA6BErT,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMlE,EAAc,EAAdA,MAChC,EAAK9G,UAAS,SAACue,GAAD,mBAAC,eAAoBA,GAArB,mBAAiCvT,EAAOlE,QA9B1D,EAiCE0X,mBAAqB,WACnB,IAAM3Z,EAAQ,EAAK3E,MAAM2E,MACzBA,EAAM/C,MAAQ,EAAK5L,MAAMkoB,WACzB,IAAM3gB,EAAS,CAAEE,KAAM,eAAgBkH,SACjCnB,EAAW,CAACxM,IAAKsL,GAAgCqC,EAAM/C,QAC7D,EAAK5B,MAAMue,YAAYhhB,EAAQiG,IAtCnC,EAyCEgb,UAAY,SAACzB,GACXA,EAAMlS,OAAO4T,QA1CjB,EA6CEC,SAAW,SAAC3B,GACVA,EAAMlS,OAAO6G,SA9CjB,EAiDEiN,YAAc,SAAC5B,GACbA,EAAMlS,OAAO8G,UAlDjB,uDASE,WACEtR,KAAKP,SAAL,2BACKO,KAAKrK,OADV,IAEEkoB,WAAY7d,KAAKL,MAAM2E,MAAM/C,WAZnC,gCAgBE,SAAmB2W,GACbA,EAAU5T,QAAUtE,KAAKL,MAAM2E,OACjCtE,KAAKP,SAAL,2BACKO,KAAKrK,OADV,IAEEkoB,WAAY7d,KAAKL,MAAM2E,MAAM/C,WApBrC,oBAqDE,WAAU,IAAD,OACP,EAUIvB,KAAKL,MATP2E,EADF,EACEA,MACA2Y,EAFF,EAEEA,aACAC,EAHF,EAGEA,oBACAjB,EAJF,EAIEA,oBACAa,EALF,EAKEA,MACAN,EANF,EAMEA,mBACAkB,EAPF,EAOEA,mBACAV,EARF,EAQEA,wBACAhB,EATF,EASEA,SAEF,EAAoDhc,KAAKrK,MAAjDioB,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,cAElC,OACE,sBACEzd,UAAW,gBACXF,MAAO,CAAEkS,QAAS/N,EAAMD,UAAY,OAAS,SAF/C,SAIE,eAAC,KAAD,CAAW+Y,YAAa9Y,EAAMjB,GAAIyZ,MAAOA,EAAzC,SACG,SAACO,EAAUkB,GAAX,OACC,2DACEle,UAAU,6BACNgd,EAASG,gBACTH,EAASE,iBAHf,IAIE/P,IAAK6P,EAASC,SAJhB,UAME,uBAAKjd,UAAU,+CAAf,UACE,wBACEA,UAAU,cACVjD,KAAK,OACLmJ,MAAOsX,EACPpT,KAAK,aACL+T,YAAa,EAAKL,UAClBM,UAAW,EAAKJ,SAChB1T,SAAU,EAAKJ,aACfsO,OAAQ,EAAKoF,qBAGf,uBACE5d,UAAU,eACVmN,IAAK,EAAKuQ,aACVxd,QAAS,kBACP,EAAKd,SAAS,CAAEqe,eAAgBA,KAJpC,UAOE,kCACE,eAAC,KAAD,MAEDA,GACC,eAACxS,GAAD,CACErB,QAAS,kBAAM,EAAKxK,SAAS,CAAEqe,eAAe,KAC9CtQ,IAAK,EAAKuQ,aACVxc,MAAM,eAHR,SAKE,eAACkc,GAAD,CACEja,QAASc,EAAMjB,GACfmY,eAAgB,EAAKA,eACrBkC,mBAAoBA,YAM9B,eAAC,KAAD,CAAWgB,YAAapa,EAAMjB,GAA9B,SACG,SAACga,GAAD,OACC,8CACEhd,UAAU,wBACNgd,EAASsB,gBAFf,IAGEnR,IAAK6P,EAASC,SAHhB,UAKGhZ,EAAMG,OACLH,EAAMG,MAAMzC,KAAI,SAACuB,EAAMuZ,GACrB,OACE,eAACK,GAAD,CAEE5Z,KAAMA,EACNuZ,MAAOA,EACPtZ,QAASc,EAAMjB,GACf4Z,aAAcA,EACdC,oBAAqBA,EACrBjB,oBAAqBA,EACrBO,mBAAoBA,EACpBQ,wBAAyBA,EACzBhB,SAAUA,GATLzY,EAAKF,OAajBga,EAASxN,YACT+N,GACC,eAAChC,GAAD,CACEJ,eAAgB,EAAKA,eACrBpe,KAAM,OACNoG,QAASc,EAAMjB,aAOrBua,GACJ,sBAAKvd,UAAU,+CAAf,SACI,0BACEA,UAAU,sCACVE,QAAS,EAAKib,eAFhB,UAIE,oBAAGnb,UAAU,oBAAb,SACE,eAAC,KAAD,MAEF,iEAlKpB,GAAkCQ,aCR3B,SAAS+d,GAAT,GAUH,IATFra,EASC,EATDA,OACA0Y,EAQC,EARDA,aACAiB,EAOC,EAPDA,YACAhB,EAMC,EANDA,oBACAjB,EAKC,EALDA,oBACAO,EAIC,EAJDA,mBACAkB,EAGC,EAHDA,mBACAV,EAEC,EAFDA,wBACAhB,EACC,EADDA,SAEA,OACE,qBAAI3b,UAAU,6BAAd,SACGkE,EAAOvC,KAAI,SAACsC,EAAOwY,GAClB,OACE,eAAC,GAAD,CAEEA,MAAOA,EACPxY,MAAOA,EACP2Y,aAAcA,EACdiB,YAAaA,EACbhB,oBAAqBA,EACrBjB,oBAAqBA,EACrBO,mBAAoBA,EACpBkB,mBAAoBA,EACpBV,wBAAyBA,EACzBhB,SAAUA,GAVL1X,EAAMjB,S,uBCZjBwb,G,4MAEFlpB,MAAQ,CACJmpB,OAAQ,I,EAGZC,cAAgB,WAGZ,OAFkB,EAAKpf,MAAftC,MACsBzG,QAAQoL,KAAI,SAAAkD,GAAM,OAAIA,EAAO/J,Q,EAI/D6jB,cAAgB,SAAChjB,GACb,MAAiC,EAAK2D,MAA9BtC,EAAR,EAAQA,MAAO0G,EAAf,EAAeA,cAGTkb,EAAY,EAAKF,gBACjB/X,EAAc,CAAE7L,IAAKa,EAAKb,IAAKC,SAAUY,EAAKZ,SAAUC,OAAQW,EAAKX,QAC3E,GAAI4jB,EAAUjP,SAAShJ,EAAY7L,KAAnC,CACI,IAAMgI,EAAW,CAAExM,IAAKsL,GAA4BjG,EAAKZ,WACzD2I,EAAc,CAAE3G,KAAM,sBAAuB+H,SAAUnJ,EAAKb,KAAOkC,EAAO8F,OAF9E,CAMAY,EAAc,CAAE3G,KAAM,mBAAoB8H,OAAQ8B,GAAe3J,EADhD,CAAE1G,IAAKsL,GAA4BjG,EAAKZ,YAEzDvF,QAAQC,IAAIuH,EAAMzG,W,EAItB2T,aAAe,SAAC9I,GACZ,IAAMyd,EAAQzd,EAAG+I,OAAOC,KAClBlE,EAAQ9E,EAAG+I,OAAOjE,MACxB,EAAK9G,SAAL,2BAAmB,EAAK9J,OAAxB,mBAAgCupB,EAAQ3Y,M,4CAG5C,WAAU,IAAD,OACGuY,EAAW9e,KAAKrK,MAAhBmpB,OACA/iB,EAAUiE,KAAKL,MAAf5D,MACFkjB,EAAYjf,KAAK+e,gBAEvB,OACI,uBAAK1e,UAAU,iBAAf,UACI,wBAAOA,UAAU,eAAejD,KAAK,OAAOuN,SAAU3K,KAAKuK,aAAcE,KAAK,SAASlE,MAAOuY,EAAQ5T,WAAS,EAAC2E,YAAY,cAC5H,qBAAIxP,UAAU,yBAAd,SACKtE,EAAMyB,QAAO,SAAAxB,GAAI,OAAIA,EAAKZ,SAAS4U,SAAS8O,MAAS9c,KAAI,SAAAhG,GAAI,OAC1D,sBAAIqE,UAAU,eAA8BE,QAAS,kBAAM,EAAKye,cAAchjB,IAA9E,UACI,uBAAKqE,UAAU,eAAf,UACI,eAAC4O,GAAD,CAAc/J,OAAQlJ,IACtB,uBAAMqE,UAAU,YAAhB,SAA6BrE,EAAKZ,cAEtC,gCAAQ6jB,EAAUjP,SAAShU,EAAKb,KAAQ,eAAC,KAAD,IAAuB,OALjCa,EAAKb,iB,GA7ClCyF,IAAMC,WAiEnC,IAAMC,GAAqB,CACvBiD,kBAGSob,GAAgBne,aAV7B,SAAyBrL,GACrB,MAAO,CACHoG,MAAOpG,EAAM+H,WAAW3B,MACxBsB,MAAO1H,EAAMsH,YAAY5G,aAOqByK,GAAzBE,CAA6C6d,IC3EpEO,GAAU,8CAEHC,GAAkB,CAC3BP,O,6CACAQ,e,uDAGW7c,G,iFAAf,WAAqB8c,GAArB,eAAA/nB,EAAA,sEACsBP,IAAMuoB,IAAN,uDAA0DD,EAA1D,4CAAqGH,KAD3H,cACUxnB,EADV,yBAEWA,EAAIN,MAFf,4C,oEAKA,WAAsBioB,GAAtB,iBAAA/nB,EAAA,sEAC4BiL,GAAM8c,GADlC,uBACWE,EADX,EACWA,QADX,kBAEWxlB,QAAQC,QACXulB,EAAQzd,KAAI,SAAA0d,GACR,MAAO,CAACrc,GAAIqc,EAAIrc,GAAIsc,QAASD,EAAIE,KAAKC,MAAOC,KAAMJ,EAAIE,KAAKE,WAJxE,4C,oEASA,WAA8BP,GAA9B,iBAAA/nB,EAAA,sEAC4BiL,GAAM8c,GADlC,uBACWE,EADX,EACWA,QADX,kBAEWxlB,QAAQC,QACXulB,EAAQzd,KAAI,SAAA0d,GACR,MAAO,CAAErc,GAAIqc,EAAIrc,GAAIsc,QAASD,EAAIE,KAAKC,MAAOC,KAAMJ,EAAIE,KAAKE,WAJzE,4C,0BChBMC,G,4MACFpqB,MAAQ,CACJ4pB,QAAS,GACTS,KAAM,I,EAOVC,Q,sBAAU,4BAAAzoB,EAAA,+EAEiB6nB,GAAgBC,eAAe,SAFhD,OAEIU,EAFJ,OAGF,EAAKvgB,SAAS,CAAEugB,SAHd,gDAKFnqB,QAAQC,IAAR,MALE,yD,EASVoqB,S,sBAAW,4BAAA1oB,EAAA,+EAEgB6nB,GAAgBP,OAAO,EAAKnpB,MAAM4pB,SAFlD,OAEGS,EAFH,OAGH,EAAKvgB,SAAS,CAAEugB,SAHb,gDAKHnqB,QAAQC,IAAR,MALG,yD,EASXqqB,WAAa,SAACC,GACV,MAAiC,EAAKzgB,MAA9BtC,EAAR,EAAQA,OAIR0G,EAJA,EAAeA,eAID,CAAE3G,KAAM,qBAAsB+C,MAHX,MAAlBigB,EAAW,GAAc,CAAEhf,QAASgf,GAAe,CAAE/kB,OAAQ+kB,IAGvB/iB,EADpC,CAAE1G,IAAKsL,Q,EAI5BsI,aAAe,YAAiB,IACpBhE,EADmB,EAAbiE,OACNjE,MACR,EAAK9G,SAAS,CAAE8f,QAAShZ,IAAS,WAC1BA,EAAMtN,QAAU,EAAG,EAAKinB,WACF,IAAjB3Z,EAAMtN,QAAc,EAAKgnB,c,8FAlC1C,sBAAAzoB,EAAA,sEACUwI,KAAKigB,UADf,gD,0EAsCA,WAAU,IAAD,OAGL,EAA0BjgB,KAAKrK,MAAvB4pB,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,KACjB,OACI,uBAAK3f,UAAU,YAAf,UACI,wBAAOjD,KAAK,OAAOiD,UAAU,eAAekG,MAAOgZ,EAAS5U,SAAU3K,KAAKuK,aAAcsF,YAAY,kBACrG,sBAAKxP,UAAU,SAAf,SACK2f,EAAKhe,KAAI,SAAA0d,GAAG,OACT,sBAAkBrf,UAAU,gBAAgBE,QAAS,kBAAM,EAAK4f,WAAWT,EAAII,OAA/E,SACI,sBAAKtf,IAAKkf,EAAIC,QAASjf,IAAKgf,EAAIrc,MAD1Bqc,EAAIrc,SAKtB,wBACA,sBAAKhD,UAAU,SAAf,SAdO,CAAC,UAAW,UAAW,WAAY,UAAW,UAAW,WAepD2B,KAAI,SAAC4L,EAAO9G,GAAR,OACR,sBAAK3G,MAAO,CAAEkB,gBAAgB,GAAD,OAAKuM,IAAqBvN,UAAU,kBAAkBE,QAAS,kBAAM,EAAK4f,WAAWvS,KAAhE9G,e,GA7DlDlG,IAAMC,WA0E9B,IAAMC,GAAqB,CACvBiD,kBAGSsc,GAAWrf,aATxB,SAAyBrL,GACrB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,aAOgByK,GAAzBE,CAA6C+e,ICjF/DO,G,4JAEF,WACI,IAAQjjB,EAAU2C,KAAKL,MAAftC,MACR,OACI,sBAAKgD,UAAU,OAAOF,MAAQ9C,EAAM8C,MAAMiB,QAAW,CAAEC,gBAAiBhE,EAAM8C,MAAMiB,SAAY,GAAhG,SACK/D,EAAM8C,MAAM9E,QAAU,sBAAKmF,IAAKnD,EAAM8C,MAAM9E,OAAQqF,IAAI,W,GANhDE,IAAMC,WAkBxB,IAAM0f,GAAYvf,aANzB,SAAyBrL,GACrB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,aAIR2K,CAAyBsf,ICZ5CE,G,4MACF7qB,MAAQ,CACJe,SAAU,CACNC,IAAK,GACLC,QAAS,GACTC,OAAQ,K,EAoChB4pB,sBAAwB,SAAC/pB,GACrB,MAA8B,EAAKiJ,MAA3BG,EAAR,EAAQA,QAASlL,EAAjB,EAAiBA,SACX8rB,EAAiB,eAAQhqB,GAC/B,IAAK,IAAMykB,KAAOuF,EAAmB,CACjC,IAAMC,EAAUD,EAAkBvF,KAC7BwF,GAAYC,MAAMC,QAAQF,KAAaA,EAAQ1nB,gBAAgBynB,EAAkBvF,GAE1F,IAAM2D,EAAS,IAAI/b,gBAAgB2d,GACnC5gB,EAAQghB,QAAR,UAAmBlsB,EAASmsB,SAA5B,YAAwCjC,EAAO9b,c,EAGnDuH,aAAe,SAAC9I,GACZ,IAAMyd,EAAQzd,EAAG+I,OAAOC,KAClBlE,EAAQ9E,EAAG+I,OAAOjE,MAClB7P,EAAQ,2BAAQ,EAAKiJ,MAAMjJ,UAAnB,mBAA8BwoB,EAAQ3Y,IACpD,EAAK5G,MAAMqhB,eAAetqB,I,EAG9BuqB,iBAAmBloB,EAAYqB,UAAS,WACpC,IAAM8mB,EAAW,eAAQ,EAAKvhB,MAAMjJ,UACpC,IAAK,IAAMykB,KAAO+F,EAAa,CAC3B,IAAMP,EAAUO,EAAY/F,KACvBwF,GAAYC,MAAMC,QAAQF,KAAaA,EAAQ1nB,gBAAgBioB,EAAY/F,GAEpF,EAAKxb,MAAMiE,UAAU,EAAKjE,MAAM7K,MAAM6C,OAAO4F,QAAS2jB,KACvD,K,EAEHC,gBAAkB,SAACnlB,GACf,GAAI,EAAK2D,MAAMjJ,SAASE,QAAQoZ,SAAShU,EAAKb,KAAM,CAChD,IAAMimB,EAAa,EAAKzhB,MAAMjJ,SAASE,QAAQ8N,WAAU,SAAAQ,GAAM,OAAIA,IAAWlJ,EAAKb,OACnF,EAAKwE,MAAMjJ,SAASE,QAAQgO,OAAOwc,EAAY,GAC/C,IAAM1qB,EAAQ,2BAAQ,EAAKiJ,MAAMjJ,UAAnB,IAA6BE,QAAQ,YAAK,EAAK+I,MAAMjJ,SAASE,WAC5E,EAAK+I,MAAMqhB,eAAetqB,OACvB,CACH,IAAMA,EAAQ,2BAAQ,EAAKiJ,MAAMjJ,UAAnB,IAA6BE,QAAQ,GAAD,mBAAM,EAAK+I,MAAMjJ,SAASE,SAA1B,CAAmCoF,EAAKb,QAC1F,EAAKwE,MAAMqhB,eAAetqB,K,EAIlC2qB,iBAAmB,SAACha,GAChB,GAAI,EAAK1H,MAAMjJ,SAASG,OAAOmZ,SAAS3I,EAAMhE,IAAK,CAC/C,IAAM+d,EAAa,EAAKzhB,MAAMjJ,SAASG,OAAO6N,WAAU,SAAA2C,GAAK,OAAIA,IAAUA,KAC3E,EAAK1H,MAAMjJ,SAASG,OAAO+N,OAAOwc,EAAY,GAC9C,IAAM1qB,EAAQ,2BAAQ,EAAKiJ,MAAMjJ,UAAnB,IAA6BG,OAAO,YAAK,EAAK8I,MAAMjJ,SAASG,UAC3E,EAAK8I,MAAMqhB,eAAetqB,OACvB,CACH,IAAMA,EAAQ,2BAAQ,EAAKiJ,MAAMjJ,UAAnB,IAA6BG,OAAO,GAAD,mBAAM,EAAK8I,MAAMjJ,SAASG,QAA1B,CAAkCwQ,EAAMhE,OACzF,EAAK1D,MAAMqhB,eAAetqB,K,uDA/ElC,WACI,MAA+BsJ,KAAKL,MAA5B/K,EAAR,EAAQA,SAAU8B,EAAlB,EAAkBA,SACVooB,EAAWlqB,EAAXkqB,OACFnnB,EAAS,IAAIoL,gBAAgB+b,GAC7BwC,EAAkBC,OAAOC,KAAK9qB,GAAUyP,MAAK,SAAAsb,GAAS,OAAI9pB,EAAO6nB,IAAIiC,MAC3E,GAAI3C,GAAUwC,EAAiB,CAAC,IAAD,IACrB3qB,EAAMgB,EAAO6nB,IAAI,QAAU,GAC3B5oB,GAAU,UAAAe,EAAO6nB,IAAI,kBAAX,eAAuBkC,MAAM,OAAQ,GAC/C7qB,GAAS,UAAAc,EAAO6nB,IAAI,iBAAX,eAAsBkC,MAAM,OAAQ,GACnD1hB,KAAKL,MAAMqhB,eAAe,CAAErqB,MAAKC,UAASC,WAC1CmJ,KAAKygB,sBAAsBzgB,KAAKL,MAAMjJ,eAGtCsJ,KAAKL,MAAMqhB,eAAe,CAAErqB,IAAK,GAAIC,QAAS,GAAIC,OAAQ,KAC1DmJ,KAAKygB,sBAAsBzgB,KAAKL,MAAMjJ,Y,gCAI9C,YAAgD,IAAjBirB,EAAgB,EAA1BjrB,SACCkrB,EAAiB5hB,KAAKL,MAAhCjJ,SACJirB,IAAiBC,IACjB5hB,KAAKygB,sBAAsBmB,GAC3B5hB,KAAKihB,iBAAiBY,KAAK7hB,KAA3BA,M,kCAIR,WACIA,KAAKL,MAAMqhB,eAAe,CAAErqB,IAAK,GAAIC,QAAS,GAAIC,OAAQ,KAC1DmJ,KAAKygB,sBAAsBzgB,KAAKL,MAAMjJ,UACtCsJ,KAAKihB,iBAAiBY,KAAK7hB,KAA3BA,K,oBAqDJ,WAAU,IAAD,OACG3C,EAAU2C,KAAKL,MAAftC,MACA3G,EAAasJ,KAAKL,MAAlBjJ,SACR,OACI,uBAAK2J,UAAU,eAAf,UACI,wBAAOA,UAAU,eAAejD,KAAK,OAAOuN,SAAU3K,KAAKuK,aAAcE,KAAK,MAAMlE,MAAO7P,EAASC,IAAKuU,WAAS,EAAC2E,YAAY,cAC/H,oBAAGxP,UAAU,cAAb,wDAEA,wBAEA,qBAAIA,UAAU,wBAAd,SACKhD,EAAMxG,OAAOmL,KAAI,SAAAqF,GAAK,OACnB,sBAAIhH,UAAU,gBAA+BE,QAAS,kBAAM,EAAK8gB,iBAAiBha,IAAlF,UACI,uBAAKhH,UAAU,gBAAf,UACI,sBAAKA,UAAU,cAAcF,MAAO,CAAEkB,gBAAiBgG,EAAMuG,SAC7D,6BAAIvG,EAAM9F,WAEd,gCAAQ7K,EAASG,OAAOmZ,SAAS3I,EAAMhE,IAAO,eAAC,KAAD,IAAuB,OALtCgE,EAAMhE,SASjD,wBACA,qBAAIhD,UAAU,yBAAd,SACKhD,EAAMzG,QAAQoL,KAAI,SAAAkD,GAAM,OACrB,sBAAI7E,UAAU,eAAgCE,QAAS,kBAAM,EAAK4gB,gBAAgBjc,IAAlF,UACI,uBAAK7E,UAAU,eAAf,UACI,eAAC4O,GAAD,CAAc/J,OAAQA,IACtB,uBAAM7E,UAAU,YAAhB,SAA6B6E,EAAO9J,cAExC,gCAAQ1E,EAASE,QAAQoZ,SAAS9K,EAAO/J,KAAQ,eAAC,KAAD,IAAuB,OAL1C+J,EAAO/J,iB,GAnHtCyF,IAAMC,WAyIjC,IAAMC,GAAqB,CACvBkgB,e3D8CG,SAAwBtqB,GAC3B,OAAO,SAACmI,GAEJA,EADe,CAAEzB,KAAM,gBAAiB1G,e2D/C5CkN,cAGSke,GAAc9gB,aAZ3B,SAAyBrL,GACrB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzBK,SAAUf,EAAMsH,YAAYvG,YASgBoK,GAAzBE,CAA6C+gB,aAAWvB,KCjJ7EwB,G,4MACJrsB,MAAQ,CACNuN,cAAe,M,EAUjB+e,kBAAqB,WACnB,IAAO5kB,EAAQ,EAAKsC,MAAbtC,MACD6F,EAAgB7F,EAAM6F,cAAgB7F,EAAM6F,cAAgB,GAClE,EAAKzD,SAAS,CAAEyD,mB,EAOlBgf,gBAAkB,SAAC3e,GACjB,EAAK5D,MAAMmF,gBAAgBvB,EAAM,EAAK5D,MAAMtC,Q,EAE9C8kB,aAAa,SAAC5e,GACZ,EAAK5D,MAAMuE,aAAaX,EAAM,EAAK5D,MAAMtC,Q,uDAtB3C,WACE2C,KAAKiiB,sB,gCAEP,SAAmB/J,GACbA,EAAU7a,MAAM6F,gBAAkBlD,KAAKL,MAAMtC,MAAM6F,eACrDlD,KAAKiiB,sB,oBAmBT,WAAU,IAAD,OACC/e,EAAkBlD,KAAKrK,MAAvBuN,cACR,EAMIlD,KAAKL,MALPsc,EADF,EACEA,oBACAiB,EAFF,EAEEA,oBACAlB,EAHF,EAGEA,SACAQ,EAJF,EAIEA,mBACAS,EALF,EAKEA,aAGF,OADApnB,QAAQC,IAAI,gCAAiCoN,GAE3C,uBAAK7C,UAAU,UAAf,WACI6C,GAAiB,eAACqC,GAAD,IAClBrC,GAA0C,IAAzBA,EAAcjK,QAC9B,wDAEDiK,GAAiBA,EAAcjK,OAAS,GACvC,qBAAIoH,UAAU,0DAAd,SACG6C,EAAclB,KAAI,SAACuB,EAAMuZ,GACxB,OACE,gCACE,eAACC,GAAD,CACExZ,KAAMA,EACNC,QAASD,EAAKC,QACd0Z,oBAAqBA,EACrBjB,oBAAqBA,EACrBD,SAAUA,EACVQ,mBAAoBA,EACpBS,aAAcA,IAEhB,uBAAK5c,UAAU,gBAAf,UACE,yBAAQE,QAAS,kBAAM,EAAK2hB,gBAAgB3e,IAA5C,2BAGA,yBAAQhD,QAAS,kBAAI,EAAK4hB,aAAa5e,IAAvC,yBAdKA,EAAKF,gB,GAhDPzC,IAAMC,WA+E7B,IAAMC,GAAqB,CACzBmhB,kB5DsEK,SAA2B1kB,GAC9B,8CAAO,WAAMsB,GAAN,eAAArH,EAAA,+EAE6BgL,GAAaK,iBAAiBtF,GAF3D,cAEO2F,EAFP,OAGCrN,QAAQC,IAAI,aAAcoN,GAH3B,kBAIQA,GAJR,gCAMCrN,QAAQC,IAAI,6BAAZ,MAND,yDAAP,uD4DtEFkP,gBACAd,gBACAY,oBAEWsd,GAAUphB,aAXvB,SAAyBrL,GACvB,MAAO,CACL0H,MAAO1H,EAAMsH,YAAY5G,aASmByK,GAAzBE,CAA6CghB,ICrF9DK,G,4MAIFC,cAAgB,SAAC9e,GAEb,OADc,EAAK7D,MAAMtC,MAAMkH,OAAOjH,MAAK,SAAAgH,GAAK,OAAIA,EAAMjB,KAAOG,KACpDjC,O,4CAGjB,WAAU,IAAD,OACGlE,EAAU2C,KAAKL,MAAftC,MACR,OAAgC,IAA5BA,EAAMic,WAAWrgB,OAAsB,uBAAKoH,UAAU,WAAf,UACvC,uBAAKA,UAAU,kBAAf,UACI,eAAC,KAAD,IACA,6CAEJ,oEAGA,uBAAKA,UAAU,WAAf,UACI,uBAAKA,UAAU,kBAAf,UACI,eAAC,KAAD,IACA,6CAEJ,qBAAIA,UAAU,2BAAd,SAEQhD,EAAMic,WAAWtX,KAAI,SAAAmB,GAAQ,OACzB,sBAAsB9C,UAAU,mBAAhC,UACI,uBAAMA,UAAU,gBAAhB,SAAgC,eAAC4O,GAAD,CAAc/J,OAAQ/B,EAASG,aAC/D,uBAAKjD,UAAU,gBAAf,UACI,wBAAMA,UAAU,gBAAhB,UAAiC8C,EAASG,SAASlI,SAAnD,OACA,6BAAI+H,EAASxM,MACZwM,EAASK,SAAW,gBAAC,IAAD,CAAMlD,GAAE,iBAAYjD,EAAMlC,IAAlB,YAAyBgI,EAASK,QAAlC,YAA6CL,EAASI,KAAKF,IAAnE,cAA2EF,EAASI,KAAKhC,SAC7G4B,EAASK,SAAW,2CAAa,EAAK8e,cAAcnf,EAASK,YAC9D,eAAC,KAAD,CAAQnD,UAAU,eAAe4Y,SAAO,EAAxC,SAA0C9V,EAASuM,iBAPlDvM,EAASE,gB,GA3BlBzC,IAAMC,WAkDlC,IAGa0hB,GAAevhB,aAR5B,SAAyBrL,GACrB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,aAGN,GAGC2K,CAA6CqhB,ICvDnEG,G,4MAEFC,Y,sBAAc,gCAAAjrB,EAAA,+DACuB,EAAKmI,MAA9BtC,EADE,EACFA,MAAOqlB,EADL,EACKA,cADL,SAEJA,EAAcrlB,EAAMlC,KAFhB,OAGV,EAAKwE,MAAMG,QAAQC,KAAK,UAHd,2C,EAMd4iB,eAAiB,WACb,MAAwB,EAAKhjB,MAArBtC,EAAR,EAAQA,MAAOrB,EAAf,EAAeA,KACf,OAAQA,EAAK4mB,SAAWvlB,EAAMqG,UAAUvI,MAAQa,EAAKb,K,4CAGzD,WAAU,IAAD,OACL,OACI,2BAASkF,UAAU,2BAAnB,UACKL,KAAK2iB,kBAAoB,uCACtB,mEACA,6DACA,yBAAQtiB,UAAU,wBAAwBE,QAAS,kBAAM,EAAKkiB,eAA9D,wBAEFziB,KAAK2iB,kBAAoB,mF,GArBhB/hB,IAAMC,WAkCjC,IAAMC,GAAqB,CACvB4hB,c9DWG,SAAuBnlB,GAC1B,8CAAO,WAAMsB,GAAN,SAAArH,EAAA,+EAEOgL,GAAaG,OAAOpF,GAF3B,OAGC1H,QAAQC,IAAI,wBACZ+I,EAAS,CACLzB,KAAM,eACNG,YANL,gDASC1H,QAAQC,IAAI,sBAAZ,MATD,yDAAP,wD8DTS+sB,GAAc7hB,aAV3B,SAAyBrL,GACrB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzB2F,KAAMrG,EAAM+H,WAAW1B,QAOqB8E,GAAzBE,CAA6C+gB,aAAWS,KC5B7EM,G,4MACFntB,MAAQ,CACJotB,aAAc,G,EAGlBC,cAAgB,CAAC,CAAE3f,GAAI,OAAQ9B,MAAO,oBAAqB6M,KAAM,eAACmS,GAAD,IAAepS,UAAWkS,IAC3F,CAAEhd,GAAI,OAAQ9B,MAAO,eAAgB6M,KAAM,eAAC,KAAD,IAAcD,UAAW2T,IACpE,CAAEze,GAAI,OAAQ9B,MAAO,UAAW6M,KAAM,eAAC,KAAD,IAAmBD,UAAWiU,IACpE,CAAE/e,GAAI,OAAQ9B,MAAO,eAAgB6M,KAAM,eAAC,KAAD,IAAoBD,UAAW0U,K,EAW1EI,aAAe,SAACC,GACZ,EAAKzjB,UAAS,SAACue,GAAD,mBAAC,eAAoBA,GAArB,IAAgC+E,YAAaG,Q,EAG/DC,YAAc,WACV,IAAQJ,EAAgB,EAAKptB,MAArBotB,YACFK,EAAW,EAAKJ,cAAcD,GAEpC,OADAltB,QAAQC,IAAI,kBAAmBstB,GACxBA,EAASjV,W,EAGpBkV,OAAS,WACL,EAAK5jB,UAAS,SAACue,GAAD,mBAAC,eAAoBA,GAArB,IAAgC+E,aAAc,Q,EAIhEO,UAAY,WACR,IAAM3jB,EAAO,EAAKA,MACCkB,EAAc,EAAKmiB,cAAc,EAAKrtB,MAAMotB,aAAvD5U,UACR,OAAO,eAACtN,EAAD,eAAelB,K,EAG1B4jB,aAAe,WACX,OAAO,iCACH,qBAAIljB,UAAU,0BAAd,SACK,EAAK2iB,cAAchhB,KAAI,SAACwhB,EAAK1c,GAAN,OACpB,sBAAIvG,QAAS,kBAAM,EAAK0iB,aAAanc,IAArC,UACI,sBAAKzG,UAAU,OAAf,SAAuBmjB,EAAIpV,OAC3B,6BAAIoV,EAAIjiB,UAFoCiiB,EAAIngB,SAM5D,wBACA,eAACkf,GAAD,Q,uDAzCR,WACQviB,KAAKL,MAAM/K,SAASkqB,QAAQ9e,KAAKP,UAAS,SAACue,GAAD,mBAAC,eAAoBA,GAArB,IAAgC+E,YAAa,S,kCAG/F,WACI/iB,KAAKP,UAAS,SAACue,GAAD,mBAAC,eAAoBA,GAArB,IAAgC+E,aAAc,S,oBAwChE,WAAU,IAAD,OACL,EAA0G/iB,KAAKL,MAAvGsK,EAAR,EAAQA,QACA8Y,GADR,EAAiB7F,oBAAjB,EAAsCjB,oBAAtC,EAA2DD,SAA3D,EAAqEQ,mBAArE,EAAyFS,aACjEjd,KAAKrK,MAArBotB,aACR,OACI,uBAAK1iB,UAAS,oBAAgBL,KAAKL,MAAM8jB,WAAc,YAAc,IAArE,UACI,uBAAKpjB,UAAU,QAAf,UACI,uBAAMA,UAAS,oBAAgC,IAAjB0iB,EAAsB,WAAa,GAAlD,KAAyDxiB,QAAS,kBAAM,EAAK8iB,UAA5F,SAAsG,eAAC,KAAD,MACtG,oBAAGhjB,UAAU,aAAb,UAA6C,IAAjB0iB,EAAqB,OAAS/iB,KAAKgjB,cAAcD,GAAaxhB,QAC1F,uBAAMlB,UAAU,YAAYE,QAAS0J,EAArC,SAA8C,eAAC,KAAD,SAElD,wBACA,sBAAK5J,UAAU,eAAf,UACsB,IAAjB0iB,EAAqB,oBAAMQ,aAAN,IAAwB,oBAAMD,UAAN,a,GApE1C1iB,IAAMC,WAgF9B,IAGa6iB,GAAW1iB,aARxB,SAAyBrL,GACrB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,aAGN,GAGH2K,CAA6C+gB,aAAWe,KCtDhF,IAAMhiB,GAAqB,CACvBiD,kBAGS4f,GAAmB3iB,aAVhC,SAAyBrL,GACrB,MAAO,CACHoG,MAAOpG,EAAM+H,WAAW3B,MACxBsB,MAAO1H,EAAMsH,YAAY5G,aAOwByK,GAAzBE,EAzCN,SAAC,GAAgD,IAA9CpK,EAA6C,EAA7CA,QAASyG,EAAoC,EAApCA,MAAO0G,EAA6B,EAA7BA,cAAekG,EAAc,EAAdA,QAExDK,qBAAU,WACN,OAAO,WACHL,OAEN,CAACA,IAOH,OACI,sBAAK5J,UAAU,cAAcF,MAAO,CAAEyN,MAAO,WAA7C,SACKhX,EAAQoL,KAAI,SAAAkD,GAAM,OACf,uBAAsB7E,UAAU,6BAA6BE,QAAS,kBARzD4E,EAQ+ED,EAAO/J,SAN3G4I,EAAc,CAAE3G,KAAM,sBAAuB+H,SAAUA,GAAY9H,GAF/C,IAAC8H,GAQb,UACI,sBAAK9E,UAAU,sBACf,sBAAKF,MAAO,CAAEgM,MAAO,IAArB,SACI,eAAC8C,GAAD,CAAc/J,OAAQA,MAE1B,sBAAK7E,UAAU,qBAAf,SACI,6BAAI6E,EAAO9J,aAEf,sBAAKiF,UAAU,sBAAf,SAAqC,eAAC,KAAD,QAR/B6E,EAAO/J,aCN3ByoB,G,4MAEFjuB,MAAQ,CACJkuB,cAAc,EACdC,WAAY,EAAKnkB,MAAMtC,MAAMkE,MAC7BkiB,YAAY,EACZM,kBAAmB,EACnBC,oBAAoB,EACpBC,oBAAoB,G,EAGxBC,UAAYtjB,IAAM2V,Y,EAClB4N,WAAavjB,IAAM2V,Y,EACnB6N,gBAAkBxjB,IAAM2V,Y,EAaxB8N,aAAe,WACX,IAAQN,EAAsB,EAAKpuB,MAA3BouB,kBACR,GAAIpvB,OAAOqY,WAAa,IAAK,CACzB,GAA0B,IAAtB+W,EAAyB,OAC7B,EAAKtkB,SAAS,CAAEskB,kBAAmB,QAChC,CACH,GAA0B,IAAtBA,EAAyB,OAC7B,EAAKtkB,SAAS,CAAEskB,kBAAmB,M,EAU3C7iB,mBAAqB,WACjB,MAAiC,EAAKvB,MAA9BtC,EAAR,EAAQA,MAAO0G,EAAf,EAAeA,cACf1G,EAAMmE,WAAanE,EAAMmE,UACzBuC,EAAc,CAAE3G,KAAM,iBAAkBoE,UAAWnE,EAAMmE,WAAanE,I,EAG1EihB,YAAc,SAAC5B,GAAD,OAAWA,EAAMlS,OAAO8G,U,EAEtC/G,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMlE,EAAc,EAAdA,MAC9B,EAAK9G,UAAS,SAACue,GAAD,mBAAC,eAAoBA,GAArB,mBAAiCvT,EAAOlE,Q,EAG1D+d,mBAAqB,WACjB,MAAiC,EAAK3kB,MAA9BtC,EAAR,EAAQA,MAAO0G,EAAf,EAAeA,cACf1G,EAAMkE,MAAQ,EAAK5L,MAAMmuB,WACzB,IAAM3gB,EAAW,CAAExM,IAAKsL,GAA2B5E,EAAMkE,QACzDwC,EAAc,CAAE3G,KAAM,eAAgBmE,MAAOlE,EAAMkE,OAASlE,EAAO8F,I,EAGvEohB,WAAa,WACT,EAAK9kB,UAAS,SAACue,GAAD,mBAAC,eAAoBA,GAArB,IAAgCyF,YAAa,EAAK9tB,MAAM8tB,iB,EAG1Ee,oBAAsB,WAClB,IAAM5tB,EAAO,YAAO,EAAK+I,MAAMtC,MAAMzG,SAErC,OADAA,EAAQgO,OAAO,EAAKjP,MAAMouB,mBACnBntB,G,EAGX6tB,sBAAwB,kBAAO,EAAK9kB,MAAMtC,MAAMzG,QAAQqC,OAAS,EAAKtD,MAAMouB,mB,EAE5EW,eAAiB,kBAAM,EAAKjlB,SAAS,CAAEukB,oBAAoB,K,uDA3D3D,WACIrvB,OAAO4J,iBAAiB,SAAUyB,KAAKqkB,cACvCrkB,KAAKqkB,eACLrkB,KAAKL,MAAMf,YACPoB,KAAKL,MAAM/K,SAASkqB,QAAQ9e,KAAKP,SAAS,CAAEgkB,YAAY,M,kCAGhE,WACI9uB,OAAO6J,oBAAoB,SAAUwB,KAAKqkB,gB,gCAc9C,SAAmBnM,GACXA,EAAU7a,MAAMkE,QAAUvB,KAAKL,MAAMtC,MAAMkE,OAC3CvB,KAAKP,SAAS,CAAEqkB,WAAY9jB,KAAKL,MAAMtC,MAAMkE,U,oBAqCrD,WAAU,IAAD,OACL,EAA2HvB,KAAKL,MAAxHtC,EAAR,EAAQA,MAAOsnB,EAAf,EAAeA,kBAAmBzH,EAAlC,EAAkCA,oBAAqBjB,EAAvD,EAAuDA,oBAAqBD,EAA5E,EAA4EA,SAAUQ,EAAtF,EAAsFA,mBAAoBS,EAA1G,EAA0GA,aAC1G,EAAyFjd,KAAKrK,MAAtFmuB,EAAR,EAAQA,WAAYL,EAApB,EAAoBA,WAAYI,EAAhC,EAAgCA,aAAcG,EAA9C,EAA8CA,mBAAoBC,EAAlE,EAAkEA,mBAC5DrtB,EAAUoJ,KAAKwkB,sBACfI,EAAqB5kB,KAAKykB,wBAEhC,OACI,2BAASpkB,UAAU,eAAnB,UACI,uBAAKA,UAAU,YAAf,UACI,yBAAQA,UAAU,yBAAlB,SACI,wBAAOA,UAAU,cAAcjD,KAAK,OAAOmJ,MAAOud,EAAYrZ,KAAK,aAAauM,QAAShX,KAAKse,YAAa3T,SAAU3K,KAAKuK,aAAcsO,OAAQ7Y,KAAKskB,uBAEzJ,yBAAQjkB,UAAS,iCAA6BhD,EAAMmE,UAAa,UAAY,IAAMjB,QAAS,kBAAM,EAAKW,sBAAvG,SAA6H,eAAC,KAAD,MAC7H,uBAAKb,UAAU,yBAAf,UAAwC,uBAAKA,UAAU,gBAAf,UACnCzJ,EAAQoL,KAAI,SAACkD,EAAQ4B,GAAT,OACT,eAACmI,GAAD,CAA+B/J,OAAQA,EAAQ/E,MAAO,CAAE6L,MAAa,EAAPlF,IAA3C5B,EAAO/J,QAE7BypB,EAAqB,GAClB,uBACIpX,IAAKxN,KAAKmkB,WADd,UAGI,sBAAK9jB,UAAU,0BAA0BF,MAAO,CAAEmN,UAAU,cAAD,QAAoC,EAAnB1W,EAAQqC,OAAzB,QAA8CsH,QAAS,kBAAM,EAAKd,SAAS,CAAEukB,oBAAqBA,OAC7J,sBACI3jB,UAAU,gBACVF,MAAO,CAAEmN,UAAU,cAAD,QAAoC,EAAnB1W,EAAQqC,OAAzB,QAFtB,oBAIS2rB,KAERZ,GAAsB,eAAC1Y,GAAD,CAAgBrB,QAAS,kBAAM,EAAKxK,SAAS,CAAEukB,oBAAoB,KAAUziB,MAAM,UAAUiM,IAAKxN,KAAKmkB,WAAvG,SACnB,eAACR,GAAD,CAAkB/sB,QAASyG,EAAMzG,QAAQ4G,QAAO,SAAA0H,GAAM,OAAIA,EAAO/J,OAAM8O,QAASjK,KAAK0kB,yBAKjG,uBAAKrkB,UAAU,eAAemN,IAAKxN,KAAKkkB,UAAxC,UACI,yBAAQ3jB,QAAS,kBAAM,EAAKd,SAAS,CAAEokB,cAAeA,KAAiBxjB,UAAU,qCAAqCF,MAAO,CAAEmN,UAAU,cAAD,QAAuC,GAAtB1W,EAAQqC,OAAQ,GAAjC,QAAxI,oBACC4qB,GAAgB,eAACvY,GAAD,CAAgBrB,QAAS,kBAAM,EAAKxK,SAAS,CAAEokB,cAAc,KAAUtiB,MAAM,iBAAiBiM,IAAKxN,KAAKkkB,UAAxG,SACb,eAAC/E,GAAD,eAIhB,sBAAK9e,UAAU,aAAf,UACMojB,GAAc,uCACZ,uBAAKpjB,UAAU,eAAemN,IAAKxN,KAAKokB,gBAAxC,UACI,yBAAQ/jB,UAAU,yBAAyBE,QAAS,kBAAM,EAAKd,SAAS,CAAEwkB,oBAAqBA,KAA/F,SAAsH,eAAC,KAAD,MACrHA,GAAsB,eAAC3Y,GAAD,CAAgBrB,QAAS,kBAAM,EAAKxK,SAAS,CAAEwkB,oBAAoB,KAAU1iB,MAAM,UAAUiM,IAAKxN,KAAKokB,gBAAvG,SACnB,eAACjF,GAAD,SAIR,0BAAQ5e,QAAS,kBAAMokB,GAAkB,IAAOtkB,UAAS,mCAA+BojB,EAAc,YAAc,IAApH,UAA0H,eAAC,KAAD,IAA1H,IAA6I,uBAAMpjB,UAAU,gBAAhB,0BAC7I,0BAAQE,QAAS,kBAAM,EAAKgkB,cAAclkB,UAAU,4BAApD,UAAgF,eAAC,KAAD,IAAhF,IAAqG,uBAAMA,UAAU,gBAAhB,+BAG7G,eAACqjB,GAAD,CAAUD,WAAYA,EAAYxZ,QAAS,WAAQ,EAAKsa,cAAgBtI,oBAAqBA,EAAqBiB,oBAAqBA,EAAqBlB,SAAUA,EAAUiB,aAAcA,EAAcT,mBAAoBA,W,GAlIrN5b,IAAMC,WA8IjC,IAAMC,GAAqB,CACvBlC,aACAmF,kBAMS8gB,GAAc7jB,aAd3B,SAAyBrL,GACrB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,UACzB0F,MAAOpG,EAAM+H,WAAW3B,SAWoB+E,GAAzBE,CAA6C+gB,aAAW6B,KC5I7EkB,G,4MACJnvB,MAAQ,CACN4N,KAAM,KACNwhB,UAAW,I,EAebC,WAAa,SAACvnB,EAAQ+F,GACpB,IAAMD,EAAO6C,GAAgBJ,YAAYvI,EAAQ+F,GACjD,EAAK/D,SAAS,CAAE8D,OAAMwhB,UAAWxhB,EAAKhC,S,EAGxCgJ,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMlE,EAAc,EAAdA,MAChC,EAAK9G,UAAS,SAACue,GAAD,mBAAC,eAAoBA,GAArB,mBAAiCvT,EAAOlE,Q,EAExD+X,YAAc,SAAC5B,GACbA,EAAMlS,OAAO8G,U,EAEf2T,OAAS,SAACvI,GACR,IAAM3X,EAAU,eAAQ,EAAKpP,MAAM4N,MACnCwB,EAAWxD,MAAQ,EAAK5L,MAAMovB,UAC9B,IAAM5hB,EAAW,CACfxM,IAAKsL,KACLsB,KAAMwB,EACNvB,QAAS,EAAK7D,MAAM6D,SAEtB,EAAK7D,MAAMqF,aACTD,EACA,EAAKpF,MAAM6D,QACX,EAAK7D,MAAMtC,MACX8F,GAEF,EAAKxD,MAAMqd,wBAAwBN,EAAO,KAAM,K,EAElDwI,SAAW,SAACxI,GACV,EAAK/c,MAAMqd,wBAAwBN,EAAO,KAAM,IAChD,EAAK/c,MAAMsd,aAAa,EAAKtd,MAAM6D,QAAS,EAAK7D,MAAMlC,S,EAEzD2G,cAAgB,SAACsY,GACf,MAA2B,EAAK/c,MAAxB6D,EAAR,EAAQA,QAASnG,EAAjB,EAAiBA,MACX0H,EAAU,eAAQ,EAAKpP,MAAM4N,MACnC,EAAK5D,MAAMyE,cAAcW,EAAYvB,EAASnG,GAC9C,EAAKsC,MAAMqd,wBAAwBN,EAAO,KAAM,K,uDAhDlD,WACE,MAA4B1c,KAAKL,MAAzBlC,EAAR,EAAQA,OAAQ+F,EAAhB,EAAgBA,QAChBxD,KAAKL,MAAMsF,YAAYxH,GACvBuC,KAAKglB,WAAWvnB,EAAQ+F,K,gCAG1B,SAAmB0U,GACjB,GAAIA,EAAU7a,QAAU2C,KAAKL,MAAMtC,MAAO,CACxC,MAA4B2C,KAAKL,MAAzBlC,EAAR,EAAQA,OAAQ+F,EAAhB,EAAgBA,QAChBxD,KAAKglB,WAAWvnB,EAAQ+F,M,oBA0C5B,WACE,MAA4BxD,KAAKrK,MAAzB4N,EAAR,EAAQA,KAAMwhB,EAAd,EAAcA,UACd,EAMI/kB,KAAKL,MALP6D,EADF,EACEA,QACAwY,EAFF,EAEEA,SACAC,EAHF,EAGEA,oBACAO,EAJF,EAIEA,mBACA7O,EALF,EAKEA,SAEF,OAAKpK,EAEH,uBACElD,UAAU,yBACVF,MAAO,CACLwN,SAAU,QACV9B,IAAK8B,EAAS9B,IACdG,KAAM2B,EAAS3B,MALnB,UAQE,iCACE,uBAAK3L,UAAU,eAAeF,MAAO,CAAEgM,MAAOwB,EAASxB,OAAvD,UACG5I,EAAKpD,OAAS,eAAC0b,GAAD,CAAYC,UAAWvY,EAAKpD,QAE3C,uBAAKE,UAAU,eAAf,UACGkD,EAAK4D,UACJ,+BACE,eAAC4U,GAAD,CACE5U,SAAU5D,EAAK4D,SACf6U,SAAUA,EACVC,oBAAqBA,MAK3B,2BACE5b,UAAU,cACVjD,KAAK,OACLmJ,MAAOwe,EACPta,KAAK,YACLE,SAAU3K,KAAKuK,aACfW,WAAS,EACT8L,QAAShX,KAAKse,cAGhB,eAACzB,GAAD,CACEtZ,KAAMA,EACNC,QAASA,EACTgZ,mBAAoBA,UAI1B,yBAAQjc,QAASP,KAAKilB,OAAQ5kB,UAAU,0BAAxC,qBAIF,uBAAKA,UAAU,mCAAf,UACE,0BACEE,QAASP,KAAKklB,SACd7kB,UAAU,qCAFZ,UAIE,uBAAMA,UAAU,0CAAhB,SACE,eAAC,KAAD,MAEF,iDAEF,sBAAKA,UAAU,qCAAf,SACE,eAACiS,GAAD,CACE5H,KAAM,CACJ0D,KAAM4F,KACNzS,MAAO,SACP4M,UAAW4C,GACX4B,cAAea,QAIrB,sBAAKnT,UAAU,qCAAf,SACE,eAACiS,GAAD,CACE5H,KAAM,CACJ0D,KAAM2F,KACNxS,MAAO,iBACP4M,UAAWwB,QAIjB,sBAAKtP,UAAU,qCAAf,SACE,eAACiS,GAAD,CACE5H,KAAM,CACJ0D,KAAMgG,KACN7S,MAAO,eACP4M,UAAWmF,QAIjB,sBAAKjT,UAAU,gDAAf,SACE,eAACiS,GAAD,CACE5H,KAAM,CACJ0D,KAAM8F,KACN3S,MAAO,aACP4M,UAAW8B,QAIjB,uBACE5P,UAAU,qCACVE,QAASP,KAAKoE,cAFhB,UAIE,uBAAM/D,UAAU,0CAAhB,SACE,eAAC,KAAD,MAEF,qDApGU,eAACkF,GAAD,Q,GAjES1E,aAmL/B,IAAMC,GAAqB,CACzBkE,gBACAC,eACAb,kBAGW+gB,GAAkBnkB,aAZ/B,SAAyBrL,GACvB,MAAO,CACL0H,MAAO1H,EAAMsH,YAAY5G,aAY3ByK,GAF6BE,CAG7B8jB,I,UCrNK,SAASM,GAAT,GAAmE,IAApCC,EAAmC,EAAnCA,kBAAmBC,EAAgB,EAAhBA,aACvDzvB,QAAQC,IAAI,oBAAqBuvB,GAEjC,IAAM/tB,EAAO,CACXT,OAAQ0qB,OAAOC,KAAK6D,GACpBE,SAAU,CACR,CACEle,MAAO,aACP/P,KAAMiqB,OAAOiE,OAAOH,GACpBhkB,gBAAiBikB,EACjBG,YAAa,EACbC,YAAa,KAenB,OACE,uBAAKrlB,UAAU,QAAf,UACE,mDACA,eAAC,KAAD,CAAK/I,KAAMA,EAAMquB,QAdL,CACdC,QAAS,CACPC,OAAQ,CACNhvB,OAAQ,CACN+W,MAAO,QACPkH,QAAS,YCnBZ,SAASgR,GAAT,GAAiE,IAAnCC,EAAkC,EAAlCA,iBAAkBT,EAAgB,EAAhBA,aAC/ChuB,EAAO,CACXT,OAAQ0qB,OAAOC,KAAKuE,GACpBR,SAAU,CACR,CACEle,MAAO,GACP/P,KAAMiqB,OAAOiE,OAAOO,GACpB1kB,gBAAiBikB,EACjBG,YAAa,EACbC,YAAa,EACbM,UAAW,WAgCjB,OACE,uBAAK3lB,UAAU,4BAA4BF,MAAO,CAAEoN,UAAW,KAA/D,UACE,kDACA,eAAC,KAAD,CAAKjW,KAAMA,EAAMgV,OAAQ,KACvBH,MAAO,KACPwZ,QAhCU,CACdM,qBAAqB,EACrBL,QAAS,CACPC,OAAQ,CACNxT,SAAS,EACTxb,OAAQ,CACNmvB,UAAW,WAKjBE,OAAQ,CACNC,EAAG,CACDC,MAAO,CACLxY,MAAO,UAIXyY,EAAG,CACDD,MAAO,CACLxY,MAAO,iB,yBCpCV,SAAS0Y,GAAT,GAAqC,IAATC,EAAQ,EAARA,MAuEjC,OACE,sBAAKlmB,UAAU,sBAAf,SACE,eAAC,KAAD,CAAU/I,KAAMivB,EAAOC,MAAO,GAAIvxB,OAxEvB,CACbwxB,OAAQ,CACN5a,IAAK,CACH1L,MAAO,CACL0D,WAAY,gCACZ6iB,WAAY,oBACZ7R,SAAU,KAGd8R,OAAQ,CACNxmB,MAAO,CACL0D,WAAY,mCACZgR,SAAU,EACVjH,MAAO,UAGX9B,OAAQ,CACN3L,MAAO,CACL0D,WAAY,gCACZgR,SAAU,EACVjH,MAAO,WAETgZ,cAAe,CACb/iB,WAAY,qCACZgjB,WAAY,OACZjZ,MAAO,WAIbkZ,SAAU,CACRvlB,MAAO,CACL8F,MAAO,YACPlH,MAAO,CACL0D,WAAY,kCAGhBkjB,KAAM,CACJ5mB,MAAO,CACLkB,gBAAiB,OACjBuM,MAAO,UAGXoZ,kBAAmB,CACjB7mB,MAAO,CACLkB,gBAAiB,WAEnB4lB,KAAM,CACJ9mB,MAAO,CACLkB,gBAAiB,cAKzB6lB,aAAc,CACZ7O,KAAM,CACJlY,MAAO,CACLkB,gBAAiB,QACjB8lB,aAAc,uBAGlBJ,KAAM,CACJK,WAAW,EACXjnB,MAAO,CACLkB,gBAAiB,UACjB0T,aAAc,EACdsS,UAAW,8B,ICxDfC,G,4MACJ3xB,MAAQ,CACNsN,WAAY,M,8FAEd,4BAAAzL,EAAA,sEAC2BgL,GAAaI,eAAe5C,KAAKL,MAAMtC,MAAMlC,KADxE,OACQ8H,EADR,OAEEjD,KAAKP,SAAS,CAAEwD,eAFlB,gD,6EAKA,WACE,OAAOjD,KAAKL,MAAMtC,MAAMxG,OAAOmL,KAAI,SAACqF,GAClC,OAAOA,EAAMuG,W,oBAIjB,WACE,IAAQ3K,EAAejD,KAAKrK,MAApBsN,WACA5F,EAAU2C,KAAKL,MAAftC,MAER,OADAxH,QAAQC,IAAI,aAAcmN,GACrBA,EAEH,uBAAK5C,UAAU,2CAAf,UACE,eAAC,IAAD,CAAMC,GAAE,iBAAYjD,EAAMlC,KAA1B,SACA,yBACEkF,UAAU,YADZ,SAGE,eAAC,KAAD,QAGF,uBAAKA,UAAU,0BAAf,UACE,uBAAKA,UAAU,2BAAf,UACE,iCACE,4CACA,gCAAO4C,EAAWskB,gBAEpB,oBAAGlnB,UAAU,oBAAb,SACE,eAAC,KAAD,SAGJ,uBAAKA,UAAU,2BAAf,UACE,iCACE,4CACA,gCAAO4C,EAAWukB,iBAEpB,oBAAGnnB,UAAU,oBAAb,SACE,eAAC,KAAD,SAGJ,uBAAKA,UAAU,2BAAf,UACE,iCACE,0CACA,gCAAOhD,EAAMzG,SAAWyG,EAAMzG,QAAQqC,SACtC,iCAAQoE,EAAMzG,SAAW,OAE3B,oBAAGyJ,UAAU,oBAAb,SACE,eAAC,KAAD,YAIN,uBAAKA,UAAU,cAAf,UACE,eAAC+kB,GAAD,CACE/kB,UAAU,QACVglB,kBAAmBpiB,EAAWoiB,kBAC9BC,aAActlB,KAAKynB,cAGrB,eAAC3B,GAAD,CACEzlB,UAAU,QACV0lB,iBAAkB9iB,EAAW8iB,iBAC7BT,aAActlB,KAAKynB,iBAGvB,eAACnB,GAAD,CAAmBC,MAAOtjB,EAAWsjB,WArDjB,eAAChhB,GAAD,Q,GAnBH1E,aAoFzB,IAEa6mB,GAAY1mB,aARzB,SAAyBrL,GACvB,MAAO,CACL0H,MAAO1H,EAAMsH,YAAY5G,aAIF,GAEF2K,CAGvBsmB,IC1EIK,G,4MACJhyB,MAAQ,CACNsmB,qBAAqB,EACrB2B,cAAc,EACdgK,gBAAiB,CACfC,WAAY,KACZrkB,QAAS,GACTmK,SAAU,K,EA2Bd/J,UAAY,SAACrG,EAAS7G,GACpB,EAAKiJ,MAAMiE,UAAUrG,EAAS7G,I,EAEhCumB,aAAe,SAACzZ,EAAS/F,GACvB,EAAKkC,MAAMG,QAAQC,KAAnB,UAA2B,EAAKJ,MAAMtC,MAAMlC,IAA5C,YAAmDqI,EAAnD,YAA8D/F,K,EAEhEygB,YAAc,SAAChhB,EAAQiG,GACrB,IAAM2kB,EAAe5qB,EAAOG,OAAS,EAAKsC,MAAMtC,MAChD,EAAKsC,MAAMoE,cAAc7G,EAAQ4qB,EAAc3kB,I,EAGjDwhB,kBAAoB,SAAC7W,GACfA,EACF,EAAKnO,MAAMG,QAAQC,KAAnB,UAA2B,EAAKJ,MAAMtC,MAAMlC,IAA5C,eAEA,EAAKwE,MAAMG,QAAQ2O,U,EAIvByO,oBAAsB,SAACR,GACrBA,EAAM/a,kBACN,EAAKlC,SAAS,CAAEwc,qBAAsB,EAAKtmB,MAAMsmB,uB,EAEnDe,wBAA0B,SAACN,EAAOnZ,EAAMC,GACtCkZ,EAAM/a,kBACN,IAAMgL,EAAgBpJ,EAAOmZ,EAAMqL,cAAcC,WAAa,KACxDra,EAAWpK,EAAOoJ,EAAcG,wBAA0B,GAChE,EAAKrN,SAAS,CAAEmoB,gBAAiB,CAAEC,WAAYtkB,EAAMC,UAASmK,e,EAEhE6O,mBAAqB,SAAC/a,EAAI+B,EAASD,GAEjC,GADA9B,EAAGE,mBACC4B,EAAKc,UAAT,CACA,IAAM4jB,EAAY,eAAQ1kB,GAC1B0kB,EAAavT,YAAcnR,EAAKmR,WAChC,IAAMvR,EAAW8kB,EAAavT,WAC1B,CACA/d,IAAKsL,KACLsB,KAAM0kB,EACNzkB,QAASA,GAET,CACA7M,IAAKsL,KACLsB,KAAM0kB,EACNzkB,QAASA,GAEb,EAAK7D,MAAMqF,aAAaijB,EAAczkB,EAAS,EAAK7D,MAAMtC,MAAO8F,K,EAEnE6Y,SAAW,SAAC9U,GAEV,OADc,EAAKvH,MAAMtC,MAAMxG,OAAOyG,MAAK,SAAC+J,GAAD,OAAWA,EAAMhE,KAAO6D,M,EAGrEghB,gBAAkB,SAACC,GACjB,IAAQC,EAA8BD,EAA9BC,YAAaC,EAAiBF,EAAjBE,OAAQjrB,EAAS+qB,EAAT/qB,KAC7B,GAAKgrB,EAAL,CACA,IAAMtd,EAAa,eAAQ,EAAKnL,MAAMtC,OAEtC,GAAa,UAATD,EAAkB,CAAC,IAAD,EACdkrB,EAAexd,EAAcvG,OAAOK,OAAOyjB,EAAOvL,MAAO,GAG/D,OAFA,EAAAhS,EAAcvG,QAAOK,OAArB,SAA4BwjB,EAAYtL,MAAO,GAA/C,mBAAqDwL,UACrD,EAAK3oB,MAAMoE,cAAc,CAAE3G,KAAM,IAAM0N,GAGzC,IAAMyd,EAAW,eACZzd,EAAcvG,OAAOjH,MAAK,SAACgH,GAAD,OAAWA,EAAMjB,KAAOglB,EAAO3J,gBAExDnb,EAAOglB,EAAY9jB,MAAMG,OAAOyjB,EAAOvL,MAAO,GAEpD,GAAIuL,EAAO3J,cAAgB0J,EAAY1J,YAAa,CAAC,IAAD,GAClD,EAAA6J,EAAY9jB,OAAMG,OAAlB,SAAyBwjB,EAAYtL,MAAO,GAA5C,mBAAkDvZ,KAClD,IAAMrG,EAAS,CAAEE,KAAM,eAAgBkH,MAAOikB,GAC9C,EAAK5oB,MAAMoE,cAAc7G,EAAQ4N,OAG9B,CAAC,IAAD,EACG0d,EAAgB,eACjB1d,EAAcvG,OAAOjH,MACtB,SAACgH,GAAD,OAAWA,EAAMjB,KAAO+kB,EAAY1J,gBAGpC8J,EAAiB/jB,OACnB,EAAA+jB,EAAiB/jB,OAAMG,OAAvB,SAA8BwjB,EAAYtL,MAAO,GAAjD,mBAAuDvZ,KACpDilB,EAAiB/jB,MAAQ,CAAClB,GAC/BuH,EAAcvG,OAASuG,EAAcvG,OAAOvC,KAAI,SAACoD,GAC/C,OAAIA,EAAU/B,KAAOglB,EAAO3J,YAAoB6J,EAC5CnjB,EAAU/B,KAAO+kB,EAAY1J,YAAoB8J,EAC9CpjB,KAET,EAAKzF,MAAMoE,cAAc,CAAE3G,KAAM,IAAM0N,M,EAG3C0Q,eAAiB,WACf,EAAK/b,SAAS,CAAEme,cAAe,EAAKjoB,MAAMioB,gB,EAE5CF,mBAAqB,SAACla,GACpB,IAAMilB,EAAa,eACd,EAAK9oB,MAAMtC,MAAMkH,OAAOjH,MAAK,SAACgH,GAAD,OAAWd,IAAYc,EAAMjB,OAE/DolB,EAAcpkB,WAAYokB,EAAcpkB,YACnCokB,EAAcpkB,UAEnB,IAAMlB,EAAW,CAAExM,IAAKsL,GAA2BwmB,EAAclnB,QAC3DrE,EAAS,CAAEE,KAAM,eAAgBkH,MAAOmkB,GAC9C,EAAK9oB,MAAMoE,cAAc7G,EAAQ,EAAKyC,MAAMtC,MAAO8F,I,8FA7HrD,qCAAA3L,EAAA,6DACU+F,EAAYyC,KAAKL,MAAM7K,MAAM6C,OAA7B4F,QACF7G,EAAWsJ,KAAKL,MAAM/K,SAASkqB,OACrCjpB,QAAQC,IAAI,uBAAwBY,GAHtC,SAIQsJ,KAAK4D,UAAUrG,EAAS7G,GAJhC,OAKEyB,EAAcS,KAAK,gBAAiB2E,GACpCpF,EAAcI,GAAG,gBAAgB,YAA2B,IAAxB2E,EAAuB,EAAvBA,OAAQiG,EAAe,EAAfA,SACpCulB,EAAcxrB,EAAOG,OAAS,EAAKsC,MAAMtC,MAC/C,EAAKsC,MAAMgpB,kBAAkBzrB,EAAQwrB,EAAavlB,MARtD,gD,6HAYA,WAAyB+U,GAAzB,iBAAA1gB,EAAA,yDACU+F,EAAYyC,KAAKL,MAAM7K,MAAM6C,OAA7B4F,QACF7G,EAAWsJ,KAAKL,MAAM/K,SAASkqB,OACjC5G,EAAUpjB,MAAM6C,OAAO4F,UAAYA,EAHzC,gCAIUyC,KAAK4D,UAAUrG,EAAS7G,GAJlC,gD,yFAQA,WACEsJ,KAAKL,MAAMipB,e,oBA2Gb,WAAU,IAAD,OACCvrB,EAAU2C,KAAKL,MAAftC,MACR,EAKI2C,KAAKrK,MAHPsmB,GAFF,EACE4M,gBADF,EAEE5M,qBACA2B,EAHF,EAGEA,aACAgK,EAJF,EAIEA,gBAEF,OAAKvqB,GACDA,EAAM6F,eAAerN,QAAQC,IAAI,QAASuH,GAE5C,uBAAKgD,UAAU,4BAAf,UACE,eAAC,KAAD,CAAOyoB,KAAK,4BAA4B3a,UAAWuZ,KACnD,eAAC,KAAD,CAAOoB,KAAK,mCAAmC3a,UAAW4M,KAE1D,eAAC8J,GAAD,CAAaF,kBAAmB3kB,KAAK2kB,kBAAmBzH,oBAAqBld,KAAKkd,oBAAqBV,mBAAoBxc,KAAKwc,mBAAoBP,oBAAqBA,EAAqBD,SAAUhc,KAAKgc,SAAUiB,aAAcjd,KAAKid,eAE1O,eAAC,KAAD,CAAiB8L,UAAW/oB,KAAKkoB,gBAAjC,SACE,0BAAS7nB,UAAU,4BAAnB,SACE,sBAAKA,UAAU,0BAAf,SACE,eAAC,KAAD,CACEqe,YAAarhB,EAAMlC,IACnB6tB,UAAU,aACV5rB,KAAK,QAHP,SAKG,SAACigB,EAAUkB,GAAX,OACC,iDACMlB,EAASsB,gBADf,IAEEnR,IAAK6P,EAASC,SACdjd,UAAU,OAHZ,UAKGhD,EAAMkH,QACL,eAACqa,GAAD,CACEra,OAAQlH,EAAMkH,OACd0Y,aAAc,EAAKA,aACnBiB,YAAa,EAAKA,YAClBhB,oBAAqB,EAAKA,oBAC1BjB,oBAAqBA,EACrBO,mBAAoB,EAAKA,mBACzBkB,mBAAoB,EAAKA,mBACzBV,wBAAyB,EAAKA,wBAC9BhB,SAAU,EAAKA,WAGlBqB,EAASxN,YAEV,uBAAKxP,UAAU,sBAAf,WACIud,GACA,0BACEvd,UAAU,sCACVE,QAAS,EAAKib,eAFhB,UAIE,oBAAGnb,UAAU,oBAAb,SACE,eAAC,KAAD,MAEF,kDAGHud,GACC,eAAChC,GAAD,CACEJ,eAAgB,EAAKA,eACrBpe,KAAM,0BAWvBwqB,EAAgBC,YACf,eAAC1C,GAAD,CACE1nB,OAAQmqB,EAAgBC,WAAWxkB,GACnCG,QAASokB,EAAgBpkB,QACzBmK,SAAUia,EAAgBja,SAC1BqO,SAAUhc,KAAKgc,SACfQ,mBAAoBxc,KAAKwc,mBACzBP,oBAAqBA,EACrBe,wBAAyBhd,KAAKgd,wBAC9BC,aAAcjd,KAAKid,eAGtB2K,EAAgBC,YACf,sBACEtnB,QAAS,SAACmc,GAAD,OAAW,EAAKM,wBAAwBN,EAAO,KAAM,KADhE,SAGE,eAACrX,GAAD,UAhFW,eAACE,GAAD,Q,GAnJK1E,aAuP5B,IAAMC,GAAqB,CACzB8C,aACAG,iBACA4kB,kBvE5EK,SAA2BzrB,EAAQG,EAAO8F,GAC7C,8CAAO,WAAMtE,GAAN,eAAArH,EAAA,sDACGiM,EAAcO,GAAiB9G,EAAQG,GAC7CwB,EAAS,CACLzB,KAAM,eACNC,MAAOoG,IAJR,2CAAP,uDuE4EFuB,gBACA4jB,WvE/OK,WAEH,OADA3oB,SAASC,KAAKC,MAAM0D,WAAa,QAC1B,SAAChF,GACJA,EAAS,CACLzB,KAAM,iBACNC,MAAO,UuE6ON4rB,GAAejoB,aAb5B,SAAyBrL,GACvB,MAAO,CACL0H,MAAO1H,EAAMsH,YAAY5G,aAa3ByK,GAF0BE,CAG1B2mB,I,mBC7Ra,OAA0B,4CCA1B,OAA0B,2CCcnCuB,G,4MAEFvzB,MAAQ,CACJoJ,YAAa,CACTa,SAAU,GACVC,SAAU,GACVzE,SAAU,IAEd+tB,SAAU,M,EASdC,SAAW,SAAC5D,GACR,IAAM6D,EAAS,GAcf,OAbK7D,EAAO5lB,SAED4lB,EAAO5lB,SAAS3G,OAAS,IAChCowB,EAAOzpB,SAAW,oCAFlBypB,EAAOzpB,SAAW,WAIlB4lB,EAAO3lB,SAAS5G,OAAS,IACzBowB,EAAOxpB,SAAW,yBAEjB2lB,EAAOpqB,SAEDoqB,EAAOpqB,SAASnC,OAAS,IAChCowB,EAAOjuB,SAAW,oCAFlBiuB,EAAOjuB,SAAW,WAIfiuB,G,EAGXC,gBAAkB,SAAC1xB,GACf,IAAQwE,EAAYxE,EAAZwE,SAERmtB,EAD0B,EAAK5pB,MAAvB4pB,eACMntB,GACd,EAAKuD,MAAMG,QAAQC,KAAK,W,EAG5BypB,gBAAkB,SAAC5xB,GACf/B,QAAQC,IAAI,2BAA4B8B,I,EAG5C2Z,SAAW,SAACiU,GACR,IAAQ2D,EAAa,EAAKxzB,MAAlBwzB,SACR,EAA8B,EAAKxpB,MAA3Bb,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,SACJ,UAAbmqB,EAAuBrqB,EAAQ0mB,GAAUxmB,EAASwmB,GAClD,EAAK7lB,MAAMG,QAAQC,KAAK,W,8FAvC5B,4BAAAvI,EAAA,sEACUwI,KAAKL,MAAMf,YADrB,OAEUuqB,EAA4C,WAAjCnpB,KAAKL,MAAM/K,SAASmsB,SAAwB,QAAU,SACvE/gB,KAAKP,SAAS,CAAE0pB,aAHpB,gD,0EA0CA,WACI,MAAkCnpB,KAAKrK,MAA/BoJ,EAAR,EAAQA,YAAaoqB,EAArB,EAAqBA,SACrB,OACI,2BAAS9oB,UAAU,mCAAnB,UACI,uBAAKA,UAAU,sBAAf,UACI,eAAC,KAAD,IACA,qBAAIA,UAAU,YAAd,2BAEU,UAAb8oB,GAAwB,uBAAK9oB,UAAU,2BAAf,UACrB,uDACA,eAAC,KAAD,CAAQopB,cAAe1qB,EAAawS,SAAUvR,KAAKuR,SAAnD,SACI,gBAAC,KAAD,CAAMlR,UAAU,yBAAhB,UACI,eAAC,KAAD,CAAOjD,KAAK,WAAWyS,YAAY,kBAAkBpF,KAAK,WAAWS,WAAS,IAC9E,eAAC,KAAD,CAAcT,KAAK,WAAW0D,UAAU,QACxC,eAAC,KAAD,CAAO/Q,KAAK,WAAWyS,YAAY,iBAAiBpF,KAAK,WAAWif,aAAa,QACjF,eAAC,KAAD,CAAcjf,KAAK,WAAW0D,UAAU,QACxC,yBAAQ/Q,KAAK,SAASiD,UAAU,8BAA8BF,MAAO,CAACyN,MAAO,WAA7E,yBARa,KAYrB,wBACA,eAAC,eAAD,CACIvN,UAAU,oDACVspB,SAAS,2EACTC,WAAW,uBACX5zB,UAAWgK,KAAKspB,gBAChBO,UAAW7pB,KAAKwpB,gBAChBM,aAAc,uBAElB,eAAC,IAAD,CAAMxpB,GAAG,UAAT,uCAEU,WAAb6oB,GACG,uBAAK9oB,UAAU,2BAAf,UACI,2DACA,eAAC,KAAD,CAAQopB,cAAe1qB,EAAagrB,kBAAkB,EAAOC,gBAAgB,EAAOZ,SAAUppB,KAAKopB,SAAU7X,SAAUvR,KAAKuR,SAA5H,SACI,gBAAC,KAAD,CAAMlR,UAAU,cAAhB,UACI,eAAC,KAAD,CAAOjD,KAAK,WAAWyS,YAAY,kBAAkBpF,KAAK,WAAWS,WAAS,IAC9E,eAAC,KAAD,CAAcT,KAAK,WAAW0D,UAAU,MACxC,eAAC,KAAD,CAAO/Q,KAAK,WAAWyS,YAAY,kBAAkBpF,KAAK,aAC1D,eAAC,KAAD,CAAcA,KAAK,WAAW0D,UAAU,MACxC,eAAC,KAAD,CAAO/Q,KAAK,WAAWyS,YAAY,iBAAiBpF,KAAK,aACzD,eAAC,KAAD,CAAcA,KAAK,WAAW0D,UAAU,MACxC,yBAAQ/Q,KAAK,SAASiD,UAAU,8BAA8BF,MAAO,CAACyN,MAAO,WAA7E,0BAGR,eAAC,IAAD,CAAMtN,GAAG,SAAT,iDAER,sBAAKD,UAAU,YAAf,SACI,sBAAKG,IAAKypB,GAAUvpB,IAAI,gBAE5B,sBAAKL,UAAU,WAAf,SACI,sBAAKG,IAAK0pB,GAASxpB,IAAI,sB,GAxGhBE,IAAMC,WAqHjC,IAAMC,GAAqB,CACvBlC,aACAE,WACAE,YACAuqB,clF3FG,SAAuBntB,GAC1B,8CAAO,WAAOyC,GAAP,eAAArH,EAAA,+EAEoBoD,EAAYc,YAAYU,GAF5C,OAEOJ,EAFP,OAGC6C,EAAS,CACLzB,KAAM,WACNpB,SALL,gDAQCnG,QAAQC,IAAI,eAAZ,MARD,yDAAP,wDkF6FSq0B,GAAcnpB,aAb3B,SAAyBrL,GACrB,MAAO,CACHqG,KAAMrG,EAAM+H,WAAW1B,QAWqB8E,GAAzBE,CAA6CkoB,IC9GzDkB,GAtBA,CAAC,CACRtB,KAAM,kBACN3a,UAAW8a,IAEf,CACIH,KAAM,SACN3a,UAAWpI,IAEf,CACI+iB,KAAM,SACN3a,UAAWgc,IAEf,CACIrB,KAAM,UACN3a,UAAWgc,IAEf,CACIrB,KAAM,IACN3a,UAAWpN,KCjBbspB,G,4MACF10B,MAAQ,CACJ4L,MAAO,GACPpB,MAAO,CACH9E,OAAQ,kHAEZivB,aAAc,G,EAGlB5e,UAAY9K,IAAM2V,Y,EAYlB/J,YAAc,SAAC/K,GACP,EAAKiK,UAAUU,QAAQQ,SAASnL,EAAG+I,SAMvC,EAAK7K,MAAMsK,W,EAGfM,aAAe,SAAC9I,GACZ,IAAMyd,EAAQzd,EAAG+I,OAAOC,KAClBlE,EAAQ9E,EAAG+I,OAAOjE,MACxB,EAAK9G,SAAL,2BAAmB,EAAK9J,OAAxB,mBAAgCupB,EAAQ3Y,M,EAG5CgkB,YAAc,SAAC9oB,EAAIqF,GACfrF,EAAGC,iBACH,IAAM8oB,EAAS/oB,EAAG+I,OAAOigB,aAAa,OACtC,EAAKhrB,SAAL,2BAAmB,EAAK9J,OAAxB,IAA+BwK,MAAO,CAAE9E,OAAQmvB,GAAUF,aAAcxjB,M,EAG5E4jB,S,uCAAW,WAAOjpB,GAAP,eAAAjK,EAAA,yDACPiK,EAAGC,iBACE,EAAK/L,MAAM4L,MAFT,iEAGkB,EAAK5B,MAAMgrB,WAAW,EAAKh1B,OAH7C,OAGDgO,EAHC,OAIP,EAAKhE,MAAMG,QAAQC,KAAnB,iBAAkC4D,EAAWxI,MAC7C,EAAKwE,MAAMsE,gBAAe,GALnB,2C,6GAhCX,WACIhE,SAAS1B,iBAAiB,YAAayB,KAAKwM,e,kCAIhD,WACIvM,SAASzB,oBAAoB,YAAawB,KAAKwM,aAC/CxM,KAAKL,MAAMsE,gBAAe,K,oBAiC9B,WAAU,IAAD,OACC2mB,EAAS,CAAC,kHACZ,+GACA,iHACA,+GACA,iHACA,iHACA,iHACA,iHACA,kHACJ,EAAgC5qB,KAAKrK,MAA7B4L,EAAR,EAAQA,MAAO+oB,EAAf,EAAeA,aACf,OACI,uBAAKjqB,UAAU,YAAYmN,IAAKxN,KAAK0L,UAArC,UACI,wBAAMrL,UAAU,iBAAiBkR,SAAUvR,KAAK0qB,SAAUvqB,MAAO,CAAC0D,WAAY,UAAWvC,gBAAgB,OAAD,OAASspB,EAAON,GAAhB,MAAxG,UACI,wBAAOpf,WAAS,EAAC7K,UAAS,4BAAwBkB,EAAS,UAAY,IAAMmoB,aAAa,MAAMtsB,KAAK,OAAOyS,YAAY,kBAAkBpF,KAAK,QAAQlE,MAAOhF,EAAOoJ,SAAU3K,KAAKuK,eACpL,yBAAQlK,UAAS,qBAAiBkB,EAAS,YAAc,IAAMnE,KAAK,SAApE,6BAEJ,sBAAKiD,UAAU,mBAAf,SACKuqB,EAAO5oB,KAAI,SAAC6oB,EAAO/jB,GAAR,OACR,yBAAQzG,UAAS,kBAAcyG,IAAQwjB,EAAgB,SAAW,IAAgB/pB,QAAS,SAACkB,GAAD,OAAQ,EAAK8oB,YAAY9oB,EAAIqF,IAAxH,SACI,sBAAKzG,UAAU,gBAAgBG,IAAKqqB,EAAOnqB,IAAKmqB,KADyB/jB,e,GAtE7ElG,IAAMC,WAqF9B,IAAMC,GAAqB,CACvB6pB,W5ETG,SAAoBttB,GACvB,8CAAO,WAAMwB,GAAN,eAAArH,EAAA,+EAE0BgL,GAAaE,KAAKrF,GAF5C,cAEOytB,EAFP,OAGCj1B,QAAQC,IAAI,cAAeg1B,GAC3BjsB,EAAS,CACLzB,KAAM,YACNC,MAAOytB,IAEX3yB,EAAcS,KAAK,UAAU,GAR9B,kBASQkyB,GATR,kCAWCj1B,QAAQC,IAAI,mBAAZ,MAXD,0DAAP,uD4ESAmO,mBAEE8mB,GAAsBhJ,aAAWsI,IAC1BW,GAAWhqB,aAVxB,SAAyBrL,GACrB,MAAO,CACHa,cAAeb,EAAMsH,YAAYzG,iBAQQsK,GAAzBE,CAA6C+pB,ICzF/DE,G,4MACFC,aAAe,WACX,EAAKvrB,MAAMG,QAAQC,KAAK,UACxB,EAAKJ,MAAMT,Y,4CAGf,WAAU,IAAD,OAEL,OACI,uBAAKmB,UAAU,wBAAf,UAEI,uBAAKA,UAAU,YAAf,UACI,eAAC4O,GAAD,CAAcxV,KAAK,KAAKyL,OAAQlF,KAAKL,MAAM3D,OAC3C,iCACI,qBAAIqE,UAAU,qBAAd,SAAoCL,KAAKL,MAAM3D,KAAKZ,WACpD,6BAAI4E,KAAKL,MAAM3D,KAAK4D,iBAI5B,oBAAGS,UAAU,gBAAgBE,QAAS,kBAAM,EAAK2qB,gBAAjD,4B,GAnBYtqB,IAAMC,WA+BlC,IAAMC,GAAqB,CACvB5B,aAEEisB,GAA0BpJ,aAAWkJ,IAC9BG,GAAepqB,aAV5B,SAAyBrL,GACrB,MAAO,CACHqG,KAAMrG,EAAM+H,WAAW1B,QAQsB8E,GAAzBE,CAA6CmqB,ICpCnEE,G,4MAEFC,WAAa,SAACC,GACV,IAAQvvB,EAAS,EAAK2D,MAAd3D,KACFwvB,EAAiBxvB,EAAKK,SAASqI,WAAU,SAAA7I,GAAO,OAAIA,EAAQwH,KAAOkoB,KACzEvvB,EAAKK,SAASuI,OAAO4mB,EAAgB,GACrC,EAAK7rB,MAAMR,aAAanD,I,4CAG5B,WAAU,IAAD,OACGA,EAASgE,KAAKL,MAAd3D,KACR,OACI,0BAASqE,UAAU,gBAAnB,SACMrE,EAAKK,UAAYL,EAAKK,SAASpD,OAAS,EAAK+C,EAAKK,SAAS2F,KAAI,SAACnG,EAASiL,GAAV,OAC7D,uBAAsBzG,UAAU,gBAAhC,UACI,uBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,sBAAf,SACI,eAAC4O,GAAD,CAAc/J,OAAQrJ,EAAQG,SAElC,+BAAG,uBAAMqE,UAAU,WAAhB,SAA4BxE,EAAQG,KAAKZ,WAA5C,QAAkES,EAAQqB,OAA1E,QAA2G,YAAnBrB,EAAQqB,OAAwB,OAAS,KAAjI,SAA4I,eAAC,IAAD,CAAMoD,GAAE,iBAAYzE,EAAQwB,MAAME,QAA1B,YAAqC1B,EAAQ2H,QAA7C,YAAwD3H,EAAQ0H,KAAK9F,QAA7E,SAAuF,wBAAM4C,UAAU,aAAhB,cAA+BxE,EAAQ0H,KAAKhC,MAA5C,SAAnO,aAA+S,eAAC,IAAD,CAAMjB,GAAE,iBAAYzE,EAAQwB,MAAME,SAAlC,SAA6C,uBAAM8C,UAAU,cAAhB,SAA+BxE,EAAQwB,MAAMkE,gBAG7Y,uBAAKlB,UAAU,sBAAf,UACI,eAAC,KAAD,CAAQA,UAAU,oBAAoB4Y,SAAO,EAA7C,SAA+Cpd,EAAQ6T,YACvD,wBAAOnP,QAAS,kBAAM,EAAK+qB,WAAWzvB,EAAQwH,KAA9C,+BAVExH,EAAQwH,OAalB,8D,GA3BSzC,IAAMC,WAsCnC,IAAMC,GAAqB,CACvB3B,iBAGSssB,GAAgBzqB,aAT7B,SAAyBrL,GACrB,MAAO,CACHqG,KAAMrG,EAAM+H,WAAW1B,QAOuB8E,GAAzBE,CAA6CqqB,ICpBpEK,G,4MACJ/1B,MAAQ,CAENg2B,mBAAmB,EACnBC,2BAA2B,G,EAG7BC,YAAcjrB,IAAM2V,Y,EACpBuV,iBAAmBlrB,IAAM2V,Y,EAkBzBrX,SAAW,WACT,EAAKS,MAAMT,Y,EAGb4C,YAAc,SAACyE,GACb,EAAK5G,MAAMsE,eAAesC,I,EAG5BpF,WAAa,WACKlB,SAAS2F,eAAe,WAChCC,KAAO,4B,EAGjBkmB,kBAAoB,SAAC1vB,GACnB,IAAI2vB,EAAQ,EAMZ,OALI3vB,GACFA,EAASggB,SAAQ,SAACxgB,GACXA,EAAQowB,QAAQD,OAGlBA,G,EAGTE,sBAAwB,WAEtB,IAAQlwB,EAAS,EAAK2D,MAAd3D,KACaA,EAAbK,SACCggB,SAAQ,SAACxgB,GAChBA,EAAQowB,QAAS,KAEnB,EAAKtsB,MAAMR,aAAanD,GACxB,EAAKyD,SAAS,CAAEmsB,2BAA4B,EAAKj2B,MAAMi2B,6B,uDA/CzD,WACEzzB,EAAcI,GAAG,mBAAoByH,KAAKL,MAAMwsB,oB,gCAGlD,SAAmBjU,GACjB,GAAIlY,KAAKL,MAAM3D,OAASkc,EAAUlc,KAAM,CACtC,IAAQA,EAASgE,KAAKL,MAAd3D,KACR7D,EAAcS,KAAK,kBAAmBoD,EAAKb,Q,kCAI/C,WACEhD,EAAcO,IAAI,mBAAoBsH,KAAKL,MAAMwsB,oB,oBAsCnD,WAAU,IAAD,OACP,EAAgCnsB,KAAKL,MAA7B3D,EAAR,EAAQA,KAAMxF,EAAd,EAAcA,cACd,EAAyDwJ,KAAKrK,MAAtDg2B,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,0BAC3B,OAAK5vB,EAEH,0BAAQqE,UAAU,aAAlB,UACE,uBAAKA,UAAU,YAAf,UACE,uBAAKA,UAAU,aAAf,UACE,eAAC,IAAD,CAASC,GAAG,IAAZ,SACE,yBACEC,QAAS,kBAAM,EAAKY,cACpBd,UAAU,sBAFZ,SAIE,eAAC,KAAD,QAGJ,eAAC,IAAD,CAASC,GAAG,SAAZ,SACE,0BACEC,QAAS,kBAAM,EAAKY,cACpBd,UAAU,6BAFZ,UAIE,eAAC,KAAD,IAJF,IAIe,mDAInB,gBAAC,IAAD,CAASA,UAAU,OAAOC,GAAG,IAA7B,UACE,eAAC,KAAD,IADF,IACe,oDAEf,uBAAKD,UAAU,cAAf,UACE,yBACEA,UAAU,aACVE,QAAS,kBAAM,EAAKuB,aAAY,IAFlC,SAIE,eAAC,KAAD,MAEF,uBAAKzB,UAAU,eAAemN,IAAKxN,KAAK8rB,iBAAxC,UACE,yBACEvrB,QAASP,KAAKksB,sBACd7rB,UAAU,aACVF,MAAO,CACLkB,gBAAiBrB,KAAK+rB,kBAAkB/vB,EAAKK,UACzC,UACA,IANR,SASE,eAAC,KAAD,MAEDuvB,GACC,eAACtgB,GAAD,CACErB,QAAS,kBAAM,EAAKxK,SAAS,CAAEmsB,2BAA2B,KAC1DrqB,MAAM,gBACNiM,IAAKxN,KAAK8rB,iBAHZ,SAKE,eAACL,GAAD,SAIN,uBAAKprB,UAAU,eAAemN,IAAKxN,KAAK6rB,YAAxC,UACE,yBAAQxrB,UAAU,WAChBE,QAAS,kBAAM,EAAKd,SAAS,CAAEksB,mBAAoBA,KADrD,SAGE,eAAC1c,GAAD,CAA6B/J,OAAQlJ,GAAlBA,EAAKb,OAEzBwwB,GACC,eAACrgB,GAAD,CACErB,QAAS,kBAAM,EAAKxK,SAAS,CAAEksB,mBAAmB,KAClDpqB,MAAM,eACNiM,IAAKxN,KAAK6rB,YAHZ,SAKE,eAACT,GAAD,CAAclmB,OAAQlJ,EAAMkD,SAAUc,KAAKd,sBAMpD1I,GAAiB,eAACw0B,GAAD,CAAU/gB,QAAS,kBAAM,EAAKnI,aAAY,MAC3DtL,GAAiB,eAAC6O,GAAD,OAzEJ,eAACE,GAAD,Q,GA/DG3E,IAAMC,WAqJ/B,IAAMC,GAAqB,CACzBhC,WACAE,YACAE,YACAN,aACAwtB,WvFpKK,SAAoBxwB,GACvB,8CAAO,WAAMiD,GAAN,SAAArH,EAAA,+EAEOoD,EAAY+H,OAAO/G,GAF1B,OAGCiD,EAAS,CAAEzB,KAAM,cAAexB,WAHjC,+CAKC/F,QAAQC,IAAI,iCAAZ,MALD,wDAAP,uDuFoKFmO,kBACAkoB,iBvFhFK,SAA0BtwB,GAC7B,8CAAO,WAAOgD,GAAP,SAAArH,EAAA,sDACHoD,EAAYkB,oBAAoBD,GAChCgD,EAAS,CACLzB,KAAM,cACNvB,YAJD,2CAAP,uDuFgFFsD,iBAGWktB,GAAYrrB,aAlBzB,SAAyBrL,GACvB,MAAO,CACL0H,MAAO1H,EAAMsH,YAAY5G,UACzB2F,KAAMrG,EAAM+H,WAAW1B,KACvBxF,cAAeb,EAAMsH,YAAYzG,iBAgBnCsK,GAFuBE,CAGvB0qB,ICxLIY,G,iKAEF,WACI,IAAQvL,EAAa/gB,KAAKL,MAAM/K,SAAxBmsB,SACR,OAAQA,EAAS/Q,SAAS,UAAY+Q,EAAS/Q,SAAS,Y,oBAG5D,WACI,OACI,uBAAK3P,UAAU,kBAAf,UACKL,KAAKusB,eACF,eAACF,GAAD,IAEJ,uBAAMhsB,UAAU,WAAhB,SACI,eAAC,KAAD,UACK+pB,GAAOpoB,KAAI,SAAAwqB,GAAK,OAAI,eAAC,KAAD,CAAwBre,UAAWqe,EAAMre,UAAW2a,KAAM0D,EAAM1D,MAApD0D,EAAM1D,oB,GAfxCloB,IAAMC,WA6B7B,IAAM4rB,GAAqB1K,aAAWuK,IACzBI,GAAU1rB,aAPvB,SAAyBrL,GACrB,MAAO,CACH0H,MAAO1H,EAAMsH,YAAY5G,aAKV2K,CAAyByrB,I,OC1BhDE,IAASC,OACP,gBAAC,IAAMC,WAAP,WACE,gBAAC,IAAD,CAAU9uB,MAAOA,EAAjB,UACE,eAAC,IAAD,UACE,eAAC2uB,GAAD,MACQ,OACA,OAEdzsB,SAAS2F,eAAe,SrGAnB,SAAkB3Q,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI43B,IAAIC,GAAwBp4B,OAAOC,SAASiR,MACpDmnB,SAAWr4B,OAAOC,SAASo4B,OAIvC,OAGFr4B,OAAO4J,iBAAiB,QAAQ,WAC9B,IAAMvJ,EAAK,UAAM+3B,GAAN,sBAEPt4B,IAgEV,SAAiCO,EAAOC,GAEtC8c,MAAM/c,EAAO,CACXi4B,QAAS,CAAE,iBAAkB,YAE5B53B,MAAK,SAACyC,GAEL,IAAMo1B,EAAcp1B,EAASm1B,QAAQzN,IAAI,gBAEnB,MAApB1nB,EAASC,QACO,MAAfm1B,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5Cj4B,UAAUC,cAAci4B,MAAM/3B,MAAK,SAACC,GAClCA,EAAa+3B,aAAah4B,MAAK,WAC7BV,OAAOC,SAAS04B,eAKpBv4B,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFVy3B,CAAwBv4B,EAAOC,GAI/BC,UAAUC,cAAci4B,MAAM/3B,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OqGzB/Bu4B,K","file":"static/js/main.bcb7189b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    boards: [],\r\n    currBoard: null,\r\n    filteredBoard: null,\r\n    lastRemovedBoard: null,\r\n    isAddingBoard: false,\r\n    currCardId: null,\r\n    filterBy: {\r\n        txt: '',\r\n        members: [],\r\n        labels: []\r\n    }\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    var newState = state\r\n    var boards\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            newState = { ...state, boards: action.boards }\r\n            break\r\n        case 'UPDATE_FILTER':\r\n            newState = {...state, filterBy: action.filterBy }\r\n            break\r\n        case 'SET_CURR_BOARD':\r\n            newState = { ...state, currBoard: action.board }\r\n            break\r\n        case 'SET_FILTERED_BOARD':\r\n            newState = { ...state, filteredBoard: action.board }\r\n            break\r\n        case 'REMOVE_BOARD':\r\n            const lastRemovedBoard = state.boards.find(board => board._id === action.boardId)\r\n            boards = state.boards.filter(board => board._id !== action.boardId)\r\n            newState = { ...state, boards, lastRemovedBoard }\r\n            break\r\n        case 'SET_ADDING_BOARD':\r\n            newState = { ...state, isAddingBoard: action.isAddingBoard }\r\n            break\r\n        case 'ADD_BOARD':\r\n            newState = { ...state, boards: [...state.boards, action.board] }\r\n            break\r\n        case 'UPDATE_BOARD':\r\n            // boards = state.boards.map(board => (board._id === action.board._id) ? action.board : board)\r\n            newState = { ...state, currBoard: action.board }\r\n            break\r\n        case 'SET_CARD_ID':\r\n            newState = { ...state, currCardId: action.cardId }\r\n            break\r\n        case 'UNDO_REMOVE_BOARD':\r\n            if (state.lastRemovedBoard) {\r\n                newState = { ...state, boards: [...state.boards, state.lastRemovedBoard], lastRemovedBoard: null }\r\n            }\r\n            break\r\n        default:\r\n    }\r\n    return newState\r\n\r\n}","export const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    postMany,\r\n    dashboardQuery\r\n}\r\n\r\n\r\nconst gBoards = require('../data/board.json');\r\nconst gUsers = require('../data/user.json');\r\n\r\nfunction query(entityType, delay = 500) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType))\r\n    if (!entities) {\r\n        entities = (entityType === 'board') ? gBoards : gUsers;\r\n        _save(entityType, entities)\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                // reject('OOOOPs')\r\n                resolve(entities)\r\n            }, delay)\r\n        })\r\n        // return Promise.resolve(entities)\r\n}\r\n\r\nasync function dashboardQuery(entityType, entityId, delay = 500) {\r\n    const boards = await query(entityType)\r\n    const board = boards.find(board => board._id === entityId)\r\n    const chartsData = {\r\n        groupsCount: 0,\r\n        cardsCount: 0,\r\n        tasksPerMemberMap: {},\r\n        tasksPerLabelMap: {}\r\n    };\r\n    if (board.members) {\r\n        board.members.forEach(member => {\r\n            chartsData.tasksPerMemberMap[member.fullname] = 0\r\n        })\r\n    }\r\n    if (board.labels) {\r\n        board.labels.forEach(label => {\r\n            chartsData.tasksPerLabelMap[label.title] = 0\r\n        })\r\n    }\r\n\r\n    if (board.groups) {\r\n        board.groups.forEach(group => {\r\n            if (!group.isArchive) {\r\n                chartsData.groupsCount = chartsData.groupsCount + 1\r\n                group.cards.forEach(card => {\r\n                    if (!card.isArchive) chartsData.cardsCount = chartsData.cardsCount + 1\r\n                    if (card.members) {\r\n                        card.members.forEach(member => {\r\n                            chartsData.tasksPerMemberMap[member.fullname]++;\r\n                        })\r\n                    }\r\n                    if (card.labelIds) {\r\n                        card.labelIds.forEach(labelId => {\r\n                            const label = _getLabel(board.labels, labelId);\r\n                            chartsData.tasksPerLabelMap[label.title]++\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(chartsData)\r\n        }, delay)\r\n    })\r\n}\r\n\r\n// function queryUsers(entityType, delay = 500) {\r\n//     var entities = JSON.parse(localStorage.getItem(entityType)) || gUsers;\r\n\r\n//     return new Promise((resolve, reject) => {\r\n//             setTimeout(() => {\r\n//                 // reject('OOOOPs')\r\n//                 resolve(entities)\r\n//             }, delay)\r\n//         })\r\n//         // return Promise.resolve(entities)\r\n// }\r\n\r\n\r\nfunction get(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => entities.find(entity => entity._id === entityId))\r\n}\r\n\r\nfunction post(entityType, newEntity) {\r\n    newEntity._id = _makeId()\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.push(newEntity)\r\n            _save(entityType, entities)\r\n            return newEntity\r\n        })\r\n}\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n            entities.splice(idx, 1, updatedEntity)\r\n            _save(entityType, entities)\r\n            return updatedEntity\r\n        })\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === entityId)\r\n            entities.splice(idx, 1)\r\n            _save(entityType, entities)\r\n        })\r\n}\r\n\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}\r\n\r\nfunction postMany(entityType, newEntities) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            newEntities = newEntities.map(entity => ({...entity, _id: _makeId() }))\r\n            entities.push(...newEntities)\r\n            _save(entityType, entities)\r\n            return entities\r\n        })\r\n}\r\n\r\nfunction _getLabel(labels, labelId) {\r\n    const label = labels.find((label) => label.id === labelId);\r\n    return label;\r\n};","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n  ? '/api/'\r\n : '//localhost:3030/api/'\r\n\r\n// const BASE_URL = '/api/'\r\n// console.log(process.env.NODE_ENV);\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            sessionStorage.clear();\r\n            window.location.assign('/')\r\n        }\r\n        throw err\r\n    }\r\n}","import io from 'socket.io-client'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n// var socketIsReady = false;\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb=null) {\r\n      if (!socket) return;\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\n// function createDummySocketService() {\r\n//   var listenersMap = {}\r\n//   const socketService = {\r\n//     listenersMap,\r\n//     setup() {\r\n//       listenersMap = {}\r\n//     },\r\n//     terminate() {\r\n//       this.setup()\r\n//     },\r\n//     on(eventName, cb) {\r\n//       listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n//     },\r\n//     off(eventName, cb) {\r\n//       if (!listenersMap[eventName]) return\r\n//       if (!cb) delete listenersMap[eventName]\r\n//       else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n//     },\r\n//     emit(eventName, data) {\r\n//       if (!listenersMap[eventName]) return\r\n//       listenersMap[eventName].forEach(listener => {\r\n//         listener(data)\r\n//       })\r\n//     },\r\n//     debugMsg() {\r\n//       this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n//     },\r\n//   }\r\n//   window.listenersMap = listenersMap;\r\n//   return socketService\r\n// }\r\n\r\n\r\n// // Basic Tests\r\n// // function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\r\n// // socketService.on('baba', cb)\r\n// // socketService.on('baba', cb)\r\n// // socketService.on('baba', cb)\r\n// // socketService.on('mama', cb)\r\n// // socketService.emit('baba', 'Puk')\r\n// // socketService.off('baba', cb)\r\n\r\n\r\n// socketService.on(SOCKET_EVENT_REVIEW_ABOUT_YOU, review => {\r\n//   console.log('Review about me!', review);\r\n  \r\n// })\r\n\r\n","export const utilService = {\r\n    makeId,\r\n    makeLorem,\r\n    getRandomIntInclusive,\r\n    delay,\r\n    debounce\r\n    // handleChange\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction debounce(func, timeout = 300){\r\n    let timer;\r\n    return (...args) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => { func.apply(this, args); }, timeout);\r\n    };\r\n  }\r\n\r\nfunction makeLorem(size = 100) {\r\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn'];\r\n    var txt = '';\r\n    while (size > 0) {\r\n        size--;\r\n        txt += words[Math.floor(Math.random() * words.length)] + ' ';\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\n// function handleChange({ target: { name, value, type } }) {\r\n//     this.setState(prevState => ({ ...prevState, [name]: value }))\r\n// }\r\n\r\n","import { storageService } from './async-storage.service'\r\nimport { httpService } from './http.service'\r\nimport { socketService, SOCKET_EVENT_USER_UPDATED } from './socket.service'\r\nimport { utilService } from './util.service';\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\r\nvar gWatchedUser = null;\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedinUser,\r\n    getMiniUser,\r\n    getUsers,\r\n    getById,\r\n    // remove,\r\n    update,\r\n    getGueastUser,\r\n    googleLogin,\r\n    addUserMention,\r\n    addMentionToStorage\r\n}\r\n\r\nwindow.userService = userService\r\n\r\n\r\nasync function getUsers() {\r\n    // const users = storageService.query('user')\r\n    // return users\r\n    const users = await httpService.get(`user`)\r\n    return users\r\n}\r\n\r\nasync function getById(userId) {\r\n    // const user = await storageService.get('user', userId)\r\n    const user = await httpService.get(`user/${userId}`)\r\n    gWatchedUser = user;\r\n    return user;\r\n}\r\n\r\n// function remove(userId) {\r\n//     return storageService.remove('user', userId)\r\n//         // return httpService.delete(`user/${userId}`)\r\n// }\r\n\r\nasync function update(user) {\r\n    // await storageService.put('user', user)\r\n    const updatedUser = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(updatedUser)\r\n    return updatedUser;\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // console.log('users: ', users)\r\n    // const user = users.find(user => user.username.toLocaleLowerCase() === userCred.username.toLocaleLowerCase())\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    // socketService.emit('set-user-socket', user._id);\r\n    if (user) return _saveLocalUser(user)\r\n}\r\n\r\nasync function googleLogin(tokenId) {\r\n    try {\r\n        const user = await httpService.post('auth/googlelogin', { tokenId })\r\n        if (user) return _saveLocalUser(user)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    userCred.imgUrl = ''\r\n    userCred.mentions = []\r\n    userCred.boards = []\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    // socketService.emit('set-user-socket', user._id);\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\r\n    // socketService.emit('unset-user-socket');\r\n    // return await httpService.post('auth/logout')\r\n}\r\n\r\nasync function addMentionToStorage(mention) {\r\n    const user = userService.getLoggedinUser()\r\n    user.mentions.unshift(mention)\r\n    _saveLocalUser(user)\r\n}\r\n\r\n\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    const loggedinUser = JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER) || 'null')\r\n    return loggedinUser\r\n}\r\n\r\nfunction getMiniUser() {\r\n    const fullUser = getLoggedinUser() || { _id: utilService.makeId(), fullname: 'Guest' }\r\n    return { _id: fullUser._id, fullname: fullUser.fullname, imgUrl: fullUser.imgUrl }\r\n}\r\n\r\nfunction getGueastUser() {\r\n    return { _id: utilService.makeId(), fullname: 'Guest' }\r\n}\r\n\r\nfunction addUserMention(userId, mention) {\r\n    httpService.put(`user/${userId}/mention`, mention)\r\n}\r\n\r\n\r\n// (async () => {\r\n//     await login({ username: 'morty@smith.com' })\r\n// })();\r\n\r\n//     await userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 10000, isAdmin: true})\r\n//     await userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 10000})\r\n\r\n\r\n\r\n// This IIFE functions for Dev purposes \r\n// It allows testing of real time updates (such as sockets) by listening to storage events\r\n// (async () => {\r\n//     var user = getLoggedinUser()\r\n//     // Dev Helper: Listens to when localStorage changes in OTHER browser\r\n\r\n//     // Here we are listening to changes for the watched user (comming from other browsers)\r\n//     window.addEventListener('storage', async () => {\r\n//         if (!gWatchedUser) return;\r\n//         const freshUsers = await storageService.query('user')\r\n//         const watchedUser = freshUsers.find(u => u._id === gWatchedUser._id)\r\n//         if (!watchedUser) return;\r\n//         if (gWatchedUser.score !== watchedUser.score) {\r\n//             console.log('Watched user score changed - localStorage updated from another browser')\r\n//             socketService.emit(SOCKET_EVENT_USER_UPDATED, watchedUser)\r\n//         }\r\n//         gWatchedUser = watchedUser\r\n//     })\r\n// })();\r\n\r\n// This is relevant when backend is connected\r\n(async () => {\r\n    var user = getLoggedinUser()\r\n    if (user) socketService.emit('set-user-socket', user._id)\r\n})();","import { userService } from '../services/user.service.js'\r\n\r\n\r\nconst initialState = {\r\n    user: userService.getLoggedinUser() || userService.getGueastUser(),\r\n    users: [],\r\n    watchedUser: null\r\n}\r\nexport function userReducer(state = initialState, action) {\r\n    var newState = state;\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            newState = { ...state, user: action.user }\r\n            break;\r\n        case 'SET_WATCHED_USER':\r\n            newState = { ...state, watchedUser: action.user }\r\n            break;\r\n        case 'ADD_MENTION':\r\n            const user = { ...state.user, mentions: [action.mention, ...state.user.mentions] }\r\n            newState = { ...state, user }\r\n            break;\r\n        case 'REMOVE_USER':\r\n            newState = {\r\n                ...state,\r\n                users: state.users.filter(user => user._id !== action.userId)\r\n            }\r\n            break;\r\n        case 'SET_USERS':\r\n            newState = { ...state, users: action.users }\r\n            break;\r\n        default:\r\n    }\r\n    // For debug:\r\n    // window.userState = newState;\r\n    // console.log('State:', newState);\r\n    return newState;\r\n\r\n}","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","// const { createStore, applyMiddleware, combineReducers, compose } = Redux\r\n// const thunk = ReduxThunk.default\r\n\r\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nimport { boardReducer } from './board.reducer.js'\r\nimport { userReducer } from './user.reducer.js'\r\nimport { systemReducer } from './system.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    boardModule: boardReducer,\r\n    userModule: userReducer,\r\n    systemModule: systemReducer,\r\n})\r\n\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n// window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__();\r\n// Lets wire up thunk and also redux-dev-tools:\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n    // export const store = createStore(rootReducer, applyMiddleware(thunk))","function on(eventName, listener) {\r\n\r\n    const callListener = ({ detail }) => {\r\n        listener(detail);\r\n    };\r\n\r\n    window.addEventListener(eventName, callListener);\r\n\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener);\r\n    };\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\nexport const eventBusService = { on, emit };\r\n\r\nexport function showUserMsg(txt, type = '') {\r\n    eventBusService.emit('show-user-msg', { txt, type })\r\n}\r\nexport function showSuccessMsg(txt) {\r\n    showUserMsg(txt, 'success')\r\n}\r\nexport function showErrorMsg(txt) {\r\n    showUserMsg(txt, 'danger')\r\n}\r\n\r\nwindow.myBus = eventBusService;\r\nwindow.showUserMsg = showUserMsg;\r\n\r\n// eventBusService.on('baba', (x)=>console.log('Hi Baba', x))\r\n// eventBusService.on('baba', (x)=>console.log('Hello Baba Ji', x))\r\n// eventBusService.emit('baba', [5, 8, 11])\r\n// setTimeout(()=>{\r\n//     eventBusService.emit('baba', 17)\r\n// }, 2000)\r\n\r\n/* Listening Component...\r\n    import {eventBusService} from 'path...event-bus-service'\r\n    eventBusService.on('some-event', (dataFromEvent) => {\r\n    do something with dataFromEvent\r\n    })\r\n\r\n   Receiving Component...\r\n    eventBusService.emit('some-event', data)\r\n*/","import { userService } from \"../services/user.service.js\";\r\nimport { showErrorMsg } from '../services/event-bus.service.js'\r\nimport { socketService, SOCKET_EMIT_USER_WATCH, SOCKET_EVENT_USER_UPDATED } from \"../services/socket.service.js\";\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            // dispatch({ type: 'LOADING_START' })\r\n            const users = await userService.getUsers()\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('UserActions: err in loadUsers', err)\r\n        }\r\n        // finally {\r\n        //     dispatch({ type: 'LOADING_DONE' })\r\n        // }\r\n    }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.remove(userId)\r\n            dispatch({ type: 'REMOVE_USER', userId })\r\n        } catch (err) {\r\n            console.log('UserActions: err in removeUser', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onLogin(credentials) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.login(credentials)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user\r\n            })\r\n        } catch (err) {\r\n            console.log('Cannot login', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onGoogleLogin(tokenId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.googleLogin(tokenId)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user\r\n            })\r\n        } catch (err) {\r\n            console.log('Cannot login', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onSignup(credentials) {\r\n    return (dispatch) => {\r\n        userService.signup(credentials)\r\n            .then(user => {\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('Cannot signup', err)\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport function onLogout() {\r\n    return (dispatch) => {\r\n        userService.logout()\r\n            .then(() => dispatch({\r\n                type: 'SET_USER',\r\n                user: null\r\n            }))\r\n            .catch(err => {\r\n                console.log('Cannot logout', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function loadAndWatchUser(userId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.getById(userId);\r\n            dispatch({ type: 'SET_WATCHED_USER', user })\r\n            socketService.emit(SOCKET_EMIT_USER_WATCH, userId)\r\n            socketService.off(SOCKET_EVENT_USER_UPDATED)\r\n            socketService.on(SOCKET_EVENT_USER_UPDATED, user => {\r\n                console.log('USER UPADTED FROM SOCKET');\r\n                dispatch({ type: 'SET_WATCHED_USER', user })\r\n            })\r\n        } catch (err) {\r\n            showErrorMsg('Cannot load user')\r\n            console.log('Cannot load user', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onReceiveMention(mention) {\r\n    return async (dispatch) => {\r\n        userService.addMentionToStorage(mention)\r\n        dispatch({\r\n            type: 'ADD_MENTION',\r\n            mention\r\n        })\r\n    }\r\n}\r\n\r\nexport function onUpdateUser(user) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const updatedUser = await userService.update(user)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user: updatedUser\r\n            })\r\n        } catch (err) {\r\n            console.log('cannot update user', err)\r\n        }\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/hero.e8878a54.png\";","export default __webpack_public_path__ + \"static/media/homepage-product.162d5e7b.jpg\";","import React from 'react'\r\nimport { SiTrello } from 'react-icons/si'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { onLogin } from '../store/user.actions'\r\nimport heroImg from '../assets/img/hero.png'\r\nimport productImg from '../assets/img/homepage-product.jpg'\r\n\r\n\r\n\r\nclass _HomePage extends React.Component {\r\n\r\n    state = {\r\n        isNavbarBG: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.changeHeaderStyle)\r\n        document.body.style.overflowY = 'scroll'\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.changeHeaderStyle)\r\n        document.body.style.overflowY = 'hidden'\r\n    }\r\n\r\n    changeHeaderStyle = () => {\r\n        const { isNavbarBG } = this.state\r\n        if (window.scrollY > 50 && !isNavbarBG) {\r\n            this.setState({ isNavbarBG: true })\r\n        } else if (window.scrollY < 50 && isNavbarBG) {\r\n            this.setState({ isNavbarBG: false })\r\n        }\r\n    }\r\n\r\n    onGuestLogin = () => {\r\n        this.props.onLogin({username: 'guest1', password: 'guest123'})\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    render() {\r\n        const { isNavbarBG } = this.state\r\n        return (\r\n            <section className=\"home-page main-container\">\r\n                <header className={`home-header ${(isNavbarBG) ? 'bg-visible' : ''}`}>\r\n                    <span className=\"logo\"> <SiTrello /> Marshmello</span>\r\n                    <div className=\"header-buttons\">\r\n                        <Link to=\"/login\"><button className=\"login-btn nav-button\">Log in</button></Link>\r\n                        <Link to=\"/signup\"><button className=\"signup-btn nav-button\">Sign up</button></Link>\r\n                    </div>\r\n                </header>\r\n                <div className=\"home-first-fold\">\r\n                    <div className=\"first-fold-text\">\r\n                        <h1>Marshmello helps teams move work forward.</h1>\r\n                        <p>Collaborate, manage projects, and reach new productivity peaks.\r\n                            From high rises to the home office, the way your team works is unique—accomplish it all with Marshmello.</p>\r\n                        <button className=\"cta-btn nav-button\" onClick={() => this.onGuestLogin()}>Try Demo Version</button>\r\n                    </div>\r\n                    <div className=\"first-fold-img\">\r\n                        <img src={heroImg} alt=\"hero\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-second-fold\">\r\n                    <div className=\"second-fold-text\">\r\n                        <h1>It’s more than work. It’s a way of working together.</h1>\r\n                        <p>Start with a Marshmello board, lists, and cards. Customize and expand with more features as your teamwork grows. Manage projects, organize tasks, and build team spirit—all in one place.</p>\r\n                    </div>\r\n                    <div className=\"second-fold-img\">\r\n                        <img src={productImg} alt=\"hero\" />\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onLogin\r\n}\r\n\r\nexport const HomePage = connect(mapStateToProps, mapDispatchToProps)(_HomePage)","import React from 'react';\r\nimport { AiOutlineStar } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport function BoardPreview({ board, toggleStarredBoard, setFavicon }) {\r\n\r\n    function toggleIsStarred(ev) {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        toggleStarredBoard(board)\r\n    }\r\n\r\n    return (\r\n        <Link to={`/board/${board._id}`}><div onClick={() => setFavicon(board.style)} className=\"board-preview\" style={(board.style.bgColor) ? { backgroundColor: `${board.style.bgColor}` } : { backgroundImage: `url(${board.style.imgUrl})` }}>\r\n            <div className=\"preview-screen\">\r\n                <div className=\"preview-content\">\r\n                    <h4 className=\"board-title\">{board.title}</h4>\r\n                    <button className={`star-btn ${(board.isStarred) ? 'starred' : ''}`} onClick={(ev) => toggleIsStarred(ev)}><AiOutlineStar /></button>\r\n                </div>\r\n            </div>\r\n        </div></Link>\r\n    )\r\n}","import React from 'react';\r\nimport { BoardPreview } from './board-preview';\r\n\r\nexport function BoardList({ boards, toggleStarredBoard, setFavicon, setAddBoard, isWorkspace }) {\r\n    return (\r\n        <div className=\"board-list flex\">\r\n            {boards.map(board =>\r\n                <BoardPreview key={board._id} board={board} toggleStarredBoard={toggleStarredBoard} setFavicon={setFavicon} />)}\r\n\r\n            {isWorkspace && <div className=\"board-preview create-board-btn\" onClick={() => setAddBoard()}>\r\n                <h4>Create New Board</h4>\r\n            </div>}\r\n        </div>\r\n    );\r\n}","import { userService } from \"./user.service\"\r\n\r\nexport const activityTxtMap = {\r\n    addGroup: (listName) => {\r\n        return `Added list: ${listName}`\r\n    },\r\n    addCard: () => {\r\n        return `Added card:`\r\n    },\r\n    socketUpdate: ()=>{\r\n        return 'UPDATE_BY_SOCKET'\r\n    },\r\n    renameBoard: (boardName) => {\r\n        return `Renamed this board to: ${boardName}`\r\n    },\r\n    inviteMember: (memberName) => {\r\n        return `Invited ${memberName} to this board`\r\n    },\r\n    removeMember: (memberName) => {\r\n        return `Removed ${memberName} from this board`\r\n    },\r\n    changeBackground: () => {\r\n        return `Changed the background of this board`\r\n    },\r\n    editCard: () => {\r\n        return `Edited card title: `\r\n    },\r\n    archiveList: (listName) => {\r\n        return `Archived the list: ${listName}`\r\n    },\r\n    completeCard: () => {\r\n        return `Marked the following card as complete: `\r\n    },\r\n    unCompleteCard: () => {\r\n        return `Marked the following card as incomplete: `\r\n    },\r\n    changeDescription: () => {\r\n        return `Changed the description in card: `\r\n    },\r\n    changeGroupTitle: (groupName) => {\r\n        return `Changed the title in list: ${groupName}`\r\n    },\r\n    addMemberToCard: (memberName) => {\r\n        return `Added ${memberName} to a card`\r\n    },\r\n    removeMemberFromCard: (memberName) => {\r\n        return `Removed ${memberName} from a card`\r\n    },\r\n    addLabel: (labelName) => {\r\n        return `Added the label ${labelName} to a card`\r\n    },\r\n    removeLabel: (labelName) => {\r\n        return `Removed the label ${labelName} from a card`\r\n    },\r\n    addChecklist: (checklistName) => {\r\n        return `Added checklist ${checklistName} to a card`\r\n    }\r\n}\r\n\r\n","import { storageService } from './async-storage.service.js'\r\nimport { utilService } from './util.service.js'\r\nimport { userService } from './user.service.js'\r\nimport { httpService } from './http.service'\r\n\r\nconst STORAGE_KEY = 'board'\r\n    // const listeners = []\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    dashboardQuery,\r\n    getArchivedCards\r\n}\r\nwindow.cs = boardService;\r\n\r\n\r\nasync function query(filterByUser) {\r\n    // return storageService.query(STORAGE_KEY)\r\n    try {\r\n        const boards = await httpService.get('board', filterByUser)\r\n        return boards\r\n    } catch (err) {\r\n        console.log('Front: Error loading boards', err)\r\n    }\r\n}\r\n\r\nasync function getById(boardId, filterBy) {\r\n    // return storageService.get(STORAGE_KEY, boardId)\r\n    try {\r\n        if (typeof filterBy === 'object') {\r\n            filterBy = (new URLSearchParams(filterBy)).toString()\r\n        }\r\n        const board = await httpService.get(`board/${boardId}`, filterBy)\r\n        return board\r\n    } catch (err) {\r\n        console.log(`Front: Error loading board with ID: ${boardId}`, err)\r\n    }\r\n}\r\n\r\nasync function dashboardQuery(boardId) {\r\n    // const chartsData = await storageService.dashboardQuery(STORAGE_KEY, boardId)\r\n    // return chartsData\r\n    try {\r\n        const chartsData = await httpService.get(`board/dashboard/${boardId}`)\r\n        return chartsData\r\n    } catch (err) {\r\n        console.log('Front: Error loading chartsData', err)\r\n    }\r\n}\r\n\r\nasync function getArchivedCards(boardId) {\r\n    try {\r\n        const archivedCards = await httpService.get(`board/${boardId}/closed`)\r\n        console.log('archivedChards:', archivedCards)\r\n        return archivedCards\r\n    } catch (err) {\r\n        console.log('Front: Error loading archivedCards', err)\r\n    }\r\n}\r\n\r\n\r\nasync function remove(boardId) {\r\n    // return storageService.remove(STORAGE_KEY, boardId)\r\n        try {\r\n            return httpService.delete(`board/${boardId}`)\r\n        } catch (err) {\r\n            console.log(`Front: Error deleting board with ID: ${boardId}`);\r\n        }\r\n}\r\n\r\nasync function save(board, activity = null) {\r\n    if (board._id) {\r\n        if (activity) {\r\n            const newActivity = {\r\n                    txt: activity.txt,\r\n                    id: utilService.makeId(),\r\n                    byMember: userService.getMiniUser(),\r\n                    card: (activity.card) ? { id: activity.card.id, title: activity.card.title } : {},\r\n                    groupId: (activity.groupId) ? activity.groupId : null\r\n                }\r\n                // console.log('Activity from service: ', newActivity)\r\n                // board.activities.unshift(newActivity)\r\n                // console.log('Board activities from service: ', board.activities)\r\n            return httpService.put(`board/${board._id}`, { board: board, activity: newActivity })\r\n        } else {\r\n            // return storageService.put(STORAGE_KEY, board)\r\n            return httpService.put(`board/${board._id}`, { board: board, activity: null })\r\n        }\r\n    } else {\r\n        const boardToSave = {\r\n                title: board.title,\r\n                style: board.style,\r\n                createdBy: userService.getMiniUser(),\r\n                members: [userService.getMiniUser()],\r\n            }\r\n            // return storageService.post(STORAGE_KEY, boardToSave)\r\n        const addedBoard = await httpService.post(`board`, boardToSave)\r\n        return addedBoard\r\n    }\r\n}\r\n\r\n\r\n// function subscribe(listener) {\r\n//     listeners.push(listener)\r\n// }\r\n\r\n// function _notifySubscribersBoardsChanged(boards) {\r\n//     console.log('Notifying Listeners');\r\n//     listeners.forEach(listener => listener(boards))\r\n// }\r\n\r\n// window.addEventListener('storage', () => {\r\n//     console.log('Storage Changed from another Browser!');\r\n//     query()\r\n//         .then(boards => {\r\n//             _notifySubscribersCarsChanged(boards)\r\n//         }) \r\n// })","import { activityTxtMap } from \"../services/activity.service.js\";\r\nimport { boardService } from \"../services/board.service.js\";\r\nimport { socketService } from \"../services/socket.service.js\";\r\n// import { userService } from \"../services/user.service.js\";\r\n// import { showSuccessMsg, showErrorMsg } from '../services/event-bus.service.js';\r\n\r\n//BOARD\r\nexport function loadBoards(filterBy) {\r\n    return async(dispatch) => {\r\n        try {\r\n            const boards = await boardService.query(filterBy)\r\n            dispatch({\r\n                type: 'SET_BOARDS',\r\n                boards\r\n            })\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot load boards')\r\n            console.log('Cannot load boards', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadBoard(boardId, filterBy) {\r\n    return async(dispatch) => {\r\n        try {\r\n            const board = await boardService.getById(boardId, filterBy)\r\n            document.body.style.background = board.style.bgColor ? board.style.bgColor : `url(\"${board.style.imgUrl}\")`\r\n            document.body.style.backgroundSize = 'cover'\r\n\r\n\r\n            dispatch({\r\n                type: 'SET_CURR_BOARD',\r\n                board\r\n            })\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot load boards')\r\n            console.log('Cannot load board', err)\r\n        }\r\n    }\r\n}\r\nexport function resetBoard() {\r\n    document.body.style.background = 'unset'\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_CURR_BOARD',\r\n            board: null\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport function onRemoveBoard(boardId) {\r\n    return async(dispatch) => {\r\n        try {\r\n            await boardService.remove(boardId)\r\n            console.log('Deleted Succesfully!');\r\n            dispatch({\r\n                type: 'REMOVE_BOARD',\r\n                boardId\r\n            })\r\n        } catch (err) {\r\n            console.log('Cannot remove board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onUpdateBoard(action, board, activity = null) {\r\n    return async(dispatch) => {\r\n        const boardToSave = _getUpdatedBoard(action, board)\r\n        console.log(boardToSave)\r\n        dispatch({\r\n            type: 'UPDATE_BOARD',\r\n            board: boardToSave\r\n        })\r\n        try {\r\n            if (!action.type) action.board = board\r\n            socketService.emit('board-update', { action, activity })\r\n            await boardService.save(boardToSave, activity)\r\n        } catch (err) {\r\n            console.log('Cannot save board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onAddBoard(board) {\r\n    return async(dispatch) => {\r\n        try {\r\n            const savedBoard = await boardService.save(board)\r\n            console.log('Added Board', savedBoard);\r\n            dispatch({\r\n                type: 'ADD_BOARD',\r\n                board: savedBoard\r\n            })\r\n            socketService.emit('update', true)\r\n            return savedBoard\r\n        } catch (err) {\r\n            console.log('Cannot add board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setAddingBoard(isAddingBoard) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_ADDING_BOARD',\r\n            isAddingBoard: isAddingBoard\r\n        })\r\n    }\r\n}\r\n\r\n//CARD\r\nexport function onAddCard(newCard, groupId, board, activity) {\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    newCard = {...newCard, createdAt: Date.now(), isComplete: false };\r\n\r\n    group.cards = (group.cards) ? [...group.cards, newCard] : [newCard]\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, board, activity)\r\n}\r\n\r\nexport function onRemoveCard(card, board) {\r\n    const boardToSave = {...board }\r\n    boardToSave.archivedCards = boardToSave.archivedCards.filter(archivedCard => archivedCard.id !== card.id)\r\n    return onUpdateBoard({}, boardToSave)\r\n}\r\n\r\nexport function onArchiveCard(archivedCard, groupId, board, activity = null) {\r\n    archivedCard.isArchive = true;\r\n    const group = {...board.groups.find(group => group.id === groupId) }\r\n    const cardIdx = group.cards.findIndex(card => card.id === archivedCard.id)\r\n    const boardToSave = {...board }\r\n    archivedCard.groupId = groupId;\r\n    archivedCard.prevIndex = cardIdx;\r\n    // console.log('archivedCard in actions', archivedCard)\r\n    group.cards.splice(cardIdx, 1)\r\n        // delete boardToSave.archivedCards\r\n    boardToSave.archivedCards = boardToSave.archivedCards ? boardToSave.archivedCards : []\r\n    boardToSave.archivedCards.unshift(archivedCard)\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, boardToSave, activity)\r\n}\r\n\r\nexport function onUnArchiveCard(cardToSave, board, activity = null) {\r\n    const group = {...board.groups.find(group => group.id === cardToSave.groupId) }\r\n    if (group) {\r\n        const cardIdx = cardToSave.prevIndex\r\n        delete cardToSave.groupId\r\n        delete cardToSave.prevIndex\r\n        delete cardToSave.isArchive\r\n        group.cards.splice(cardIdx, 0, cardToSave)\r\n    }\r\n    const boardToSave = {...board }\r\n    boardToSave.archivedCards = boardToSave.archivedCards.filter(archivedCard => archivedCard.id !== cardToSave.id)\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, boardToSave, activity)\r\n}\r\n\r\nexport function loadArchivedCards(boardId) {\r\n    return async(dispatch) => {\r\n        try {\r\n            const archivedCards = await boardService.getArchivedCards(boardId)\r\n            console.log('in actions', archivedCards)\r\n            return archivedCards;\r\n        } catch (err) {\r\n            console.log('Cannot load archived cards', err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function onUpdateCard(cardToSave, groupId, board, activity = null) {\r\n    // console.log('cardToSave', cardToSave);\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    const cardIdx = group.cards.findIndex(card => card.id === cardToSave.id)\r\n        // console.log('cardIdx: ', -1)\r\n    group.cards.splice(cardIdx, 1, cardToSave)\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, board, activity)\r\n}\r\n\r\nexport function onSetCardId(cardId) {\r\n    return async(dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: 'SET_CARD_ID',\r\n                cardId\r\n            })\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot load boards')\r\n            console.log('Cannot set card', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onUpdateFilter(filterBy) {\r\n    return (dispatch) => {\r\n        const action = { type: 'UPDATE_FILTER', filterBy }\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport function outputUpdateBoard(action, board, activity) {\r\n    return async(dispatch) => {\r\n        const boardToSave = _getUpdatedBoard(action, board)\r\n        dispatch({\r\n            type: 'UPDATE_BOARD',\r\n            board: boardToSave\r\n        })\r\n\r\n    }\r\n}\r\n\r\n/* \r\nserver side filtering\r\nconst board =getBoardById()\r\nconst archived = []\r\nboard.lists.forEach((list)=>{\r\n    list.tasks.forEach(task => {\r\n        if (task.isClosed) {\r\n            task.listId = list.id\r\n            task.prevIdx\r\n        } \r\n    })\r\n})\r\n*/\r\n\r\n\r\nfunction _getUpdatedBoard(action, board) {\r\n    const boardToSave = {...board }\r\n    switch (action.type) {\r\n        case 'TOGGLE_STARRED':\r\n            boardToSave.isStarred = action.isStarred\r\n            break;\r\n        case 'CHANGE_BOARD_STYLE':\r\n            boardToSave.style = action.style\r\n            document.body.style.background = boardToSave.style.bgColor ? boardToSave.style.bgColor : `no-repeat url(\"${boardToSave.style.imgUrl}\")`\r\n            document.body.style.backgroundSize = 'cover'\r\n            break;\r\n        case 'CHANGE_TITLE':\r\n            boardToSave.title = action.title\r\n            break;\r\n        case 'ADD_BOARD_MEMBER':\r\n            console.log('members from action: ', boardToSave.members)\r\n            boardToSave.members = [...boardToSave.members, action.member]\r\n            break;\r\n        case 'REMOVE_BOARD_MEMBER':\r\n            console.log('members from action: ', boardToSave.members)\r\n            boardToSave.members = [...boardToSave.members.filter(member => member._id !== action.memberId)]\r\n            break;\r\n        case 'ADD_GROUP':\r\n            boardToSave.groups = [...boardToSave.groups, action.group]\r\n            break;\r\n        case 'UPDATE_GROUP':\r\n            boardToSave.groups = [...boardToSave.groups.map(currGroup => currGroup.id === action.group.id ? action.group : currGroup)]\r\n            break\r\n        case 'REMOVE_GROUP':\r\n            boardToSave.groups = [...boardToSave.groups.filter(currGroup => currGroup.id !== action.group.id)]\r\n            break\r\n    }\r\n    return boardToSave;\r\n}","export function OverlayScreen() {\r\n    return (\r\n        <div className=\"overlay-screen\"></div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loader.1a7da032.svg\";","import loader from '../../assets/img/loader.svg'\r\nexport function Loader() {\r\n    return (\r\n        <div className=\"loader\">\r\n            <img src={loader} alt=\"loading...\" />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardList } from '../cmps/board-list'\r\nimport { AiFillStar } from 'react-icons/ai'\r\nimport { SiTrello } from 'react-icons/si'\r\n\r\nimport { loadBoards, setAddingBoard, onUpdateBoard } from '../store/board.actions'\r\nimport { OverlayScreen } from '../cmps/overlay-screen'\r\nimport { Loader } from '../cmps/shared/loader'\r\nimport { socketService } from '../services/socket.service'\r\nimport { userService } from '../services/user.service'\r\n\r\n\r\nclass _BoardSelect extends React.Component {\r\n    state = {\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const user = userService.getMiniUser()\r\n        // console.log(user)\r\n        await this.props.loadBoards(user)\r\n    }\r\n\r\n    getStarredBoards = () => {\r\n        return this.props.boards.filter(board => board.isStarred)\r\n    }\r\n\r\n    toggleStarredBoard = (board) => {\r\n        const { onUpdateBoard } = this.props\r\n        board.isStarred = !board.isStarred\r\n        onUpdateBoard({ type: 'TOGGLE_STARRED', isStarred: board.isStarred }, board)\r\n        socketService.emit('update', true)\r\n    }\r\n    setFavicon = (style) => {\r\n        const favicon = document.getElementById('favicon')\r\n        if (style.imgUrl) {\r\n            favicon.href = style.imgUrl\r\n        } else {\r\n            favicon.href = \"../../public/favicon.ico\"\r\n        }\r\n    }\r\n\r\n    setAddBoard = () => {\r\n        this.props.setAddingBoard(true)\r\n    }\r\n\r\n    render() {\r\n        const { boards, isAddingBoard } = this.props\r\n        if (!boards) return <Loader />\r\n        return (\r\n            <div className=\"board-select-wrapper\">\r\n            <div className=\"boards-select main-container\">\r\n                <h2> <AiFillStar /> Starred Boards</h2>\r\n                <div className=\"starred-boards\">\r\n                    <BoardList setFavicon={this.setFavicon} boards={this.getStarredBoards()} toggleStarredBoard={this.toggleStarredBoard} />\r\n                </div>\r\n                <h2> <SiTrello /> Workspace</h2>\r\n                <div className=\"workspace\">\r\n                    <BoardList boards={boards} toggleStarredBoard={this.toggleStarredBoard} setFavicon={this.setFavicon} setAddBoard={this.setAddBoard} isWorkspace={true} />\r\n                    {/* <div className=\"board-preview create-board-btn\" onClick={() => this.setAddBoard()}>\r\n                        <h4>Create New Board</h4>\r\n                    </div> */}\r\n                </div>\r\n                {isAddingBoard && <OverlayScreen />}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardModule.boards,\r\n        isAddingBoard: state.boardModule.isAddingBoard,\r\n        board: state.boardModule.currBoard,\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    setAddingBoard,\r\n    onUpdateBoard\r\n}\r\n\r\nexport const BoardSelect = connect(mapStateToProps, mapDispatchToProps)(_BoardSelect)\r\n","import { store } from '../store/store'\r\nimport { utilService } from './util.service'\r\n\r\nconst handleChecklistChange = (type, checklistId, value, newVal) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    if (checklistId) {\r\n        const checklist = card.checklists.find(checklist => checklist.id === checklistId)\r\n        if (type === 'addTodo') {\r\n            checklist.todos.push(value)\r\n\r\n        } else if (type === 'markTodo') {\r\n            const todo = checklist.todos.find(todo => todo.id === value)\r\n            todo.isDone = !todo.isDone\r\n\r\n        } else if (type === 'removeTodo') {\r\n            const idx = checklist.todos.findIndex(todo => todo.id === value)\r\n            checklist.todos.splice(idx, 1)\r\n\r\n        } else if (type === 'changeTitle') {\r\n            const todo = checklist.todos.find(todo => todo.id === value)\r\n            todo.title = newVal\r\n\r\n        } else if (type === 'removeChecklist') {\r\n            const idx = card.checklists.findIndex(checklist => checklist.id === checklistId)\r\n            card.checklists.splice(idx, 1)\r\n\r\n        }\r\n    } else {\r\n        if (type === 'addChecklist') {\r\n            if (!card.checklists) card.checklists = []\r\n            card.checklists.push({ id: utilService.makeId(), title: value, todos: [] })\r\n        }\r\n    }\r\n\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleMemberChange = (memberId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    let card = getCardById(cardId, groupId)\r\n\r\n    if (!card.members) card.members = []\r\n    const isMemberExist = card?.members?.some(member => member._id === memberId)\r\n    if (isMemberExist) card = { ...card, members: card?.members.filter(member => member._id !== memberId) }\r\n    else {\r\n        const memberToAdd = board.members.find(member => member._id === memberId)\r\n        card.members.push(memberToAdd)\r\n    }\r\n\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleLabelChange = (labelId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    let card = getCardById(cardId, groupId)\r\n    if (!card.labelIds) card.labelIds = []\r\n    const isLabelExist = card?.labelIds.some(id => id === labelId)\r\n    if (isLabelExist) card = { ...card, labelIds: card?.labelIds.filter(id => id !== labelId) }\r\n    else {\r\n        const labelToAdd = board.labels.find(label => label.id === labelId)\r\n        card.labelIds.push(labelToAdd.id)\r\n    }\r\n\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleDueDateChange = (timestamp) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    let card = getCardById(cardId, groupId)\r\n    card.dueDate = timestamp\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst getCardById = (cardId, groupId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    return group.cards.find(card => card.id === cardId)\r\n}\r\n\r\nconst getGroupById = (cardId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    return board.groups.find(group => group.cards.find(card => card.id === cardId))\r\n}\r\n\r\nconst getGroupId = (cardId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    return board.groups.find(group => group.cards.some(card => card.id === cardId))?.id\r\n}\r\n\r\nconst getFormattedTime = (timestamp) => {\r\n    if (!timestamp) return ''\r\n    const timeLeft = timestamp - Date.now()\r\n    if (timeLeft < 0) {\r\n        const date = new Date(timestamp)\r\n        const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n        const idx = date.getMonth()\r\n        const month = monthNames[idx]\r\n        const day = date.getDate()\r\n        return `${month} ${day} at 12:00 AM`\r\n    }\r\n    if (timeLeft <= (1000 * 60 * 60 * 24)) return 'tomorrow at 12:00 AM'\r\n    const date = new Date(timestamp)\r\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    const idx = date.getMonth()\r\n    const month = monthNames[idx]\r\n    const day = date.getDate()\r\n    return `${month} ${day} at 12:00 AM`\r\n}\r\n\r\nconst getUploadTime = (timestamp) => {\r\n    const timePassed = Date.now() - timestamp\r\n    if (timePassed < (1000 * 60)) return 'Added a few seconds ago'\r\n    else if (timePassed < (1000 * 60 * 2)) return 'Added 1 minute ago'\r\n    else if (timePassed < 1000 * 60 * 60) {\r\n        const minutes = Math.floor(timePassed / 1000 / 60)\r\n        return `Added ${minutes} minutes ago`\r\n    }\r\n    else if (timePassed < 1000 * 60 * 60 * 13) {\r\n        const hours = Math.floor(timePassed / 1000 / 60 / 60)\r\n        return `Added ${hours} hours ago`\r\n    } else {\r\n        const date = new Date(timestamp)\r\n        const minutes = (date.getMinutes() < 10) ? `0${date.getMinutes()}` : date.getMinutes()\r\n        if (timePassed < 1000 * 60 * 60 * 24) {\r\n            return `Added today at ${date.getHours()}:${minutes} `\r\n        } else if (timePassed < 1000 * 60 * 60 * 48) {\r\n            return `Added yesterday at ${date.getHours()}:${minutes}`\r\n        } else {\r\n            const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n            const idx = date.getMonth()\r\n            const month = monthNames[idx]\r\n            const day = date.getDate()\r\n            return `Added ${month} ${day} at ${date.getHours()}:${minutes}`\r\n        }\r\n    }\r\n}\r\n\r\nconst handleFileAdd = (url, title = 'Attachment') => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    if (!card.attachments) card.attachments = []\r\n    card.attachments.push({ id: utilService.makeId(), url, title, addedAt: Date.now() })\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleFileRemove = (fileId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    const idx = card.attachments.findIndex(file => file.id === fileId)\r\n    card.attachments.splice(idx, 1)\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleMoveCard = (cardId, groupId, idx) => {\r\n    const initialBoard = store.getState().boardModule.currBoard\r\n    const initialGroup = initialBoard.groups.find(group => group.cards.some(card => card.id === cardId))\r\n    const card = getCardById(cardId, initialGroup.id)\r\n    const initialCardIdx = initialGroup.cards.findIndex(card => card.id === cardId)\r\n    initialGroup.cards.splice(initialCardIdx, 1)\r\n    let newGroup = initialBoard.groups.find(group => group.id === groupId)\r\n    newGroup.cards.splice(idx, 0, card)\r\n    return initialBoard\r\n}\r\n\r\nconst handleCopyCard = (cardId, groupId, idx, title) => {\r\n    const initialBoard = store.getState().boardModule.currBoard\r\n    const initialGroup = initialBoard.groups.find(group => group.cards.some(card => card.id === cardId))\r\n    const card = getCardById(cardId, initialGroup.id)\r\n    let newGroup = initialBoard.groups.find(group => group.id === groupId)\r\n    newGroup.cards.splice(idx, 0, { ...card, id: utilService.makeId(), title })\r\n    return initialBoard\r\n}\r\n\r\nconst handleToggleArchive = (cardId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    card.isArchive = !card.isArchive\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleRemoveCard = (cardId) => {\r\n    const board = { ...store.getState().boardModule.currBoard }\r\n    const group = board.groups.find(group => group.cards.some(card => card.id === cardId))\r\n    group.cards = group.cards.filter(card => card.id !== cardId)\r\n    // return board\r\n}\r\n\r\nconst onAddComment = (txt) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const user = store.getState().userModule.user\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    if (!card.comments) card.comments = []\r\n    card.comments.unshift({ id: utilService.makeId(), author: user, txt, addedAt: Date.now() })\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleCommentRemove = (commentId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    const idx = card.comments.findIndex(comment => comment.id === commentId)\r\n    card.comments.splice(idx, 1)\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst getCommentTime = (timestamp) => {\r\n    const timePassed = Date.now() - timestamp\r\n    if (timePassed < (1000 * 60)) return 'a few seconds ago'\r\n    else if (timePassed < (1000 * 60 * 2)) return '1 minute ago'\r\n    else if (timePassed < 1000 * 60 * 60) {\r\n        const minutes = Math.floor(timePassed / 1000 / 60)\r\n        return `${minutes} minutes ago`\r\n    }\r\n    else if (timePassed < 1000 * 60 * 60 * 13) {\r\n        const hours = Math.floor(timePassed / 1000 / 60 / 60)\r\n        return `${hours} hours ago`\r\n    } else {\r\n        const date = new Date(timestamp)\r\n        const minutes = (date.getMinutes() < 10) ? `0${date.getMinutes()}` : date.getMinutes()\r\n        if (timePassed < 1000 * 60 * 60 * 24) {\r\n            return `today at ${date.getHours()}:${minutes} `\r\n        } else if (timePassed < 1000 * 60 * 60 * 48) {\r\n            return `yesterday at ${date.getHours()}:${minutes}`\r\n        } else {\r\n            const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n            const idx = date.getMonth()\r\n            const month = monthNames[idx]\r\n            const day = date.getDate()\r\n            return `${month} ${day} at ${date.getHours()}:${minutes}`\r\n        }\r\n    }\r\n}\r\n\r\nconst handleAttachmentEdit = (attachmentId, title) => {\r\n    if (!attachmentId) return\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    const attachment = card.attachments.find(attachment => attachment.id === attachmentId)\r\n    attachment.title = title\r\n    return [card, groupId, board]\r\n}\r\n\r\n\r\nexport const cardEditService = {\r\n    handleChecklistChange,\r\n    handleMemberChange,\r\n    getGroupId,\r\n    getCardById,\r\n    handleLabelChange,\r\n    handleDueDateChange,\r\n    getFormattedTime,\r\n    getUploadTime,\r\n    handleFileAdd,\r\n    handleFileRemove,\r\n    getGroupById,\r\n    handleMoveCard,\r\n    handleCopyCard,\r\n    handleToggleArchive,\r\n    handleRemoveCard,\r\n    onAddComment,\r\n    handleCommentRemove,\r\n    getCommentTime,\r\n    handleAttachmentEdit\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateBoard } from '../../../store/board.actions'\r\n\r\n\r\nexport function _MoveCard({ board, currCardId, onUpdateBoard, onClose }) {\r\n    const [currGroup, setCurrGroup] = useState(null)\r\n    const [currPosition, setCurrPosition] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const group = cardEditService.getGroupById(currCardId, board._id)\r\n        setCurrGroup(group)\r\n        const idx = group.cards.findIndex(card => card.id === currCardId)\r\n        setCurrPosition(idx + 1)\r\n    }, [board])\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        if (name === 'group') {\r\n            const group = board.groups.find(item => item.id === value)\r\n            setCurrGroup(group)\r\n            setCurrPosition(group.cards.length + 1)\r\n        } else if (name === 'position') {\r\n            // setCurrPosition(currGroup.cards.length + 1)\r\n            setCurrPosition(value)\r\n        }\r\n    }\r\n\r\n    const getPositions = () => {\r\n        const length = currGroup.cards.length + 1\r\n        const positions = []\r\n        for (let i = 1; i <= length; i++) {\r\n            positions.push(i)\r\n        }\r\n        return positions\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const groupId = currGroup.id\r\n        const idx = currPosition - 1\r\n        // const initialGroup = cardEditService.handleMoveCardFrom(currCardId)\r\n        // onUpdateBoard({ type: 'UPDATE_GROUP', group: initialGroup }, board)\r\n        const boardToChange = cardEditService.handleMoveCard(currCardId, groupId, idx)\r\n        onUpdateBoard({ type: '' }, boardToChange)\r\n        // onUpdateBoard({ type: 'UPDATE_GROUP', group: newGroup }, board)\r\n        // onUpdateBoard({ type: 'UPDATE_GROUP', initialGroup }, board, activity)\r\n        onClose()\r\n    }\r\n\r\n    if (!currGroup) return null\r\n    return (\r\n        <div className=\"move-card\">\r\n            <h4>Select destination</h4>\r\n\r\n            <div className=\"select-board\">\r\n                <span className=\"label\">Board</span>\r\n                <span className=\"select-value\">{board.title}</span>\r\n                <select name=\"board\" onChange={handleChange}>\r\n                    {/* {boards.map(item => <option key={item._id} value={item._id}>{item.title}</option>)} */}\r\n                    <option value={board._id}>{board.title}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"flex bottom-container\">\r\n                <div className=\"select-group\">\r\n                    <span className=\"label\">List</span>\r\n                    <span className=\"select-value\">{currGroup.title}</span>\r\n                    <select name=\"group\" onChange={handleChange}>\r\n                        {board.groups.map(item => <option key={item.id} value={item.id}>{item.title}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"select-position\">\r\n                    <span className=\"label\">Position</span>\r\n                    <span className=\"select-value\">{currPosition}</span>\r\n                    <select name=\"position\" onChange={handleChange}>\r\n                        {getPositions().map((item, i) => <option key={i} value={item}>{item}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <button className=\"move-btn card-edit-btn secondary\" onClick={handleSubmit}>Move</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        boards: state.boardModule.boards,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const MoveCard = connect(mapStateToProps, mapDispatchToProps)(_MoveCard)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateBoard } from '../../../store/board.actions'\r\n\r\n\r\nexport function _CopyCard({ board, currCardId, onUpdateBoard, onClose }) {\r\n    const [currTitle, setCurrTitle] = useState('')\r\n    const [currGroup, setCurrGroup] = useState(null)\r\n    const [currPosition, setCurrPosition] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const group = cardEditService.getGroupById(currCardId, board._id)\r\n        const card = cardEditService.getCardById(currCardId, group.id)\r\n        setCurrTitle(card.title)\r\n        setCurrGroup(group)\r\n        const idx = group.cards.findIndex(card => card.id === currCardId)\r\n        setCurrPosition(idx + 1)\r\n    }, [board])\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        if (name === 'group') {\r\n            const group = board.groups.find(item => item.id === value)\r\n            setCurrGroup(group)\r\n            setCurrPosition(group.cards.length + 1)\r\n        } else if (name === 'position') {\r\n            setCurrPosition(value)\r\n        } else if (name === 'title') {\r\n            setCurrTitle(value)\r\n        }\r\n    }\r\n\r\n    const getPositions = () => {\r\n        const length = currGroup.cards.length + 1\r\n        const positions = []\r\n        for (let i = 1; i <= length; i++) {\r\n            positions.push(i)\r\n        }\r\n        return positions\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const groupId = currGroup.id\r\n        const idx = currPosition - 1\r\n        const boardToChange = cardEditService.handleCopyCard(currCardId, groupId, idx, currTitle)\r\n        onUpdateBoard({ type: '' }, boardToChange)\r\n        onClose()\r\n    }\r\n\r\n    if (!currGroup) return null\r\n    return (\r\n        <div className=\"copy-card\">\r\n            <label>Title</label>\r\n            <textarea name=\"title\" className=\"search-input\" autoFocus value={currTitle} onChange={handleChange} />\r\n\r\n\r\n            <label>Copy to...</label>\r\n            <div className=\"select-board\">\r\n                <span className=\"label\">Board</span>\r\n                <span className=\"select-value\">{board.title}</span>\r\n                <select name=\"board\" onChange={handleChange}>\r\n                    <option value={board._id}>{board.title}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"flex bottom-container\">\r\n                <div className=\"select-group\">\r\n                    <span className=\"label\">List</span>\r\n                    <span className=\"select-value\">{currGroup.title}</span>\r\n                    <select name=\"group\" onChange={handleChange}>\r\n                        {board.groups.map(item => <option key={item.id} value={item.id}>{item.title}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"select-position\">\r\n                    <span className=\"label\">Position</span>\r\n                    <span className=\"select-value\">{currPosition}</span>\r\n                    <select name=\"position\" onChange={handleChange}>\r\n                        {getPositions().map((item, i) => <option key={i} value={item}>{item}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <button className=\"copy-btn card-edit-btn secondary\" onClick={handleSubmit}>Create card</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        boards: state.boardModule.boards,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const CopyCard = connect(mapStateToProps, mapDispatchToProps)(_CopyCard)\r\n","import React from 'react'\r\nimport { BsChevronLeft } from 'react-icons/bs'\r\nimport { IoMdClose } from 'react-icons/io'\r\n\r\nexport const PopoverHeader = ({ title, isMultiView, onClose, onGoBack }) => {\r\n    return (\r\n        <>\r\n            {title\r\n                ?\r\n                <div className=\"popover-header\">\r\n                    {isMultiView && <span className=\"back-btn\" onClick={onGoBack}><BsChevronLeft /></span>}\r\n                    <h4>{title}</h4>\r\n                    <span className=\"close-btn\" onClick={onClose}><IoMdClose /></span>\r\n                </div>\r\n                :\r\n                <div className=\"header-replacement pos-relative\">\r\n                    <span className=\"close-popover-icon\" onClick={onClose}><IoMdClose /></span>\r\n                </div>}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { PopoverHeader } from './popover-header'\r\n\r\n/*\r\n    How-to-use\r\n    1. The component shall recieve:\r\n       * an onClose function that closes the popover\r\n       * a title for the header\r\n       * the component that should be rendered inside of the popover (children)\r\n    2. The popover should be rendered on the same lavel as the element that \r\n       triggers the opening of the popover\r\n    3. The parrent element of both the trigger element and the popover should have\r\n       position relative (className=\"pos-relative\")\r\n    4. The popover should recieve the parent ref (ref={parentRef})\r\n    5. The state for the opening and closing of the popover should be managed from \r\n       outside \r\n*/\r\n\r\nexport const DynamicPopover = React.forwardRef(({ onClose, title, children, isMultiView, onGoBack }, parentRef) => {\r\n    const targetRef = useRef()\r\n    const contentRef = useRef()\r\n    const [location, setLocation] = useState({\r\n        top: null,\r\n        bottom: null,\r\n        right: null,\r\n        left: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        getLocation({\r\n            width: targetRef.current?.offsetWidth,\r\n            height: targetRef.current?.offsetHeight\r\n        })\r\n\r\n        const handleClick = e => {\r\n            const containerElement = targetRef.current\r\n            const parentElement = parentRef.current\r\n            if (containerElement?.contains(e.target) || parentElement?.contains(e.target)) return\r\n            onClose()\r\n        }\r\n\r\n        window.addEventListener(\"mouseup\", handleClick)\r\n        window.addEventListener(\"resize\", getLocation)\r\n\r\n        return () => {\r\n            window.removeEventListener(\"mouseup\", handleClick)\r\n            window.removeEventListener(\"resize\", getLocation)\r\n        }\r\n    }, [parentRef])\r\n\r\n\r\n    const getLocation = ({ width, height }) => {\r\n        const rect = parentRef.current?.getBoundingClientRect()\r\n        if (!rect) return\r\n        let left, right, top, bottom\r\n        const rightCheck = window.innerWidth - (rect.left + width) < 20\r\n        const leftCheck = rect.right - width < 20\r\n        const isOverflowY = (window.innerHeight - height - 45) < 0\r\n        if (window.innerWidth < 500) {\r\n            const parentEl = targetRef.current\r\n            parentEl.classList.remove('pos-absolute')\r\n            parentEl.classList.add('pos-fixed')\r\n            parentEl.style.top = `${(rect.bottom + 8)}px`\r\n            parentEl.style.left = '50%'\r\n            parentEl.style.transform = 'translateX(-50%)'\r\n            return\r\n        }\r\n\r\n        top = rect.height + 8\r\n        if (rightCheck) right = 0\r\n        else left = 0\r\n        if (isOverflowY) {\r\n            contentRef.current.style.maxHeight = `${window.innerHeight - rect.bottom - 60}px`\r\n        } else {\r\n\r\n            const maxHeight = (height) ? 350 : (window.innerHeight - rect.bottom - 60)\r\n\r\n            if (contentRef.current) contentRef.current.style.maxHeight = `${maxHeight}px`\r\n        }\r\n        setLocation({ top, bottom, right, left })\r\n    }\r\n    \r\n\r\n    return (\r\n        <div ref={ref => targetRef.current = ref} className=\"dynamic-popover pos-absolute\" style={{ ...location }}>\r\n\r\n            <PopoverHeader title={title || null} isMultiView={isMultiView} onGoBack={onGoBack} onClose={onClose} />\r\n\r\n            <div className=\"popover-content\" ref={contentRef}>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nexport function EditSidebarLabel({ Icon, title }) {\r\n\r\n    const getStyle = () => {\r\n        if (title === \"Delete\") return { backgroundColor: '#b04632', color: '#fff' }\r\n        else return {}\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-container\">\r\n            <button className=\"sidebar-label card-edit-btn sidebar-btn\" style={{ position: 'relative', ...getStyle() }}>\r\n                <div className=\"list-item-layover\"></div>\r\n                <div className=\"btn-label-container flex\">\r\n                    <Icon />\r\n                    <p>{title}</p>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo, useRef, useState } from 'react'\r\nimport { DynamicPopover } from '../shared/dynamic-popover'\r\nimport { EditSidebarLabel } from '../card-edit/edit-sidebar-label'\r\n\r\n\r\nexport function CardEditActionsItem({ item }) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const itemRef = useRef()\r\n    const InnerPopperCmp = useMemo(() => item.component, [item])\r\n\r\n    return (\r\n        <div className=\"label-wrapper\">\r\n            <div ref={itemRef} className={`pos-relative ${isOpen ? 'popover-open' : ''}`}>\r\n                <span onClick={() => setIsOpen(!isOpen)}>\r\n                    <EditSidebarLabel Icon={item.icon} title={item.title} />\r\n                </span>\r\n                {\r\n                    isOpen && <DynamicPopover onClose={() => setIsOpen(false)} title={item.title} ref={itemRef}>\r\n                        <InnerPopperCmp onClose={() => setIsOpen(false)} />\r\n                    </DynamicPopover>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BsArrowRight } from 'react-icons/bs'\r\nimport { MdContentCopy } from 'react-icons/md'\r\nimport { GoArchive } from 'react-icons/go'\r\nimport { BsArrowCounterclockwise } from 'react-icons/bs'\r\nimport { AiOutlineMinus } from 'react-icons/ai'\r\nimport { MoveCard } from '../shared/popover-children/move-card'\r\nimport { CopyCard } from '../shared/popover-children/copy-card'\r\nimport { CardEditActionsItem } from './card-edit-actions-item'\r\nimport { EditSidebarLabel } from './edit-sidebar-label'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onArchiveCard, onUnArchiveCard, onRemoveCard } from '../../store/board.actions'\r\n\r\n\r\nconst _CardEditActions = ({ currCardId, board, onArchiveCard, onUnArchiveCard, onRemoveCard, goBack }) => {\r\n    const [isArchive, setIsArchive] = useState(false)\r\n    const [groupId, setGroupId] = useState(null)\r\n    const [currCard, setCurrCard] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const card = cardEditService.getCardById(currCardId, groupId)\r\n        setIsArchive(card.isArchive || false)\r\n        setGroupId(groupId)\r\n        setCurrCard(card)\r\n    }, [])\r\n\r\n    const handleArchiveCard = () => {\r\n        onArchiveCard(currCard, groupId, board)\r\n        setIsArchive(true)\r\n        goBack()\r\n    }\r\n\r\n    const handleUnArchiveCard = () => {\r\n        onUnArchiveCard(currCard, board)\r\n        setIsArchive(false)\r\n    }\r\n\r\n    const handleRemoveCard = () => {\r\n        onRemoveCard(currCard, board)\r\n    }\r\n\r\n    return (\r\n        <div className=\"pos-relative\">\r\n            <div className=\"card-edit-actions\">\r\n                <h3 className=\"sidebar-title\">Actions</h3>\r\n                <div className=\"actions-container\">\r\n                    {actions.map((item, idx) => (\r\n                        <CardEditActionsItem key={item.title + idx} item={item} />\r\n                    ))}\r\n                    {!isArchive ?\r\n                        <div className=\"label-wrapper\" onClick={handleArchiveCard}>\r\n                            <EditSidebarLabel Icon={GoArchive} title='Archive' />\r\n                        </div>\r\n                        : <>\r\n                            <div className=\"label-wrapper\" onClick={handleUnArchiveCard}>\r\n                                <EditSidebarLabel Icon={BsArrowCounterclockwise} title='Send to board' />\r\n                            </div>\r\n                            <div className=\"label-wrapper\" onClick={handleRemoveCard}>\r\n                                <EditSidebarLabel Icon={AiOutlineMinus} title='Delete' />\r\n                            </div>\r\n                        </>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst actions = [{ icon: BsArrowRight, title: 'Move', component: MoveCard }, { icon: MdContentCopy, title: 'Copy', component: CopyCard }]\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onArchiveCard,\r\n    onUnArchiveCard,\r\n    onRemoveCard\r\n}\r\n\r\nexport const CardEditActions = connect(mapStateToProps, mapDispatchToProps)(_CardEditActions);\r\n","import Avatar from 'react-avatar';\r\n\r\n\r\n\r\nexport function MemberAvatar({ member, size, style = {} }) {\r\n\r\n    function getSize() {\r\n        switch (size) {\r\n            case 'sm':\r\n                return 20\r\n            case 'lg':\r\n                return 50\r\n            case 'md':\r\n            default:\r\n                return 32\r\n        }\r\n    }\r\n    // src={member.imgUrl}\r\n    return <Avatar name={member.fullname} src={member.imgUrl} size={getSize()} style={style} round />\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BsCheck } from 'react-icons/bs';\r\nimport { onUpdateCard } from '../../store/board.actions';\r\nimport { MemberAvatar } from '../shared/member-avatar';\r\nimport { cardEditService } from '../../services/card-edit.service';\r\nimport { activityTxtMap } from '../../services/activity.service';\r\nimport { socketService } from '../../services/socket.service';\r\nimport { userService } from '../../services/user.service';\r\nimport { utilService } from '../../services/util.service';\r\n\r\nfunction _PopperMemberPreview({\r\n  member,\r\n  currCardId,\r\n  onUpdateCard,\r\n  user,\r\n  onAddUserMention,\r\n}) {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const groupId = cardEditService.getGroupId(currCardId);\r\n    const card = cardEditService.getCardById(currCardId, groupId);\r\n    const isMemberChecked = card.members?.find((m) => m._id === member._id);\r\n    setIsChecked(isMemberChecked);\r\n  }, [currCardId, member._id]);\r\n\r\n  const handleMemberClick = () => {\r\n    setIsChecked(!isChecked);\r\n    const res = cardEditService.handleMemberChange(member._id);\r\n    const activity = isChecked\r\n      ? {\r\n        txt: activityTxtMap.removeMemberFromCard(member.fullname),\r\n        currCardId,\r\n      }\r\n      : { txt: activityTxtMap.addMemberToCard(member.fullname), currCardId };\r\n    onUpdateCard(...res, activity);\r\n    const groupId = res[1]\r\n    const board = res[2];\r\n    const card = res[0];\r\n    const mention = {\r\n      id: utilService.makeId(),\r\n      user,\r\n      action: isChecked ? 'Removed' : 'Added',\r\n      board: {boardId: board._id, title: board.title},\r\n      card: {cardId: card.id, title: card.title},\r\n      groupId,\r\n      createdAt: Date.now()\r\n    };\r\n    socketService.emit('send-mention', ({userId: member._id, mention}))\r\n    userService.addUserMention(member._id, mention)\r\n  };\r\n\r\n  return (\r\n    <div className='popper-member-preview flex' onClick={handleMemberClick}>\r\n      <div className='list-item-layover'></div>\r\n      <div style={{ width: 32 }}>\r\n        <MemberAvatar member={member} />\r\n      </div>\r\n      <div className='popper-member-name'>\r\n        <p>{member.fullname}</p>\r\n      </div>\r\n      {isChecked && (\r\n        <div className='popper-member-check'>\r\n          <BsCheck />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currCardId: state.boardModule.currCardId,\r\n    user: state.userModule.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateCard\r\n\r\n};\r\n\r\nexport const PopperMemberPreview = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_PopperMemberPreview);\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PopperMemberPreview } from '../../card-edit/popper-member-preview'\r\n\r\nconst _MemberList = ({ board }) => {\r\n    const [members, setMembers] = useState(board.members)\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        const matchingMembers = board.members.filter(member => member.fullname.toLowerCase().includes(value.toLowerCase()))\r\n        setMembers(matchingMembers)\r\n    }\r\n\r\n    return (<div className=\"member-list\">\r\n        <input className=\"search-input\" type=\"text\" autoFocus placeholder=\"Search...\" onChange={handleChange} />\r\n        <h4>Board Members</h4>\r\n        <div className=\"flex column\">\r\n            {members.map(member => (\r\n                <PopperMemberPreview\r\n                    key={member._id}\r\n                    member={member}\r\n                />\r\n            ))}\r\n        </div>\r\n    </div>)\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nexport const MemberList = connect(mapStateToProps)(_MemberList)","import React, { useState } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\n\r\n\r\n\r\nconst _CardEditDate = ({ onUpdateCard, onClose }) => {\r\n    const [startDate] = useState(new Date())\r\n    const [endDate] = useState(null)\r\n    const [dueDate, setDueDate] = useState(null)\r\n\r\n    const onChange = (date) => {\r\n        setDueDate(date.getTime())\r\n    }\r\n\r\n    const onReset = () => {\r\n        setDueDate(null)\r\n        handleSubmit()\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const res = cardEditService.handleDueDateChange(dueDate)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div className=\"date-picker\">\r\n            <DatePicker\r\n                selected={startDate}\r\n                onChange={onChange}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n                // selectsRange\r\n                inline\r\n                formatWeekDay={nameOfDay => nameOfDay.substr(0, 3)}\r\n            />\r\n            <div className=\"picker-btns flex column\">\r\n                <button className=\"card-edit-btn secondary long\" onClick={handleSubmit}>Save</button>\r\n                <button className=\"card-edit-btn long\" onClick={onReset}>Remove</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditDate = connect(null, mapDispatchToProps)(_CardEditDate);\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BiPencil } from 'react-icons/bi'\r\nimport { BsCheck } from 'react-icons/bs'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\nfunction _PopperLabelPreview({ label, currCardId, onUpdateCard, onGoBack }) {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const card = cardEditService.getCardById(currCardId, groupId)\r\n        const isLabelChecked = card.labelIds?.some(l => l === label.id)\r\n        setIsChecked(isLabelChecked)\r\n    }, [currCardId, label.id])\r\n\r\n    const handleLabelClick = () => {\r\n        setIsChecked(!isChecked)\r\n        const res = cardEditService.handleLabelChange(label.id)\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        // const activity = {txt: activityTxtMap.addLabel(label.title), groupId: groupId}\r\n        const activity = (isChecked) ? { txt: activityTxtMap.removeLabel(label.title), groupId: groupId } : { txt: activityTxtMap.addLabel(label.title), groupId: groupId }\r\n        onUpdateCard(...res, activity)\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-preview flex\" >\r\n            {/* <div className='list-item-layover'></div> */}\r\n            <div className=\"label-preview flex\" >\r\n                <div className=\"popper-label \" style={{ backgroundColor: label.color }} onClick={handleLabelClick}>\r\n                    <span> {label.title || ''}</span>\r\n                    {isChecked && <div className='popper-label-check'><BsCheck /></div>}\r\n                </div>\r\n                <div className=\"icon-wrapper\" onClick={() => onGoBack(label.color)}><BiPencil /></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopperLabelPreview = connect(mapStateToProps, mapDispatchToProps)(_PopperLabelPreview);\r\n","import React, { useState } from 'react'\r\nimport { PopperLabelPreview } from '../../card-edit/popper-label-preview'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction _LabelList({ board, onGoBack }) {\r\n    const [labels, setLabels] = useState(board.labels)\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        const matchingLabels = board.labels.filter(label => label.title.toLowerCase().includes(value.toLowerCase()))\r\n        setLabels(matchingLabels)\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-list-container\">\r\n            <input className=\"search-input\" type=\"text\" autoFocus placeholder=\"Search labels...\" onChange={handleChange} />\r\n            <h4>Labels</h4>\r\n            <div className=\"flex column label-list\">\r\n                {labels.map(label => <PopperLabelPreview key={label.id} label={label} onGoBack={onGoBack} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nexport const LabelList = connect(mapStateToProps)(_LabelList)\r\n\r\n\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../../services/activity.service'\r\n\r\nexport function _PopoverChecklist({ onUpdateCard, onClose }) {\r\n    const inputRef = useRef()\r\n    const [title, setTitle] = useState('Checklist')\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n        inputRef.current.select()\r\n    }, [])\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        setTitle(value)\r\n    }\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const res = cardEditService.handleChecklistChange('addChecklist', null, title)\r\n        const activity = {txt: activityTxtMap.addChecklist(title)}\r\n        onUpdateCard(...res, activity)\r\n        setTitle('')\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <form className=\"popover-checklist\" onSubmit={handleSubmit}>\r\n            <label htmlFor=\"checklist-title\">Title</label>\r\n            <input className=\"search-input\" ref={inputRef} value={title} onChange={handleChange} />\r\n            <button className=\"card-edit-btn secondary\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopoverChecklist = connect(mapStateToProps, mapDispatchToProps)(_PopoverChecklist);","export function uploadImg(ev) {\r\n    const CLOUD_NAME = 'dh4cdbmav'\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    // console.log('target', ev.target)\r\n    formData.append('file', ev.target.files[0])\r\n    console.log('ev.target.files[0]):', ev.target.files[0])\r\n    formData.append('upload_preset', 'wbls0qti');\r\n    // console.log('formData:', formData)\r\n\r\n    return fetch(UPLOAD_URL, {\r\n        method: 'POST',\r\n        body: formData\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => res.url)\r\n        .catch(err => console.error(err))\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { uploadImg } from '../../../services/cloudinary.service'\r\n\r\n\r\n\r\nfunction _PopoverAttachFile({ onUpdateCard, onClose }) {\r\n    const [title, setTitle] = useState('')\r\n    const [url, setUrl] = useState('')\r\n\r\n    const urlRef = useRef()\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const res = cardEditService.handleFileAdd(url, title)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    const handleImageUpload = async (ev) => {\r\n        const title = ev.target.files[0].name\r\n        const url = await uploadImg(ev)\r\n        const res = cardEditService.handleFileAdd(url, title)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div className=\"popover-attach-file\">\r\n            <div className=\"attach-from\">\r\n                <label htmlFor=\"upload\" >\r\n                    <span aria-hidden=\"true\">Computer</span>\r\n                    <input type=\"file\" id=\"upload\" style={{ display: 'none' }} onChange={handleImageUpload} />\r\n                </label>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"attach-link\">\r\n                <label>Attach a link</label>\r\n                <input ref={urlRef} className=\"search-input\" placeholder=\"Paste any link here...\" value={url} onChange={(ev) => setUrl(ev.target.value)} />\r\n                {url && <><label>Link name (optional)</label><input className=\"search-input\" value={title} onChange={(ev) => setTitle(ev.target.value)} /></>}\r\n                <button className=\"card-edit-btn\">Attach</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopoverAttachFile = connect(mapStateToProps, mapDispatchToProps)(_PopoverAttachFile);\r\n\r\n","import React, { useMemo, useRef, useState } from 'react'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { EditSidebarLabel } from '../edit-sidebar-label'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\n\r\n\r\nfunction _CardEditAddToCardItem({ item, currCardId }) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [color, setColor] = useState('')\r\n    const itemRef = useRef()\r\n    const InnerPopperCmp = useMemo(() => item.component, [item])\r\n    const EditComponent = useMemo(() => item.editComponent, [item])\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const currCard = cardEditService.getCardById(currCardId, groupId)\r\n\r\n    const checkIfCover = () => {\r\n        return (item.title !== 'Cover') || (!currCard?.style?.bgColor && !currCard?.style?.imgUrl)\r\n    }\r\n\r\n    const handleEdit = (color) => {\r\n        if (isEdit) setIsEdit(false)\r\n        else {\r\n            setColor(color)\r\n            setIsEdit(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-wrapper\">\r\n            {checkIfCover() && <div ref={itemRef} className={`pos-relative ${isOpen ? 'popover-open' : ''}`}>\r\n                <span onClick={() => setIsOpen(!isOpen)}>\r\n                    <EditSidebarLabel Icon={item.icon} title={item.title} />\r\n                </span>\r\n                {\r\n                    isOpen && Boolean(item.editComponent) && <DynamicPopover onGoBack={handleEdit} onClose={() => setIsOpen(false)} title={item.title} ref={itemRef} isMultiView={isEdit}>\r\n                        {isEdit ? <EditComponent color={color} onGoBack={handleEdit} onClose={() => setIsOpen(false)} /> : <InnerPopperCmp onGoBack={handleEdit} onClose={() => setIsOpen(false)} />}\r\n                    </DynamicPopover>\r\n                }\r\n                {\r\n                    isOpen && !Boolean(item.editComponent) && <DynamicPopover onClose={() => setIsOpen(false)} title={item.title} ref={itemRef}>\r\n                        <InnerPopperCmp onClose={() => setIsOpen(false)} />\r\n                    </DynamicPopover>\r\n                }\r\n            </div>}\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nexport const CardEditAddToCardItem = connect(mapStateToProps, null)(_CardEditAddToCardItem);\r\n","import React, { Component } from 'react'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\n\r\nclass _PopperCoverEdit extends Component {\r\n    state = {\r\n        currCard: null,\r\n        groupId: null,\r\n        selectedEl: null,\r\n        initialStyle: null,\r\n        currStyle: null,\r\n        selectedSize: 'half'\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { currCardId } = this.props\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const currCard = cardEditService.getCardById(currCardId, groupId)\r\n        if (currCard.style) {\r\n            if (currCard.style.isFull) {\r\n                this.setState({ selectedSize: (currCard.style.isFull) ? 'full' : 'half' })\r\n            }\r\n            if (currCard.style.bgColor) this.setState({ currStyle: { backgroundColor: currCard.style.bgColor } })\r\n            else if (currCard.style.imgUrl) this.setState({ currStyle: { backgroundImage: `url(${currCard.style.imgUrl})` } })\r\n        }\r\n        this.setState({ currCard, groupId })\r\n    }\r\n\r\n    handleClick = (ev, value, type) => {\r\n        ev.target.classList.add('selected')\r\n        this.state.selectedEl?.classList.remove('selected')\r\n        this.setState({ selectedEl: ev.target })\r\n        const { board, onUpdateCard } = this.props\r\n        const { currCard, groupId } = this.state\r\n        this.setState({ currStyle: type === 'color' ? { backgroundColor: value } : { backgroundImage: `url(${value})` } })\r\n        currCard.style = type === 'color' ? { bgColor: value } : { imgUrl: value }\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    handleCoverRemove = () => {\r\n        const { board, onUpdateCard } = this.props\r\n        const { currCard, groupId } = this.state\r\n        currCard.style = null\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    handleSizeChange = (size) => {\r\n        const { board, onUpdateCard } = this.props\r\n        const { currCard, groupId } = this.state\r\n        currCard.style.isFull = (size === 'full') ? true : false\r\n        this.setState({ selectedSize: size })\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    render() {\r\n        const { currCard, currStyle, selectedSize } = this.state\r\n        if (!currCard) return ''\r\n        const colors = ['#7bc86c', '#f5dd29', '#ffaf3f', '#ef7564', '#cd8de5', '#517dab', '#29cce5', '#6deca9', '#ff8ed4', '#172b4d']\r\n        console.log(currStyle);\r\n        return (\r\n            <section className=\"modal-cover-edit flex column\">\r\n\r\n                <div className=\"size-container flex column\">\r\n                    <h4>Size</h4>\r\n                    <div className=\"size-options flex\">\r\n\r\n                        <div className={`size-option half ${selectedSize === 'half' ? 'selected' : ''}`} onClick={() => this.handleSizeChange('half')}>\r\n                            <div className=\"colored-half\" style={currStyle}></div>\r\n                            <div className=\"line-wrapper-half\">\r\n                                <div className=\"first-line\"></div>\r\n                                <div className=\"second-line\"></div>\r\n                                <div className=\"third-line flex\">\r\n                                    <div className=\"first-fragment\"></div>\r\n                                    <div className=\"second-fragment\"></div>\r\n                                </div>\r\n                                <div className=\"circle\"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={`size-option full ${selectedSize === 'full' ? 'selected' : ''}`} data-size=\"full\" onClick={() => this.handleSizeChange('full')} style={currStyle}>\r\n                            <div className=\"line-wrapper-full\">\r\n                                <div className=\"first-line\"></div>\r\n                                <div className=\"second-line\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"card-edit-btn\" onClick={this.handleCoverRemove}>Remove cover</button>\r\n                </div>\r\n\r\n                <div className=\"flex column\">\r\n                    <h4>Colors</h4>\r\n                    <div className=\"color-container flex\">{colors.map((color, i) => <div key={i} className=\"cover-color-option\" style={{ backgroundColor: color }} onClick={ev => this.handleClick(ev, color, 'color')}></div>)}</div>\r\n                </div>\r\n\r\n                {currCard.attachments && Boolean(currCard.attachments.length) && <div className=\"flex column\">\r\n                    <h4>Attachments</h4>\r\n                    <div className=\"attachments-container flex\">{currCard.attachments.map(a => <div key={a.id} className=\"cover-image-option\" style={{ backgroundImage: `url(${a.url})` }} onClick={ev => this.handleClick(ev, a.url, 'img')}></div>)}</div>\r\n                </div>}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopperCoverEdit = connect(mapStateToProps, mapDispatchToProps)(_PopperCoverEdit);\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { AiOutlineCheck } from 'react-icons/ai'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { utilService } from '../../../services/util.service'\r\nimport { onUpdateBoard, onUpdateCard } from '../../../store/board.actions'\r\n\r\nfunction _LabelEdit({ color, board, onUpdateBoard, onClose, onGoBack, onUpdateCard }) {\r\n    const [selectedColor, setSelectedColor] = useState(null)\r\n    const [title, setTitle] = useState('')\r\n\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        setSelectedColor(color)\r\n        const label = board.labels.find(label => label.color === color)\r\n        setTitle(label?.title || '')\r\n        inputRef.current?.select()\r\n    }, [])\r\n\r\n    const handleClick = (ev) => {\r\n        setSelectedColor(ev.target.dataset.color)\r\n        const label = board.labels.find(label => label.color === ev.target.dataset.color)\r\n        setTitle(label?.title || '')\r\n    }\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        setTitle(value)\r\n    }\r\n\r\n    const handleSumbit = () => {\r\n        const boardToSave = { ...board }\r\n        let label = boardToSave.labels.find(label => label.color === selectedColor)\r\n        if (label) label.title = title\r\n        else {\r\n            label = { id: utilService.makeId(), color: selectedColor, title }\r\n            boardToSave.labels.push(label)\r\n        }\r\n        onUpdateBoard({ type: '' }, boardToSave)\r\n        onGoBack()\r\n        onClose()\r\n\r\n        const res = cardEditService.handleLabelChange(label.id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-edit\">\r\n            <div>\r\n                <label>Name</label>\r\n                <input ref={inputRef} className=\"search-input\" onChange={handleChange} value={title} />\r\n            </div>\r\n\r\n            <div>\r\n                <label>Select a color</label>\r\n                <div className=\"color-container flex\">\r\n                    {colors.map((c, i) => {\r\n                        return (<div key={i} data-color={c} className=\"label-color-option\" style={{ backgroundColor: c }} onClick={handleClick}\r\n                        >{(c === selectedColor) && <span><AiOutlineCheck /></span>}</div>)\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btns-container\">\r\n                <button className=\"card-edit-btn save-btn\" onClick={handleSumbit}>Save</button>\r\n                <button className=\"card-edit-btn delete-btn\">Delete</button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst colors = ['#7bc86c', '#f5dd29', '#ffaf3f', '#ef7564', '#cd8de5', '#517dab', '#29cce5', '#6deca9', '#ff8ed4', '#172b4d']\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n    onUpdateBoard\r\n}\r\n\r\nexport const LabelEdit = connect(mapStateToProps, mapDispatchToProps)(_LabelEdit);\r\n","import React from 'react'\r\nimport { MemberList } from '../../shared/popover-children/member-list'\r\nimport { CardEditDate } from '../../shared/popover-children/card-edit-date'\r\nimport { LabelList } from '../../shared/popover-children/label-list'\r\nimport { BsClock, BsCardChecklist } from 'react-icons/bs'\r\nimport { MdLabelOutline } from 'react-icons/md'\r\nimport { FiPaperclip } from 'react-icons/fi'\r\nimport { BiUser } from 'react-icons/bi'\r\nimport { PopoverChecklist } from '../../shared/popover-children/popover-checklist'\r\nimport { PopoverAttachFile } from '../../shared/popover-children/popover-attach-file'\r\nimport { CardEditAddToCardItem } from './card-edit-add-to-card-item'\r\nimport { PopperCoverEdit } from '../../shared/popover-children/popper-cover-edit'\r\nimport { CgCreditCard } from 'react-icons/cg'\r\nimport { LabelEdit } from '../../shared/popover-children/label-edit'\r\n\r\nexport const CardEditAddToCard = () => (\r\n    <div style={{ position: 'relative' }}>\r\n        <div className=\"add-to-card\">\r\n            <h3 className=\"sidebar-title\">Add to card</h3>\r\n            <div className=\"add-to-card-container\">\r\n            {addToCardItems.map((item, idx) => (\r\n                <CardEditAddToCardItem key={item.title + idx} item={item} />\r\n            ))}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst addToCardItems = [{ icon: BiUser, title: 'Members', component: MemberList }, { icon: MdLabelOutline, title: 'Labels', component: LabelList, editComponent: LabelEdit }, { icon: BsCardChecklist, title: 'Checklist', component: PopoverChecklist }, { icon: BsClock, title: 'Dates', component: CardEditDate }, { icon: FiPaperclip, title: 'Attachment', component: PopoverAttachFile }, { icon: CgCreditCard, title: 'Cover', component: PopperCoverEdit }]\r\n","import React, { Component } from 'react'\r\nimport { CardEditActions } from './card-edit-actions'\r\nimport { CardEditAddToCard } from './add-to-card/card-edit-add-to-card'\r\n\r\nexport class CardEditSidebar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar\">\r\n                <CardEditAddToCard />\r\n                <CardEditActions goBack={this.props.goBack} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { BsChevronDown } from 'react-icons/bs'\r\nimport { CardEditDate } from '../../shared/popover-children/card-edit-date'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { socketService } from '../../../services/socket.service'\r\n\r\nconst _CardEditDueDate = ({ currCardId, onUpdateCard, board }) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const dueDateRef = useRef()\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const currCard = cardEditService.getCardById(currCardId, groupId)\r\n    const dueDate = currCard?.dueDate\r\n    const time = cardEditService.getFormattedTime(dueDate)\r\n\r\n    const getDueDateLabel = () => {\r\n        if (currCard.isComplete) return { title: 'Complete', bgColor: '#61bd4f' }\r\n        if ((dueDate - Date.now()) < 0) return { title: 'Overdue', bgColor: '#eb5a46' }\r\n        if ((dueDate - Date.now()) <= (1000 * 60 * 60 * 24)) return { title: 'Due soon', bgColor: '#f2d600' }\r\n        else return { title: '', bgColor: '' }\r\n    }\r\n\r\n    const onToggleComplete = () => {\r\n        currCard.isComplete = !currCard.isComplete\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {dueDate && <div className=\"due-date-container\">\r\n                <h3 className=\"small-title\">Due date</h3>\r\n                <div className=\"due-date\" >\r\n                    <input type=\"checkbox\" className=\"main-checkbox\" checked={currCard.isComplete} onChange={onToggleComplete} />\r\n                    <div className=\"card-edit-btn\" ref={dueDateRef}>\r\n                        <span className=\"due-date-time\">{time}</span>\r\n                        <span style={{ backgroundColor: getDueDateLabel().bgColor, textTransform: 'uppercase', fontSize: 12, padding: '0 3px', borderRadius: 2 }}>{getDueDateLabel().title}</span>\r\n                        <span className=\"due-date-icon\"><BsChevronDown /></span>\r\n                        <div className=\"list-item-layover\" onClick={() => setIsOpen(!isOpen)}></div>\r\n                        {isOpen && <DynamicPopover onClose={() => setIsOpen(false)} title={'Dates'} ref={dueDateRef}>\r\n                            <CardEditDate onClose={() => setIsOpen(false)} />\r\n                        </DynamicPopover>}\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditDueDate = connect(mapStateToProps, mapDispatchToProps)(_CardEditDueDate);\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { LabelList } from '../../shared/popover-children/label-list'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { LabelEdit } from '../../shared/popover-children/label-edit'\r\n\r\nconst _CardEditLabels = ({ currCardId, board }) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [color, setColor] = useState('')\r\n    const addButtonRef = useRef()\r\n\r\n    const getCardLabels = (labelIds) => (\r\n        labelIds?.map(id => board.labels.find(label => label.id === id))\r\n    )\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const labelIds = cardEditService.getCardById(currCardId, groupId).labelIds\r\n    const labels = getCardLabels(labelIds)\r\n\r\n    const handleEdit = (color) => {\r\n        if (isEdit) setIsEdit(false)\r\n        else {\r\n            setColor(color)\r\n            setIsEdit(true)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {labelIds?.length ? <div className=\"labels-container\">\r\n                <h3 className=\"small-title\">Labels</h3>\r\n                <div className=\"labels\">\r\n                    {labels.map(label => <div key={label.id} className=\"card-label\" style={{ backgroundColor: label.color }}>\r\n                        {label.title || ''}\r\n                    </div>)}\r\n                    <div\r\n                        ref={addButtonRef}\r\n                        className=\"card-label add-label pos-relative\"\r\n                    >\r\n                        <div className=\"list-item-layover\" onClick={() => setIsOpen(!isOpen)}></div>\r\n                        <AiOutlinePlus />\r\n                        {isOpen && <DynamicPopover onGoBack={handleEdit} onClose={() => setIsOpen(false)} title={'Labels'} ref={addButtonRef} isMultiView={isEdit}>\r\n                            {!isEdit ? <LabelList onGoBack={handleEdit} onClose={() => setIsOpen(false)} /> : <LabelEdit onGoBack={handleEdit} color={color} onClose={() => setIsOpen(false)} />}\r\n                        </DynamicPopover>}\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nexport const CardEditLabels = connect(mapStateToProps, null)(_CardEditLabels);\r\n","import React from 'react'\r\nimport { MemberAvatar } from '../member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\n\r\nconst _MiniUser = ({ member, onUpdateCard }) => {\r\n\r\n    const onRemoveUser = () => {\r\n        const res = cardEditService.handleMemberChange(member._id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mini-user flex column\">\r\n\r\n            <div className=\"main flex\">\r\n                <MemberAvatar size=\"lg\" member={member} />\r\n                <div>\r\n                    <h3 className=\"mini-user-fullname\">{member.fullname}</h3>\r\n                    <p>{member.username}</p>\r\n                    {/* <p>Edit profile info</p> */}\r\n                </div>\r\n            </div>\r\n\r\n            <p className=\"remove-member\" onClick={onRemoveUser}>Remove from card</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const MiniUser = connect(null, mapDispatchToProps)(_MiniUser);\r\n","import React, { useRef, useState } from 'react'\r\nimport { DynamicPopover } from '../shared/dynamic-popover'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { MiniUser } from '../shared/popover-children/mini-user'\r\n\r\nexport function MembersContainerMemberPreview({ member }) {\r\n    const [isPreviewOpen, setIsPreviewOpen] = useState(false)\r\n    const userButtonRef = useRef()\r\n    return (\r\n        <div key={member._id} className=\"card-member pos-relative\" ref={userButtonRef}>\r\n            <span style={{ cursor: 'pointer' }}>\r\n                <div className=\"list-item-layover round\" onClick={() => setIsPreviewOpen(!isPreviewOpen)}></div>\r\n                <MemberAvatar member={member} />\r\n            </span>\r\n            {isPreviewOpen && <DynamicPopover onClose={() => setIsPreviewOpen(false)} title={null} ref={userButtonRef}>\r\n                <MiniUser member={member} />\r\n            </DynamicPopover>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { MemberList } from '../../shared/popover-children/member-list'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { MembersContainerMemberPreview } from '../members-container-member-preview'\r\n\r\nconst _CardEditMembers = ({ currCardId }) => {\r\n    const [isListOpen, setIsListOpen] = useState(false)\r\n    \r\n    const addButtonRef = useRef()\r\n   \r\n    let members\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    members = cardEditService.getCardById(currCardId, groupId).members\r\n\r\n    return (\r\n        <>\r\n            {members?.length ? <div className=\"members-container\">\r\n                <h3 className=\"small-title\">Members</h3>\r\n                <div className=\"members\">\r\n                    {members.map(member => <MembersContainerMemberPreview key={member._id} member={member} />)}\r\n\r\n                    <div\r\n                        ref={addButtonRef}\r\n                        className=\"card-member add-member pos-relative\"\r\n                    >\r\n                        <div className=\"list-item-layover round\" onClick={() => setIsListOpen(!isListOpen)}></div>\r\n                        <AiOutlinePlus />\r\n                        {isListOpen && <DynamicPopover onClose={() => setIsListOpen(false)} title={'Members'} ref={addButtonRef}>\r\n                            <MemberList />\r\n                        </DynamicPopover>}\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nexport const CardEditMembers = connect(mapStateToProps, null)(_CardEditMembers);\r\n\r\n\r\n","import { CardEditDueDate } from './labels-members/card-edit-duedate'\r\nimport { CardEditLabels } from './labels-members/card-edit-labels'\r\nimport { CardEditMembers } from './labels-members/card-edit-members'\r\n\r\nexport const LabelsMembers = () => (\r\n    <div className=\"members-labels-container\">\r\n        <CardEditMembers />\r\n        <CardEditLabels/>\r\n        <CardEditDueDate />\r\n    </div>\r\n)","import React from 'react'\r\n\r\nexport function ProgressBar({ bgColor, completed }) {\r\n\r\n    const containerStyles = {\r\n        height: 8,\r\n        width: '100%',\r\n        backgroundColor: \"#e0e0de\",\r\n        borderRadius: 50,\r\n        margin: '10px 0 10px 0px'\r\n    }\r\n\r\n    const fillerStyles = {\r\n        height: '100%',\r\n        width: `${completed}%`,\r\n        backgroundColor: bgColor,\r\n        borderRadius: 'inherit',\r\n        textAlign: 'right',\r\n        transition: 'width .5s ease-in-out'\r\n    }\r\n\r\n    return (\r\n        <div className=\"outer-container\" style={containerStyles}>\r\n            <div style={fillerStyles}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { IoMdClose } from 'react-icons/io'\r\n\r\nclass _TodoItem extends Component {\r\n    state = {\r\n        todoTitle: '',\r\n        isEditTodo: false\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    todoTextareaRef = React.createRef()\r\n    saveTodoBtnRef = React.createRef()\r\n\r\n    handleClick = (e) => {\r\n        if (this.todoTextareaRef?.current?.contains(e.target) || this.saveTodoBtnRef?.current?.contains(e.target) || this.newTodoTextarea?.current?.contains(e.target)) {\r\n            return\r\n        }\r\n        this.setState({ isEditTodo: false, todoTitle: '' })\r\n    }\r\n\r\n    handleMarkTodo = () => {\r\n        const res = cardEditService.handleChecklistChange('markTodo', this.props.checklistId, this.props.todo.id)\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    handleRemoveTodo = () => {\r\n        const res = cardEditService.handleChecklistChange('removeTodo', this.props.checklistId, this.props.todo.id)\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    handleTitleChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onChangeTitle = (ev) => {\r\n        ev.preventDefault()\r\n        const { checklistId, todo, onUpdateCard } = this.props\r\n        const { todoTitle } = this.state\r\n        const res = cardEditService.handleChecklistChange('changeTitle', checklistId, todo.id, todoTitle)\r\n        onUpdateCard(...res)\r\n        this.setState({ isEditTodo: false, todoTitle: '' })\r\n    }\r\n\r\n    render() {\r\n        const { todo } = this.props\r\n        const { isEditTodo, todoTitle } = this.state\r\n        return (\r\n            <div className=\"flex align-center todo-item\">\r\n                <input className=\"main-checkbox\" type=\"checkbox\" name={todo.id} checked={todo.isDone} onChange={this.handleMarkTodo} onClick={() => this.setState({ todoTitle: todo.title })}\r\n                    style={{ alignSelf: isEditTodo ? 'flex-start' : 'center' }} />\r\n                {!isEditTodo ? (\r\n                    <div>\r\n                        <span\r\n                            className={todo.isDone ? 'done' : ''}\r\n                            onClick={() => this.setState({ isEditTodo: true })}\r\n                        >\r\n                            {todo.title}\r\n                        </span>\r\n                        <span\r\n                            className=\"remove-todo-icon\"\r\n                            onClick={this.handleRemoveTodo}\r\n                        >\r\n                            <VscTrash />\r\n                        </span>\r\n                    </div>\r\n                ) :\r\n                    <form onSubmit={this.onChangeTitle} style={{ paddingBottom: 9 }}>\r\n                        <textarea\r\n                            className=\"description-textarea edit-todo\"\r\n                            onFocus={() => this.setState({ todoTitle: todo.title })}\r\n                            autoFocus\r\n                            name=\"todoTitle\"\r\n                            value={todoTitle}\r\n                            ref={this.todoTextareaRef}\r\n                            onChange={this.handleTitleChange} />\r\n\r\n                        <div className=\"description-btns\">\r\n                            <button ref={this.saveTodoBtnRef} className=\"card-edit-btn secondary\">Save</button>\r\n                            <button onClick={() => this.setState({ isEditTodo: false, todoTitle: '' })}><IoMdClose style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center' }} /></button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n}\r\n\r\nexport const TodoItem = connect(mapStateToProps, mapDispatchToProps)(_TodoItem);\r\n\r\n","import React, { Component } from 'react'\r\nimport { ProgressBar } from './progress-bar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { utilService } from '../../services/util.service'\r\nimport { BsCardChecklist } from 'react-icons/bs'\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport { TodoItem } from './todo-item'\r\n\r\nexport class _ChecklistEdit extends Component {\r\n    state = {\r\n        percentage: 0,\r\n        isAddTodo: false,\r\n        newTodo: ''\r\n    }\r\n\r\n    saveTodoBtnRef = React.createRef()\r\n    addTodoBtnRef = React.createRef()\r\n    newTodoTextarea = React.createRef()\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n        if (this.props.checklist.todos) this.setTodoPercentage()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.board !== this.props.board) {\r\n            this.setTodoPercentage()\r\n        }\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        if (this.saveTodoBtnRef?.current?.contains(e.target) || this.addTodoBtnRef?.current?.contains(e.target) || this.newTodoTextarea?.current?.contains(e.target)) {\r\n            return\r\n        }\r\n        this.setState({ isAddTodo: false, newTodo: '' })\r\n    }\r\n\r\n    setTodoPercentage = (todos = this.props.checklist.todos) => {\r\n        if (!todos?.length && !this.props.checklist?.todos.length) {\r\n            this.setState({ percentage: 0 })\r\n            return\r\n        }\r\n        const doneTodos = todos.filter(todo => todo.isDone)\r\n        const num = (doneTodos.length / todos.length) * 100\r\n        const percentage = (Number.isInteger(num)) ? num : num.toFixed(0)\r\n        this.setState({ percentage })\r\n    }\r\n\r\n    handleInputChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onAddTodo = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isAddTodo: false, newTodo: '' })\r\n        const res = cardEditService.handleChecklistChange(\"addTodo\", this.props.checklist.id, { id: utilService.makeId(), title: ev.target[0].value, isDone: false })\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    onRemoveChecklist = () => {\r\n        const res = cardEditService.handleChecklistChange(\"removeChecklist\", this.props.checklist.id)\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    render() {\r\n        const { checklist } = this.props\r\n        const { percentage, isAddTodo } = this.state\r\n        return (\r\n            <section className=\"checklist-preview flex column\">\r\n\r\n                <section className=\"flex space-between\">\r\n                    <div className=\"card-edit-title\">\r\n                        <span><BsCardChecklist /></span>\r\n                        <h3>{checklist.title}</h3>\r\n                    </div>\r\n                    <button className=\"card-edit-btn\" onClick={this.onRemoveChecklist}>Delete</button>\r\n                </section>\r\n\r\n                <div className=\"flex align-center\">\r\n                    <span style={{ fontSize: 11, width: 32, maxWidth: 32, minWidth: 32 }}>{percentage}%</span>\r\n                    <ProgressBar completed={percentage} bgColor={(percentage === 100) ? '#61bd4f' : '#5ba4cf'} />\r\n                </div>\r\n\r\n                {checklist.todos?.map(todo => {\r\n                    return <div className=\"todos-container\" key={todo.id}>\r\n                        <TodoItem todo={todo} checklistId={checklist.id} />\r\n                    </div>\r\n                })\r\n                }\r\n\r\n                {!isAddTodo\r\n                    ? <button className=\"card-edit-btn add-todo-btn\" style={{ alignSelf: 'flex-start' }} onClick={() => this.setState({ isAddTodo: true })}>Add an item</button>\r\n                    : <form onSubmit={this.onAddTodo}><textarea rows=\"2\"\r\n                        className=\"description-textarea add-todo\"\r\n                        ref={this.newTodoTextarea}\r\n                        autoFocus\r\n                        name=\"newTodo\"\r\n                        placeholder=\"Add an item\"\r\n                        onChange={this.handleInputChange} />\r\n\r\n                        <div className=\"description-btns add-todo-btns\">\r\n                            <button ref={this.addTodoBtnRef} className=\"card-edit-btn secondary\">Save</button>\r\n                            <button onClick={() => this.setState({ isAddTodo: false, newTodo: '' })}><IoMdClose style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center' }} /></button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const ChecklistEdit = connect(mapStateToProps, mapDispatchToProps)(_ChecklistEdit);\r\n","import React, { Component } from 'react'\r\nimport { IoMdClose, IoMdList } from 'react-icons/io'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\nclass _CardEditDescription extends Component {\r\n    state = {\r\n        currCard: {},\r\n        isDescriptionOpen: false\r\n    }\r\n\r\n    descriptionRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const currCard = cardEditService.getCardById(this.props.currCardId, groupId)\r\n        this.setState({ currCard })\r\n    }\r\n\r\n    setDescriptionTextarea = () => {\r\n        this.setState({ isDescriptionOpen: !this.state.isDescriptionOpen })\r\n    }\r\n\r\n    handleDescriptionChange = (card = this.state.currCard) => {\r\n        const { board } = this.props\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const activity = {txt: activityTxtMap.changeDescription(), card: card, groupId: groupId}\r\n        this.props.onUpdateCard(card, groupId, board, activity)\r\n    }\r\n\r\n    handleInputChange = ({ target: { value } }) => {\r\n        this.setState({ currCard: { ...this.state.currCard, description: value } })\r\n    }\r\n\r\n    render() {\r\n        const { currCard, isDescriptionOpen } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"description-container card-edit-title\">\r\n                    <span><IoMdList /></span>\r\n                    <h3>Description</h3>\r\n                    {currCard.description && !isDescriptionOpen && <button className=\"card-edit-btn\" onClick={() => {\r\n                        this.setDescriptionTextarea()\r\n                        this.descriptionRef.current.focus()\r\n                    }}> Edit</button>}\r\n                </div>\r\n                <div className=\"card-description\">\r\n                    <textarea\r\n                        ref={this.descriptionRef}\r\n                        className={`description-textarea ${isDescriptionOpen ? 'open' : ''} ${currCard.description ? 'filled' : ''}`}\r\n                        rows={isDescriptionOpen ? \"6\" : \"3\"}\r\n                        onFocus={this.setDescriptionTextarea}\r\n                        onBlur={() => {\r\n                            this.setDescriptionTextarea()\r\n                            this.handleDescriptionChange()\r\n                        }}\r\n                        value={currCard.description}\r\n                        onChange={this.handleInputChange}\r\n                        placeholder=\"Add a more detailed description...\"\r\n                    />\r\n                    {isDescriptionOpen &&\r\n                        <div className=\"description-btns\">\r\n                            <button className=\"card-edit-btn secondary\" onClick={() => this.handleDescriptionChange()}>Save</button>\r\n                            <button onClick={this.setDescriptionTextarea}><IoMdClose style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center' }} /></button>\r\n                        </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditDescription = connect(mapStateToProps, mapDispatchToProps)(_CardEditDescription);\r\n","import React from 'react'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\n\r\nfunction _CommentPreview({ comment, user, onUpdateCard }) {\r\n\r\n    const timeMsg = cardEditService.getCommentTime(comment.addedAt)\r\n\r\n    const onRemoveComment = () => {\r\n        const res = cardEditService.handleCommentRemove(comment.id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"comment-preview flex\">\r\n            <MemberAvatar member={comment.author} />\r\n            <div className=\"flex column comment-info\">\r\n                <div className=\"comment-data flex\">\r\n                    <span className=\"author-name\">{comment.author.fullname}</span>\r\n                    <span className=\"comment-time\">{timeMsg}</span>\r\n                </div>\r\n\r\n                <div className=\"comment-txt\">{comment.txt}</div>\r\n\r\n                {(comment.author._id === user._id) && <span className=\"remove-btn\" onClick={onRemoveComment}>Delete</span>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n}\r\n\r\nexport const CommentPreview = connect(mapStateToProps, mapDispatchToProps)(_CommentPreview)","import React from 'react'\r\nimport Moment from 'react-moment'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction _CardEditActivityPreview({ activity, board }) {\r\n\r\n    return (\r\n        <div className=\"activity-preview\">\r\n            <span className=\"member-avatar\"><MemberAvatar member={activity.byMember} /></span>\r\n            <div className=\"activity-text\">\r\n                <span className=\"user-fullname\">{activity.byMember.fullname} </span>\r\n                <p>{activity.txt}</p>\r\n                <Moment className=\"publish-time\" fromNow>{activity.createdAt}</Moment>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\n\r\nexport const CardEditActivityPreview = connect(mapStateToProps)(_CardEditActivityPreview)","import React, { Component } from 'react'\r\nimport { MdFormatListBulleted } from 'react-icons/md'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { Loader } from '../shared/loader'\r\nimport { CommentPreview } from './comment-preview'\r\nimport { CardEditActivityPreview } from './card-edit-activity-preview'\r\n\r\n\r\nclass _CardEditActivities extends Component {\r\n    state = {\r\n        isFocus: false,\r\n        isTxt: false,\r\n        commentTxt: '',\r\n        currCard: null,\r\n        activities: []\r\n    }\r\n\r\n    commentRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n        const { currCardId } = this.props\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const currCard = cardEditService.getCardById(currCardId, groupId)\r\n        this.getCardActivities()\r\n        this.setState({ currCard })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    getCardActivities = () => {\r\n        const { board, currCardId } = this.props\r\n        const activities = board.activities\r\n        const cardActivities = activities.filter(activity => activity.card.id === currCardId)\r\n        this.setState({ activities: cardActivities })\r\n    }\r\n\r\n    handleChange = ({ target: { value } }) => {\r\n        this.setState({ commentTxt: value })\r\n        if (value) this.setState({ isTxt: true })\r\n        else this.setState({ isTxt: false })\r\n    }\r\n\r\n    handleClick = e => {\r\n        if (this.commentRef?.current?.contains(e.target)) {\r\n            return\r\n        } else {\r\n            this.setState({ isFocus: false })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.stopPropagation()\r\n        const { isTxt, commentTxt } = this.state\r\n        const { onUpdateCard } = this.props\r\n        if (!isTxt) return\r\n        const res = cardEditService.onAddComment(commentTxt)\r\n        onUpdateCard(...res)\r\n        this.setState({ isFocus: false, commentTxt: '' })\r\n    }\r\n\r\n    render() {\r\n        const { currCard, isFocus, isTxt, commentTxt, activities } = this.state\r\n        const { member } = this.props\r\n        if (!currCard) return <Loader />\r\n        // console.log(this.props.board.activities);\r\n        console.log(activities);\r\n        return (\r\n            <div className=\"comments-section\">\r\n                <section className=\"flex space-between\">\r\n                    <div className=\"card-edit-title\">\r\n                        <span><MdFormatListBulleted /></span>\r\n                        <h3>Activity</h3>\r\n                    </div>\r\n                    <button className=\"card-edit-btn\">Show details</button>\r\n                </section>\r\n\r\n                {/* {!!activities && activities.map(a => <CardEditActivityPreview key={a.id} activity={a} />)} */}\r\n\r\n                <div className=\"add-comment-container flex\">\r\n                    <MemberAvatar member={member} />\r\n                    <div className=\"new-comment\" ref={this.commentRef} style={{ width: '100%', height: isFocus ? 84 : 36, backgroundColor: '#fff' }} onClick={() => this.setState({ isFocus: true })}>\r\n                        <textarea placeholder=\"Write a comment...\" style={{ width: '100%', height: isFocus ? '50%' : '100%' }} onChange={this.handleChange} value={commentTxt} />\r\n                        {isFocus && <button className={`save-comment-btn card-edit-btn ${isTxt ? 'active' : ''}`} onClick={this.handleSubmit}>Save</button>}\r\n                    </div>\r\n                </div>\r\n\r\n                {currCard.comments?.length > 0 && <div className=\"comments-container flex column\">\r\n                    {currCard.comments.map(comment => <CommentPreview key={comment.id} comment={comment} />)}\r\n                </div>}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n}\r\n\r\nexport const CardEditActivities = connect(mapStateToProps, mapDispatchToProps)(_CardEditActivities)","import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\n\r\nconst _EditAttachment = ({ attachment, onUpdateCard, onClose }) => {\r\n    const [title, setTitle] = useState(attachment.title)\r\n    const titleRef = useRef()\r\n\r\n    useEffect(() => {\r\n        titleRef?.current?.select()\r\n    }, [])\r\n\r\n    const handleSubmit = () => {\r\n        if (!title) return\r\n        const res = cardEditService.handleAttachmentEdit(attachment.id, title)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"edit-attachment\">\r\n            <label>Link name</label>\r\n            <input ref={titleRef} className=\"search-input\" value={title} onChange={(ev) => setTitle(ev.target.value)} />\r\n            <button className=\"card-edit-btn secondary\">Update</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        boards: state.boardModule.boards,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const EditAttachment = connect(mapStateToProps, mapDispatchToProps)(_EditAttachment)\r\n","import React, { useRef, useState } from 'react'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { CgCreditCard } from 'react-icons/cg'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { DynamicPopover } from '../shared/dynamic-popover'\r\nimport { EditAttachment } from '../shared/popover-children/edit-attachment'\r\n\r\n\r\nfunction _AttachmentPreview({ attachment, currCardId, board, onUpdateCard }) {\r\n    const [isEditOpen, setIsEditOpen] = useState()\r\n    const editRef = useRef()\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const currCard = cardEditService.getCardById(currCardId, groupId)\r\n    const addedAt = cardEditService.getUploadTime(attachment.addedAt)\r\n\r\n    const toggleCover = () => {\r\n        if (currCard?.style?.imgUrl === attachment.url) currCard.style = null\r\n        else currCard.style = { imgUrl: attachment.url }\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    const checkIfCover = () => {\r\n        return currCard?.style?.imgUrl === attachment.url\r\n    }\r\n\r\n    const onRemoveAttachment = () => {\r\n        const res = cardEditService.handleFileRemove(attachment.id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"attachment-preview flex\">\r\n            <a href={attachment.url} target=\"_blank\"><div className=\"image-container\">\r\n                <img src={attachment.url} alt={attachment.title} />\r\n            </div></a>\r\n\r\n            <div className=\"right-section flex column\">\r\n                <span className=\"attachment-title\">{attachment.title}</span>\r\n                <div className=\"middle-line\">\r\n                    <span className=\"added-at\">{addedAt}</span>-\r\n                    <span>Comment</span>-\r\n                    <span onClick={onRemoveAttachment}>Delete</span>-\r\n\r\n                    <div ref={editRef} className=\"pos-relative\">\r\n                        <div className=\"list-item-layover\" onClick={() => setIsEditOpen(!isEditOpen)}></div>\r\n                        <span>Edit</span>\r\n                        {isEditOpen && <DynamicPopover onClose={() => setIsEditOpen(false)} title={'Edit attachment'} ref={editRef}>\r\n                            <EditAttachment attachment={attachment} onClose={() => setIsEditOpen(false)} />\r\n                        </DynamicPopover>}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"attachment-cover\">\r\n                    <span><CgCreditCard /></span>\r\n                    <span onClick={toggleCover}>{checkIfCover() ? 'Remove cover' : 'Make cover'}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const AttachmentPreview = connect(mapStateToProps, mapDispatchToProps)(_AttachmentPreview);\r\n","import React, { Component } from 'react'\r\n// import { IoMdClose } from 'react-icons/io'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { FiPaperclip } from 'react-icons/fi'\r\nimport { AttachmentPreview } from './attachment-preview'\r\n\r\n\r\nclass _CardEditAttachment extends Component {\r\n    state = {\r\n        currCard: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const currCard = cardEditService.getCardById(this.props.currCardId, groupId)\r\n        this.setState({ currCard })\r\n    }\r\n\r\n    render() {\r\n        const { currCard } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"attachment-container card-edit-title\">\r\n                    <span><FiPaperclip /></span>\r\n                    <h3>Attachments</h3>\r\n                </div>\r\n                <div className=\"card-attachments\">\r\n                    {currCard?.attachments?.map((attachment, i) => <AttachmentPreview key={attachment.title + i} attachment={attachment} />)}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditAttachment = connect(mapStateToProps, mapDispatchToProps)(_CardEditAttachment);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { CardEditSidebar } from './card-edit/card-edit-sidebar'\r\nimport { LabelsMembers } from './card-edit/labels-members'\r\nimport { ChecklistEdit } from './card-edit/checklist-edit'\r\nimport { onUpdateCard, onSetCardId } from '../store/board.actions'\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport { TiCreditCard } from 'react-icons/ti'\r\nimport { CgCreditCard } from 'react-icons/cg'\r\nimport { CardEditDescription } from './card-edit/card-edit-description'\r\nimport { CardEditActivities } from './card-edit/card-edit-activities'\r\nimport { CardEditAttachment } from './card-edit/card-edit-attachment'\r\nimport { DynamicPopover } from './shared/dynamic-popover'\r\nimport { PopperCoverEdit } from './shared/popover-children/popper-cover-edit'\r\nimport { BsArchive } from 'react-icons/bs'\r\nimport { Loader } from './shared/loader'\r\n\r\nclass _CardEdit extends Component {\r\n  state = {\r\n    currCard: null,\r\n    currGroup: null,\r\n    isOpen: false,\r\n  }\r\n\r\n  modalRef = React.createRef()\r\n  coverRef = React.createRef()\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClick)\r\n    this.handleLoad()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClick)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.board !== this.props.board) this.handleLoad()\r\n  }\r\n\r\n  handleLoad = () => {\r\n    let currCard\r\n    let currGroup\r\n    const { cardId, groupId } = this.props.match.params\r\n    this.props.onSetCardId(cardId)\r\n    if (this.props.board.groups) {\r\n      currCard = this.getDataById(cardId, groupId).currentCard\r\n      currGroup = this.getDataById(cardId, groupId).currentGroup\r\n    }\r\n    this.setState({ currCard, currGroup })\r\n  }\r\n\r\n  handleClick = e => {\r\n    const { board } = this.props\r\n    if (!this.modalRef?.current?.contains(e.target)) {\r\n      this.props.history.push(`/board/${board._id}`)\r\n    }\r\n  }\r\n\r\n  getDataById = (cardId, groupId) => {\r\n    const board = this.props.board\r\n    const currentGroup = board.groups.find((group) => group.id === groupId)\r\n    let currentCard = currentGroup.cards.find((card) => card.id === cardId)\r\n    if (!currentCard) currentCard = this.props.board.archivedCards.find(card => card.id === cardId)\r\n    return { currentGroup, currentCard }\r\n  }\r\n\r\n  handleInputChange = ({ target: { name, value } }) => {\r\n    this.setState({ currCard: { ...this.state.currCard, [name]: value } })\r\n  }\r\n\r\n  handlePropertyChange = (card = this.state.currCard) => {\r\n    const { board } = this.props\r\n    const { groupId } = this.props.match.params\r\n    this.props.onUpdateCard(card, groupId, board)\r\n  }\r\n\r\n  checkCardBackground = () => {\r\n    const { currCard } = this.state\r\n    if (!currCard.style) return\r\n    if (currCard.style.bgColor)\r\n      return {\r\n        backgroundColor: currCard.style.bgColor,\r\n        minHeight: 116,\r\n        height: 116,\r\n      }\r\n    if (currCard.style.imgUrl)\r\n      return {\r\n        background: `center / contain no-repeat url(${currCard.style.imgUrl})`,\r\n        objectFit: 'cover',\r\n        minHeight: 160,\r\n        height: 160,\r\n      }\r\n  }\r\n\r\n  goBack = () => {\r\n    const { board } = this.props\r\n    this.props.history.push(`/board/${board._id}`)\r\n  }\r\n\r\n  render() {\r\n    const { currCard, currGroup } = this.state\r\n    const { board } = this.props\r\n    if (!currCard) return <Loader />\r\n    const bg = this.checkCardBackground()\r\n    return (\r\n      <div className='edit-modal-container'>\r\n\r\n        <section className='card-edit' ref={this.modalRef}>\r\n          {currCard.style && <div className='card-edit-bg' style={bg}></div>}\r\n          <Link to={`/board/${board._id}`}>\r\n            <button className='close-modal-btn'>\r\n              <IoMdClose />\r\n            </button>\r\n          </Link>\r\n\r\n          {currCard.style && (\r\n            <div ref={this.coverRef} className='btn-wrapper pos-relative'>\r\n              <button\r\n                className='change-cover-btn'\r\n                onClick={() => this.setState({ isOpen: !this.state.isOpen })}\r\n              >\r\n                <span className='cover-icon'>\r\n                  <TiCreditCard />\r\n                </span>\r\n                <span>Cover</span>\r\n              </button>\r\n              {this.state.isOpen && (\r\n                <DynamicPopover\r\n                  onClose={() => this.setState({ isOpen: false })}\r\n                  title='Cover'\r\n                  ref={this.coverRef}\r\n                >\r\n                  <PopperCoverEdit\r\n                    onClose={() => this.setState({ isOpen: false })}\r\n                  />\r\n                </DynamicPopover>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {currCard.isArchive && (\r\n            <div className='archive-msg'>\r\n              <span>\r\n                <BsArchive />\r\n              </span>\r\n              <p>This card is archived</p>\r\n            </div>\r\n          )}\r\n\r\n          <div className='card-edit-header card-title-container'>\r\n            <span>\r\n              <CgCreditCard />\r\n            </span>\r\n            <input\r\n              className='title-input'\r\n              type='text'\r\n              value={currCard.title}\r\n              name='title'\r\n              onChange={this.handleInputChange}\r\n              onBlur={() => this.handlePropertyChange()}\r\n            />\r\n          </div>\r\n\r\n          <div className='list-name-container'>\r\n            <p>\r\n              in list <span className='list-name'>{currGroup.title}</span>\r\n            </p>\r\n          </div>\r\n\r\n          <div className='card-edit-main-container flex'>\r\n            <div className='card-edit-main'>\r\n              <LabelsMembers />\r\n\r\n              <CardEditDescription />\r\n\r\n              {currCard.attachments && currCard.attachments.length > 0 && (\r\n                <CardEditAttachment />\r\n              )}\r\n\r\n              {currCard.checklists?.map((checklist) => (\r\n                <div\r\n                  key={checklist.id}\r\n                  className='checklists-container flex column'\r\n                >\r\n                  <ChecklistEdit\r\n                    checklist={checklist}\r\n                    currCard={currCard}\r\n                    handlePropertyChange={this.handlePropertyChange}\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              <CardEditActivities member={this.props.user} />\r\n            </div>\r\n\r\n            <CardEditSidebar goBack={this.goBack} />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    user: state.userModule.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateCard,\r\n  onSetCardId,\r\n}\r\n\r\nexport const CardEdit = connect(mapStateToProps, mapDispatchToProps)(_CardEdit)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { onUpdateBoard, onUpdateCard, onAddCard } from '../../store/board.actions.js';\r\n\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport { GrClose } from 'react-icons/gr';\r\nimport { utilService } from '../../services/util.service';\r\nimport { activityTxtMap } from '../../services/activity.service.js'\r\n\r\n\r\nclass _AddBoardItem extends React.Component {\r\n  state = {\r\n    newItem: {\r\n      title: '',\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.textInput.focus();\r\n  }\r\n\r\n  handleChange = (ev) => {\r\n    const { target } = ev;\r\n    let newItem = this.state.newItem;\r\n    newItem[target.name] = target.value;\r\n    this.setState({ newItem });\r\n  };\r\n\r\n  onKeyUpEnter=(ev)=>{\r\n    if(ev.key==='Enter') this.onAddItem(ev)\r\n  }\r\n  \r\n  onAddItem = (ev) => {\r\n    ev.preventDefault();\r\n    const { newItem } = this.state;\r\n    if(!newItem.title) return\r\n    newItem.id = utilService.makeId();\r\n    if (this.props.type === 'group') {\r\n      if(!newItem.cards) newItem.cards=[]\r\n      \r\n      // ADD ACTIVITY\r\n      const activity = {txt: activityTxtMap.addGroup(newItem.title)}\r\n      \r\n      const action = { type: 'ADD_GROUP', group: newItem };\r\n      this.props.onUpdateBoard(action, this.props.board, activity);\r\n    }\r\n    else if (this.props.type === 'card') {\r\n      const newCard = {...newItem , isComplete: false };\r\n      \r\n      // ADD ACTIVITY\r\n      const activity = {txt: activityTxtMap.addCard(newCard.title), card: newCard, groupId: this.props.groupId}\r\n\r\n      this.props.onAddCard( newCard, this.props.groupId, this.props.board, activity);\r\n    }\r\n    this.setState({newItem: {title: ''}})\r\n  };\r\n\r\n  render() {\r\n    const { title } = this.state.newItem;\r\n    const { onToggleAddPop } = this.props;\r\n    const renderedType = this.props.type === 'card' ? this.props.type : 'list';\r\n    return (\r\n      <section className='add-board-item'>\r\n        <form onSubmit={this.onAddItem} onKeyUp={this.onKeyUpEnter}>\r\n          <textarea\r\n            placeholder={`Enter a title for this ${renderedType}`}\r\n            ref={(input) => {\r\n              this.textInput = input;\r\n            }}\r\n            value={title}\r\n            name='title'\r\n            onChange={this.handleChange}\r\n            onBlur={this.onAddItem}\r\n          />\r\n          <div className='form-btns flex align-center'>\r\n            <button type='submit'>Add {renderedType}</button>\r\n            <button onClick={onToggleAddPop}><IoMdClose className=\"icon\" style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center'  }} /></button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateBoard,\r\n  onUpdateCard,\r\n  onAddCard\r\n};\r\n\r\nexport const AddBoardItem = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_AddBoardItem);\r\n","export function CardHeader({ cardStyle, title }) {\r\n  return (\r\n    <div className='card-preview-header'>\r\n      {cardStyle.bgColor && (\r\n        <div\r\n          className='header-color'\r\n          style={{ backgroundColor: cardStyle.bgColor }}\r\n        >\r\n          {cardStyle.isFull && <div className='card-header-title'> <p>{title}</p></div>}\r\n        </div>\r\n      )}\r\n      {cardStyle.imgUrl && (\r\n        <div\r\n          className='image-wrapper'\r\n        >\r\n          {!cardStyle.isFull && <img src={cardStyle.imgUrl} />}\r\n          {cardStyle.isFull && <div className='card-header-title flex column'\r\n          style={{ backgroundImage: `url(\"${cardStyle.imgUrl}\")` }}\r\n          ><p>{title}</p></div>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export function CardLabelBarList({ labelIds, getLabel, isCardLabelListOpen }) {\r\n\r\n    return (\r\n        <ul\r\n        className={`label-bar-list flex clean-list ${\r\n          isCardLabelListOpen ? 'open' : 'close'\r\n        }`}\r\n      >\r\n        {labelIds.map((labelId) => {\r\n          const label = getLabel(labelId);\r\n          return (\r\n            <li\r\n              className='label-bar'\r\n              key={label.id}\r\n              style={{ backgroundColor: label.color }}\r\n            >\r\n              {isCardLabelListOpen && label.title && (\r\n                <span>{label.title}</span>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }","import { BsCheckBox } from 'react-icons/bs';\r\n\r\n\r\nexport function CardChecklists({ checklists }) {\r\n  const getChecklistStr = () => {\r\n    let todosCount = 0;\r\n    let doneTodosCount = 0;\r\n    checklists.forEach((checklist) => {\r\n      checklist.todos.forEach((todo) => {\r\n        todosCount++;\r\n        if (todo.isDone) doneTodosCount++;\r\n      });\r\n    });\r\n    return doneTodosCount + '/' + todosCount;\r\n  };\r\n  return (\r\n    <div className='checklist-box badge flex align-center'>\r\n      <BsCheckBox />\r\n      <span>{getChecklistStr()}</span>\r\n    </div>\r\n  );\r\n}\r\n","import { GrCheckbox } from 'react-icons/gr';\r\nimport { GrCheckboxSelected } from 'react-icons/gr';\r\nimport { FiClock } from 'react-icons/fi';\r\n\r\nexport function CardDueDate({ card, groupId, toggleCardComplete }) {\r\n  const getFormatedTime = (dueDate) => {\r\n    const date = new Date(dueDate);\r\n    const day = date.getDate();\r\n    const month = date.toLocaleString('en', { month: 'short' });\r\n    const formatedTime = month + ' ' + day;\r\n    return formatedTime;\r\n  };\r\n\r\n  const getDueTimeStyle = (card) => {\r\n    //complete\r\n    if (card.isComplete) return { backgroundColor: '#61BD4F' };\r\n    //due soon\r\n    else if (\r\n      card.dueDate - Date.now() > 0 &&\r\n      card.dueDate - Date.now() < 1000 * 60 * 60 * 24\r\n    )\r\n      return { backgroundColor: '#F2D600' };\r\n    //overdue\r\n    else if (card.dueDate - Date.now() < 0)\r\n      return { backgroundColor: '#EB5A46' };\r\n    //none of the above\r\n    return { backgroundColor: 'inherit', color: 'unset' };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='due-date-box badge flex align-center'\r\n      style={getDueTimeStyle(card)}\r\n      onClick={(event) => toggleCardComplete(event, groupId, card)}\r\n    >\r\n      <span className='clock-icon  flex align-center'>\r\n        <FiClock />\r\n      </span>\r\n      <span className='check-icon'>\r\n        {card.isComplete ? (\r\n          <GrCheckboxSelected color={'inherit'} />\r\n        ) : (\r\n          <GrCheckbox />\r\n        )}\r\n      </span>\r\n      <span>{getFormatedTime(card.dueDate)}</span>\r\n    </div>\r\n  );\r\n}\r\n","import { GrTextAlignFull } from 'react-icons/gr';\r\nimport { ImAttachment } from 'react-icons/im';\r\nimport { FaRegComment } from 'react-icons/fa';\r\nimport { MemberAvatar } from '../../cmps/shared/member-avatar.jsx';\r\nimport { CardChecklists } from './card-checklists';\r\nimport { CardDueDate } from '../card-preview/card-duedate.jsx';\r\n\r\nexport function CardFooter({ card, groupId, toggleCardComplete }) {\r\n  return (\r\n    <div className='card-preview-footer flex align-center'>\r\n      {card.dueDate && (\r\n        <CardDueDate\r\n          card={card}\r\n          groupId={groupId}\r\n          toggleCardComplete={toggleCardComplete}\r\n        />\r\n      )}\r\n\r\n      {card.description && (\r\n        <GrTextAlignFull title={'This card has a description'} />\r\n      )}\r\n\r\n      {card.comments && (\r\n        <div className='comments-box badge flex align-center'>\r\n          <span className='flex align-center'>\r\n            <FaRegComment />\r\n          </span>\r\n          <span>{card.comments.length}</span>\r\n        </div>\r\n      )}\r\n\r\n      {card.attachments && card.attachments.length > 0 && (\r\n        <div className='attachment-box badge flex align-center'>\r\n          <span className='flex align-center'>\r\n            <ImAttachment />\r\n          </span>\r\n          <span>{card.attachments.length}</span>\r\n        </div>\r\n      )}\r\n\r\n      {card.checklists && <CardChecklists checklists={card.checklists} />}\r\n\r\n      {card.isArchive && <span>Archived</span>}\r\n\r\n      {card.members && (\r\n        <div className='card-members-list badge flex'>\r\n          {card.members.map((member, index) => (\r\n            <MemberAvatar member={member} size={'md'} key={index} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { CardHeader } from '../card-preview/card-header.jsx';\r\nimport { CardLabelBarList } from '../card-preview/card-label-bar-list.jsx';\r\nimport { CardFooter } from '../card-preview/card-footer.jsx';\r\nimport { HiOutlinePencil } from 'react-icons/hi';\r\n\r\nexport function CardPreviewContent({\r\n  card,\r\n  groupId,\r\n  onToggleQuickCardEditor,\r\n  openCardEdit,\r\n  toggleCardComplete,\r\n  getLabel,\r\n  toggleCardLabelList,\r\n  isCardLabelListOpen,\r\n}) {\r\n  return (\r\n    <div\r\n      className='card-preview flex space-between'\r\n      // onClick={() => openCardEdit(groupId, card.id)}\r\n    >\r\n      {!card.isArchive && (\r\n        <button\r\n          className='hover-edit-btn'\r\n          onClick={(event) => onToggleQuickCardEditor(event, card, groupId)}\r\n        >\r\n          <HiOutlinePencil />\r\n        </button>\r\n      )}\r\n\r\n      {card.style && <CardHeader cardStyle={card.style} title={card.title} />}\r\n\r\n      {(!card.style || !card.style.isFull) && (\r\n        <div className='card-details'>\r\n          {card.labelIds && (\r\n            <div onClick={toggleCardLabelList}>\r\n              <CardLabelBarList\r\n                labelIds={card.labelIds}\r\n                getLabel={getLabel}\r\n                isCardLabelListOpen={isCardLabelListOpen}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <p>{card.title}</p>\r\n\r\n          <CardFooter\r\n            card={card}\r\n            groupId={groupId}\r\n            toggleCardComplete={toggleCardComplete}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from 'react-redux';\r\n\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport { HiOutlinePencil } from 'react-icons/hi';\r\n\r\nimport { CardHeader } from '../card-preview/card-header.jsx';\r\nimport { CardLabelBarList } from '../card-preview/card-label-bar-list.jsx';\r\nimport { CardFooter } from '../card-preview/card-footer.jsx';\r\n\r\nimport {CardPreviewContent} from './card-preview-content.jsx'\r\n\r\nfunction _CardPreview({\r\n  card,\r\n  groupId,\r\n  openCardEdit,\r\n  isCardLabelListOpen,\r\n  toggleCardLabelList,\r\n  toggleCardComplete,\r\n  onToggleQuickCardEditor,\r\n  index,\r\n  getLabel,\r\n}) {\r\n  return (\r\n    <div\r\n      className='card-wrapper'\r\n      onClick={() => openCardEdit(groupId, card.id)}\r\n\r\n      // style={{ display: card.isArchive ? 'none' : 'unset' }}\r\n    >\r\n      <Draggable draggableId={card.id} index={index}>\r\n        {(provided) => {\r\n          return (\r\n            <li\r\n              ref={provided.innerRef}\r\n              {...provided.dragHandleProps}\r\n              {...provided.draggableProps}\r\n            >\r\n              <CardPreviewContent \r\n                card={card}\r\n                groupId={groupId}\r\n                openCardEdit={openCardEdit}\r\n                isCardLabelListOpen={isCardLabelListOpen}\r\n                toggleCardLabelList={toggleCardLabelList}\r\n                toggleCardComplete={toggleCardComplete}\r\n                onToggleQuickCardEditor={onToggleQuickCardEditor}\r\n                getLabel={getLabel}\r\n              />\r\n              {/* <div\r\n                className='card-preview flex space-between'\r\n                onClick={() => openCardEdit(groupId, card.id)}\r\n              >\r\n                {!card.isArchive && (\r\n                  <button\r\n                    className='hover-edit-btn'\r\n                    onClick={(event) =>\r\n                      onToggleQuickCardEditor(event, card, groupId)\r\n                    }\r\n                  >\r\n                    <HiOutlinePencil />\r\n                  </button>\r\n                )}\r\n\r\n                {card.style && <CardHeader cardStyle={card.style} />}\r\n\r\n                <div className='card-details'>\r\n                  {card.labelIds && (\r\n                    <div onClick={toggleCardLabelList}>\r\n                      <CardLabelBarList\r\n                        labelIds={card.labelIds}\r\n                        getLabel={getLabel}\r\n                        isCardLabelListOpen={isCardLabelListOpen}\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  <p>{card.title}</p>\r\n\r\n                  <CardFooter\r\n                    card={card}\r\n                    groupId={groupId}\r\n                    toggleCardComplete={toggleCardComplete}\r\n                  />\r\n                </div>\r\n              </div> */}\r\n            </li>\r\n          );\r\n        }}\r\n      </Draggable>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nexport const CardPreview = connect(mapStateToProps)(_CardPreview);\r\n","export function GroupActions({groupId , onToggleAddPop, toggleGroupArchive}) {\r\n  return (\r\n    <div className='group-actions flex column'>\r\n      <button onClick={onToggleAddPop}>Add card...</button>\r\n      <button onClick={()=>toggleGroupArchive(groupId)}>Archive this list...</button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { BsThreeDots } from 'react-icons/bs';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport { CardPreview } from './card-preview.jsx';\r\n\r\nimport { GroupActions } from '../shared/popover-children/group-actions.jsx';\r\nimport { AddBoardItem } from '../shared/add-board-item.jsx';\r\nimport { DynamicPopover } from '../shared/dynamic-popover.jsx';\r\nimport { activityTxtMap } from '../../services/activity.service.js';\r\n\r\nexport class GroupPreview extends Component {\r\n  state = {\r\n    isAddPopOpen: false,\r\n    groupTitle: '',\r\n    isPopoverOpen: false,\r\n  };\r\n\r\n  groupEditRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      ...this.state,\r\n      groupTitle: this.props.group.title,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.group !== this.props.group) {\r\n      this.setState({\r\n        ...this.state,\r\n        groupTitle: this.props.group.title,\r\n      });\r\n    }\r\n  }\r\n\r\n  onToggleAddPop = () => {\r\n    this.setState({ isAddPopOpen: !this.state.isAddPopOpen });\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  onChangeGroupTitle = () => {\r\n    const group = this.props.group;\r\n    group.title = this.state.groupTitle;\r\n    const action = { type: 'UPDATE_GROUP', group };\r\n    const activity = {txt: activityTxtMap.changeGroupTitle(group.title)}\r\n    this.props.updateBoard(action, activity);\r\n  };\r\n\r\n  blurFocus = (event) => {\r\n    event.target.blur()\r\n  };\r\n\r\n  setFocus = (event) => {\r\n    event.target.focus();\r\n  };\r\n\r\n  handleFocus = (event) => {\r\n    event.target.select();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      group,\r\n      openCardEdit,\r\n      toggleCardLabelList,\r\n      isCardLabelListOpen,\r\n      index,\r\n      toggleCardComplete,\r\n      toggleGroupArchive,\r\n      onToggleQuickCardEditor,\r\n      getLabel\r\n    } = this.props;\r\n    const { isAddPopOpen, groupTitle, isPopoverOpen } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={'group-wrapper'}\r\n        style={{ display: group.isArchive ? 'none' : 'unset' }}\r\n      >\r\n        <Draggable draggableId={group.id} index={index}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              className='group-preview flex column'\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              <div className='group-header flex space-between align-center'>\r\n                <input\r\n                  className='clean-input'\r\n                  type='text'\r\n                  value={groupTitle}\r\n                  name='groupTitle'\r\n                  onMouseDown={this.blurFocus}\r\n                  onMouseUp={this.setFocus}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.onChangeGroupTitle}\r\n                />\r\n\r\n                <div\r\n                  className='pos-relative'\r\n                  ref={this.groupEditRef}\r\n                  onClick={() =>\r\n                    this.setState({ isPopoverOpen: !isPopoverOpen })\r\n                  }\r\n                >\r\n                  <button>\r\n                    <BsThreeDots />\r\n                  </button>\r\n                  {isPopoverOpen && (\r\n                    <DynamicPopover\r\n                      onClose={() => this.setState({ isPopoverOpen: false })}\r\n                      ref={this.groupEditRef}\r\n                      title='List actions'\r\n                    >\r\n                      <GroupActions\r\n                        groupId={group.id}\r\n                        onToggleAddPop={this.onToggleAddPop}\r\n                        toggleGroupArchive={toggleGroupArchive}\r\n                      />\r\n                    </DynamicPopover>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <Droppable droppableId={group.id}>\r\n                {(provided) => (\r\n                  <ul\r\n                    className='card-list clean-list'\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {group.cards &&\r\n                      group.cards.map((card, index) => {\r\n                        return (\r\n                          <CardPreview\r\n                            key={card.id}\r\n                            card={card}\r\n                            index={index}\r\n                            groupId={group.id}\r\n                            openCardEdit={openCardEdit}\r\n                            toggleCardLabelList={toggleCardLabelList}\r\n                            isCardLabelListOpen={isCardLabelListOpen}\r\n                            toggleCardComplete={toggleCardComplete}\r\n                            onToggleQuickCardEditor={onToggleQuickCardEditor}\r\n                            getLabel={getLabel}\r\n                          />\r\n                        );\r\n                      })}\r\n                    {provided.placeholder}\r\n                    {isAddPopOpen && (\r\n                      <AddBoardItem\r\n                        onToggleAddPop={this.onToggleAddPop}\r\n                        type={'card'}\r\n                        groupId={group.id}\r\n                      />\r\n                    )}\r\n                  </ul>\r\n                )}\r\n              </Droppable>\r\n\r\n                {!isAddPopOpen && (\r\n              <div className='group-footer flex space-between align-center'>\r\n                  <button\r\n                    className='add-boarditem-btn flex align-center'\r\n                    onClick={this.onToggleAddPop}\r\n                  >\r\n                    <i className='flex align-center'>\r\n                      <AiOutlinePlus />\r\n                    </i>\r\n                    <span>Add a card</span>\r\n                  </button>\r\n              </div>\r\n                )}\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// import React, { Component } from 'react';\r\n\r\nimport { GroupPreview } from './group-preview.jsx';\r\n\r\nexport function GroupList({\r\n  groups,\r\n  openCardEdit,\r\n  updateBoard,\r\n  toggleCardLabelList,\r\n  isCardLabelListOpen,\r\n  toggleCardComplete,\r\n  toggleGroupArchive,\r\n  onToggleQuickCardEditor,\r\n  getLabel\r\n}) {\r\n  return (\r\n    <ul className='group-list clean-list flex'>\r\n      {groups.map((group, index) => {\r\n        return (\r\n          <GroupPreview\r\n            key={group.id}\r\n            index={index}\r\n            group={group}\r\n            openCardEdit={openCardEdit}\r\n            updateBoard={updateBoard}\r\n            toggleCardLabelList={toggleCardLabelList}\r\n            isCardLabelListOpen={isCardLabelListOpen}\r\n            toggleCardComplete={toggleCardComplete}\r\n            toggleGroupArchive={toggleGroupArchive}\r\n            onToggleQuickCardEditor={onToggleQuickCardEditor}\r\n            getLabel={getLabel}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { MemberAvatar } from '../shared/member-avatar';\r\nimport { onUpdateBoard } from '../../store/board.actions'\r\nimport { IoCheckmarkSharp } from 'react-icons/io5'\r\nimport { activityTxtMap } from '../../services/activity.service';\r\nimport { socketService } from '../../services/socket.service';\r\n\r\nclass _InviteMembers extends React.Component {\r\n\r\n    state = {\r\n        search: ''\r\n    }\r\n\r\n    getMembersIds = () => {\r\n        const { board } = this.props\r\n        const boardMembersIds = board.members.map(member => member._id)\r\n        return boardMembersIds\r\n    }\r\n\r\n    inviteToBoard = (user) => {\r\n        const { board, onUpdateBoard } = this.props\r\n        // const members = board.members\r\n        // members.push({_id: user._id, fullname: user.fullname, imgUrl: user.imgUrl})\r\n        const memberIds = this.getMembersIds()\r\n        const memberToAdd = { _id: user._id, fullname: user.fullname, imgUrl: user.imgUrl }\r\n        if (memberIds.includes(memberToAdd._id)) {\r\n            const activity = { txt: activityTxtMap.removeMember(user.fullname) }\r\n            onUpdateBoard({ type: 'REMOVE_BOARD_MEMBER', memberId: user._id }, board, activity)\r\n            return\r\n        }\r\n        const activity = { txt: activityTxtMap.inviteMember(user.fullname) }\r\n        onUpdateBoard({ type: 'ADD_BOARD_MEMBER', member: memberToAdd }, board, activity)\r\n        console.log(board.members)\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ ...this.state, [field]: value });\r\n    }\r\n\r\n    render() {\r\n        const { search } = this.state\r\n        const { users } = this.props\r\n        const memberIds = this.getMembersIds()\r\n\r\n        return (\r\n            <div className=\"invite-members\">\r\n                <input className=\"search-input\" type=\"text\" onChange={this.handleChange} name=\"search\" value={search} autoFocus placeholder=\"Search...\" />\r\n                <ul className=\"member-list clean-list\">\r\n                    {users.filter(user => user.fullname.includes(search)).map(user =>\r\n                        <li className=\"user-preview\" key={user._id} onClick={() => this.inviteToBoard(user)} >\r\n                            <div className=\"user-details\">\r\n                                <MemberAvatar member={user} />\r\n                                <span className=\"user-name\">{user.fullname}</span>\r\n                            </div>\r\n                            <span>{(memberIds.includes(user._id)) ? <IoCheckmarkSharp /> : ''}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users,\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const InviteMembers = connect(mapStateToProps, mapDispatchToProps)(_InviteMembers);\r\n","import Axios from 'axios'\r\n\r\nconst API_KEY = 'oiLzSdl8Lr6uhiMLT_uQKAS-PZVzO4dkEVjoRPHeYOU'\r\n\r\nexport const unsplashService = {\r\n    search,\r\n    getPreviewImgs\r\n}\r\n\r\nasync function query(keyword) {\r\n    const res = await Axios.get(`https://api.unsplash.com/search/photos?query=${keyword}&orientation=landscape&client_id=${API_KEY}`)\r\n    return res.data\r\n}\r\n\r\nasync function search(keyword) {\r\n    const {results} = await query(keyword)\r\n    return Promise.resolve(\r\n        results.map(pic => {\r\n            return {id: pic.id, preview: pic.urls.small, full: pic.urls.full}\r\n        })\r\n    )\r\n}\r\n\r\nasync function getPreviewImgs(keyword) {\r\n    const {results} = await query(keyword)\r\n    return Promise.resolve(\r\n        results.map(pic => {\r\n            return { id: pic.id, preview: pic.urls.small, full: pic.urls.full }\r\n        })\r\n    )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { activityTxtMap } from '../../services/activity.service';\r\nimport { unsplashService } from '../../services/unsplash.service';\r\n\r\nimport { onUpdateBoard } from '../../store/board.actions'\r\n\r\nclass _ChangeBG extends React.Component {\r\n    state = {\r\n        keyword: '',\r\n        pics: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getPics()\r\n    }\r\n\r\n    getPics = async () => {\r\n        try {\r\n            const pics = await unsplashService.getPreviewImgs('hills')\r\n            this.setState({ pics })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    onSearch = async () => {\r\n        try {\r\n            const pics = await unsplashService.search(this.state.keyword)\r\n            this.setState({ pics })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    setBoardBG = (backGround) => {\r\n        const { board, onUpdateBoard } = this.props\r\n        const style = (backGround[0] === '#') ? { bgColor: backGround } : { imgUrl: backGround }\r\n        // const style = (backGround[0] === '#') ? { bgColor: backGround } : { imgUrl: backGround }\r\n        const activity = { txt: activityTxtMap.changeBackground() }\r\n        onUpdateBoard({ type: \"CHANGE_BOARD_STYLE\", style }, board, activity)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const { value } = target\r\n        this.setState({ keyword: value }, () => {\r\n            if (value.length >= 3) this.onSearch()\r\n            else if (value.length === 0) this.getPics()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const colors = ['#82E0AA', '#F1948A', '#AAB7B8 ', '#C39BD3', '#85C1E9', '#F8C471']\r\n\r\n        const { keyword, pics } = this.state\r\n        return (\r\n            <div className=\"change-bg\">\r\n                <input type=\"text\" className=\"search-input\" value={keyword} onChange={this.handleChange} placeholder=\"Search images\" />\r\n                <div className=\"images\">\r\n                    {pics.map(pic =>\r\n                        <div key={pic.id} className=\"img-container\" onClick={() => this.setBoardBG(pic.full)}>\r\n                            <img src={pic.preview} alt={pic.id} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <hr />\r\n                <div className=\"colors\">\r\n                    {colors.map((color, idx) =>\r\n                        <div style={{ backgroundColor: `${color}` }} key={idx} className=\"color-container\" onClick={() => this.setBoardBG(color)}></div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    };\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard,\r\n};\r\n\r\nexport const ChangeBG = connect(mapStateToProps, mapDispatchToProps)(_ChangeBG);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass _BoardIcon extends React.Component {\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        return (\r\n            <div className=\"icon\" style={(board.style.bgColor) ? { backgroundColor: board.style.bgColor } : {}} >\r\n                {board.style.imgUrl && <img src={board.style.imgUrl} alt=\"\" />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nexport const BoardIcon = connect(mapStateToProps)(_BoardIcon);","import React from \"react\";\r\nimport { IoCheckmarkSharp } from \"react-icons/io5\";\r\nimport { connect } from \"react-redux\";\r\nimport { PopperLabelPreview } from \"../card-edit/popper-label-preview\";\r\nimport { MemberAvatar } from \"../shared/member-avatar\";\r\n\r\nimport { onUpdateFilter, loadBoard } from \"../../store/board.actions\"\r\nimport { withRouter } from \"react-router\";\r\nimport { utilService } from \"../../services/util.service\";\r\n\r\nclass _SearchCards extends React.Component {\r\n    state = {\r\n        filterBy: {\r\n            txt: '',\r\n            members: [],\r\n            labels: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { location, filterBy } = this.props\r\n        const { search } = location\r\n        const params = new URLSearchParams(search)\r\n        const searchHasFilter = Object.keys(filterBy).some(filterKey => params.get(filterKey))\r\n        if (search && searchHasFilter) {\r\n            const txt = params.get('txt') || ''\r\n            const members = params.get('members')?.split(',') || []\r\n            const labels = params.get('labels')?.split(',') || []\r\n            this.props.onUpdateFilter({ txt, members, labels })\r\n            this.updateUrlSearchParams(this.props.filterBy)\r\n\r\n        } else {\r\n            this.props.onUpdateFilter({ txt: '', members: [], labels: [] })\r\n            this.updateUrlSearchParams(this.props.filterBy)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate({ filterBy: prevFilterBy }) {\r\n        const { filterBy: currFilterBy } = this.props\r\n        if (prevFilterBy !== currFilterBy) {\r\n            this.updateUrlSearchParams(currFilterBy)\r\n            this.getFilteredBoard.bind(this)()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onUpdateFilter({ txt: '', members: [], labels: [] })\r\n        this.updateUrlSearchParams(this.props.filterBy)\r\n        this.getFilteredBoard.bind(this)()\r\n    }\r\n\r\n    updateUrlSearchParams = (filterBy) => {\r\n        const { history, location } = this.props\r\n        const urlSearchFilterBy = { ...filterBy }\r\n        for (const key in urlSearchFilterBy) {\r\n            const currVal = urlSearchFilterBy[key]\r\n            if (!currVal || (Array.isArray(currVal) && !currVal.length)) delete urlSearchFilterBy[key]\r\n        }\r\n        const search = new URLSearchParams(urlSearchFilterBy)\r\n        history.replace(`${location.pathname}?${search.toString()}`)\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        const filterBy = { ...this.props.filterBy, [field]: value }\r\n        this.props.onUpdateFilter(filterBy)\r\n    }\r\n\r\n    getFilteredBoard = utilService.debounce(() => {\r\n        const newFilterBy = { ...this.props.filterBy }\r\n        for (const key in newFilterBy) {\r\n            const currVal = newFilterBy[key]\r\n            if (!currVal || (Array.isArray(currVal) && !currVal.length)) delete newFilterBy[key]\r\n        }\r\n        this.props.loadBoard(this.props.match.params.boardId, newFilterBy)\r\n    }, 100)\r\n\r\n    handleUserClick = (user) => {\r\n        if (this.props.filterBy.members.includes(user._id)) {\r\n            const clickedIdx = this.props.filterBy.members.findIndex(member => member === user._id)\r\n            this.props.filterBy.members.splice(clickedIdx, 1)\r\n            const filterBy = { ...this.props.filterBy, members: [...this.props.filterBy.members] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        } else {\r\n            const filterBy = { ...this.props.filterBy, members: [...this.props.filterBy.members, user._id] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        }\r\n    }\r\n\r\n    handleLabelClick = (label) => {\r\n        if (this.props.filterBy.labels.includes(label.id)) {\r\n            const clickedIdx = this.props.filterBy.labels.findIndex(label => label === label)\r\n            this.props.filterBy.labels.splice(clickedIdx, 1)\r\n            const filterBy = { ...this.props.filterBy, labels: [...this.props.filterBy.labels] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        } else {\r\n            const filterBy = { ...this.props.filterBy, labels: [...this.props.filterBy.labels, label.id] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        }\r\n    }\r\n    render() {\r\n        const { board } = this.props\r\n        const { filterBy } = this.props\r\n        return (\r\n            <div className=\"search-cards\">\r\n                <input className=\"search-input\" type=\"text\" onChange={this.handleChange} name=\"txt\" value={filterBy.txt} autoFocus placeholder=\"Search...\" />\r\n                <p className=\"search-desc\">Search by term, label, member, or due time</p>\r\n\r\n                <hr />\r\n\r\n                <ul className=\"label-list clean-list\">\r\n                    {board.labels.map(label =>\r\n                        <li className=\"label-preview\" key={label.id} onClick={() => this.handleLabelClick(label)}>\r\n                            <div className=\"label-details\">\r\n                                <div className=\"label-color\" style={{ backgroundColor: label.color }} ></div>\r\n                                <p>{label.title}</p>\r\n                            </div>\r\n                            <span>{(filterBy.labels.includes(label.id)) ? <IoCheckmarkSharp /> : ''}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n                <hr />\r\n                <ul className=\"member-list clean-list\">\r\n                    {board.members.map(member =>\r\n                        <li className=\"user-preview\" key={member._id} onClick={() => this.handleUserClick(member)} >\r\n                            <div className=\"user-details\">\r\n                                <MemberAvatar member={member} />\r\n                                <span className=\"user-name\">{member.fullname}</span>\r\n                            </div>\r\n                            <span>{(filterBy.members.includes(member._id)) ? <IoCheckmarkSharp /> : ''}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        filterBy: state.boardModule.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateFilter,\r\n    loadBoard\r\n}\r\n\r\nexport const SearchCards = connect(mapStateToProps, mapDispatchToProps)(withRouter(_SearchCards));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadArchivedCards, onUpdateCard, onRemoveCard, onUnArchiveCard } from '../../store/board.actions.js';\r\nimport { Loader } from '../shared/loader.jsx';\r\nimport { CardPreviewContent } from '../board/card-preview-content.jsx';\r\n\r\nclass _Archive extends React.Component {\r\n  state = {\r\n    archivedCards: null,\r\n  };\r\n  componentDidMount() {\r\n    this.loadArchivedCards();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.board.archivedCards !== this.props.board.archivedCards) {\r\n      this.loadArchivedCards();\r\n    }\r\n  }\r\n  loadArchivedCards =  () => {\r\n    const {board} =this.props\r\n    const archivedCards = board.archivedCards ? board.archivedCards : [];\r\n    this.setState({ archivedCards });\r\n  };\r\n  // loadArchivedCards = async () => {\r\n  //   const boardId = this.props.board._id;\r\n  //   const archivedCards = await this.props.loadArchivedCards(boardId);\r\n  //   this.setState({ archivedCards });\r\n  // };\r\n  onUnarchiveCard = (card) => {\r\n    this.props.onUnArchiveCard(card, this.props.board);\r\n  };\r\n  onDeleteCard=(card)=>{\r\n    this.props.onRemoveCard(card, this.props.board)\r\n  }\r\n  render() {\r\n    const { archivedCards } = this.state;\r\n    const {\r\n      isCardLabelListOpen,\r\n      toggleCardLabelList,\r\n      getLabel,\r\n      toggleCardComplete,\r\n      openCardEdit,\r\n    } = this.props;\r\n    console.log('archivedCards in archive page', archivedCards)\r\n    return (\r\n      <div className='archive'>\r\n        {!archivedCards && <Loader />}\r\n        {archivedCards && archivedCards.length === 0 && (\r\n          <div>No archived cards...</div>\r\n        )}\r\n        {archivedCards && archivedCards.length > 0 && (\r\n          <ul className='archived-cards-list clean-list flex column align-center'>\r\n            {archivedCards.map((card, index) => {\r\n              return (\r\n                <li key={card.id}>\r\n                  <CardPreviewContent\r\n                    card={card}\r\n                    groupId={card.groupId}\r\n                    toggleCardLabelList={toggleCardLabelList}\r\n                    isCardLabelListOpen={isCardLabelListOpen}\r\n                    getLabel={getLabel}\r\n                    toggleCardComplete={toggleCardComplete}\r\n                    openCardEdit={openCardEdit}\r\n                  />\r\n                  <div className='archived-btns'>\r\n                    <button onClick={() => this.onUnarchiveCard(card)}>\r\n                      Send to board\r\n                    </button>\r\n                    <button onClick={()=>this.onDeleteCard(card)}>Delete</button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  loadArchivedCards,\r\n  onUpdateCard,\r\n  onRemoveCard,\r\n  onUnArchiveCard\r\n};\r\nexport const Archive = connect(mapStateToProps, mapDispatchToProps)(_Archive);\r\n","import React from 'react';\r\nimport { GrList } from 'react-icons/gr';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { MemberAvatar } from '../shared/member-avatar';\r\nimport Moment from 'react-moment'\r\n\r\nclass _ActivityList extends React.Component {\r\n\r\n    \r\n\r\n    getGroupTitle = (groupId) => {\r\n        const group = this.props.board.groups.find(group => group.id === groupId)\r\n        return group.title\r\n    }\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        if (board.activities.length === 0) return (<div className=\"activity\">\r\n            <div className=\"activity-header\">\r\n                <GrList />\r\n                <p>Activity</p>\r\n            </div>\r\n            <p>No Activities in this board yet</p>\r\n        </div>)\r\n        return (\r\n            <div className=\"activity\">\r\n                <div className=\"activity-header\">\r\n                    <GrList />\r\n                    <p>Activity</p>\r\n                </div>\r\n                <ul className=\"activity-list clean-list\" >\r\n                    {\r\n                        board.activities.map(activity =>\r\n                            <li key={activity.id} className=\"activity-preview\">\r\n                                <span className=\"member-avatar\"><MemberAvatar member={activity.byMember} /></span>\r\n                                <div className=\"activity-text\">\r\n                                    <span className=\"user-fullname\">{activity.byMember.fullname} </span>\r\n                                    <p>{activity.txt}</p>\r\n                                    {activity.groupId && <Link to={`/board/${board._id}/${activity.groupId}/${activity.card.id}`}> {activity.card.title}</Link>}\r\n                                    {activity.groupId && <p>in list: {this.getGroupTitle(activity.groupId)}</p>}\r\n                                    <Moment className=\"publish-time\" fromNow>{activity.createdAt}</Moment>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const ActivityList = connect(mapStateToProps, mapDispatchToProps)(_ActivityList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { onRemoveBoard } from '../../store/board.actions'\r\n\r\nclass _RemoveBoard extends React.Component {\r\n\r\n    removeBoard = async () => {\r\n        const { board, onRemoveBoard } = this.props\r\n        await onRemoveBoard(board._id)\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    checkIfAllowed = () => {\r\n        const { board, user } = this.props\r\n        return (user.isAdmin || board.createdBy._id === user._id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"remove-board flex column\">\r\n                {this.checkIfAllowed() && <>\r\n                    <p>Remove this board from workspace?</p>\r\n                    <p>This action is IRREVERSIBLE</p>\r\n                    <button className=\"remove-btn nav-button\" onClick={() => this.removeBoard()}>Remove</button>\r\n                </>}\r\n                {!this.checkIfAllowed() && <p>You Are not allowed to perform this action</p>}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        user: state.userModule.user\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onRemoveBoard\r\n};\r\n\r\nexport const RemoveBoard = connect(mapStateToProps, mapDispatchToProps)(withRouter(_RemoveBoard));","import React from 'react';\r\nimport { IoIosArrowBack, IoMdClose } from 'react-icons/io';\r\nimport { BiSearch } from 'react-icons/bi';\r\nimport { connect } from 'react-redux';\r\nimport { ChangeBG } from './change-bg';\r\nimport { BsArchiveFill } from 'react-icons/bs';\r\nimport { BoardIcon } from './board-icon';\r\nimport { SearchCards } from './search-cards';\r\nimport { Archive } from './archive';\r\nimport { ActivityList } from './activity-list';\r\nimport { withRouter } from 'react-router'\r\nimport { RemoveBoard } from './remove-board';\r\nimport { HiOutlineTrash } from 'react-icons/hi';\r\n\r\n\r\nclass _SideMenu extends React.Component {\r\n    state = {\r\n        currViewIdx: -1\r\n    }\r\n\r\n    _cmpsToRender = [{ id: 'c101', title: 'Change Background', icon: <BoardIcon />, component: ChangeBG },\r\n    { id: 'c102', title: 'Search Cards', icon: <BiSearch />, component: SearchCards },\r\n    { id: 'c103', title: 'Archive', icon: <BsArchiveFill />, component: Archive },\r\n    { id: 'c104', title: 'Remove Board', icon: <HiOutlineTrash />, component: RemoveBoard }]\r\n    // { id: 'c103', title: 'Archive - Under Construction 🚧', icon: <BsArchiveFill />, component: Archive }]\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.search) this.setState((prevState) => ({ ...prevState, currViewIdx: 1 }))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState((prevState) => ({ ...prevState, currViewIdx: -1 }))\r\n    }\r\n\r\n    onSelectView = (viewId) => {\r\n        this.setState((prevState) => ({ ...prevState, currViewIdx: viewId }))\r\n    }\r\n\r\n    getViewById = () => {\r\n        const { currViewIdx } = this.state\r\n        const currView = this._cmpsToRender[currViewIdx]\r\n        console.log('selected view: ', currView)\r\n        return currView.component\r\n    }\r\n\r\n    onBack = () => {\r\n        this.setState((prevState) => ({ ...prevState, currViewIdx: -1 }))\r\n    }\r\n\r\n    /* priavte cmps */\r\n    _CurrView = () => {\r\n        const props= this.props\r\n        const { component: Component } = this._cmpsToRender[this.state.currViewIdx]\r\n        return <Component {...props} />\r\n    }\r\n\r\n    _DefaultView = () => {\r\n        return <div>\r\n            <ul className=\"default-menu clean-list\">\r\n                {this._cmpsToRender.map((cmp, idx) =>\r\n                    <li onClick={() => this.onSelectView(idx)} key={cmp.id}>\r\n                        <div className=\"icon\">{cmp.icon}</div>\r\n                        <p>{cmp.title}</p>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            <hr />\r\n            <ActivityList />\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        const { onClose, toggleCardLabelList, isCardLabelListOpen, getLabel, toggleCardComplete, openCardEdit } = this.props\r\n        const { currViewIdx } = this.state\r\n        return (\r\n            <div className={`side-menu ${(this.props.isMenuOpen) ? 'menu-open' : ''}`}>\r\n                <div className=\"title\">\r\n                    <span className={`back-btn ${(currViewIdx !== -1) ? 'show-btn' : ''} `} onClick={() => this.onBack()}><IoIosArrowBack /></span>\r\n                    <p className=\"menu-title\" >{currViewIdx === -1 ? 'Menu' : this._cmpsToRender[currViewIdx].title}</p>\r\n                    <span className=\"close-btn\" onClick={onClose}><IoMdClose /></span>\r\n                </div>\r\n                <hr />\r\n                <div className=\"rendered-cmp\">\r\n                    {currViewIdx === -1 ? <this._DefaultView /> : <this._CurrView />}\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const SideMenu = connect(mapStateToProps, mapDispatchToProps)(withRouter(_SideMenu));","import React, { useEffect } from 'react'\r\nimport { MemberAvatar } from '../../shared/member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateBoard } from '../../../store/board.actions'\r\nimport { IoCheckmarkSharp } from 'react-icons/io5'\r\n\r\n\r\nconst _BoardEditMembers = ({ members, board, onUpdateBoard, onClose }) => {\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            onClose()\r\n        }\r\n    },[onClose])\r\n\r\n    const removeFromBoard = (memberId) => {\r\n        // const activity = {txt: activityTxtMap.inviteMember(user.fullname)}\r\n        onUpdateBoard({ type: 'REMOVE_BOARD_MEMBER', memberId: memberId }, board)\r\n    }\r\n\r\n    return (\r\n        <div className=\"member-list\" style={{ color: '#172b4d' }}>\r\n            {members.map(member => (\r\n                <div key={member._id} className=\"popper-member-preview flex\" onClick={() => removeFromBoard(member._id)}>\r\n                    <div className='list-item-layover'></div>\r\n                    <div style={{ width: 32 }}>\r\n                        <MemberAvatar member={member} />\r\n                    </div>\r\n                    <div className='popper-member-name'>\r\n                        <p>{member.fullname}</p>\r\n                    </div>\r\n                    <div className='popper-member-check'><IoCheckmarkSharp /></div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users,\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const BoardEditMembers = connect(mapStateToProps, mapDispatchToProps)(_BoardEditMembers);\r\n ","import React from 'react'\r\nimport { AiOutlineStar } from 'react-icons/ai'\r\nimport { RiBarChartFill } from 'react-icons/ri'\r\nimport { HiDotsHorizontal } from 'react-icons/hi'\r\nimport { FaUserAlt } from 'react-icons/fa'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\n\r\nimport { onUpdateBoard } from '../../store/board.actions.js'\r\nimport { loadUsers } from '../../store/user.actions.js'\r\nimport { MemberAvatar } from '../shared/member-avatar.jsx'\r\nimport { InviteMembers } from './invite-members.jsx'\r\nimport { DynamicPopover } from '../shared/dynamic-popover.jsx'\r\nimport { SideMenu } from '../side-menu/side-menu.jsx'\r\nimport { BoardEditMembers } from '../shared/popover-children/board-edit-members'\r\nimport { withRouter } from 'react-router'\r\n\r\nclass _BoardHeader extends React.Component {\r\n\r\n    state = {\r\n        isInviteOpen: false,\r\n        boardTitle: this.props.board.title,\r\n        isMenuOpen: false,\r\n        numOfShownMembers: 5,\r\n        isExtraMembersOpen: false,\r\n        isTotalMembersOpen: false\r\n    }\r\n\r\n    inviteRef = React.createRef()\r\n    membersRef = React.createRef()\r\n    totalMembersRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.handleResize)\r\n        this.handleResize()\r\n        this.props.loadUsers()\r\n        if (this.props.location.search) this.setState({ isMenuOpen: true })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize)\r\n    }\r\n\r\n    handleResize = () => {\r\n        const { numOfShownMembers } = this.state\r\n        if (window.innerWidth < 800) {\r\n            if (numOfShownMembers === 3) return\r\n            this.setState({ numOfShownMembers: 3 })\r\n        } else {\r\n            if (numOfShownMembers === 5) return\r\n            this.setState({ numOfShownMembers: 5 })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.board.title !== this.props.board.title) {\r\n            this.setState({ boardTitle: this.props.board.title })\r\n        }\r\n    }\r\n\r\n    toggleStarredBoard = () => {\r\n        const { board, onUpdateBoard } = this.props\r\n        board.isStarred = !board.isStarred\r\n        onUpdateBoard({ type: 'TOGGLE_STARRED', isStarred: board.isStarred }, board)\r\n    }\r\n\r\n    handleFocus = (event) => event.target.select();\r\n\r\n    handleChange = ({ target: { name, value } }) => {\r\n        this.setState((prevState) => ({ ...prevState, [name]: value }));\r\n    }\r\n\r\n    onChangeBoardTitle = () => {\r\n        const { board, onUpdateBoard } = this.props\r\n        board.title = this.state.boardTitle\r\n        const activity = { txt: activityTxtMap.renameBoard(board.title) }\r\n        onUpdateBoard({ type: 'CHANGE_TITLE', title: board.title }, board, activity)\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState((prevState) => ({ ...prevState, isMenuOpen: !this.state.isMenuOpen }))\r\n    }\r\n\r\n    getRemainingMembers = () => {\r\n        const members = [...this.props.board.members]\r\n        members.splice(this.state.numOfShownMembers)\r\n        return members\r\n    }\r\n\r\n    getExtraMembersLength = () => (this.props.board.members.length - this.state.numOfShownMembers)\r\n\r\n    onMembersClose = () => this.setState({ isExtraMembersOpen: false })\r\n\r\n    render() {\r\n        const { board, onToggleDashboard, toggleCardLabelList, isCardLabelListOpen, getLabel, toggleCardComplete, openCardEdit } = this.props\r\n        const { boardTitle, isMenuOpen, isInviteOpen, isExtraMembersOpen, isTotalMembersOpen } = this.state\r\n        const members = this.getRemainingMembers()\r\n        const extraMembersLength = this.getExtraMembersLength()\r\n\r\n        return (\r\n            <section className=\"board-header\">\r\n                <div className=\"left-btns\">\r\n                    <button className=\"board-title nav-button\">\r\n                        <input className='clean-input' type='text' value={boardTitle} name='boardTitle' onFocus={this.handleFocus} onChange={this.handleChange} onBlur={this.onChangeBoardTitle} />\r\n                    </button>\r\n                    <button className={`starred-btn nav-button ${(board.isStarred) ? 'starred' : ''}`} onClick={() => this.toggleStarredBoard()}><AiOutlineStar /></button>\r\n                    <div className=\"members-container flex\"><div className=\"user-previews\">\r\n                        {members.map((member, idx) =>\r\n                            <MemberAvatar key={member._id} member={member} style={{ left: idx * -5 }} />\r\n                        )}\r\n                        {extraMembersLength > 0 && (\r\n                            <div\r\n                                ref={this.membersRef}\r\n                            >\r\n                                <div className=\"list-item-layover round\" style={{ transform: `translateX(${(members.length) * -5}px)` }} onClick={() => this.setState({ isExtraMembersOpen: !isExtraMembersOpen })}></div>\r\n                                <div\r\n                                    className=\"show-more-btn\"\r\n                                    style={{ transform: `translateX(${(members.length) * -5}px)` }}\r\n                                >\r\n                                    {`+${extraMembersLength}`}\r\n                                </div>\r\n                                {isExtraMembersOpen && <DynamicPopover onClose={() => this.setState({ isExtraMembersOpen: false })} title=\"Members\" ref={this.membersRef}>\r\n                                    <BoardEditMembers members={board.members.filter(member => member._id)} onClose={this.onMembersClose} />\r\n                                </DynamicPopover>}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                        <div className='pos-relative' ref={this.inviteRef}>\r\n                            <button onClick={() => this.setState({ isInviteOpen: !isInviteOpen })} className=\"invite-btn nav-button pos-relative\" style={{ transform: `translateX(${(members.length -2) * -5}px)` }}>Invite</button>\r\n                            {isInviteOpen && <DynamicPopover onClose={() => this.setState({ isInviteOpen: false })} title=\"Invite Members\" ref={this.inviteRef}>\r\n                                <InviteMembers />\r\n                            </DynamicPopover>}\r\n                        </div></div>\r\n                </div>\r\n                <div className=\"right-btns\">\r\n                    {!isMenuOpen && <>\r\n                        <div className=\"pos-relative\" ref={this.totalMembersRef}>\r\n                            <button className=\"nav-button members-btn\" onClick={() => this.setState({ isTotalMembersOpen: !isTotalMembersOpen })}><FaUserAlt /></button>\r\n                            {isTotalMembersOpen && <DynamicPopover onClose={() => this.setState({ isTotalMembersOpen: false })} title=\"Members\" ref={this.totalMembersRef}>\r\n                                <InviteMembers />\r\n                            </DynamicPopover>}\r\n                        </div>\r\n\r\n                        <button onClick={() => onToggleDashboard(true)} className={`dashboard-btn nav-button ${(isMenuOpen) ? 'menu-open' : ''}`}><RiBarChartFill /> <span className=\"right-btn-txt\">Dashboard</span></button>\r\n                        <button onClick={() => this.toggleMenu()} className=\"right-menu-btn nav-button\"><HiDotsHorizontal /> <span className=\"right-btn-txt\">Show Menu</span></button>\r\n                    </>}\r\n                </div>\r\n                <SideMenu isMenuOpen={isMenuOpen} onClose={() => { this.toggleMenu() }} isCardLabelListOpen={isCardLabelListOpen} toggleCardLabelList={toggleCardLabelList} getLabel={getLabel} openCardEdit={openCardEdit} toggleCardComplete={toggleCardComplete} />\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        users: state.userModule.users,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    onUpdateBoard\r\n\r\n}\r\n\r\n\r\n\r\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoardHeader))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { CgCreditCard } from 'react-icons/cg';\r\nimport { MdLabelOutline } from 'react-icons/md';\r\nimport { BiUser } from 'react-icons/bi';\r\nimport { BsClock } from 'react-icons/bs';\r\nimport { GoArchive } from 'react-icons/go';\r\n\r\nimport { CardEditDate } from '../cmps/shared/popover-children/card-edit-date';\r\nimport { PopperCoverEdit } from '../cmps/shared/popover-children/popper-cover-edit.jsx';\r\nimport { CardHeader } from '../cmps/card-preview/card-header.jsx';\r\nimport { CardLabelBarList } from '../cmps/card-preview/card-label-bar-list.jsx';\r\nimport { CardFooter } from '../cmps/card-preview/card-footer.jsx';\r\nimport { cardEditService } from '../services/card-edit.service.js';\r\nimport { Loader } from './shared/loader.jsx';\r\nimport {\r\n  onUpdateCard,\r\n  onSetCardId,\r\n  onArchiveCard,\r\n} from '../store/board.actions';\r\nimport { CardEditAddToCardItem } from '../cmps/card-edit/add-to-card/card-edit-add-to-card-item.jsx';\r\nimport { LabelList } from '../cmps/shared/popover-children/label-list.jsx';\r\nimport { LabelEdit } from '../cmps/shared/popover-children/label-edit.jsx';\r\nimport { MemberList } from '../cmps/shared/popover-children/member-list.jsx';\r\nimport { activityTxtMap } from '../services/activity.service.js';\r\n\r\nclass _QuickCardEditor extends Component {\r\n  state = {\r\n    card: null,\r\n    cardTitle: '',\r\n  };\r\n  componentDidMount() {\r\n    const { cardId, groupId } = this.props;\r\n    this.props.onSetCardId(cardId);\r\n    this.uploadCard(cardId, groupId);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.board !== this.props.board) {\r\n      const { cardId, groupId } = this.props;\r\n      this.uploadCard(cardId, groupId);\r\n    }\r\n  }\r\n\r\n  uploadCard = (cardId, groupId) => {\r\n    const card = cardEditService.getCardById(cardId, groupId);\r\n    this.setState({ card, cardTitle: card.title });\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n  handleFocus = (event) => {\r\n    event.target.select();\r\n  };\r\n  onSave = (event) => {\r\n    const cardToSave = { ...this.state.card };\r\n    cardToSave.title = this.state.cardTitle;\r\n    const activity = {\r\n      txt: activityTxtMap.editCard(),\r\n      card: cardToSave,\r\n      groupId: this.props.groupId,\r\n    };\r\n    this.props.onUpdateCard(\r\n      cardToSave,\r\n      this.props.groupId,\r\n      this.props.board,\r\n      activity\r\n    );\r\n    this.props.onToggleQuickCardEditor(event, null, '');\r\n  };\r\n  openCard = (event) => {\r\n    this.props.onToggleQuickCardEditor(event, null, '');\r\n    this.props.openCardEdit(this.props.groupId, this.props.cardId);\r\n  };\r\n  onArchiveCard = (event) => {\r\n    const { groupId, board } = this.props;\r\n    const cardToSave = { ...this.state.card };\r\n    this.props.onArchiveCard(cardToSave, groupId, board);\r\n    this.props.onToggleQuickCardEditor(event, null, '');\r\n  };\r\n\r\n  render() {\r\n    const { card, cardTitle } = this.state;\r\n    const {\r\n      groupId,\r\n      getLabel,\r\n      isCardLabelListOpen,\r\n      toggleCardComplete,\r\n      position,\r\n    } = this.props;\r\n    if (!card) return <Loader />;\r\n    return (\r\n      <div\r\n        className='quick-card-editor flex'\r\n        style={{\r\n          position: 'fixed',\r\n          top: position.top,\r\n          left: position.left,\r\n        }}\r\n      >\r\n        <div>\r\n          <div className='card-preview' style={{ width: position.width }}>\r\n            {card.style && <CardHeader cardStyle={card.style} />}\r\n\r\n            <div className='card-details'>\r\n              {card.labelIds && (\r\n                <div>\r\n                  <CardLabelBarList\r\n                    labelIds={card.labelIds}\r\n                    getLabel={getLabel}\r\n                    isCardLabelListOpen={isCardLabelListOpen}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <textarea\r\n                className='clean-input'\r\n                type='text'\r\n                value={cardTitle}\r\n                name='cardTitle'\r\n                onChange={this.handleChange}\r\n                autoFocus\r\n                onFocus={this.handleFocus}\r\n              />\r\n\r\n              <CardFooter\r\n                card={card}\r\n                groupId={groupId}\r\n                toggleCardComplete={toggleCardComplete}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button onClick={this.onSave} className='card-edit-btn secondary'>\r\n            Save\r\n          </button>\r\n        </div>\r\n        <div className='quick-editor-sidebar flex column'>\r\n          <button\r\n            onClick={this.openCard}\r\n            className='quick-editor-btn flex align-center'\r\n          >\r\n            <span className='quick-editor-btn-icon flex align-center'>\r\n              <CgCreditCard />\r\n            </span>\r\n            <span>Open card</span>\r\n          </button>\r\n          <div className='quick-editor-btn flex align-center'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: MdLabelOutline,\r\n                title: 'Labels',\r\n                component: LabelList,\r\n                editComponent: LabelEdit\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='quick-editor-btn flex align-center'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: BiUser,\r\n                title: 'Change members',\r\n                component: MemberList,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='quick-editor-btn flex align-center'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: CgCreditCard,\r\n                title: 'Change cover',\r\n                component: PopperCoverEdit,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='quick-editor-btn flex align-center datepicker'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: BsClock,\r\n                title: 'Edit dates',\r\n                component: CardEditDate,\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            className='quick-editor-btn flex align-center'\r\n            onClick={this.onArchiveCard}\r\n          >\r\n            <span className='quick-editor-btn-icon flex align-center'>\r\n              <GoArchive />\r\n            </span>\r\n            <span>Archive</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateCard,\r\n  onSetCardId,\r\n  onArchiveCard,\r\n};\r\n\r\nexport const QuickCardEditor = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_QuickCardEditor);\r\n","import { Pie } from 'react-chartjs-2';\r\n\r\nexport function TasksPerMemberChart({ tasksPerMemberMap, labelsColors }) {\r\n  console.log('tasksPerMemberMap', tasksPerMemberMap);\r\n  // console.log('Object.keys(tasksPerMemberMap)', Object.keys(tasksPerMemberMap))\r\n  const data = {\r\n    labels: Object.keys(tasksPerMemberMap),\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: Object.values(tasksPerMemberMap),\r\n        backgroundColor: labelsColors,\r\n        borderWidth: 2,\r\n        hoverOffset: 2\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: 'black',\r\n          padding: 10\r\n        }\r\n      },\r\n    } ,\r\n  };\r\n\r\n  return (\r\n    <div className='chart'>\r\n      <h1>Tasks per Member</h1>\r\n      <Pie data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nexport function TasksPerLabelChart({ tasksPerLabelMap, labelsColors }) {\r\n  const data = {\r\n    labels: Object.keys(tasksPerLabelMap),\r\n    datasets: [\r\n      {\r\n        label: '',\r\n        data: Object.values(tasksPerLabelMap),\r\n        backgroundColor: labelsColors,\r\n        borderWidth: 2,\r\n        hoverOffset: 2,\r\n        fontColor: 'black'\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n        labels: {\r\n          fontColor: 'black'\r\n          // fontColor: '#f00'\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        ticks: {\r\n          color: 'black'\r\n          // color: 'white'\r\n        }\r\n      },\r\n      x: {\r\n        ticks: {\r\n          color: 'black'\r\n          // color: 'white'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='chart bar-chart-container' style={{ maxHeight: 400 }}>\r\n      <h1>Tasks per Label</h1>\r\n      <Bar data={data} height={null}\r\n        width={null}\r\n        options={options} />\r\n    </div>\r\n  );\r\n}\r\n","import TimeLine from \"react-gantt-timeline\";\r\n\r\nexport function TasksPerDateChart({tasks}) {\r\n  const config = {\r\n    header: {\r\n      top: {\r\n        style: {\r\n          background: \"linear-gradient( grey, black)\",\r\n          textShadow: \"0.5px 0.5px black\",\r\n          fontSize: 12\r\n        }\r\n      },\r\n      middle: {\r\n        style: {\r\n          background: \"linear-gradient( #b686c2, white)\",\r\n          fontSize: 9,\r\n          color: \"black\"\r\n        }\r\n      },\r\n      bottom: {\r\n        style: {\r\n          background: \"linear-gradient( grey, black)\",\r\n          fontSize: 9,\r\n          color: \"#b686c2\"\r\n        },\r\n        selectedStyle: {\r\n          background: \"linear-gradient( #d011dd ,#d011dd)\",\r\n          fontWeight: \"bold\",\r\n          color: \"white\"\r\n        }\r\n      }\r\n    },\r\n    taskList: {\r\n      title: {\r\n        label: \"Task Todo\",\r\n        style: {\r\n          background: \"linear-gradient( grey, black)\"\r\n        }\r\n      },\r\n      task: {\r\n        style: {\r\n          backgroundColor: \"grey\",\r\n          color: \"white\"\r\n        }\r\n      },\r\n      verticalSeparator: {\r\n        style: {\r\n          backgroundColor: \"#fbf9f9\",\r\n        },\r\n        grip: {\r\n          style: {\r\n            backgroundColor: \"#b686c2\",\r\n          }\r\n        }\r\n      }\r\n    },\r\n    dataViewPort: {\r\n      rows: {\r\n        style: {\r\n          backgroundColor: \"white\",\r\n          borderBottom: \"solid 0.5px silver\"\r\n        }\r\n      },\r\n      task: {\r\n        showLabel: false,\r\n        style: {\r\n          backgroundColor: \"#b686c2\",\r\n          borderRadius: 1,\r\n          boxShadow: \"2px 2px 8px #888888\"\r\n                }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"time-line-container\">\r\n      <TimeLine data={tasks} links={[]} config={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { IoMdClose } from 'react-icons/io';\r\nimport { BsCardText } from 'react-icons/bs';\r\nimport { AiOutlineGroup } from 'react-icons/ai';\r\nimport { CgProfile } from 'react-icons/cg';\r\nimport { TasksPerMemberChart } from './dashboard/tasks-per-members-chart.jsx';\r\nimport { TasksPerLabelChart } from './dashboard/tasks-per-labels-chart.jsx';\r\nimport {TasksPerDateChart} from './dashboard/tasks-per-date-chart.jsx'\r\nimport { boardService } from '../services/board.service.js';\r\nimport { Loader } from '../cmps/shared/loader.jsx';\r\nclass _Dashboard extends Component {\r\n  state = {\r\n    chartsData: null,\r\n  };\r\n  async componentDidMount() {\r\n    const chartsData = await boardService.dashboardQuery(this.props.board._id);\r\n    this.setState({ chartsData });\r\n  }\r\n\r\n  get labelsColor() {\r\n    return this.props.board.labels.map((label) => {\r\n      return label.color;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { chartsData } = this.state;\r\n    const { board } = this.props;\r\n    console.log('chartsDate', chartsData);\r\n    if (!chartsData) return <Loader />;\r\n    return (\r\n      <div className='dashboard-modal flex column align-center'>\r\n        <Link to={`/board/${board._id}`}>\r\n        <button\r\n          className='close-btn'\r\n        >\r\n          <IoMdClose />\r\n        </button>\r\n        </Link>\r\n        <div className='jeneral-statistics flex'>\r\n          <div className='stats flex space-between'>\r\n            <div>\r\n              <h3>All Tasks</h3>\r\n              <span>{chartsData.cardsCount}</span>\r\n            </div>\r\n            <i className='flex align-center'>\r\n              <BsCardText />\r\n            </i>\r\n          </div>\r\n          <div className='stats flex space-between'>\r\n            <div>\r\n              <h3>All Lists</h3>\r\n              <span>{chartsData.groupsCount}</span>\r\n            </div>\r\n            <i className='flex align-center'>\r\n              <AiOutlineGroup />\r\n            </i>\r\n          </div>\r\n          <div className='stats flex space-between'>\r\n            <div>\r\n              <h3>Members</h3>\r\n              <span>{board.members && board.members.length}</span>\r\n              <span>{!board.members && 0}</span>\r\n            </div>\r\n            <i className='flex align-center'>\r\n              <CgProfile />\r\n            </i>\r\n          </div>\r\n        </div>\r\n        <div className='charts flex'>\r\n          <TasksPerMemberChart\r\n            className='chart'\r\n            tasksPerMemberMap={chartsData.tasksPerMemberMap}\r\n            labelsColors={this.labelsColor}\r\n          />\r\n\r\n          <TasksPerLabelChart\r\n            className='chart'\r\n            tasksPerLabelMap={chartsData.tasksPerLabelMap}\r\n            labelsColors={this.labelsColor}\r\n          />\r\n        </div>\r\n        <TasksPerDateChart tasks={chartsData.tasks}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport const Dashboard = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_Dashboard);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from 'react-router';\r\n\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\n\r\nimport {\r\n  loadBoard,\r\n  onUpdateBoard,\r\n  onUpdateCard,\r\n  outputUpdateBoard,\r\n  resetBoard,\r\n} from '../store/board.actions.js';\r\n\r\nimport { CardEdit } from '../cmps/card-edit.jsx';\r\nimport { AddBoardItem } from '../cmps/shared/add-board-item.jsx';\r\nimport { GroupList } from '../cmps/board/group-list.jsx';\r\nimport { BoardHeader } from '../cmps/board/board-header.jsx';\r\nimport { OverlayScreen } from '../cmps/overlay-screen.jsx';\r\nimport { QuickCardEditor } from '../cmps/quick-card-editor.jsx';\r\nimport { Loader } from '../cmps/shared/loader.jsx';\r\nimport { activityTxtMap } from '../services/activity.service.js';\r\nimport { socketService } from '../services/socket.service.js';\r\nimport { userService } from '../services/user.service.js';\r\nimport { Dashboard } from '../cmps/dashboard.jsx';\r\n\r\nclass _BoardDetails extends Component {\r\n  state = {\r\n    isCardLabelListOpen: false,\r\n    isAddPopOpen: false,\r\n    quickCardEditor: {\r\n      cardToEdit: null,\r\n      groupId: '',\r\n      position: {},\r\n    },\r\n    // isDashboardOpen: false,\r\n  };\r\n  async componentDidMount() {\r\n    const { boardId } = this.props.match.params;\r\n    const filterBy = this.props.location.search;\r\n    console.log('from Board details: ', filterBy);\r\n    await this.loadBoard(boardId, filterBy);\r\n    socketService.emit('member-joined', boardId);\r\n    socketService.on('board-update', ({ action, activity }) => {\r\n      const boardToSend = action.board || this.props.board;\r\n      this.props.outputUpdateBoard(action, boardToSend, activity);\r\n    });\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    const { boardId } = this.props.match.params;\r\n    const filterBy = this.props.location.search;\r\n    if (prevProps.match.params.boardId !== boardId) {\r\n      await this.loadBoard(boardId, filterBy)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetBoard();\r\n  }\r\n  loadBoard = (boardId, filterBy) => {\r\n    this.props.loadBoard(boardId, filterBy);\r\n  };\r\n  openCardEdit = (groupId, cardId) => {\r\n    this.props.history.push(`${this.props.board._id}/${groupId}/${cardId}`);\r\n  };\r\n  updateBoard = (action, activity) => {\r\n    const updatedBoard = action.board || this.props.board;\r\n    this.props.onUpdateBoard(action, updatedBoard, activity);\r\n  };\r\n\r\n  onToggleDashboard = (isOpen) => {\r\n    if (isOpen) {\r\n      this.props.history.push(`${this.props.board._id}/dashboard`);\r\n    } else {\r\n      this.props.history.goBack();\r\n    }\r\n    // this.setState({isDashboardOpen: isOpen})\r\n  };\r\n  toggleCardLabelList = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({ isCardLabelListOpen: !this.state.isCardLabelListOpen });\r\n  };\r\n  onToggleQuickCardEditor = (event, card, groupId) => {\r\n    event.stopPropagation();\r\n    const parentElement = card ? event.currentTarget.parentNode : null;\r\n    const position = card ? parentElement.getBoundingClientRect() : {};\r\n    this.setState({ quickCardEditor: { cardToEdit: card, groupId, position } });\r\n  };\r\n  toggleCardComplete = (ev, groupId, card) => {\r\n    ev.stopPropagation();\r\n    if (card.isArchive) return;\r\n    const cardToUpdate = { ...card };\r\n    cardToUpdate.isComplete = !card.isComplete;\r\n    const activity = cardToUpdate.isComplete\r\n      ? {\r\n        txt: activityTxtMap.completeCard(),\r\n        card: cardToUpdate,\r\n        groupId: groupId,\r\n      }\r\n      : {\r\n        txt: activityTxtMap.unCompleteCard(),\r\n        card: cardToUpdate,\r\n        groupId: groupId,\r\n      };\r\n    this.props.onUpdateCard(cardToUpdate, groupId, this.props.board, activity);\r\n  };\r\n  getLabel = (labelId) => {\r\n    const label = this.props.board.labels.find((label) => label.id === labelId);\r\n    return label;\r\n  };\r\n  handleOnDragEnd = (result) => {\r\n    const { destination, source, type } = result;\r\n    if (!destination) return;\r\n    const boardToChange = { ...this.props.board };\r\n    //group dragged -\r\n    if (type === 'group') {\r\n      const draggedGroup = boardToChange.groups.splice(source.index, 1);\r\n      boardToChange.groups.splice(destination.index, 0, ...draggedGroup);\r\n      this.props.onUpdateBoard({ type: '' }, boardToChange);\r\n      return;\r\n    }\r\n    const sourceGroup = {\r\n      ...boardToChange.groups.find((group) => group.id === source.droppableId),\r\n    };\r\n    const card = sourceGroup.cards.splice(source.index, 1);\r\n    //card dragged in the same group -\r\n    if (source.droppableId === destination.droppableId) {\r\n      sourceGroup.cards.splice(destination.index, 0, ...card);\r\n      const action = { type: 'UPDATE_GROUP', group: sourceGroup };\r\n      this.props.onUpdateBoard(action, boardToChange);\r\n    }\r\n    //card dragged to another group\r\n    else {\r\n      const destinationGroup = {\r\n        ...boardToChange.groups.find(\r\n          (group) => group.id === destination.droppableId\r\n        ),\r\n      };\r\n      if (destinationGroup.cards)\r\n        destinationGroup.cards.splice(destination.index, 0, ...card);\r\n      else destinationGroup.cards = [card];\r\n      boardToChange.groups = boardToChange.groups.map((currGroup) => {\r\n        if (currGroup.id === source.droppableId) return sourceGroup;\r\n        if (currGroup.id === destination.droppableId) return destinationGroup;\r\n        return currGroup;\r\n      });\r\n      this.props.onUpdateBoard({ type: '' }, boardToChange);\r\n    }\r\n  };\r\n  onToggleAddPop = () => {\r\n    this.setState({ isAddPopOpen: !this.state.isAddPopOpen });\r\n  };\r\n  toggleGroupArchive = (groupId) => {\r\n    const groupToUpdate = {\r\n      ...this.props.board.groups.find((group) => groupId === group.id),\r\n    };\r\n    groupToUpdate.isArchive = groupToUpdate.isArchive\r\n      ? !groupToUpdate.isArchive\r\n      : true;\r\n    const activity = { txt: activityTxtMap.archiveList(groupToUpdate.title) };\r\n    const action = { type: 'UPDATE_GROUP', group: groupToUpdate };\r\n    this.props.onUpdateBoard(action, this.props.board, activity);\r\n  };\r\n\r\n  render() {\r\n    const { board } = this.props;\r\n    const {\r\n      isDashboardOpen,\r\n      isCardLabelListOpen,\r\n      isAddPopOpen,\r\n      quickCardEditor,\r\n    } = this.state;\r\n    if (!board) return <Loader />;\r\n    if (board.archivedCards) console.log('board', board)\r\n    return (\r\n      <div className='board-details flex column'>\r\n        <Route path='/board/:boardId/dashboard' component={Dashboard} />\r\n        <Route path='/board/:boardId/:groupId/:cardId' component={CardEdit} />\r\n\r\n        <BoardHeader onToggleDashboard={this.onToggleDashboard} toggleCardLabelList={this.toggleCardLabelList} toggleCardComplete={this.toggleCardComplete} isCardLabelListOpen={isCardLabelListOpen} getLabel={this.getLabel} openCardEdit={this.openCardEdit} />\r\n\r\n        <DragDropContext onDragEnd={this.handleOnDragEnd}>\r\n          <section className='group-list-container flex'>\r\n            <div className='group-list-wrapper flex'>\r\n              <Droppable\r\n                droppableId={board._id}\r\n                direction='horizontal'\r\n                type='group'\r\n              >\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                    className='flex'\r\n                  >\r\n                    {board.groups && (\r\n                      <GroupList\r\n                        groups={board.groups}\r\n                        openCardEdit={this.openCardEdit}\r\n                        updateBoard={this.updateBoard}\r\n                        toggleCardLabelList={this.toggleCardLabelList}\r\n                        isCardLabelListOpen={isCardLabelListOpen}\r\n                        toggleCardComplete={this.toggleCardComplete}\r\n                        toggleGroupArchive={this.toggleGroupArchive}\r\n                        onToggleQuickCardEditor={this.onToggleQuickCardEditor}\r\n                        getLabel={this.getLabel}\r\n                      />\r\n                    )}\r\n                    {provided.placeholder}\r\n\r\n                    <div className='add-group-container'>\r\n                      {!isAddPopOpen && (\r\n                        <button\r\n                          className='add-boarditem-btn flex align-center'\r\n                          onClick={this.onToggleAddPop}\r\n                        >\r\n                          <i className='flex align-center'>\r\n                            <AiOutlinePlus />\r\n                          </i>\r\n                          <span>Add a list</span>\r\n                        </button>\r\n                      )}\r\n                      {isAddPopOpen && (\r\n                        <AddBoardItem\r\n                          onToggleAddPop={this.onToggleAddPop}\r\n                          type={'group'}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </div>\r\n          </section>\r\n        </DragDropContext>\r\n\r\n        {quickCardEditor.cardToEdit && (\r\n          <QuickCardEditor\r\n            cardId={quickCardEditor.cardToEdit.id}\r\n            groupId={quickCardEditor.groupId}\r\n            position={quickCardEditor.position}\r\n            getLabel={this.getLabel}\r\n            toggleCardComplete={this.toggleCardComplete}\r\n            isCardLabelListOpen={isCardLabelListOpen}\r\n            onToggleQuickCardEditor={this.onToggleQuickCardEditor}\r\n            openCardEdit={this.openCardEdit}\r\n          />\r\n        )}\r\n        {quickCardEditor.cardToEdit && (\r\n          <div\r\n            onClick={(event) => this.onToggleQuickCardEditor(event, null, '')}\r\n          >\r\n            <OverlayScreen />\r\n          </div>\r\n        )}\r\n        {/* {isDashboardOpen && (\r\n          <div\r\n            onClick={() => this.onToggleDashboard(false)}\r\n          >\r\n            <OverlayScreen />\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  loadBoard,\r\n  onUpdateBoard,\r\n  outputUpdateBoard,\r\n  onUpdateCard,\r\n  resetBoard,\r\n};\r\n\r\nexport const BoardDetails = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_BoardDetails);\r\n","export default __webpack_public_path__ + \"static/media/login-svg-right.df08073f.svg\";","export default __webpack_public_path__ + \"static/media/login-svg-left.ff7c7688.svg\";","import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport { connect } from 'react-redux'\r\nimport { GoogleLogin } from 'react-google-login'\r\n\r\n// import { userService } from '../services/user.service'\r\nimport { onLogin, onSignup, loadUsers, onGoogleLogin } from '../store/user.actions'\r\nimport { Link } from 'react-router-dom'\r\nimport { SiTrello } from 'react-icons/si'\r\nimport svgRight from '../assets/img/login-svg-right.svg'\r\nimport svgLeft from '../assets/img/login-svg-left.svg'\r\n\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID\r\n\r\nclass _LoginSignup extends React.Component {\r\n\r\n    state = {\r\n        credentials: {\r\n            username: '',\r\n            password: '',\r\n            fullname: ''\r\n        },\r\n        pageMode: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadUsers()\r\n        const pageMode = this.props.location.pathname === '/login' ? 'login' : 'signup'\r\n        this.setState({ pageMode })\r\n    }\r\n\r\n    validate = (values) => {\r\n        const errors = {}\r\n        if (!values.username) {\r\n            errors.username = 'Required'\r\n        } else if (values.username.length < 6) {\r\n            errors.username = 'Please use at least 6 characters'\r\n        }\r\n        if (values.password.length < 4) {\r\n            errors.password = 'Password is too short'\r\n        }\r\n        if (!values.fullname) {\r\n            errors.fullname = 'Required'\r\n        } else if (values.fullname.length < 4) {\r\n            errors.fullname = 'Please use at least 4 characters'\r\n        }\r\n        return errors\r\n    }\r\n\r\n    onSuccessGoogle = (res) => {\r\n        const { tokenId } = res\r\n        const { onGoogleLogin } = this.props\r\n        onGoogleLogin(tokenId)\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    onFailureGoogle = (res) => {\r\n        console.log('Login with google failed', res)\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        const { pageMode } = this.state\r\n        const { onLogin, onSignup } = this.props\r\n        pageMode === 'login' ? onLogin(values) : onSignup(values)\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    render() {\r\n        const { credentials, pageMode } = this.state\r\n        return (\r\n            <section className=\"login-signup-page main-container\">\r\n                <div className=\"login-signup-header\">\r\n                    <SiTrello />\r\n                    <h3 className=\"logo-text\">Marshmello</h3>\r\n                </div>\r\n                {pageMode === 'login' && <div className=\"login-signup flex column\">\r\n                    <h3>Log in to Marshmello</h3>\r\n                    <Formik initialValues={credentials} onSubmit={this.onSubmit} >\r\n                        <Form className=\"login-form flex column\">\r\n                            <Field type=\"username\" placeholder=\"Enter user name\" name=\"username\" autoFocus />\r\n                            <ErrorMessage name=\"username\" component=\"div\" />\r\n                            <Field type=\"password\" placeholder=\"Enter password\" name=\"password\" autoComplete=\"off\" />\r\n                            <ErrorMessage name=\"password\" component=\"div\" />\r\n                            <button type=\"submit\" className=\"login-signup-btn nav-button\" style={{color: '#172b4d'}}>Log in</button>\r\n                        </Form>\r\n                    </Formik>\r\n                    OR\r\n                    <br />\r\n                    <GoogleLogin\r\n                        className=\"google-login-btn flex align-center justify-center\"\r\n                        clientId='209268489709-ofnqpgb55aikiprlelkbiafntgld4mhg.apps.googleusercontent.com'\r\n                        buttonText='Continue with Google'\r\n                        onSuccess={this.onSuccessGoogle}\r\n                        onFailure={this.onFailureGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                    <Link to=\"/signup\">Sign up for an account</Link>\r\n                </div>}\r\n                {pageMode === 'signup' &&\r\n                    <div className=\"login-signup flex column\">\r\n                        <h3>Sign up for your account</h3>\r\n                        <Formik initialValues={credentials} validateOnChange={false} validateOnBlur={false} validate={this.validate} onSubmit={this.onSubmit}>\r\n                            <Form className=\"flex column\">\r\n                                <Field type=\"fullname\" placeholder=\"Enter full name\" name=\"fullname\" autoFocus />\r\n                                <ErrorMessage name=\"fullname\" component=\"p\" />\r\n                                <Field type=\"username\" placeholder=\"Enter user name\" name=\"username\" />\r\n                                <ErrorMessage name=\"username\" component=\"p\" />\r\n                                <Field type=\"password\" placeholder=\"Enter password\" name=\"password\" />\r\n                                <ErrorMessage name=\"password\" component=\"p\" />\r\n                                <button type=\"submit\" className=\"login-signup-btn nav-button\" style={{color: '#172b4d'}}>Sign up</button>\r\n                            </Form>\r\n                        </Formik>\r\n                        <Link to=\"/login\">Already have an account ? Log In</Link>\r\n                    </div>}\r\n                <div className=\"right-svg\">\r\n                    <img src={svgRight} alt=\"right-svg\" />\r\n                </div>\r\n                <div className=\"left-svg\">\r\n                    <img src={svgLeft} alt=\"left-svg\" />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    onLogin,\r\n    onSignup,\r\n    onGoogleLogin\r\n}\r\n\r\nexport const LoginSignup = connect(mapStateToProps, mapDispatchToProps)(_LoginSignup)","import { HomePage } from './pages/home-page.jsx'\r\nimport { BoardSelect } from './pages/boards-select.jsx'\r\nimport { BoardDetails } from './pages/board-details.jsx'\r\nimport { LoginSignup } from './pages/login-signup.jsx';\r\n\r\n// Routes accesible from the main navigation (in AppHeader)\r\nconst routes = [{\r\n        path: '/board/:boardId',\r\n        component: BoardDetails,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: BoardSelect,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: LoginSignup\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: LoginSignup \r\n    },\r\n    {\r\n        path: '/',\r\n        component: HomePage,\r\n    }\r\n]\r\n\r\nexport default routes;","import React, { createRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { onAddBoard, setAddingBoard } from '../../store/board.actions.js'\r\n\r\n\r\nclass _BoardAdd extends React.Component {\r\n    state = {\r\n        title: '',\r\n        style: {\r\n            imgUrl: 'https://images.pexels.com/photos/3683056/pexels-photo-3683056.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'\r\n        },\r\n        chosenImgIdx: 5\r\n    }\r\n\r\n    targetRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n        this.props.setAddingBoard(false)\r\n    }\r\n\r\n    handleClick = (ev) => {\r\n        if (this.targetRef.current.contains(ev.target)) {\r\n            // || element?.contains(ev.target)\r\n            // inside click\r\n            return\r\n        }\r\n        // outside click \r\n        this.props.onClose()\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ ...this.state, [field]: value });\r\n    }\r\n\r\n    handleImage = (ev, idx) => {\r\n        ev.preventDefault()\r\n        const imgSrc = ev.target.getAttribute('src')\r\n        this.setState({ ...this.state, style: { imgUrl: imgSrc }, chosenImgIdx: idx })\r\n    }\r\n\r\n    addBoard = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        const addedBoard = await this.props.onAddBoard(this.state)\r\n        this.props.history.push(`/board/${addedBoard._id}`)\r\n        this.props.setAddingBoard(false)\r\n    }\r\n\r\n    render() {\r\n        const images = ['https://images.pexels.com/photos/1914982/pexels-photo-1914982.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n            'https://images.pexels.com/photos/844297/pexels-photo-844297.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/3293148/pexels-photo-3293148.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/911738/pexels-photo-911738.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/3274903/pexels-photo-3274903.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/3683056/pexels-photo-3683056.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/2170473/pexels-photo-2170473.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/2529973/pexels-photo-2529973.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/1982485/pexels-photo-1982485.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940']\r\n        const { title, chosenImgIdx } = this.state\r\n        return (\r\n            <div className=\"board-add\" ref={this.targetRef}>\r\n                <form className=\"board-add-form\" onSubmit={this.addBoard} style={{background: '#000000', backgroundImage: `url(${images[chosenImgIdx]})` }} >\r\n                    <input autoFocus className={`board-title-input ${(title) ? 'editing' : ''}`} autoComplete=\"off\" type=\"text\" placeholder=\"Add board title\" name=\"title\" value={title} onChange={this.handleChange} />\r\n                    <button className={`create-btn ${(title) ? 'clickable' : ''}`} type=\"submit\">Create Board</button>\r\n                </form>\r\n                <div className=\"images-container\">\r\n                    {images.map((image, idx) =>\r\n                        <button className={`img-btn ${(idx === chosenImgIdx) ? 'chosen' : ''}`} key={idx} onClick={(ev) => this.handleImage(ev, idx)}>\r\n                            <img className=\"add-board-img\" src={image} alt={image} />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAddingBoard: state.boardModule.isAddingBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onAddBoard,\r\n    setAddingBoard\r\n}\r\nconst _BoardAddWithRouter = withRouter(_BoardAdd)\r\nexport const BoardAdd = connect(mapStateToProps, mapDispatchToProps)(_BoardAddWithRouter)","import React from 'react'\r\nimport { MemberAvatar } from '../member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { onLogout } from '../../../store/user.actions'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { withRouter } from 'react-router'\r\n\r\nclass _LoggedinUser extends React.Component {\r\n    onLogoutUser = () => {\r\n        this.props.history.push('/login')\r\n        this.props.onLogout()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"mini-user flex column\">\r\n\r\n                <div className=\"main flex\">\r\n                    <MemberAvatar size=\"lg\" member={this.props.user} />\r\n                    <div>\r\n                        <h3 className=\"mini-user-fullname\">{this.props.user.fullname}</h3>\r\n                        <p>{this.props.user.username}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"remove-member\" onClick={() => this.onLogoutUser()}>Log Out</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout\r\n}\r\nconst _LoggedinUserWithRouter = withRouter(_LoggedinUser)\r\nexport const LoggedinUser = connect(mapStateToProps, mapDispatchToProps)(_LoggedinUserWithRouter);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment'\r\nimport { MemberAvatar } from '../member-avatar';\r\nimport { onUpdateUser } from '../../../store/user.actions'\r\n\r\nclass _Notifications extends React.Component {\r\n\r\n    markAsSeen = (mentionId) => {\r\n        const { user } = this.props\r\n        const currMentionIdx = user.mentions.findIndex(mention => mention.id === mentionId)\r\n        user.mentions.splice(currMentionIdx, 1)\r\n        this.props.onUpdateUser(user);\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props\r\n        return (\r\n            <section className=\"notifications\">\r\n                {(user.mentions && user.mentions.length > 0) ? user.mentions.map((mention, idx) =>\r\n                    <div key={mention.id} className=\"user-mentions\">\r\n                        <div className=\"notification-text\">\r\n                            <div className=\"notification-avatar\">\r\n                                <MemberAvatar member={mention.user} />\r\n                            </div>\r\n                            <p><span className=\"username\">{mention.user.fullname}</span> has {mention.action} you {(mention.action === 'Removed') ? 'from' : 'to'} card <Link to={`/board/${mention.board.boardId}/${mention.groupId}/${mention.card.cardId}`}><span className=\"card-title\"> {mention.card.title} </span></Link > in board <Link to={`/board/${mention.board.boardId}`}><span className=\"board-title\">{mention.board.title}</span></Link>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"notification-bottom\">\r\n                            <Moment className=\"notification-time\" fromNow>{mention.createdAt}</Moment>\r\n                            <small onClick={() => this.markAsSeen(mention.id)}>Mark as read</small>\r\n                        </div>\r\n                    </div>\r\n                ) : <div>No notifications yet</div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateUser\r\n}\r\n\r\nexport const Notifications = connect(mapStateToProps, mapDispatchToProps)(_Notifications);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CgHome } from 'react-icons/cg';\r\nimport { AiOutlinePlus, AiOutlineBell } from 'react-icons/ai';\r\nimport { SiTrello } from 'react-icons/si';\r\n\r\n// import routes from '../routes'\r\nimport {\r\n  onLogin,\r\n  onLogout,\r\n  onSignup,\r\n  loadUsers,\r\n  removeUser,\r\n  loadAndWatchUser,\r\n  onReceiveMention,\r\n  onUpdateUser\r\n} from '../store/user.actions.js';\r\nimport { userService } from '../services/user.service.js';\r\nimport { setAddingBoard } from '../store/board.actions';\r\nimport { BoardAdd } from './board/board-add.jsx';\r\nimport { MemberAvatar } from './shared/member-avatar.jsx';\r\nimport { OverlayScreen } from '../cmps/overlay-screen';\r\nimport { DynamicPopover } from './shared/dynamic-popover.jsx';\r\nimport { LoggedinUser } from './shared/popover-children/loggedin-user.jsx';\r\nimport { Loader } from './shared/loader';\r\nimport { socketService } from '../services/socket.service.js';\r\nimport { Notifications } from './shared/popover-children/notifications.jsx';\r\n\r\nclass _AppHeader extends React.Component {\r\n  state = {\r\n    // user: null,\r\n    isUserPopoverOpen: false,\r\n    isNotificationPopoverOpen: false\r\n  };\r\n\r\n  userMenuRef = React.createRef();\r\n  notificationsRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    socketService.on('received-mention', this.props.onReceiveMention)\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.user !== prevProps.user) {\r\n      const { user } = this.props\r\n      socketService.emit('set-user-socket', user._id)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socketService.off('received-mention', this.props.onReceiveMention)\r\n    //socketService.emit('unset-user-socket')\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.props.onLogout();\r\n  };\r\n\r\n  setAddBoard = (value) => {\r\n    this.props.setAddingBoard(value);\r\n  };\r\n\r\n  setFavicon = () => {\r\n    const favicon = document.getElementById('favicon');\r\n    favicon.href = '../../public/favicon.ico';\r\n  };\r\n\r\n  getUnreadMentions = (mentions) => {\r\n    let count = 0;\r\n    if (mentions) {\r\n      mentions.forEach((mention) => {\r\n        if (!mention.isRead) count++;\r\n      });\r\n    }\r\n    return count;\r\n  };\r\n\r\n  markAllMentionsAsRead = () => {\r\n    // const user = {...this.props.user};\r\n    const { user } = this.props;\r\n    const { mentions } = user;\r\n    mentions.forEach((mention) => {\r\n      mention.isRead = true;\r\n    });\r\n    this.props.onUpdateUser(user);\r\n    this.setState({ isNotificationPopoverOpen: !this.state.isNotificationPopoverOpen })\r\n  };\r\n\r\n  render() {\r\n    const { user, isAddingBoard } = this.props;\r\n    const { isUserPopoverOpen, isNotificationPopoverOpen } = this.state;\r\n    if (!user) return <Loader />;\r\n    return (\r\n      <header className='app-header'>\r\n        <nav className='nav-links'>\r\n          <div className='left-links'>\r\n            <NavLink to='/'>\r\n              <button\r\n                onClick={() => this.setFavicon()}\r\n                className='home-btn nav-button'\r\n              >\r\n                <CgHome />\r\n              </button>\r\n            </NavLink>\r\n            <NavLink to='/board'>\r\n              <button\r\n                onClick={() => this.setFavicon()}\r\n                className='boards-btn flex nav-button'\r\n              >\r\n                <SiTrello /> <span>Boards</span>\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n          <NavLink className='logo' to='/'>\r\n            <SiTrello /> <span> Marshmello </span>\r\n          </NavLink>\r\n          <div className='right-links'>\r\n            <button\r\n              className='nav-button'\r\n              onClick={() => this.setAddBoard(true)}\r\n            >\r\n              <AiOutlinePlus />\r\n            </button>\r\n            <div className='pos-relative' ref={this.notificationsRef}>\r\n              <button\r\n                onClick={this.markAllMentionsAsRead}\r\n                className='nav-button'\r\n                style={{\r\n                  backgroundColor: this.getUnreadMentions(user.mentions)\r\n                    ? '#EF7564'\r\n                    : '',\r\n                }}\r\n              >\r\n                <AiOutlineBell />\r\n              </button>\r\n              {isNotificationPopoverOpen && (\r\n                <DynamicPopover\r\n                  onClose={() => this.setState({ isNotificationPopoverOpen: false })}\r\n                  title='Notifications'\r\n                  ref={this.notificationsRef}\r\n                >\r\n                  <Notifications />\r\n                </DynamicPopover>\r\n              )}\r\n            </div>\r\n            <div className='pos-relative' ref={this.userMenuRef}>\r\n              <button className='user-btn'\r\n                onClick={() => this.setState({ isUserPopoverOpen: !isUserPopoverOpen })}\r\n              >\r\n                <MemberAvatar key={user._id} member={user} />\r\n              </button>\r\n              {isUserPopoverOpen && (\r\n                <DynamicPopover\r\n                  onClose={() => this.setState({ isUserPopoverOpen: false })}\r\n                  title='User Details'\r\n                  ref={this.userMenuRef}\r\n                >\r\n                  <LoggedinUser member={user} onLogout={this.onLogout} />\r\n                </DynamicPopover>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        {isAddingBoard && <BoardAdd onClose={() => this.setAddBoard(false)} />}\r\n        {isAddingBoard && <OverlayScreen />}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    user: state.userModule.user,\r\n    isAddingBoard: state.boardModule.isAddingBoard,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  onLogin,\r\n  onSignup,\r\n  onLogout,\r\n  loadUsers,\r\n  removeUser,\r\n  setAddingBoard,\r\n  onReceiveMention,\r\n  onUpdateUser\r\n};\r\n\r\nexport const AppHeader = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_AppHeader);\r\n","import React from 'react'\r\nimport { Switch, Route, withRouter } from 'react-router'\r\nimport routes from './routes'\r\nimport { AppHeader } from './cmps/app-header'\r\nimport { connect } from 'react-redux'\r\nimport { socketService } from './services/socket.service'\r\nimport { userService } from './services/user.service'\r\n\r\nclass _RootCmp extends React.Component {\r\n\r\n    get isHeaderShown() {\r\n        const { pathname } = this.props.location\r\n        return (pathname.includes('board') || pathname.includes('boards'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app flex column\">\r\n                {this.isHeaderShown &&\r\n                    <AppHeader />\r\n                }\r\n                <main className=\"main-app\">\r\n                    <Switch>\r\n                        {routes.map(route => <Route key={route.path} component={route.component} path={route.path} />)}\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst _RootCmpWithRouter = withRouter(_RootCmp)\r\nexport const RootCmp = connect(mapStateToProps)(_RootCmpWithRouter)\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport { store } from './store/store';\nimport { RootCmp } from './root-cmp';\nimport './assets/styles/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <RootCmp />\n      </Router>{' '}\n    </Provider>{' '}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}