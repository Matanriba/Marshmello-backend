{"version":3,"sources":["serviceWorkerRegistration.js","store/board.reducer.js","services/http.service.js","services/socket.service.js","services/util.service.js","services/user.service.js","store/user.reducer.js","store/system.reducer.js","store/store.js","services/event-bus.service.js","store/user.actions.js","assets/img/hero.png","assets/img/homepage-product.jpg","pages/home-page.jsx","cmps/board-preview.jsx","cmps/board-list.jsx","services/board.service.js","store/board.actions.js","cmps/overlay-screen.jsx","assets/img/loader.svg","cmps/shared/loader.jsx","pages/boards-select.jsx","services/card-edit.service.js","cmps/shared/popover-children/move-card.jsx","cmps/shared/popover-children/copy-card.jsx","cmps/shared/popover-header.jsx","cmps/shared/dynamic-popover.jsx","cmps/card-edit/edit-sidebar-label.jsx","cmps/card-edit/card-edit-actions-item.jsx","cmps/card-edit/card-edit-actions.jsx","cmps/shared/member-avatar.jsx","services/activity.service.js","cmps/card-edit/popper-member-preview.jsx","cmps/shared/popover-children/member-list.jsx","cmps/shared/popover-children/card-edit-date.jsx","cmps/card-edit/popper-label-preview.jsx","cmps/shared/popover-children/label-list.jsx","cmps/shared/popover-children/popover-checklist.jsx","services/cloudinary.service.js","cmps/shared/popover-children/popover-attach-file.jsx","cmps/card-edit/add-to-card/card-edit-add-to-card-item.jsx","cmps/shared/popover-children/popper-cover-edit.jsx","cmps/shared/popover-children/label-edit.jsx","cmps/card-edit/add-to-card/card-edit-add-to-card.jsx","cmps/card-edit/card-edit-sidebar.jsx","cmps/card-edit/labels-members/card-edit-duedate.jsx","cmps/card-edit/labels-members/card-edit-labels.jsx","cmps/shared/popover-children/mini-user.jsx","cmps/card-edit/members-container-member-preview.jsx","cmps/card-edit/labels-members/card-edit-members.jsx","cmps/card-edit/labels-members.jsx","cmps/card-edit/progress-bar.jsx","cmps/card-edit/todo-item.jsx","cmps/card-edit/checklist-edit.jsx","cmps/card-edit/card-edit-description.jsx","cmps/card-edit/comment-preview.jsx","cmps/card-edit/card-edit-activities.jsx","cmps/shared/popover-children/edit-attachment.jsx","cmps/card-edit/attachment-preview.jsx","cmps/card-edit/card-edit-attachment.jsx","cmps/card-edit.jsx","cmps/shared/add-board-item.jsx","cmps/card-preview/card-header.jsx","cmps/card-preview/card-label-bar-list.jsx","cmps/card-preview/card-checklists.jsx","cmps/card-preview/card-duedate.jsx","cmps/card-preview/card-footer.jsx","cmps/board/card-preview-content.jsx","cmps/board/card-preview.jsx","cmps/shared/popover-children/group-actions.jsx","cmps/board/group-preview.jsx","cmps/board/group-list.jsx","cmps/board/invite-members.jsx","services/unsplash.service.js","cmps/side-menu/change-bg.jsx","cmps/side-menu/board-icon.jsx","cmps/side-menu/search-cards.jsx","cmps/side-menu/archive.jsx","cmps/side-menu/activity-list.jsx","cmps/side-menu/remove-board.jsx","cmps/side-menu/side-menu.jsx","cmps/shared/popover-children/board-edit-members.jsx","cmps/board/board-header.jsx","cmps/quick-card-editor.jsx","cmps/dashboard/tasks-per-members-chart.jsx","cmps/dashboard/tasks-per-labels-chart.jsx","cmps/dashboard/tasks-per-date-chart.jsx","cmps/dashboard.jsx","pages/board-details.jsx","assets/img/login-svg-right.svg","assets/img/login-svg-left.svg","pages/login-signup.jsx","routes.js","cmps/board/board-add.jsx","cmps/shared/popover-children/loggedin-user.jsx","cmps/shared/popover-children/notifications.jsx","cmps/app-header.jsx","root-cmp.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialState","boards","currBoard","filteredBoard","lastRemovedBoard","isAddingBoard","currCardId","filterBy","txt","members","labels","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","dir","response","status","sessionStorage","clear","assign","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","utilService","makeId","length","possible","i","charAt","Math","floor","random","makeLorem","size","words","getRandomIntInclusive","min","max","ceil","delay","ms","Promise","resolve","setTimeout","debounce","func","timer","timeout","args","clearTimeout","apply","STORAGE_KEY_LOGGEDIN_USER","userService","login","logout","signup","getLoggedinUser","getMiniUser","fullUser","_id","fullname","imgUrl","getUsers","getById","update","getGueastUser","googleLogin","addUserMention","userId","mention","addMentionToStorage","users","user","updatedUser","_saveLocalUser","userCred","tokenId","mentions","removeItem","unshift","setItem","JSON","stringify","parse","getItem","watchedUser","isLoading","rootReducer","combineReducers","boardModule","action","newState","type","board","find","boardId","filter","cardId","userModule","systemModule","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","eventBusService","listener","callListener","detail","addEventListener","removeEventListener","dispatchEvent","CustomEvent","showUserMsg","loadUsers","dispatch","onLogin","credentials","onSignup","err","onLogout","onUpdateUser","myBus","_HomePage","isNavbarBG","changeHeaderStyle","scrollY","setState","onGuestLogin","props","username","password","history","push","this","document","body","style","overflowY","className","to","onClick","src","heroImg","alt","productImg","React","Component","mapDispatchToProps","HomePage","connect","BoardPreview","toggleStarredBoard","setFavicon","bgColor","backgroundColor","backgroundImage","title","isStarred","ev","preventDefault","stopPropagation","toggleIsStarred","BoardList","setAddBoard","isWorkspace","map","boardService","query","save","remove","dashboardQuery","getArchivedCards","filterByUser","URLSearchParams","toString","chartsData","archivedCards","activity","newActivity","id","byMember","card","groupId","boardToSave","createdBy","addedBoard","loadBoard","background","backgroundSize","onUpdateBoard","_getUpdatedBoard","setAddingBoard","onRemoveCard","archivedCard","onArchiveCard","isArchive","group","groups","cardIdx","cards","findIndex","prevIndex","splice","groupAction","onUnArchiveCard","cardToSave","onUpdateCard","onSetCardId","member","memberId","currGroup","OverlayScreen","cs","Loader","loader","_BoardSelect","getStarredBoards","favicon","getElementById","href","loadBoards","BoardSelect","getCardById","getState","getGroupId","some","cardEditService","handleChecklistChange","checklistId","value","newVal","checklist","checklists","todos","todo","isDone","idx","handleMemberChange","memberToAdd","handleLabelChange","labelId","labelIds","labelToAdd","label","handleDueDateChange","timestamp","dueDate","getFormattedTime","timeLeft","Date","now","date","month","getMonth","day","getDate","getUploadTime","timePassed","minutes","hours","getMinutes","getHours","handleFileAdd","attachments","addedAt","handleFileRemove","fileId","file","getGroupById","handleMoveCard","initialBoard","initialGroup","initialCardIdx","handleCopyCard","handleToggleArchive","handleRemoveCard","onAddComment","comments","author","handleCommentRemove","commentId","comment","getCommentTime","handleAttachmentEdit","attachmentId","attachment","MoveCard","goBack","onClose","useState","setCurrGroup","currPosition","setCurrPosition","useEffect","handleChange","target","name","item","onChange","positions","getPositions","boardToChange","CopyCard","currTitle","setCurrTitle","autoFocus","PopoverHeader","memo","isMultiView","onGoBack","DynamicPopover","forwardRef","parentRef","children","targetRef","useRef","contentRef","breakpoints","MOBILE","NARROW","current","top","bottom","right","left","setLocation","setDynamicStyles","useCallback","rect","breakpoint","targetEl","classList","add","transform","getLocation","width","height","getBoundingClientRect","rightCheck","innerWidth","isOverflowY","innerHeight","currBreakpoint","Object","values","currBp","matchMedia","matches","maxHeight","handleLocationChange","offsetWidth","offsetHeight","useLayoutEffect","handleClick","e","containerElement","parentElement","contains","ref","EditSidebarLabel","Icon","position","color","CardEditActionsItem","isOpen","setIsOpen","itemRef","InnerPopperCmp","useMemo","component","icon","actions","BsArrowRight","MdContentCopy","CardEditActions","setIsArchive","setGroupId","currCard","setCurrCard","BsArrowCounterclockwise","AiOutlineMinus","GoArchive","MemberAvatar","getSize","round","activityTxtMap","listName","boardName","memberName","groupName","labelName","checklistName","PopperMemberPreview","onAddUserMention","isChecked","setIsChecked","isMemberChecked","m","createdAt","MemberList","setMembers","placeholder","matchingMembers","toLowerCase","includes","CardEditDate","startDate","endDate","setDueDate","handleSubmit","selected","getTime","inline","formatWeekDay","nameOfDay","substr","PopperLabelPreview","isLabelChecked","l","LabelList","setLabels","matchingLabels","PopoverChecklist","inputRef","setTitle","focus","select","onSubmit","htmlFor","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","json","PopoverAttachFile","setUrl","urlRef","handleImageUpload","display","CardEditAddToCardItem","isEdit","setIsEdit","setColor","EditComponent","editComponent","handleEdit","checkIfCover","_PopperCoverEdit","selectedEl","initialStyle","currStyle","selectedSize","handleCoverRemove","handleSizeChange","isFull","PopperCoverEdit","colors","LabelEdit","selectedColor","setSelectedColor","dataset","c","CardEditAddToCard","addToCardItems","BiUser","MdLabelOutline","BsCardChecklist","BsClock","FiPaperclip","CgCreditCard","CardEditSidebar","CardEditDueDate","dueDateRef","time","getDueDateLabel","isComplete","checked","textTransform","fontSize","padding","borderRadius","CardEditLabels","addButtonRef","getCardLabels","MiniUser","MembersContainerMemberPreview","isPreviewOpen","setIsPreviewOpen","userButtonRef","cursor","CardEditMembers","isListOpen","setIsListOpen","LabelsMembers","ProgressBar","completed","fillerStyles","textAlign","transition","margin","_TodoItem","todoTitle","isEditTodo","todoTextareaRef","createRef","saveTodoBtnRef","newTodoTextarea","handleMarkTodo","handleRemoveTodo","handleTitleChange","onChangeTitle","alignSelf","paddingBottom","onFocus","alignItems","justifyContent","TodoItem","_ChecklistEdit","percentage","isAddTodo","newTodo","addTodoBtnRef","setTodoPercentage","doneTodos","num","Number","isInteger","toFixed","handleInputChange","onAddTodo","onRemoveChecklist","prevProps","maxWidth","minWidth","rows","ChecklistEdit","_CardEditDescription","isDescriptionOpen","descriptionRef","setDescriptionTextarea","handleDescriptionChange","description","onBlur","CardEditDescription","CommentPreview","timeMsg","_CardEditActivities","isFocus","isTxt","commentTxt","activities","commentRef","getCardActivities","cardActivities","CardEditActivities","EditAttachment","titleRef","AttachmentPreview","isEditOpen","setIsEditOpen","editRef","rel","_CardEditAttachment","CardEditAttachment","_CardEdit","modalRef","coverRef","handleLoad","getDataById","currentCard","currentGroup","handlePropertyChange","checkCardBackground","minHeight","objectFit","bg","CardEdit","_AddBoardItem","newItem","onKeyUpEnter","key","onAddItem","newCard","onAddCard","textInput","onToggleAddPop","renderedType","onKeyUp","input","AddBoardItem","CardHeader","cardStyle","CardLabelBarList","getLabel","isCardLabelListOpen","CardChecklists","todosCount","doneTodosCount","forEach","getChecklistStr","CardDueDate","toggleCardComplete","getDueTimeStyle","event","toLocaleString","getFormatedTime","CardFooter","index","CardPreviewContent","onToggleQuickCardEditor","openCardEdit","toggleCardLabelList","CardPreview","draggableId","provided","innerRef","dragHandleProps","draggableProps","GroupActions","toggleGroupArchive","GroupPreview","isAddPopOpen","groupTitle","isPopoverOpen","groupEditRef","prevState","onChangeGroupTitle","updateBoard","blurFocus","blur","setFocus","handleFocus","snapshot","onMouseDown","onMouseUp","droppableId","droppableProps","GroupList","_InviteMembers","search","getMembersIds","inviteToBoard","memberIds","field","InviteMembers","API_KEY","unsplashService","getPreviewImgs","keyword","get","results","pic","preview","urls","small","full","_ChangeBG","pics","getPics","onSearch","setBoardBG","backGround","ChangeBG","_BoardIcon","BoardIcon","_SearchCards","updateUrlSearchParams","urlSearchFilterBy","currVal","Array","isArray","replace","pathname","onUpdateFilter","getFilteredBoard","newFilterBy","handleUserClick","clickedIdx","handleLabelClick","searchHasFilter","keys","filterKey","split","prevFilterBy","currFilterBy","bind","SearchCards","withRouter","_Archive","loadArchivedCards","onUnarchiveCard","onDeleteCard","Archive","_ActivityList","getGroupTitle","fromNow","ActivityList","_RemoveBoard","removeBoard","onRemoveBoard","checkIfAllowed","isAdmin","RemoveBoard","_SideMenu","currViewIdx","_cmpsToRender","onSelectView","viewId","getViewById","currView","onBack","_CurrView","_DefaultView","cmp","isMenuOpen","SideMenu","BoardEditMembers","_BoardHeader","isInviteOpen","boardTitle","numOfShownMembers","isExtraMembersOpen","isTotalMembersOpen","inviteRef","membersRef","totalMembersRef","handleResize","onChangeBoardTitle","toggleMenu","getRemainingMembers","getExtraMembersLength","onMembersClose","onToggleDashboard","extraMembersLength","BoardHeader","_QuickCardEditor","cardTitle","uploadCard","onSave","openCard","QuickCardEditor","TasksPerMemberChart","tasksPerMemberMap","labelsColors","datasets","borderWidth","hoverOffset","options","plugins","legend","TasksPerLabelChart","tasksPerLabelMap","fontColor","maintainAspectRatio","scales","y","ticks","x","TasksPerDateChart","tasks","links","header","textShadow","middle","selectedStyle","fontWeight","taskList","task","verticalSeparator","grip","dataViewPort","borderBottom","showLabel","boxShadow","_Dashboard","cardsCount","groupsCount","labelsColor","Dashboard","_BoardDetails","quickCardEditor","cardToEdit","updatedBoard","currentTarget","parentNode","cardToUpdate","handleOnDragEnd","result","destination","source","draggedGroup","sourceGroup","destinationGroup","groupToUpdate","boardToSend","outputUpdateBoard","resetBoard","path","onDragEnd","direction","BoardDetails","_LoginSignup","pageMode","validate","errors","onSuccessGoogle","onGoogleLogin","onFailureGoogle","initialValues","autoComplete","clientId","buttonText","onFailure","cookiePolicy","validateOnChange","validateOnBlur","svgRight","svgLeft","LoginSignup","routes","_BoardAdd","chosenImgIdx","handleImage","imgSrc","getAttribute","addBoard","onAddBoard","images","image","savedBoard","_BoardAddWithRouter","BoardAdd","_LoggedinUser","onLogoutUser","_LoggedinUserWithRouter","LoggedinUser","_Notifications","markAsSeen","mentionId","currMentionIdx","Notifications","_AppHeader","isUserPopoverOpen","isNotificationPopoverOpen","userMenuRef","notificationsRef","getUnreadMentions","count","isRead","markAllMentionsAsRead","onReceiveMention","removeUser","AppHeader","_RootCmp","isHeaderShown","route","_RootCmpWithRouter","RootCmp","ReactDOM","render","StrictMode","URL","process","origin","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b256a39e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    boards: [],\r\n    currBoard: null,\r\n    filteredBoard: null,\r\n    lastRemovedBoard: null,\r\n    isAddingBoard: false,\r\n    currCardId: null,\r\n    filterBy: {\r\n        txt: '',\r\n        members: [],\r\n        labels: []\r\n    }\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    var newState = state\r\n    var boards\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            newState = { ...state, boards: action.boards }\r\n            break\r\n        case 'UPDATE_FILTER':\r\n            newState = {...state, filterBy: action.filterBy }\r\n            break\r\n        case 'SET_CURR_BOARD':\r\n            newState = { ...state, currBoard: action.board }\r\n            break\r\n        case 'SET_FILTERED_BOARD':\r\n            newState = { ...state, filteredBoard: action.board }\r\n            break\r\n        case 'REMOVE_BOARD':\r\n            const lastRemovedBoard = state.boards.find(board => board._id === action.boardId)\r\n            boards = state.boards.filter(board => board._id !== action.boardId)\r\n            newState = { ...state, boards, lastRemovedBoard }\r\n            break\r\n        case 'SET_ADDING_BOARD':\r\n            newState = { ...state, isAddingBoard: action.isAddingBoard }\r\n            break\r\n        case 'ADD_BOARD':\r\n            newState = { ...state, boards: [...state.boards, action.board] }\r\n            break\r\n        case 'UPDATE_BOARD':\r\n            // boards = state.boards.map(board => (board._id === action.board._id) ? action.board : board)\r\n            newState = { ...state, currBoard: action.board }\r\n            break\r\n        case 'SET_CARD_ID':\r\n            newState = { ...state, currCardId: action.cardId }\r\n            break\r\n        case 'UNDO_REMOVE_BOARD':\r\n            if (state.lastRemovedBoard) {\r\n                newState = { ...state, boards: [...state.boards, state.lastRemovedBoard], lastRemovedBoard: null }\r\n            }\r\n            break\r\n        default:\r\n    }\r\n    return newState\r\n\r\n}","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n  ? '/api/'\r\n : '//localhost:3030/api/'\r\n\r\n// const BASE_URL = '/api/'\r\n// console.log(process.env.NODE_ENV);\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            sessionStorage.clear();\r\n            window.location.assign('/')\r\n        }\r\n        throw err\r\n    }\r\n}","import io from 'socket.io-client'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n// var socketIsReady = false;\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb=null) {\r\n      if (!socket) return;\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\n// function createDummySocketService() {\r\n//   var listenersMap = {}\r\n//   const socketService = {\r\n//     listenersMap,\r\n//     setup() {\r\n//       listenersMap = {}\r\n//     },\r\n//     terminate() {\r\n//       this.setup()\r\n//     },\r\n//     on(eventName, cb) {\r\n//       listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n//     },\r\n//     off(eventName, cb) {\r\n//       if (!listenersMap[eventName]) return\r\n//       if (!cb) delete listenersMap[eventName]\r\n//       else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n//     },\r\n//     emit(eventName, data) {\r\n//       if (!listenersMap[eventName]) return\r\n//       listenersMap[eventName].forEach(listener => {\r\n//         listener(data)\r\n//       })\r\n//     },\r\n//     debugMsg() {\r\n//       this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n//     },\r\n//   }\r\n//   window.listenersMap = listenersMap;\r\n//   return socketService\r\n// }\r\n\r\n\r\n// // Basic Tests\r\n// // function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\r\n// // socketService.on('baba', cb)\r\n// // socketService.on('baba', cb)\r\n// // socketService.on('baba', cb)\r\n// // socketService.on('mama', cb)\r\n// // socketService.emit('baba', 'Puk')\r\n// // socketService.off('baba', cb)\r\n\r\n\r\n// socketService.on(SOCKET_EVENT_REVIEW_ABOUT_YOU, review => {\r\n//   console.log('Review about me!', review);\r\n  \r\n// })\r\n\r\n","export const utilService = {\r\n    makeId,\r\n    makeLorem,\r\n    getRandomIntInclusive,\r\n    delay,\r\n    debounce\r\n    // handleChange\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction debounce(func, timeout = 300){\r\n    let timer;\r\n    return (...args) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => { func.apply(this, args); }, timeout);\r\n    };\r\n  }\r\n\r\nfunction makeLorem(size = 100) {\r\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn'];\r\n    var txt = '';\r\n    while (size > 0) {\r\n        size--;\r\n        txt += words[Math.floor(Math.random() * words.length)] + ' ';\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\n// function handleChange({ target: { name, value, type } }) {\r\n//     this.setState(prevState => ({ ...prevState, [name]: value }))\r\n// }\r\n\r\n","// import { storageService } from './async-storage.service'\r\nimport { httpService } from './http.service'\r\nimport { \r\n    socketService, \r\n    // SOCKET_EVENT_USER_UPDATED \r\n} from './socket.service'\r\nimport { utilService } from './util.service';\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\r\n// var gWatchedUser = null;\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedinUser,\r\n    getMiniUser,\r\n    getUsers,\r\n    getById,\r\n    // remove,\r\n    update,\r\n    getGueastUser,\r\n    googleLogin,\r\n    addUserMention,\r\n    addMentionToStorage\r\n}\r\n\r\nwindow.userService = userService\r\n\r\n\r\nasync function getUsers() {\r\n    // const users = storageService.query('user')\r\n    // return users\r\n    const users = await httpService.get(`user`)\r\n    return users\r\n}\r\n\r\nasync function getById(userId) {\r\n    // const user = await storageService.get('user', userId)\r\n    const user = await httpService.get(`user/${userId}`)\r\n    // gWatchedUser = user;\r\n    return user;\r\n}\r\n\r\n// function remove(userId) {\r\n//     return storageService.remove('user', userId)\r\n//         // return httpService.delete(`user/${userId}`)\r\n// }\r\n\r\nasync function update(user) {\r\n    // await storageService.put('user', user)\r\n    const updatedUser = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(updatedUser)\r\n    return updatedUser;\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // console.log('users: ', users)\r\n    // const user = users.find(user => user.username.toLocaleLowerCase() === userCred.username.toLocaleLowerCase())\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    // socketService.emit('set-user-socket', user._id);\r\n    if (user) return _saveLocalUser(user)\r\n}\r\n\r\nasync function googleLogin(tokenId) {\r\n    try {\r\n        const user = await httpService.post('auth/googlelogin', { tokenId })\r\n        if (user) return _saveLocalUser(user)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    userCred.imgUrl = ''\r\n    userCred.mentions = []\r\n    userCred.boards = []\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    // socketService.emit('set-user-socket', user._id);\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\r\n    // socketService.emit('unset-user-socket');\r\n    // return await httpService.post('auth/logout')\r\n}\r\n\r\nasync function addMentionToStorage(mention) {\r\n    const user = userService.getLoggedinUser()\r\n    user.mentions.unshift(mention)\r\n    _saveLocalUser(user)\r\n}\r\n\r\n\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    const loggedinUser = JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER) || 'null')\r\n    return loggedinUser\r\n}\r\n\r\nfunction getMiniUser() {\r\n    const fullUser = getLoggedinUser() || { _id: utilService.makeId(), fullname: 'Guest' }\r\n    return { _id: fullUser._id, fullname: fullUser.fullname, imgUrl: fullUser.imgUrl }\r\n}\r\n\r\nfunction getGueastUser() {\r\n    return { _id: utilService.makeId(), fullname: 'Guest' }\r\n}\r\n\r\nfunction addUserMention(userId, mention) {\r\n    httpService.put(`user/${userId}/mention`, mention)\r\n}\r\n\r\n\r\n// (async () => {\r\n//     await login({ username: 'morty@smith.com' })\r\n// })();\r\n\r\n//     await userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 10000, isAdmin: true})\r\n//     await userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 10000})\r\n\r\n\r\n\r\n// This IIFE functions for Dev purposes \r\n// It allows testing of real time updates (such as sockets) by listening to storage events\r\n// (async () => {\r\n//     var user = getLoggedinUser()\r\n//     // Dev Helper: Listens to when localStorage changes in OTHER browser\r\n\r\n//     // Here we are listening to changes for the watched user (comming from other browsers)\r\n//     window.addEventListener('storage', async () => {\r\n//         if (!gWatchedUser) return;\r\n//         const freshUsers = await storageService.query('user')\r\n//         const watchedUser = freshUsers.find(u => u._id === gWatchedUser._id)\r\n//         if (!watchedUser) return;\r\n//         if (gWatchedUser.score !== watchedUser.score) {\r\n//             console.log('Watched user score changed - localStorage updated from another browser')\r\n//             socketService.emit(SOCKET_EVENT_USER_UPDATED, watchedUser)\r\n//         }\r\n//         gWatchedUser = watchedUser\r\n//     })\r\n// })();\r\n\r\n// This is relevant when backend is connected\r\n(async () => {\r\n    var user = getLoggedinUser()\r\n    if (user) socketService.emit('set-user-socket', user._id)\r\n})();","import { userService } from '../services/user.service.js'\r\n\r\n\r\nconst initialState = {\r\n    user: userService.getLoggedinUser() || userService.getGueastUser(),\r\n    users: [],\r\n    watchedUser: null\r\n}\r\nexport function userReducer(state = initialState, action) {\r\n    var newState = state;\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            newState = { ...state, user: action.user }\r\n            break;\r\n        case 'SET_WATCHED_USER':\r\n            newState = { ...state, watchedUser: action.user }\r\n            break;\r\n        case 'ADD_MENTION':\r\n            const user = { ...state.user, mentions: [action.mention, ...state.user.mentions] }\r\n            newState = { ...state, user }\r\n            break;\r\n        case 'REMOVE_USER':\r\n            newState = {\r\n                ...state,\r\n                users: state.users.filter(user => user._id !== action.userId)\r\n            }\r\n            break;\r\n        case 'SET_USERS':\r\n            newState = { ...state, users: action.users }\r\n            break;\r\n        default:\r\n    }\r\n    // For debug:\r\n    // window.userState = newState;\r\n    // console.log('State:', newState);\r\n    return newState;\r\n\r\n}","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","// const { createStore, applyMiddleware, combineReducers, compose } = Redux\r\n// const thunk = ReduxThunk.default\r\n\r\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nimport { boardReducer } from './board.reducer.js'\r\nimport { userReducer } from './user.reducer.js'\r\nimport { systemReducer } from './system.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    boardModule: boardReducer,\r\n    userModule: userReducer,\r\n    systemModule: systemReducer,\r\n})\r\n\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n// window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__();\r\n// Lets wire up thunk and also redux-dev-tools:\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n    // export const store = createStore(rootReducer, applyMiddleware(thunk))","function on(eventName, listener) {\r\n\r\n    const callListener = ({ detail }) => {\r\n        listener(detail);\r\n    };\r\n\r\n    window.addEventListener(eventName, callListener);\r\n\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener);\r\n    };\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\nexport const eventBusService = { on, emit };\r\n\r\nexport function showUserMsg(txt, type = '') {\r\n    eventBusService.emit('show-user-msg', { txt, type })\r\n}\r\nexport function showSuccessMsg(txt) {\r\n    showUserMsg(txt, 'success')\r\n}\r\nexport function showErrorMsg(txt) {\r\n    showUserMsg(txt, 'danger')\r\n}\r\n\r\nwindow.myBus = eventBusService;\r\nwindow.showUserMsg = showUserMsg;\r\n\r\n// eventBusService.on('baba', (x)=>console.log('Hi Baba', x))\r\n// eventBusService.on('baba', (x)=>console.log('Hello Baba Ji', x))\r\n// eventBusService.emit('baba', [5, 8, 11])\r\n// setTimeout(()=>{\r\n//     eventBusService.emit('baba', 17)\r\n// }, 2000)\r\n\r\n/* Listening Component...\r\n    import {eventBusService} from 'path...event-bus-service'\r\n    eventBusService.on('some-event', (dataFromEvent) => {\r\n    do something with dataFromEvent\r\n    })\r\n\r\n   Receiving Component...\r\n    eventBusService.emit('some-event', data)\r\n*/","import { userService } from \"../services/user.service.js\";\r\nimport { showErrorMsg } from '../services/event-bus.service.js'\r\nimport { socketService, SOCKET_EMIT_USER_WATCH, SOCKET_EVENT_USER_UPDATED } from \"../services/socket.service.js\";\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            // dispatch({ type: 'LOADING_START' })\r\n            const users = await userService.getUsers()\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('UserActions: err in loadUsers', err)\r\n        }\r\n        // finally {\r\n        //     dispatch({ type: 'LOADING_DONE' })\r\n        // }\r\n    }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.remove(userId)\r\n            dispatch({ type: 'REMOVE_USER', userId })\r\n        } catch (err) {\r\n            console.log('UserActions: err in removeUser', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onLogin(credentials) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.login(credentials)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user\r\n            })\r\n        } catch (err) {\r\n            console.log('Cannot login', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onGoogleLogin(tokenId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.googleLogin(tokenId)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user\r\n            })\r\n        } catch (err) {\r\n            console.log('Cannot login', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onSignup(credentials) {\r\n    return (dispatch) => {\r\n        userService.signup(credentials)\r\n            .then(user => {\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('Cannot signup', err)\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport function onLogout() {\r\n    return (dispatch) => {\r\n        userService.logout()\r\n            .then(() => dispatch({\r\n                type: 'SET_USER',\r\n                user: null\r\n            }))\r\n            .catch(err => {\r\n                console.log('Cannot logout', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function loadAndWatchUser(userId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.getById(userId);\r\n            dispatch({ type: 'SET_WATCHED_USER', user })\r\n            socketService.emit(SOCKET_EMIT_USER_WATCH, userId)\r\n            socketService.off(SOCKET_EVENT_USER_UPDATED)\r\n            socketService.on(SOCKET_EVENT_USER_UPDATED, user => {\r\n                console.log('USER UPADTED FROM SOCKET');\r\n                dispatch({ type: 'SET_WATCHED_USER', user })\r\n            })\r\n        } catch (err) {\r\n            showErrorMsg('Cannot load user')\r\n            console.log('Cannot load user', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onReceiveMention(mention) {\r\n    return async (dispatch) => {\r\n        userService.addMentionToStorage(mention)\r\n        dispatch({\r\n            type: 'ADD_MENTION',\r\n            mention\r\n        })\r\n    }\r\n}\r\n\r\nexport function onUpdateUser(user) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const updatedUser = await userService.update(user)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user: updatedUser\r\n            })\r\n        } catch (err) {\r\n            console.log('cannot update user', err)\r\n        }\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/hero.e8878a54.png\";","export default __webpack_public_path__ + \"static/media/homepage-product.162d5e7b.jpg\";","import React from 'react'\r\nimport { SiTrello } from 'react-icons/si'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { onLogin } from '../store/user.actions'\r\nimport heroImg from '../assets/img/hero.png'\r\nimport productImg from '../assets/img/homepage-product.jpg'\r\n\r\n\r\n\r\nclass _HomePage extends React.Component {\r\n\r\n    state = {\r\n        isNavbarBG: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.changeHeaderStyle)\r\n        document.body.style.overflowY = 'scroll'\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.changeHeaderStyle)\r\n        document.body.style.overflowY = 'hidden'\r\n    }\r\n\r\n    changeHeaderStyle = () => {\r\n        const { isNavbarBG } = this.state\r\n        if (window.scrollY > 50 && !isNavbarBG) {\r\n            this.setState({ isNavbarBG: true })\r\n        } else if (window.scrollY < 50 && isNavbarBG) {\r\n            this.setState({ isNavbarBG: false })\r\n        }\r\n    }\r\n\r\n    onGuestLogin = () => {\r\n        this.props.onLogin({username: 'guest1', password: 'guest123'})\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    render() {\r\n        const { isNavbarBG } = this.state\r\n        return (\r\n            <section className=\"home-page main-container\">\r\n                <header className={`home-header ${(isNavbarBG) ? 'bg-visible' : ''}`}>\r\n                    <span className=\"logo\"> <SiTrello /> Marshmello</span>\r\n                    <div className=\"header-buttons\">\r\n                        <Link to=\"/login\"><button className=\"login-btn nav-button\">Log in</button></Link>\r\n                        <Link to=\"/signup\"><button className=\"signup-btn nav-button\">Sign up</button></Link>\r\n                    </div>\r\n                </header>\r\n                <div className=\"home-first-fold\">\r\n                    <div className=\"first-fold-text\">\r\n                        <h1>Marshmello helps teams move work forward.</h1>\r\n                        <p>Collaborate, manage projects, and reach new productivity peaks.\r\n                            From high rises to the home office, the way your team works is unique—accomplish it all with Marshmello.</p>\r\n                        <button className=\"cta-btn nav-button\" onClick={() => this.onGuestLogin()}>Try Demo Version</button>\r\n                    </div>\r\n                    <div className=\"first-fold-img\">\r\n                        <img src={heroImg} alt=\"hero\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-second-fold\">\r\n                    <div className=\"second-fold-text\">\r\n                        <h1>It’s more than work. It’s a way of working together.</h1>\r\n                        <p>Start with a Marshmello board, lists, and cards. Customize and expand with more features as your teamwork grows. Manage projects, organize tasks, and build team spirit—all in one place.</p>\r\n                    </div>\r\n                    <div className=\"second-fold-img\">\r\n                        <img src={productImg} alt=\"hero\" />\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onLogin\r\n}\r\n\r\nexport const HomePage = connect(mapStateToProps, mapDispatchToProps)(_HomePage)","import React from 'react';\r\nimport { AiOutlineStar } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport function BoardPreview({ board, toggleStarredBoard, setFavicon }) {\r\n\r\n    function toggleIsStarred(ev) {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        toggleStarredBoard(board)\r\n    }\r\n\r\n    return (\r\n        <Link to={`/board/${board._id}`}><div onClick={() => setFavicon(board.style)} className=\"board-preview\" style={(board.style.bgColor) ? { backgroundColor: `${board.style.bgColor}` } : { backgroundImage: `url(${board.style.imgUrl})` }}>\r\n            <div className=\"preview-screen\">\r\n                <div className=\"preview-content\">\r\n                    <h4 className=\"board-title\">{board.title}</h4>\r\n                    <button className={`star-btn ${(board.isStarred) ? 'starred' : ''}`} onClick={(ev) => toggleIsStarred(ev)}><AiOutlineStar /></button>\r\n                </div>\r\n            </div>\r\n        </div></Link>\r\n    )\r\n}","import React from 'react';\r\nimport { BoardPreview } from './board-preview';\r\n\r\nexport function BoardList({ boards, toggleStarredBoard, setFavicon, setAddBoard, isWorkspace }) {\r\n    return (\r\n        <div className=\"board-list flex\">\r\n            {boards.map(board =>\r\n                <BoardPreview key={board._id} board={board} toggleStarredBoard={toggleStarredBoard} setFavicon={setFavicon} />)}\r\n\r\n            {isWorkspace && <div className=\"board-preview create-board-btn\" onClick={() => setAddBoard()}>\r\n                <h4>Create New Board</h4>\r\n            </div>}\r\n        </div>\r\n    );\r\n}","// import { storageService } from './async-storage.service.js'\r\nimport { utilService } from './util.service.js'\r\nimport { userService } from './user.service.js'\r\nimport { httpService } from './http.service'\r\n\r\n// const STORAGE_KEY = 'board'\r\n    // const listeners = []\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    dashboardQuery,\r\n    getArchivedCards\r\n}\r\nwindow.cs = boardService;\r\n\r\n\r\nasync function query(filterByUser) {\r\n    // return storageService.query(STORAGE_KEY)\r\n    try {\r\n        const boards = await httpService.get('board', filterByUser)\r\n        return boards\r\n    } catch (err) {\r\n        console.log('Front: Error loading boards', err)\r\n    }\r\n}\r\n\r\nasync function getById(boardId, filterBy) {\r\n    // return storageService.get(STORAGE_KEY, boardId)\r\n    try {\r\n        if (typeof filterBy === 'object') {\r\n            filterBy = (new URLSearchParams(filterBy)).toString()\r\n        }\r\n        const board = await httpService.get(`board/${boardId}`, filterBy)\r\n        return board\r\n    } catch (err) {\r\n        console.log(`Front: Error loading board with ID: ${boardId}`, err)\r\n    }\r\n}\r\n\r\nasync function dashboardQuery(boardId) {\r\n    // const chartsData = await storageService.dashboardQuery(STORAGE_KEY, boardId)\r\n    // return chartsData\r\n    try {\r\n        const chartsData = await httpService.get(`board/dashboard/${boardId}`)\r\n        return chartsData\r\n    } catch (err) {\r\n        console.log('Front: Error loading chartsData', err)\r\n    }\r\n}\r\n\r\nasync function getArchivedCards(boardId) {\r\n    try {\r\n        const archivedCards = await httpService.get(`board/${boardId}/closed`)\r\n        console.log('archivedChards:', archivedCards)\r\n        return archivedCards\r\n    } catch (err) {\r\n        console.log('Front: Error loading archivedCards', err)\r\n    }\r\n}\r\n\r\n\r\nasync function remove(boardId) {\r\n    // return storageService.remove(STORAGE_KEY, boardId)\r\n        try {\r\n            return httpService.delete(`board/${boardId}`)\r\n        } catch (err) {\r\n            console.log(`Front: Error deleting board with ID: ${boardId}`);\r\n        }\r\n}\r\n\r\nasync function save(board, activity = null) {\r\n    if (board._id) {\r\n        if (activity) {\r\n            const newActivity = {\r\n                    txt: activity.txt,\r\n                    id: utilService.makeId(),\r\n                    byMember: userService.getMiniUser(),\r\n                    card: (activity.card) ? { id: activity.card.id, title: activity.card.title } : {},\r\n                    groupId: (activity.groupId) ? activity.groupId : null\r\n                }\r\n                // console.log('Activity from service: ', newActivity)\r\n                // board.activities.unshift(newActivity)\r\n                // console.log('Board activities from service: ', board.activities)\r\n            return httpService.put(`board/${board._id}`, { board: board, activity: newActivity })\r\n        } else {\r\n            // return storageService.put(STORAGE_KEY, board)\r\n            return httpService.put(`board/${board._id}`, { board: board, activity: null })\r\n        }\r\n    } else {\r\n        const boardToSave = {\r\n                title: board.title,\r\n                style: board.style,\r\n                createdBy: userService.getMiniUser(),\r\n                members: [userService.getMiniUser()],\r\n            }\r\n            // return storageService.post(STORAGE_KEY, boardToSave)\r\n        const addedBoard = await httpService.post(`board`, boardToSave)\r\n        return addedBoard\r\n    }\r\n}\r\n\r\n\r\n// function subscribe(listener) {\r\n//     listeners.push(listener)\r\n// }\r\n\r\n// function _notifySubscribersBoardsChanged(boards) {\r\n//     console.log('Notifying Listeners');\r\n//     listeners.forEach(listener => listener(boards))\r\n// }\r\n\r\n// window.addEventListener('storage', () => {\r\n//     console.log('Storage Changed from another Browser!');\r\n//     query()\r\n//         .then(boards => {\r\n//             _notifySubscribersCarsChanged(boards)\r\n//         }) \r\n// })","// import { activityTxtMap } from \"../services/activity.service.js\";\r\nimport { boardService } from \"../services/board.service.js\";\r\nimport { socketService } from \"../services/socket.service.js\";\r\n// import { userService } from \"../services/user.service.js\";\r\n// import { showSuccessMsg, showErrorMsg } from '../services/event-bus.service.js';\r\n\r\n//BOARD\r\nexport function loadBoards(filterBy) {\r\n    return async(dispatch) => {\r\n        try {\r\n            const boards = await boardService.query(filterBy)\r\n            dispatch({\r\n                type: 'SET_BOARDS',\r\n                boards\r\n            })\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot load boards')\r\n            console.log('Cannot load boards', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadBoard(boardId, filterBy) {\r\n    return async(dispatch) => {\r\n        try {\r\n            const board = await boardService.getById(boardId, filterBy)\r\n            document.body.style.background = board.style.bgColor ? board.style.bgColor : `url(\"${board.style.imgUrl}\")`\r\n            document.body.style.backgroundSize = 'cover'\r\n\r\n\r\n            dispatch({\r\n                type: 'SET_CURR_BOARD',\r\n                board\r\n            })\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot load boards')\r\n            console.log('Cannot load board', err)\r\n        }\r\n    }\r\n}\r\nexport function resetBoard() {\r\n    document.body.style.background = 'unset'\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_CURR_BOARD',\r\n            board: null\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport function onRemoveBoard(boardId) {\r\n    return async(dispatch) => {\r\n        try {\r\n            await boardService.remove(boardId)\r\n            console.log('Deleted Succesfully!');\r\n            dispatch({\r\n                type: 'REMOVE_BOARD',\r\n                boardId\r\n            })\r\n        } catch (err) {\r\n            console.log('Cannot remove board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onUpdateBoard(action, board, activity = null) {\r\n    return async(dispatch) => {\r\n        const boardToSave = _getUpdatedBoard(action, board)\r\n        console.log(boardToSave)\r\n        dispatch({\r\n            type: 'UPDATE_BOARD',\r\n            board: boardToSave\r\n        })\r\n        try {\r\n            if (!action.type) action.board = board\r\n            socketService.emit('board-update', { action, activity })\r\n            await boardService.save(boardToSave, activity)\r\n        } catch (err) {\r\n            console.log('Cannot save board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onAddBoard(board) {\r\n    return async(dispatch) => {\r\n        try {\r\n            const savedBoard = await boardService.save(board)\r\n            console.log('Added Board', savedBoard);\r\n            dispatch({\r\n                type: 'ADD_BOARD',\r\n                board: savedBoard\r\n            })\r\n            socketService.emit('update', true)\r\n            return savedBoard\r\n        } catch (err) {\r\n            console.log('Cannot add board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setAddingBoard(isAddingBoard) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_ADDING_BOARD',\r\n            isAddingBoard: isAddingBoard\r\n        })\r\n    }\r\n}\r\n\r\n//CARD\r\nexport function onAddCard(newCard, groupId, board, activity) {\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    newCard = {...newCard, createdAt: Date.now(), isComplete: false };\r\n\r\n    group.cards = (group.cards) ? [...group.cards, newCard] : [newCard]\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, board, activity)\r\n}\r\n\r\nexport function onRemoveCard(card, board) {\r\n    const boardToSave = {...board }\r\n    boardToSave.archivedCards = boardToSave.archivedCards.filter(archivedCard => archivedCard.id !== card.id)\r\n    return onUpdateBoard({}, boardToSave)\r\n}\r\n\r\nexport function onArchiveCard(archivedCard, groupId, board, activity = null) {\r\n    archivedCard.isArchive = true;\r\n    const group = {...board.groups.find(group => group.id === groupId) }\r\n    const cardIdx = group.cards.findIndex(card => card.id === archivedCard.id)\r\n    const boardToSave = {...board }\r\n    archivedCard.groupId = groupId;\r\n    archivedCard.prevIndex = cardIdx;\r\n    // console.log('archivedCard in actions', archivedCard)\r\n    group.cards.splice(cardIdx, 1)\r\n        // delete boardToSave.archivedCards\r\n    boardToSave.archivedCards = boardToSave.archivedCards ? boardToSave.archivedCards : []\r\n    boardToSave.archivedCards.unshift(archivedCard)\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, boardToSave, activity)\r\n}\r\n\r\nexport function onUnArchiveCard(cardToSave, board, activity = null) {\r\n    const group = {...board.groups.find(group => group.id === cardToSave.groupId) }\r\n    if (group) {\r\n        const cardIdx = cardToSave.prevIndex\r\n        delete cardToSave.groupId\r\n        delete cardToSave.prevIndex\r\n        delete cardToSave.isArchive\r\n        group.cards.splice(cardIdx, 0, cardToSave)\r\n    }\r\n    const boardToSave = {...board }\r\n    boardToSave.archivedCards = boardToSave.archivedCards.filter(archivedCard => archivedCard.id !== cardToSave.id)\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, boardToSave, activity)\r\n}\r\n\r\nexport function loadArchivedCards(boardId) {\r\n    return async(dispatch) => {\r\n        try {\r\n            const archivedCards = await boardService.getArchivedCards(boardId)\r\n            console.log('in actions', archivedCards)\r\n            return archivedCards;\r\n        } catch (err) {\r\n            console.log('Cannot load archived cards', err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function onUpdateCard(cardToSave, groupId, board, activity = null) {\r\n    // console.log('cardToSave', cardToSave);\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    const cardIdx = group.cards.findIndex(card => card.id === cardToSave.id)\r\n        // console.log('cardIdx: ', -1)\r\n    group.cards.splice(cardIdx, 1, cardToSave)\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, board, activity)\r\n}\r\n\r\nexport function onSetCardId(cardId) {\r\n    return async(dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: 'SET_CARD_ID',\r\n                cardId\r\n            })\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot load boards')\r\n            console.log('Cannot set card', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onUpdateFilter(filterBy) {\r\n    return (dispatch) => {\r\n        const action = { type: 'UPDATE_FILTER', filterBy }\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport function outputUpdateBoard(action, board, activity) {\r\n    return async(dispatch) => {\r\n        const boardToSave = _getUpdatedBoard(action, board)\r\n        dispatch({\r\n            type: 'UPDATE_BOARD',\r\n            board: boardToSave\r\n        })\r\n\r\n    }\r\n}\r\n\r\n/* \r\nserver side filtering\r\nconst board =getBoardById()\r\nconst archived = []\r\nboard.lists.forEach((list)=>{\r\n    list.tasks.forEach(task => {\r\n        if (task.isClosed) {\r\n            task.listId = list.id\r\n            task.prevIdx\r\n        } \r\n    })\r\n})\r\n*/\r\n\r\n\r\nfunction _getUpdatedBoard(action, board) {\r\n    const boardToSave = {...board }\r\n    switch (action.type) {\r\n        case 'TOGGLE_STARRED':\r\n            boardToSave.isStarred = action.isStarred\r\n            break;\r\n        case 'CHANGE_BOARD_STYLE':\r\n            boardToSave.style = action.style\r\n            document.body.style.background = boardToSave.style.bgColor ? boardToSave.style.bgColor : `no-repeat url(\"${boardToSave.style.imgUrl}\")`\r\n            document.body.style.backgroundSize = 'cover'\r\n            break;\r\n        case 'CHANGE_TITLE':\r\n            boardToSave.title = action.title\r\n            break;\r\n        case 'ADD_BOARD_MEMBER':\r\n            console.log('members from action: ', boardToSave.members)\r\n            boardToSave.members = [...boardToSave.members, action.member]\r\n            break;\r\n        case 'REMOVE_BOARD_MEMBER':\r\n            console.log('members from action: ', boardToSave.members)\r\n            boardToSave.members = [...boardToSave.members.filter(member => member._id !== action.memberId)]\r\n            break;\r\n        case 'ADD_GROUP':\r\n            boardToSave.groups = [...boardToSave.groups, action.group]\r\n            break;\r\n        case 'UPDATE_GROUP':\r\n            boardToSave.groups = [...boardToSave.groups.map(currGroup => currGroup.id === action.group.id ? action.group : currGroup)]\r\n            break\r\n        case 'REMOVE_GROUP':\r\n            boardToSave.groups = [...boardToSave.groups.filter(currGroup => currGroup.id !== action.group.id)]\r\n            break\r\n        default:\r\n            break\r\n    }\r\n    return boardToSave;\r\n}","export function OverlayScreen() {\r\n    return (\r\n        <div className=\"overlay-screen\"></div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loader.1a7da032.svg\";","import loader from '../../assets/img/loader.svg'\r\nexport function Loader() {\r\n    return (\r\n        <div className=\"loader\">\r\n            <img src={loader} alt=\"loading...\" />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardList } from '../cmps/board-list'\r\nimport { AiFillStar } from 'react-icons/ai'\r\nimport { SiTrello } from 'react-icons/si'\r\n\r\nimport { loadBoards, setAddingBoard, onUpdateBoard } from '../store/board.actions'\r\nimport { OverlayScreen } from '../cmps/overlay-screen'\r\nimport { Loader } from '../cmps/shared/loader'\r\nimport { socketService } from '../services/socket.service'\r\nimport { userService } from '../services/user.service'\r\n\r\n\r\nclass _BoardSelect extends React.Component {\r\n    state = {\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const user = userService.getMiniUser()\r\n        // console.log(user)\r\n        await this.props.loadBoards(user)\r\n    }\r\n\r\n    getStarredBoards = () => {\r\n        return this.props.boards.filter(board => board.isStarred)\r\n    }\r\n\r\n    toggleStarredBoard = (board) => {\r\n        const { onUpdateBoard } = this.props\r\n        board.isStarred = !board.isStarred\r\n        onUpdateBoard({ type: 'TOGGLE_STARRED', isStarred: board.isStarred }, board)\r\n        socketService.emit('update', true)\r\n    }\r\n    setFavicon = (style) => {\r\n        const favicon = document.getElementById('favicon')\r\n        if (style.imgUrl) {\r\n            favicon.href = style.imgUrl\r\n        } else {\r\n            favicon.href = \"../../public/favicon.ico\"\r\n        }\r\n    }\r\n\r\n    setAddBoard = () => {\r\n        this.props.setAddingBoard(true)\r\n    }\r\n\r\n    render() {\r\n        const { boards, isAddingBoard } = this.props\r\n        if (!boards) return <Loader />\r\n        return (\r\n            <div className=\"board-select-wrapper\">\r\n            <div className=\"boards-select main-container\">\r\n                <h2> <AiFillStar /> Starred Boards</h2>\r\n                <div className=\"starred-boards\">\r\n                    <BoardList setFavicon={this.setFavicon} boards={this.getStarredBoards()} toggleStarredBoard={this.toggleStarredBoard} />\r\n                </div>\r\n                <h2> <SiTrello /> Workspace</h2>\r\n                <div className=\"workspace\">\r\n                    <BoardList boards={boards} toggleStarredBoard={this.toggleStarredBoard} setFavicon={this.setFavicon} setAddBoard={this.setAddBoard} isWorkspace={true} />\r\n                    {/* <div className=\"board-preview create-board-btn\" onClick={() => this.setAddBoard()}>\r\n                        <h4>Create New Board</h4>\r\n                    </div> */}\r\n                </div>\r\n                {isAddingBoard && <OverlayScreen />}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardModule.boards,\r\n        isAddingBoard: state.boardModule.isAddingBoard,\r\n        board: state.boardModule.currBoard,\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    setAddingBoard,\r\n    onUpdateBoard\r\n}\r\n\r\nexport const BoardSelect = connect(mapStateToProps, mapDispatchToProps)(_BoardSelect)\r\n","import { store } from '../store/store'\r\nimport { utilService } from './util.service'\r\n\r\nconst handleChecklistChange = (type, checklistId, value, newVal) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    if (checklistId) {\r\n        const checklist = card.checklists.find(checklist => checklist.id === checklistId)\r\n        if (type === 'addTodo') {\r\n            checklist.todos.push(value)\r\n        } else if (type === 'markTodo') {\r\n            const todo = checklist.todos.find(todo => todo.id === value)\r\n            todo.isDone = !todo.isDone\r\n        } else if (type === 'removeTodo') {\r\n            const idx = checklist.todos.findIndex(todo => todo.id === value)\r\n            checklist.todos.splice(idx, 1)\r\n        } else if (type === 'changeTitle') {\r\n            const todo = checklist.todos.find(todo => todo.id === value)\r\n            todo.title = newVal\r\n        } else if (type === 'removeChecklist') {\r\n            const idx = card.checklists.findIndex(checklist => checklist.id === checklistId)\r\n            card.checklists.splice(idx, 1)\r\n        }\r\n    } else {\r\n        if (type === 'addChecklist') {\r\n            if (!card.checklists) card.checklists = []\r\n            card.checklists.push({ id: utilService.makeId(), title: value, todos: [] })\r\n        }\r\n    }\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleMemberChange = (memberId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    let card = getCardById(cardId, groupId)\r\n\r\n    if (!card.members) card.members = []\r\n    const isMemberExist = card?.members?.some(member => member._id === memberId)\r\n    if (isMemberExist) {\r\n        card = { ...card, members: card?.members.filter(member => member._id !== memberId) }\r\n    } else {\r\n        const memberToAdd = board.members.find(member => member._id === memberId)\r\n        card.members.push(memberToAdd)\r\n    }\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleLabelChange = (labelId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    let card = getCardById(cardId, groupId)\r\n    if (!card.labelIds) card.labelIds = []\r\n    const isLabelExist = card?.labelIds.some(id => id === labelId)\r\n    if (isLabelExist) card = { ...card, labelIds: card?.labelIds.filter(id => id !== labelId) }\r\n    else {\r\n        const labelToAdd = board.labels.find(label => label.id === labelId)\r\n        card.labelIds.push(labelToAdd.id)\r\n    }\r\n\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleDueDateChange = (timestamp) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    let card = getCardById(cardId, groupId)\r\n    card.dueDate = timestamp\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst getCardById = (cardId, groupId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    return group.cards.find(card => card.id === cardId)\r\n}\r\n\r\nconst getGroupById = (cardId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    return board.groups.find(group => group.cards.find(card => card.id === cardId))\r\n}\r\n\r\nconst getGroupId = (cardId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    return board.groups.find(group => group.cards.some(card => card.id === cardId))?.id\r\n}\r\n\r\nconst getFormattedTime = (timestamp) => {\r\n    if (!timestamp) return ''\r\n    const timeLeft = timestamp - Date.now()\r\n    if (timeLeft < 0) {\r\n        const date = new Date(timestamp)\r\n        const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n        const idx = date.getMonth()\r\n        const month = monthNames[idx]\r\n        const day = date.getDate()\r\n        return `${month} ${day} at 12:00 AM`\r\n    }\r\n    if (timeLeft <= (1000 * 60 * 60 * 24)) return 'tomorrow at 12:00 AM'\r\n    const date = new Date(timestamp)\r\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    const idx = date.getMonth()\r\n    const month = monthNames[idx]\r\n    const day = date.getDate()\r\n    return `${month} ${day} at 12:00 AM`\r\n}\r\n\r\nconst getUploadTime = (timestamp) => {\r\n    const timePassed = Date.now() - timestamp\r\n    if (timePassed < (1000 * 60)) return 'Added a few seconds ago'\r\n    else if (timePassed < (1000 * 60 * 2)) return 'Added 1 minute ago'\r\n    else if (timePassed < 1000 * 60 * 60) {\r\n        const minutes = Math.floor(timePassed / 1000 / 60)\r\n        return `Added ${minutes} minutes ago`\r\n    }\r\n    else if (timePassed < 1000 * 60 * 60 * 13) {\r\n        const hours = Math.floor(timePassed / 1000 / 60 / 60)\r\n        return `Added ${hours} hours ago`\r\n    } else {\r\n        const date = new Date(timestamp)\r\n        const minutes = (date.getMinutes() < 10) ? `0${date.getMinutes()}` : date.getMinutes()\r\n        if (timePassed < 1000 * 60 * 60 * 24) {\r\n            return `Added today at ${date.getHours()}:${minutes} `\r\n        } else if (timePassed < 1000 * 60 * 60 * 48) {\r\n            return `Added yesterday at ${date.getHours()}:${minutes}`\r\n        } else {\r\n            const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n            const idx = date.getMonth()\r\n            const month = monthNames[idx]\r\n            const day = date.getDate()\r\n            return `Added ${month} ${day} at ${date.getHours()}:${minutes}`\r\n        }\r\n    }\r\n}\r\n\r\nconst handleFileAdd = (url, title = 'Attachment') => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    if (!card.attachments) card.attachments = []\r\n    card.attachments.push({ id: utilService.makeId(), url, title, addedAt: Date.now() })\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleFileRemove = (fileId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    const idx = card.attachments.findIndex(file => file.id === fileId)\r\n    card.attachments.splice(idx, 1)\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleMoveCard = (cardId, groupId, idx) => {\r\n    const initialBoard = store.getState().boardModule.currBoard\r\n    const initialGroup = initialBoard.groups.find(group => group.cards.some(card => card.id === cardId))\r\n    const card = getCardById(cardId, initialGroup.id)\r\n    const initialCardIdx = initialGroup.cards.findIndex(card => card.id === cardId)\r\n    initialGroup.cards.splice(initialCardIdx, 1)\r\n    let newGroup = initialBoard.groups.find(group => group.id === groupId)\r\n    newGroup.cards.splice(idx, 0, card)\r\n    return initialBoard\r\n}\r\n\r\nconst handleCopyCard = (cardId, groupId, idx, title) => {\r\n    const initialBoard = store.getState().boardModule.currBoard\r\n    const initialGroup = initialBoard.groups.find(group => group.cards.some(card => card.id === cardId))\r\n    const card = getCardById(cardId, initialGroup.id)\r\n    let newGroup = initialBoard.groups.find(group => group.id === groupId)\r\n    newGroup.cards.splice(idx, 0, { ...card, id: utilService.makeId(), title })\r\n    return initialBoard\r\n}\r\n\r\nconst handleToggleArchive = (cardId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    card.isArchive = !card.isArchive\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleRemoveCard = (cardId) => {\r\n    const board = { ...store.getState().boardModule.currBoard }\r\n    const group = board.groups.find(group => group.cards.some(card => card.id === cardId))\r\n    group.cards = group.cards.filter(card => card.id !== cardId)\r\n    // return board\r\n}\r\n\r\nconst onAddComment = (txt) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const user = store.getState().userModule.user\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    if (!card.comments) card.comments = []\r\n    card.comments.unshift({ id: utilService.makeId(), author: user, txt, addedAt: Date.now() })\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleCommentRemove = (commentId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    const idx = card.comments.findIndex(comment => comment.id === commentId)\r\n    card.comments.splice(idx, 1)\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst getCommentTime = (timestamp) => {\r\n    const timePassed = Date.now() - timestamp\r\n    if (timePassed < (1000 * 60)) return 'a few seconds ago'\r\n    else if (timePassed < (1000 * 60 * 2)) return '1 minute ago'\r\n    else if (timePassed < 1000 * 60 * 60) {\r\n        const minutes = Math.floor(timePassed / 1000 / 60)\r\n        return `${minutes} minutes ago`\r\n    }\r\n    else if (timePassed < 1000 * 60 * 60 * 13) {\r\n        const hours = Math.floor(timePassed / 1000 / 60 / 60)\r\n        return `${hours} hours ago`\r\n    } else {\r\n        const date = new Date(timestamp)\r\n        const minutes = (date.getMinutes() < 10) ? `0${date.getMinutes()}` : date.getMinutes()\r\n        if (timePassed < 1000 * 60 * 60 * 24) {\r\n            return `today at ${date.getHours()}:${minutes} `\r\n        } else if (timePassed < 1000 * 60 * 60 * 48) {\r\n            return `yesterday at ${date.getHours()}:${minutes}`\r\n        } else {\r\n            const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n            const idx = date.getMonth()\r\n            const month = monthNames[idx]\r\n            const day = date.getDate()\r\n            return `${month} ${day} at ${date.getHours()}:${minutes}`\r\n        }\r\n    }\r\n}\r\n\r\nconst handleAttachmentEdit = (attachmentId, title) => {\r\n    if (!attachmentId) return\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    const attachment = card.attachments.find(attachment => attachment.id === attachmentId)\r\n    attachment.title = title\r\n    return [card, groupId, board]\r\n}\r\n\r\n\r\nexport const cardEditService = {\r\n    handleChecklistChange,\r\n    handleMemberChange,\r\n    getGroupId,\r\n    getCardById,\r\n    handleLabelChange,\r\n    handleDueDateChange,\r\n    getFormattedTime,\r\n    getUploadTime,\r\n    handleFileAdd,\r\n    handleFileRemove,\r\n    getGroupById,\r\n    handleMoveCard,\r\n    handleCopyCard,\r\n    handleToggleArchive,\r\n    handleRemoveCard,\r\n    onAddComment,\r\n    handleCommentRemove,\r\n    getCommentTime,\r\n    handleAttachmentEdit\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateBoard } from '../../../store/board.actions'\r\n\r\n\r\nexport function _MoveCard({ board, currCardId, onUpdateBoard, onClose, goBack }) {\r\n    const [currGroup, setCurrGroup] = useState(null)\r\n    const [currPosition, setCurrPosition] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const group = cardEditService.getGroupById(currCardId, board._id)\r\n        setCurrGroup(group)\r\n        const idx = group.cards.findIndex(card => card.id === currCardId)\r\n        setCurrPosition(idx + 1)\r\n    }, [board, currCardId])\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        if (name === 'group') {\r\n            const group = board.groups.find(item => item.id === value)\r\n            setCurrGroup(group)\r\n            setCurrPosition(group.cards.length + 1)\r\n        } else if (name === 'position') {\r\n            setCurrPosition(value)\r\n        }\r\n    }\r\n\r\n    const getPositions = () => {\r\n        const length = currGroup.cards.length + 1\r\n        const positions = []\r\n        for (let i = 1; i <= length; i++) {\r\n            positions.push(i)\r\n        }\r\n        return positions\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const groupId = currGroup.id\r\n        const idx = currPosition - 1\r\n        const boardToChange = cardEditService.handleMoveCard(currCardId, groupId, idx)\r\n        onUpdateBoard({ type: '' }, boardToChange)\r\n        goBack()\r\n    }\r\n\r\n    if (!currGroup) return null\r\n    return (\r\n        <div className=\"move-card\">\r\n            <h4>Select destination</h4>\r\n\r\n            <div className=\"select-board\">\r\n                <span className=\"label\">Board</span>\r\n                <span className=\"select-value\">{board.title}</span>\r\n                <select name=\"board\" onChange={handleChange}>\r\n                    {/* {boards.map(item => <option key={item._id} value={item._id}>{item.title}</option>)} */}\r\n                    <option value={board._id}>{board.title}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"flex bottom-container\">\r\n                <div className=\"select-group\">\r\n                    <span className=\"label\">List</span>\r\n                    <span className=\"select-value\">{currGroup.title}</span>\r\n                    <select name=\"group\" onChange={handleChange}>\r\n                        {board.groups.map(item => <option key={item.id} value={item.id}>{item.title}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"select-position\">\r\n                    <span className=\"label\">Position</span>\r\n                    <span className=\"select-value\">{currPosition}</span>\r\n                    <select name=\"position\" onChange={handleChange}>\r\n                        {getPositions().map((item, i) => <option key={i} value={item}>{item}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <button className=\"move-btn card-edit-btn secondary\" onClick={handleSubmit}>Move</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        boards: state.boardModule.boards,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const MoveCard = connect(mapStateToProps, mapDispatchToProps)(_MoveCard)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateBoard } from '../../../store/board.actions'\r\n\r\n\r\nexport function _CopyCard({ board, currCardId, onUpdateBoard, onClose }) {\r\n    const [currTitle, setCurrTitle] = useState('')\r\n    const [currGroup, setCurrGroup] = useState(null)\r\n    const [currPosition, setCurrPosition] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const group = cardEditService.getGroupById(currCardId, board._id)\r\n        const card = cardEditService.getCardById(currCardId, group.id)\r\n        setCurrTitle(card.title)\r\n        setCurrGroup(group)\r\n        const idx = group.cards.findIndex(card => card.id === currCardId)\r\n        setCurrPosition(idx + 1)\r\n    }, [board, currCardId])\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        if (name === 'group') {\r\n            const group = board.groups.find(item => item.id === value)\r\n            setCurrGroup(group)\r\n            setCurrPosition(group.cards.length + 1)\r\n        } else if (name === 'position') {\r\n            setCurrPosition(value)\r\n        } else if (name === 'title') {\r\n            setCurrTitle(value)\r\n        }\r\n    }\r\n\r\n    const getPositions = () => {\r\n        const length = currGroup.cards.length + 1\r\n        const positions = []\r\n        for (let i = 1; i <= length; i++) {\r\n            positions.push(i)\r\n        }\r\n        return positions\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const groupId = currGroup.id\r\n        const idx = currPosition - 1\r\n        const boardToChange = cardEditService.handleCopyCard(currCardId, groupId, idx, currTitle)\r\n        onUpdateBoard({ type: '' }, boardToChange)\r\n        onClose()\r\n    }\r\n\r\n    if (!currGroup) return null\r\n    return (\r\n        <div className=\"copy-card\">\r\n            <label>Title</label>\r\n            <textarea name=\"title\" className=\"search-input\" autoFocus value={currTitle} onChange={handleChange} />\r\n\r\n\r\n            <label>Copy to...</label>\r\n            <div className=\"select-board\">\r\n                <span className=\"label\">Board</span>\r\n                <span className=\"select-value\">{board.title}</span>\r\n                <select name=\"board\" onChange={handleChange}>\r\n                    <option value={board._id}>{board.title}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"flex bottom-container\">\r\n                <div className=\"select-group\">\r\n                    <span className=\"label\">List</span>\r\n                    <span className=\"select-value\">{currGroup.title}</span>\r\n                    <select name=\"group\" onChange={handleChange}>\r\n                        {board.groups.map(item => <option key={item.id} value={item.id}>{item.title}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"select-position\">\r\n                    <span className=\"label\">Position</span>\r\n                    <span className=\"select-value\">{currPosition}</span>\r\n                    <select name=\"position\" onChange={handleChange}>\r\n                        {getPositions().map((item, i) => <option key={i} value={item}>{item}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <button className=\"copy-btn card-edit-btn secondary\" onClick={handleSubmit}>Create card</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        boards: state.boardModule.boards,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const CopyCard = connect(mapStateToProps, mapDispatchToProps)(_CopyCard)\r\n","import React from 'react'\r\nimport { BsChevronLeft } from 'react-icons/bs'\r\nimport { IoMdClose } from 'react-icons/io'\r\n\r\nexport const PopoverHeader = React.memo(({ title, isMultiView, onClose, onGoBack }) => {\r\n    return (\r\n        <>\r\n            {title\r\n                ?\r\n                <div className=\"popover-header\">\r\n                    {isMultiView && <span className=\"back-btn\" onClick={onGoBack}><BsChevronLeft /></span>}\r\n                    <h4>{title}</h4>\r\n                    <span className=\"close-btn\" onClick={onClose}><IoMdClose /></span>\r\n                </div>\r\n                :\r\n                <div className=\"header-replacement pos-relative\">\r\n                    <span className=\"close-popover-icon\" onClick={onClose}><IoMdClose /></span>\r\n                </div>}\r\n        </>\r\n    )\r\n})\r\n\r\n","import React, { useCallback, useEffect, useRef, useState, useLayoutEffect } from 'react'\r\nimport { PopoverHeader } from './popover-header'\r\n\r\n/*\r\n    How-to-use\r\n    1. The component shall recieve:\r\n       * an onClose function that closes the popover\r\n       * a title for the header\r\n       * the component that should be rendered inside of the popover (children)\r\n    2. The popover should be rendered on the same lavel as the element that \r\n       triggers the opening of the popover\r\n    3. The parrent element of both the trigger element and the popover should have\r\n       position relative (className=\"pos-relative\")\r\n    4. The popover should recieve the parent ref (ref={parentRef})\r\n    5. The state for the opening and closing of the popover should be managed from \r\n       outside \r\n*/\r\n\r\nexport const DynamicPopover = React.forwardRef(({ onClose, title, children, isMultiView, onGoBack }, parentRef) => {\r\n    const targetRef = useRef()\r\n    const contentRef = useRef()\r\n    const { current: breakpoints } = useRef({\r\n        MOBILE: '(max-width: 500px)',\r\n        NARROW: '(min-width: 500px)'\r\n    })\r\n    const [location, setLocation] = useState({\r\n        top: null,\r\n        bottom: null,\r\n        right: null,\r\n        left: null\r\n    })\r\n    \r\n    const setDynamicStyles = useCallback((rect, breakpoint) => {\r\n        const { MOBILE, NARROW } = breakpoints\r\n        switch (breakpoint) {\r\n            case MOBILE:\r\n                const targetEl = targetRef.current\r\n                targetEl.classList.remove('pos-absolute')\r\n                targetEl.classList.add('pos-fixed')\r\n                targetEl.style.top = `${(rect.bottom + 8)}px`\r\n                targetEl.style.left = '50%'\r\n                targetEl.style.transform = 'translateX(-50%)'\r\n                break;\r\n            case NARROW:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [breakpoints])\r\n\r\n    const getLocation = useCallback(({ width, height }) => {\r\n        const rect = parentRef.current?.getBoundingClientRect()\r\n        if (!rect) return\r\n        let left, right, top, bottom\r\n        const rightCheck = window.innerWidth - (rect.left + width) < 20\r\n        const isOverflowY = (window.innerHeight - height - 45) < 0\r\n\r\n        const currBreakpoint = Object.values(breakpoints).find(currBp => {\r\n            return window.matchMedia(currBp).matches\r\n        })\r\n        if (currBreakpoint !== breakpoints.NARROW) {\r\n            setDynamicStyles(rect, currBreakpoint)\r\n            return\r\n        }\r\n\r\n        top = rect.height + 8\r\n        if (rightCheck) right = 0\r\n        else left = 0\r\n        if (isOverflowY) {\r\n            contentRef.current.style.maxHeight = `${window.innerHeight - rect.bottom - 60}px`\r\n        } else {\r\n            const maxHeight = (height) ? 350 : (window.innerHeight - rect.bottom - 60)\r\n            if (contentRef.current) contentRef.current.style.maxHeight = `${maxHeight}px`\r\n        }\r\n        return { top, bottom, right, left }\r\n    }, [breakpoints, parentRef, setDynamicStyles])\r\n\r\n    const handleLocationChange = useCallback(() => {\r\n        const location = getLocation({\r\n            width: targetRef.current?.offsetWidth,\r\n            height: targetRef.current?.offsetHeight\r\n        })\r\n        if (location) setLocation(location)\r\n    }, [getLocation])\r\n\r\n    useLayoutEffect(() => {\r\n        handleLocationChange()\r\n    }, [handleLocationChange])\r\n\r\n    useEffect(() => {\r\n        const handleClick = e => {\r\n            const containerElement = targetRef.current\r\n            const parentElement = parentRef.current\r\n            if (containerElement?.contains(e.target) || parentElement?.contains(e.target)) return\r\n            onClose()\r\n        }\r\n\r\n        window.addEventListener(\"mouseup\", handleClick)\r\n        window.addEventListener(\"resize\", handleLocationChange)\r\n\r\n        return () => {\r\n            window.removeEventListener(\"mouseup\", handleClick)\r\n            window.removeEventListener(\"resize\", handleLocationChange)\r\n        }\r\n    }, [handleLocationChange, onClose, parentRef])\r\n\r\n    return (\r\n        <div ref={targetRef} className=\"dynamic-popover pos-absolute\" style={{ ...location }}>\r\n\r\n            <PopoverHeader title={title} isMultiView={isMultiView} onGoBack={onGoBack} onClose={onClose} />\r\n\r\n            <div className=\"popover-content\" ref={contentRef}>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nexport function EditSidebarLabel({ Icon, title }) {\r\n\r\n    const getStyle = () => {\r\n        if (title === \"Delete\") return { backgroundColor: '#b04632', color: '#fff' }\r\n        else return {}\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-container\">\r\n            <button className=\"sidebar-label card-edit-btn sidebar-btn\" style={{ position: 'relative', ...getStyle() }}>\r\n                <div className=\"list-item-layover\"></div>\r\n                <div className=\"btn-label-container flex\">\r\n                    <Icon />\r\n                    <p>{title}</p>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo, useRef, useState } from 'react'\r\nimport { DynamicPopover } from '../shared/dynamic-popover'\r\nimport { EditSidebarLabel } from '../card-edit/edit-sidebar-label'\r\n\r\n\r\nexport function CardEditActionsItem({ item, goBack }) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const itemRef = useRef()\r\n    const InnerPopperCmp = useMemo(() => item.component, [item])\r\n\r\n    return (\r\n        <div className=\"label-wrapper\">\r\n            <div ref={itemRef} className={`pos-relative ${isOpen ? 'popover-open' : ''}`}>\r\n                <span onClick={() => setIsOpen(!isOpen)}>\r\n                    <EditSidebarLabel Icon={item.icon} title={item.title} />\r\n                </span>\r\n                {\r\n                    isOpen && <DynamicPopover onClose={() => setIsOpen(false)} title={item.title} ref={itemRef}>\r\n                        <InnerPopperCmp onClose={() => setIsOpen(false)} goBack={goBack} />\r\n                    </DynamicPopover>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BsArrowRight } from 'react-icons/bs'\r\nimport { MdContentCopy } from 'react-icons/md'\r\nimport { GoArchive } from 'react-icons/go'\r\nimport { BsArrowCounterclockwise } from 'react-icons/bs'\r\nimport { AiOutlineMinus } from 'react-icons/ai'\r\nimport { MoveCard } from '../shared/popover-children/move-card'\r\nimport { CopyCard } from '../shared/popover-children/copy-card'\r\nimport { CardEditActionsItem } from './card-edit-actions-item'\r\nimport { EditSidebarLabel } from './edit-sidebar-label'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onArchiveCard, onUnArchiveCard, onRemoveCard } from '../../store/board.actions'\r\n\r\n\r\nconst _CardEditActions = ({ currCardId, board, onArchiveCard, onUnArchiveCard, onRemoveCard, goBack }) => {\r\n    const [isArchive, setIsArchive] = useState(false)\r\n    const [groupId, setGroupId] = useState(null)\r\n    const [currCard, setCurrCard] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const card = cardEditService.getCardById(currCardId, groupId)\r\n        setIsArchive(card.isArchive || false)\r\n        setGroupId(groupId)\r\n        setCurrCard(card)\r\n    }, [currCardId])\r\n\r\n    const handleArchiveCard = () => {\r\n        onArchiveCard(currCard, groupId, board)\r\n        setIsArchive(true)\r\n        goBack()\r\n    }\r\n\r\n    const handleUnArchiveCard = () => {\r\n        onUnArchiveCard(currCard, board)\r\n        setIsArchive(false)\r\n    }\r\n\r\n    const handleRemoveCard = () => {\r\n        onRemoveCard(currCard, board)\r\n    }\r\n\r\n    return (\r\n        <div className=\"pos-relative\">\r\n            <div className=\"card-edit-actions\">\r\n                <h3 className=\"sidebar-title\">Actions</h3>\r\n                <div className=\"actions-container\">\r\n                    {actions.map((item, idx) => (\r\n                        <CardEditActionsItem key={item.title + idx} item={item} goBack={goBack} />\r\n                    ))}\r\n                    {!isArchive ?\r\n                        <div className=\"label-wrapper\" onClick={handleArchiveCard}>\r\n                            <EditSidebarLabel Icon={GoArchive} title='Archive' />\r\n                        </div>\r\n                        : <>\r\n                            <div className=\"label-wrapper\" onClick={handleUnArchiveCard}>\r\n                                <EditSidebarLabel Icon={BsArrowCounterclockwise} title='Send to board' />\r\n                            </div>\r\n                            <div className=\"label-wrapper\" onClick={handleRemoveCard}>\r\n                                <EditSidebarLabel Icon={AiOutlineMinus} title='Delete' />\r\n                            </div>\r\n                        </>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst actions = [{ icon: BsArrowRight, title: 'Move', component: MoveCard }, { icon: MdContentCopy, title: 'Copy', component: CopyCard }]\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onArchiveCard,\r\n    onUnArchiveCard,\r\n    onRemoveCard\r\n}\r\n\r\nexport const CardEditActions = connect(mapStateToProps, mapDispatchToProps)(_CardEditActions);\r\n","import Avatar from 'react-avatar';\r\n\r\n\r\n\r\nexport function MemberAvatar({ member, size, style = {} }) {\r\n\r\n    function getSize() {\r\n        switch (size) {\r\n            case 'sm':\r\n                return 20\r\n            case 'lg':\r\n                return 50\r\n            case 'md':\r\n            default:\r\n                return 32\r\n        }\r\n    }\r\n    // src={member.imgUrl}\r\n    return <Avatar name={member.fullname} src={member.imgUrl} size={getSize()} style={style} round />\r\n}","// import { userService } from \"./user.service\"\r\n\r\nexport const activityTxtMap = {\r\n    addGroup: (listName) => {\r\n        return `Added list: ${listName}`\r\n    },\r\n    addCard: () => {\r\n        return `Added card:`\r\n    },\r\n    socketUpdate: ()=>{\r\n        return 'UPDATE_BY_SOCKET'\r\n    },\r\n    renameBoard: (boardName) => {\r\n        return `Renamed this board to: ${boardName}`\r\n    },\r\n    inviteMember: (memberName) => {\r\n        return `Invited ${memberName} to this board`\r\n    },\r\n    removeMember: (memberName) => {\r\n        return `Removed ${memberName} from this board`\r\n    },\r\n    changeBackground: () => {\r\n        return `Changed the background of this board`\r\n    },\r\n    editCard: () => {\r\n        return `Edited card title: `\r\n    },\r\n    archiveList: (listName) => {\r\n        return `Archived the list: ${listName}`\r\n    },\r\n    completeCard: () => {\r\n        return `Marked the following card as complete: `\r\n    },\r\n    unCompleteCard: () => {\r\n        return `Marked the following card as incomplete: `\r\n    },\r\n    changeDescription: () => {\r\n        return `Changed the description in card: `\r\n    },\r\n    changeGroupTitle: (groupName) => {\r\n        return `Changed the title in list: ${groupName}`\r\n    },\r\n    addMemberToCard: (memberName) => {\r\n        return `Added ${memberName} to a card`\r\n    },\r\n    removeMemberFromCard: (memberName) => {\r\n        return `Removed ${memberName} from a card`\r\n    },\r\n    addLabel: (labelName) => {\r\n        return `Added the label ${labelName} to a card`\r\n    },\r\n    removeLabel: (labelName) => {\r\n        return `Removed the label ${labelName} from a card`\r\n    },\r\n    addChecklist: (checklistName) => {\r\n        return `Added checklist ${checklistName} to a card`\r\n    }\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BsCheck } from 'react-icons/bs';\r\nimport { onUpdateCard } from '../../store/board.actions';\r\nimport { MemberAvatar } from '../shared/member-avatar';\r\nimport { cardEditService } from '../../services/card-edit.service';\r\nimport { activityTxtMap } from '../../services/activity.service';\r\nimport { socketService } from '../../services/socket.service';\r\nimport { userService } from '../../services/user.service';\r\nimport { utilService } from '../../services/util.service';\r\n\r\nfunction _PopperMemberPreview({\r\n  member,\r\n  currCardId,\r\n  onUpdateCard,\r\n  user,\r\n  onAddUserMention,\r\n}) {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const groupId = cardEditService.getGroupId(currCardId);\r\n    const card = cardEditService.getCardById(currCardId, groupId);\r\n    const isMemberChecked = card.members?.find((m) => m._id === member._id);\r\n    setIsChecked(isMemberChecked);\r\n  }, [currCardId, member._id]);\r\n\r\n  const handleMemberClick = () => {\r\n    setIsChecked(!isChecked);\r\n    const res = cardEditService.handleMemberChange(member._id);\r\n    const activity = isChecked\r\n      ? {\r\n        txt: activityTxtMap.removeMemberFromCard(member.fullname),\r\n        currCardId,\r\n      }\r\n      : { txt: activityTxtMap.addMemberToCard(member.fullname), currCardId };\r\n    onUpdateCard(...res, activity);\r\n    const groupId = res[1]\r\n    const board = res[2];\r\n    const card = res[0];\r\n    const mention = {\r\n      id: utilService.makeId(),\r\n      user,\r\n      action: isChecked ? 'Removed' : 'Added',\r\n      board: {boardId: board._id, title: board.title},\r\n      card: {cardId: card.id, title: card.title},\r\n      groupId,\r\n      createdAt: Date.now()\r\n    };\r\n    socketService.emit('send-mention', ({userId: member._id, mention}))\r\n    userService.addUserMention(member._id, mention)\r\n  };\r\n\r\n  return (\r\n    <div className='popper-member-preview flex' onClick={handleMemberClick}>\r\n      <div className='list-item-layover'></div>\r\n      <div style={{ width: 32 }}>\r\n        <MemberAvatar member={member} />\r\n      </div>\r\n      <div className='popper-member-name'>\r\n        <p>{member.fullname}</p>\r\n      </div>\r\n      {isChecked && (\r\n        <div className='popper-member-check'>\r\n          <BsCheck />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currCardId: state.boardModule.currCardId,\r\n    user: state.userModule.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateCard\r\n\r\n};\r\n\r\nexport const PopperMemberPreview = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_PopperMemberPreview);\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PopperMemberPreview } from '../../card-edit/popper-member-preview'\r\n\r\nconst _MemberList = ({ board }) => {\r\n    const [members, setMembers] = useState(board.members)\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        const matchingMembers = board.members.filter(member => member.fullname.toLowerCase().includes(value.toLowerCase()))\r\n        setMembers(matchingMembers)\r\n    }\r\n\r\n    return (<div className=\"member-list\">\r\n        <input className=\"search-input\" type=\"text\" autoFocus placeholder=\"Search...\" onChange={handleChange} />\r\n        <h4>Board Members</h4>\r\n        <div className=\"flex column\">\r\n            {members.map(member => (\r\n                <PopperMemberPreview\r\n                    key={member._id}\r\n                    member={member}\r\n                />\r\n            ))}\r\n        </div>\r\n    </div>)\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nexport const MemberList = connect(mapStateToProps)(_MemberList)","import React, { useState } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\n\r\n\r\n\r\nconst _CardEditDate = ({ onUpdateCard, onClose }) => {\r\n    const [startDate] = useState(new Date())\r\n    const [endDate] = useState(null)\r\n    const [dueDate, setDueDate] = useState(null)\r\n\r\n    const onChange = (date) => {\r\n        setDueDate(date.getTime())\r\n    }\r\n\r\n    const onReset = () => {\r\n        setDueDate(null)\r\n        handleSubmit()\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const res = cardEditService.handleDueDateChange(dueDate)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div className=\"date-picker\">\r\n            <DatePicker\r\n                selected={startDate}\r\n                onChange={onChange}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n                // selectsRange\r\n                inline\r\n                formatWeekDay={nameOfDay => nameOfDay.substr(0, 3)}\r\n            />\r\n            <div className=\"picker-btns flex column\">\r\n                <button className=\"card-edit-btn secondary long\" onClick={handleSubmit}>Save</button>\r\n                <button className=\"card-edit-btn long\" onClick={onReset}>Remove</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditDate = connect(null, mapDispatchToProps)(_CardEditDate);\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BiPencil } from 'react-icons/bi'\r\nimport { BsCheck } from 'react-icons/bs'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\nfunction _PopperLabelPreview({ label, currCardId, onUpdateCard, onGoBack }) {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const card = cardEditService.getCardById(currCardId, groupId)\r\n        const isLabelChecked = card.labelIds?.some(l => l === label.id)\r\n        setIsChecked(isLabelChecked)\r\n    }, [currCardId, label.id])\r\n\r\n    const handleLabelClick = () => {\r\n        setIsChecked(!isChecked)\r\n        const res = cardEditService.handleLabelChange(label.id)\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        // const activity = {txt: activityTxtMap.addLabel(label.title), groupId: groupId}\r\n        const activity = (isChecked) ? { txt: activityTxtMap.removeLabel(label.title), groupId: groupId } : { txt: activityTxtMap.addLabel(label.title), groupId: groupId }\r\n        onUpdateCard(...res, activity)\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-preview flex\" >\r\n            {/* <div className='list-item-layover'></div> */}\r\n            <div className=\"label-preview flex\" >\r\n                <div className=\"popper-label \" style={{ backgroundColor: label.color }} onClick={handleLabelClick}>\r\n                    <span> {label.title || ''}</span>\r\n                    {isChecked && <div className='popper-label-check'><BsCheck /></div>}\r\n                </div>\r\n                <div className=\"icon-wrapper\" onClick={() => onGoBack(label.color)}><BiPencil /></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopperLabelPreview = connect(mapStateToProps, mapDispatchToProps)(_PopperLabelPreview);\r\n","import React, { useState } from 'react'\r\nimport { PopperLabelPreview } from '../../card-edit/popper-label-preview'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction _LabelList({ board, onGoBack }) {\r\n    const [labels, setLabels] = useState(board.labels)\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        const matchingLabels = board.labels.filter(label => label.title.toLowerCase().includes(value.toLowerCase()))\r\n        setLabels(matchingLabels)\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-list-container\">\r\n            <input className=\"search-input\" type=\"text\" autoFocus placeholder=\"Search labels...\" onChange={handleChange} />\r\n            <h4>Labels</h4>\r\n            <div className=\"flex column label-list\">\r\n                {labels.map(label => <PopperLabelPreview key={label.id} label={label} onGoBack={onGoBack} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nexport const LabelList = connect(mapStateToProps)(_LabelList)\r\n\r\n\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../../services/activity.service'\r\n\r\nexport function _PopoverChecklist({ onUpdateCard, onClose }) {\r\n    const inputRef = useRef()\r\n    const [title, setTitle] = useState('Checklist')\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n        inputRef.current.select()\r\n    }, [])\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        setTitle(value)\r\n    }\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const res = cardEditService.handleChecklistChange('addChecklist', null, title)\r\n        const activity = {txt: activityTxtMap.addChecklist(title)}\r\n        onUpdateCard(...res, activity)\r\n        setTitle('')\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <form className=\"popover-checklist\" onSubmit={handleSubmit}>\r\n            <label htmlFor=\"checklist-title\">Title</label>\r\n            <input className=\"search-input\" ref={inputRef} value={title} onChange={handleChange} />\r\n            <button className=\"card-edit-btn secondary\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopoverChecklist = connect(mapStateToProps, mapDispatchToProps)(_PopoverChecklist);","export function uploadImg(ev) {\r\n    const CLOUD_NAME = 'dh4cdbmav'\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    // console.log('target', ev.target)\r\n    formData.append('file', ev.target.files[0])\r\n    console.log('ev.target.files[0]):', ev.target.files[0])\r\n    formData.append('upload_preset', 'wbls0qti');\r\n    // console.log('formData:', formData)\r\n\r\n    return fetch(UPLOAD_URL, {\r\n        method: 'POST',\r\n        body: formData\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => res.url)\r\n        .catch(err => console.error(err))\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { uploadImg } from '../../../services/cloudinary.service'\r\n\r\n\r\n\r\nfunction _PopoverAttachFile({ onUpdateCard, onClose }) {\r\n    const [title, setTitle] = useState('')\r\n    const [url, setUrl] = useState('')\r\n\r\n    const urlRef = useRef()\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const res = cardEditService.handleFileAdd(url, title)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    const handleImageUpload = async (ev) => {\r\n        const title = ev.target.files[0].name\r\n        const url = await uploadImg(ev)\r\n        const res = cardEditService.handleFileAdd(url, title)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div className=\"popover-attach-file\">\r\n            <div className=\"attach-from\">\r\n                <label htmlFor=\"upload\" >\r\n                    <span aria-hidden=\"true\">Computer</span>\r\n                    <input type=\"file\" id=\"upload\" style={{ display: 'none' }} onChange={handleImageUpload} />\r\n                </label>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"attach-link\">\r\n                <label>Attach a link</label>\r\n                <input ref={urlRef} className=\"search-input\" placeholder=\"Paste any link here...\" value={url} onChange={(ev) => setUrl(ev.target.value)} />\r\n                {url && <><label>Link name (optional)</label><input className=\"search-input\" value={title} onChange={(ev) => setTitle(ev.target.value)} /></>}\r\n                <button className=\"card-edit-btn\">Attach</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopoverAttachFile = connect(mapStateToProps, mapDispatchToProps)(_PopoverAttachFile);\r\n\r\n","import React, { useMemo, useRef, useState } from 'react'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { EditSidebarLabel } from '../edit-sidebar-label'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\n\r\n\r\nfunction _CardEditAddToCardItem({ item, currCardId }) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [color, setColor] = useState('')\r\n    const itemRef = useRef()\r\n    const InnerPopperCmp = useMemo(() => item.component, [item])\r\n    const EditComponent = useMemo(() => item.editComponent, [item])\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const currCard = cardEditService.getCardById(currCardId, groupId)\r\n\r\n    const checkIfCover = () => {\r\n        return (item.title !== 'Cover') || (!currCard?.style?.bgColor && !currCard?.style?.imgUrl)\r\n    }\r\n\r\n    const handleEdit = (color) => {\r\n        if (isEdit) setIsEdit(false)\r\n        else {\r\n            setColor(color)\r\n            setIsEdit(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-wrapper\">\r\n            {checkIfCover() && <div ref={itemRef} className={`pos-relative ${isOpen ? 'popover-open' : ''}`}>\r\n                <span onClick={() => setIsOpen(!isOpen)}>\r\n                    <EditSidebarLabel Icon={item.icon} title={item.title} />\r\n                </span>\r\n                {\r\n                    isOpen && Boolean(item.editComponent) && <DynamicPopover onGoBack={handleEdit} onClose={() => setIsOpen(false)} title={item.title} ref={itemRef} isMultiView={isEdit}>\r\n                        {isEdit ? <EditComponent color={color} onGoBack={handleEdit} onClose={() => setIsOpen(false)} /> : <InnerPopperCmp onGoBack={handleEdit} onClose={() => setIsOpen(false)} />}\r\n                    </DynamicPopover>\r\n                }\r\n                {\r\n                    isOpen && !Boolean(item.editComponent) && <DynamicPopover onClose={() => setIsOpen(false)} title={item.title} ref={itemRef}>\r\n                        <InnerPopperCmp onClose={() => setIsOpen(false)} />\r\n                    </DynamicPopover>\r\n                }\r\n            </div>}\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nexport const CardEditAddToCardItem = connect(mapStateToProps, null)(_CardEditAddToCardItem);\r\n","import React, { Component } from 'react'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\n\r\nclass _PopperCoverEdit extends Component {\r\n    state = {\r\n        currCard: null,\r\n        groupId: null,\r\n        selectedEl: null,\r\n        initialStyle: null,\r\n        currStyle: null,\r\n        selectedSize: 'half'\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { currCardId } = this.props\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const currCard = cardEditService.getCardById(currCardId, groupId)\r\n        if (currCard.style) {\r\n            if (currCard.style.isFull) {\r\n                this.setState({ selectedSize: (currCard.style.isFull) ? 'full' : 'half' })\r\n            }\r\n            if (currCard.style.bgColor) this.setState({ currStyle: { backgroundColor: currCard.style.bgColor } })\r\n            else if (currCard.style.imgUrl) this.setState({ currStyle: { backgroundImage: `url(${currCard.style.imgUrl})` } })\r\n        }\r\n        this.setState({ currCard, groupId })\r\n    }\r\n\r\n    handleClick = (ev, value, type) => {\r\n        ev.target.classList.add('selected')\r\n        this.state.selectedEl?.classList.remove('selected')\r\n        this.setState({ selectedEl: ev.target })\r\n        const { board, onUpdateCard } = this.props\r\n        const { currCard, groupId } = this.state\r\n        this.setState({ currStyle: type === 'color' ? { backgroundColor: value } : { backgroundImage: `url(${value})` } })\r\n        currCard.style = type === 'color' ? { bgColor: value } : { imgUrl: value }\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    handleCoverRemove = () => {\r\n        const { board, onUpdateCard } = this.props\r\n        const { currCard, groupId } = this.state\r\n        currCard.style = null\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    handleSizeChange = (size) => {\r\n        const { board, onUpdateCard } = this.props\r\n        const { currCard, groupId } = this.state\r\n        currCard.style.isFull = (size === 'full') ? true : false\r\n        this.setState({ selectedSize: size })\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    render() {\r\n        const { currCard, currStyle, selectedSize } = this.state\r\n        if (!currCard) return ''\r\n        const colors = ['#7bc86c', '#f5dd29', '#ffaf3f', '#ef7564', '#cd8de5', '#517dab', '#29cce5', '#6deca9', '#ff8ed4', '#172b4d']\r\n        console.log(currStyle);\r\n        return (\r\n            <section className=\"modal-cover-edit flex column\">\r\n\r\n                <div className=\"size-container flex column\">\r\n                    <h4>Size</h4>\r\n                    <div className=\"size-options flex\">\r\n\r\n                        <div className={`size-option half ${selectedSize === 'half' ? 'selected' : ''}`} onClick={() => this.handleSizeChange('half')}>\r\n                            <div className=\"colored-half\" style={currStyle}></div>\r\n                            <div className=\"line-wrapper-half\">\r\n                                <div className=\"first-line\"></div>\r\n                                <div className=\"second-line\"></div>\r\n                                <div className=\"third-line flex\">\r\n                                    <div className=\"first-fragment\"></div>\r\n                                    <div className=\"second-fragment\"></div>\r\n                                </div>\r\n                                <div className=\"circle\"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={`size-option full ${selectedSize === 'full' ? 'selected' : ''}`} data-size=\"full\" onClick={() => this.handleSizeChange('full')} style={currStyle}>\r\n                            <div className=\"line-wrapper-full\">\r\n                                <div className=\"first-line\"></div>\r\n                                <div className=\"second-line\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"card-edit-btn\" onClick={this.handleCoverRemove}>Remove cover</button>\r\n                </div>\r\n\r\n                <div className=\"flex column\">\r\n                    <h4>Colors</h4>\r\n                    <div className=\"color-container flex\">{colors.map((color, i) => <div key={i} className=\"cover-color-option\" style={{ backgroundColor: color }} onClick={ev => this.handleClick(ev, color, 'color')}></div>)}</div>\r\n                </div>\r\n\r\n                {currCard.attachments && Boolean(currCard.attachments.length) && <div className=\"flex column\">\r\n                    <h4>Attachments</h4>\r\n                    <div className=\"attachments-container flex\">{currCard.attachments.map(a => <div key={a.id} className=\"cover-image-option\" style={{ backgroundImage: `url(${a.url})` }} onClick={ev => this.handleClick(ev, a.url, 'img')}></div>)}</div>\r\n                </div>}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopperCoverEdit = connect(mapStateToProps, mapDispatchToProps)(_PopperCoverEdit);\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { AiOutlineCheck } from 'react-icons/ai'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { utilService } from '../../../services/util.service'\r\nimport { onUpdateBoard, onUpdateCard } from '../../../store/board.actions'\r\n\r\nfunction _LabelEdit({ color, board, onUpdateBoard, onClose, onGoBack, onUpdateCard }) {\r\n    const [selectedColor, setSelectedColor] = useState(null)\r\n    const [title, setTitle] = useState('')\r\n\r\n    const inputRef = useRef()\r\n\r\n    useEffect(() => {\r\n        setSelectedColor(color)\r\n        const label = board.labels.find(label => label.color === color)\r\n        setTitle(label?.title || '')\r\n        inputRef.current?.select()\r\n    }, [board.labels, color])\r\n\r\n    const handleClick = (ev) => {\r\n        setSelectedColor(ev.target.dataset.color)\r\n        const label = board.labels.find(label => label.color === ev.target.dataset.color)\r\n        setTitle(label?.title || '')\r\n    }\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        setTitle(value)\r\n    }\r\n\r\n    const handleSumbit = () => {\r\n        const boardToSave = { ...board }\r\n        let label = boardToSave.labels.find(label => label.color === selectedColor)\r\n        if (label) label.title = title\r\n        else {\r\n            label = { id: utilService.makeId(), color: selectedColor, title }\r\n            boardToSave.labels.push(label)\r\n        }\r\n        onUpdateBoard({ type: '' }, boardToSave)\r\n        onGoBack()\r\n        onClose()\r\n\r\n        const res = cardEditService.handleLabelChange(label.id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-edit\">\r\n            <div>\r\n                <label>Name</label>\r\n                <input ref={inputRef} className=\"search-input\" onChange={handleChange} value={title} />\r\n            </div>\r\n\r\n            <div>\r\n                <label>Select a color</label>\r\n                <div className=\"color-container flex\">\r\n                    {colors.map((c, i) => {\r\n                        return (<div key={i} data-color={c} className=\"label-color-option\" style={{ backgroundColor: c }} onClick={handleClick}\r\n                        >{(c === selectedColor) && <span><AiOutlineCheck /></span>}</div>)\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"btns-container\">\r\n                <button className=\"card-edit-btn save-btn\" onClick={handleSumbit}>Save</button>\r\n                <button className=\"card-edit-btn delete-btn\">Delete</button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nconst colors = ['#7bc86c', '#f5dd29', '#ffaf3f', '#ef7564', '#cd8de5', '#517dab', '#29cce5', '#6deca9', '#ff8ed4', '#172b4d']\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n    onUpdateBoard\r\n}\r\n\r\nexport const LabelEdit = connect(mapStateToProps, mapDispatchToProps)(_LabelEdit);\r\n","import React from 'react'\r\nimport { MemberList } from '../../shared/popover-children/member-list'\r\nimport { CardEditDate } from '../../shared/popover-children/card-edit-date'\r\nimport { LabelList } from '../../shared/popover-children/label-list'\r\nimport { BsClock, BsCardChecklist } from 'react-icons/bs'\r\nimport { MdLabelOutline } from 'react-icons/md'\r\nimport { FiPaperclip } from 'react-icons/fi'\r\nimport { BiUser } from 'react-icons/bi'\r\nimport { PopoverChecklist } from '../../shared/popover-children/popover-checklist'\r\nimport { PopoverAttachFile } from '../../shared/popover-children/popover-attach-file'\r\nimport { CardEditAddToCardItem } from './card-edit-add-to-card-item'\r\nimport { PopperCoverEdit } from '../../shared/popover-children/popper-cover-edit'\r\nimport { CgCreditCard } from 'react-icons/cg'\r\nimport { LabelEdit } from '../../shared/popover-children/label-edit'\r\n\r\nexport const CardEditAddToCard = () => (\r\n    <div style={{ position: 'relative' }}>\r\n        <div className=\"add-to-card\">\r\n            <h3 className=\"sidebar-title\">Add to card</h3>\r\n            <div className=\"add-to-card-container\">\r\n            {addToCardItems.map((item, idx) => (\r\n                <CardEditAddToCardItem key={item.title + idx} item={item} />\r\n            ))}\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst addToCardItems = [{ icon: BiUser, title: 'Members', component: MemberList }, { icon: MdLabelOutline, title: 'Labels', component: LabelList, editComponent: LabelEdit }, { icon: BsCardChecklist, title: 'Checklist', component: PopoverChecklist }, { icon: BsClock, title: 'Dates', component: CardEditDate }, { icon: FiPaperclip, title: 'Attachment', component: PopoverAttachFile }, { icon: CgCreditCard, title: 'Cover', component: PopperCoverEdit }]\r\n","import React, { Component } from 'react'\r\nimport { CardEditActions } from './card-edit-actions'\r\nimport { CardEditAddToCard } from './add-to-card/card-edit-add-to-card'\r\n\r\nexport class CardEditSidebar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar\">\r\n                <CardEditAddToCard />\r\n                <CardEditActions goBack={this.props.goBack} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { BsChevronDown } from 'react-icons/bs'\r\nimport { CardEditDate } from '../../shared/popover-children/card-edit-date'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\n\r\nconst _CardEditDueDate = ({ currCardId, onUpdateCard, board }) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const dueDateRef = useRef()\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const currCard = cardEditService.getCardById(currCardId, groupId)\r\n    const dueDate = currCard?.dueDate\r\n    const time = cardEditService.getFormattedTime(dueDate)\r\n\r\n    const getDueDateLabel = () => {\r\n        if (currCard.isComplete) return { title: 'Complete', bgColor: '#61bd4f' }\r\n        if ((dueDate - Date.now()) < 0) return { title: 'Overdue', bgColor: '#eb5a46' }\r\n        if ((dueDate - Date.now()) <= (1000 * 60 * 60 * 24)) return { title: 'Due soon', bgColor: '#f2d600' }\r\n        else return { title: '', bgColor: '' }\r\n    }\r\n\r\n    const onToggleComplete = () => {\r\n        currCard.isComplete = !currCard.isComplete\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {dueDate && <div className=\"due-date-container\">\r\n                <h3 className=\"small-title\">Due date</h3>\r\n                <div className=\"due-date\" >\r\n                    <input type=\"checkbox\" className=\"main-checkbox\" checked={currCard.isComplete} onChange={onToggleComplete} />\r\n                    <div className=\"card-edit-btn\" ref={dueDateRef}>\r\n                        <span className=\"due-date-time\">{time}</span>\r\n                        <span style={{ backgroundColor: getDueDateLabel().bgColor, textTransform: 'uppercase', fontSize: 12, padding: '0 3px', borderRadius: 2 }}>{getDueDateLabel().title}</span>\r\n                        <span className=\"due-date-icon\"><BsChevronDown /></span>\r\n                        <div className=\"list-item-layover\" onClick={() => setIsOpen(!isOpen)}></div>\r\n                        {isOpen && <DynamicPopover onClose={() => setIsOpen(false)} title={'Dates'} ref={dueDateRef}>\r\n                            <CardEditDate onClose={() => setIsOpen(false)} />\r\n                        </DynamicPopover>}\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditDueDate = connect(mapStateToProps, mapDispatchToProps)(_CardEditDueDate);\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { LabelList } from '../../shared/popover-children/label-list'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { LabelEdit } from '../../shared/popover-children/label-edit'\r\n\r\nconst _CardEditLabels = ({ currCardId, board }) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const [color, setColor] = useState('')\r\n    const addButtonRef = useRef()\r\n\r\n    const getCardLabels = (labelIds) => (\r\n        labelIds?.map(id => board.labels.find(label => label.id === id))\r\n    )\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const labelIds = cardEditService.getCardById(currCardId, groupId).labelIds\r\n    const labels = getCardLabels(labelIds)\r\n\r\n    const handleEdit = (color) => {\r\n        if (isEdit) setIsEdit(false)\r\n        else {\r\n            setColor(color)\r\n            setIsEdit(true)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {labelIds?.length ? <div className=\"labels-container\">\r\n                <h3 className=\"small-title\">Labels</h3>\r\n                <div className=\"labels\">\r\n                    {labels.map(label => <div key={label.id} className=\"card-label\" style={{ backgroundColor: label.color }}>\r\n                        {label.title || ''}\r\n                    </div>)}\r\n                    <div\r\n                        ref={addButtonRef}\r\n                        className=\"card-label add-label pos-relative\"\r\n                    >\r\n                        <div className=\"list-item-layover\" onClick={() => setIsOpen(!isOpen)}></div>\r\n                        <AiOutlinePlus />\r\n                        {isOpen && <DynamicPopover onGoBack={handleEdit} onClose={() => setIsOpen(false)} title={'Labels'} ref={addButtonRef} isMultiView={isEdit}>\r\n                            {!isEdit ? <LabelList onGoBack={handleEdit} onClose={() => setIsOpen(false)} /> : <LabelEdit onGoBack={handleEdit} color={color} onClose={() => setIsOpen(false)} />}\r\n                        </DynamicPopover>}\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nexport const CardEditLabels = connect(mapStateToProps, null)(_CardEditLabels);\r\n","import React from 'react'\r\nimport { MemberAvatar } from '../member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\n\r\nconst _MiniUser = ({ member, onUpdateCard }) => {\r\n\r\n    const onRemoveUser = () => {\r\n        const res = cardEditService.handleMemberChange(member._id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mini-user flex column\">\r\n\r\n            <div className=\"main flex\">\r\n                <MemberAvatar size=\"lg\" member={member} />\r\n                <div>\r\n                    <h3 className=\"mini-user-fullname\">{member.fullname}</h3>\r\n                    <p>{member.username}</p>\r\n                    {/* <p>Edit profile info</p> */}\r\n                </div>\r\n            </div>\r\n\r\n            <p className=\"remove-member\" onClick={onRemoveUser}>Remove from card</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const MiniUser = connect(null, mapDispatchToProps)(_MiniUser);\r\n","import React, { useRef, useState } from 'react'\r\nimport { DynamicPopover } from '../shared/dynamic-popover'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { MiniUser } from '../shared/popover-children/mini-user'\r\n\r\nexport function MembersContainerMemberPreview({ member }) {\r\n    const [isPreviewOpen, setIsPreviewOpen] = useState(false)\r\n    const userButtonRef = useRef()\r\n    return (\r\n        <div key={member._id} className=\"card-member pos-relative\" ref={userButtonRef}>\r\n            <span style={{ cursor: 'pointer' }}>\r\n                <div className=\"list-item-layover round\" onClick={() => setIsPreviewOpen(!isPreviewOpen)}></div>\r\n                <MemberAvatar member={member} />\r\n            </span>\r\n            {isPreviewOpen && <DynamicPopover onClose={() => setIsPreviewOpen(false)} title={null} ref={userButtonRef}>\r\n                <MiniUser member={member} />\r\n            </DynamicPopover>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { MemberList } from '../../shared/popover-children/member-list'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { MembersContainerMemberPreview } from '../members-container-member-preview'\r\n\r\nconst _CardEditMembers = ({ currCardId }) => {\r\n    const [isListOpen, setIsListOpen] = useState(false)\r\n    \r\n    const addButtonRef = useRef()\r\n   \r\n    let members\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    members = cardEditService.getCardById(currCardId, groupId).members\r\n\r\n    return (\r\n        <>\r\n            {members?.length ? <div className=\"members-container\">\r\n                <h3 className=\"small-title\">Members</h3>\r\n                <div className=\"members\">\r\n                    {members.map(member => <MembersContainerMemberPreview key={member._id} member={member} />)}\r\n\r\n                    <div\r\n                        ref={addButtonRef}\r\n                        className=\"card-member add-member pos-relative\"\r\n                    >\r\n                        <div className=\"list-item-layover round\" onClick={() => setIsListOpen(!isListOpen)}></div>\r\n                        <AiOutlinePlus />\r\n                        {isListOpen && <DynamicPopover onClose={() => setIsListOpen(false)} title={'Members'} ref={addButtonRef}>\r\n                            <MemberList />\r\n                        </DynamicPopover>}\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nexport const CardEditMembers = connect(mapStateToProps, null)(_CardEditMembers);\r\n\r\n\r\n","import { CardEditDueDate } from './labels-members/card-edit-duedate'\r\nimport { CardEditLabels } from './labels-members/card-edit-labels'\r\nimport { CardEditMembers } from './labels-members/card-edit-members'\r\n\r\nexport const LabelsMembers = () => (\r\n    <div className=\"members-labels-container\">\r\n        <CardEditMembers />\r\n        <CardEditLabels/>\r\n        <CardEditDueDate />\r\n    </div>\r\n)","import React from 'react'\r\n\r\nexport function ProgressBar({ bgColor, completed }) {\r\n\r\n    const containerStyles = {\r\n        height: 8,\r\n        width: '100%',\r\n        backgroundColor: \"#e0e0de\",\r\n        borderRadius: 50,\r\n        margin: '10px 0 10px 0px'\r\n    }\r\n\r\n    const fillerStyles = {\r\n        height: '100%',\r\n        width: `${completed}%`,\r\n        backgroundColor: bgColor,\r\n        borderRadius: 'inherit',\r\n        textAlign: 'right',\r\n        transition: 'width .5s ease-in-out'\r\n    }\r\n\r\n    return (\r\n        <div className=\"outer-container\" style={containerStyles}>\r\n            <div style={fillerStyles}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { IoMdClose } from 'react-icons/io'\r\n\r\nclass _TodoItem extends Component {\r\n    state = {\r\n        todoTitle: '',\r\n        isEditTodo: false\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    todoTextareaRef = React.createRef()\r\n    saveTodoBtnRef = React.createRef()\r\n\r\n    handleClick = (e) => {\r\n        if (this.todoTextareaRef?.current?.contains(e.target) || this.saveTodoBtnRef?.current?.contains(e.target) || this.newTodoTextarea?.current?.contains(e.target)) {\r\n            return\r\n        }\r\n        this.setState({ isEditTodo: false, todoTitle: '' })\r\n    }\r\n\r\n    handleMarkTodo = () => {\r\n        const res = cardEditService.handleChecklistChange('markTodo', this.props.checklistId, this.props.todo.id)\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    handleRemoveTodo = () => {\r\n        const res = cardEditService.handleChecklistChange('removeTodo', this.props.checklistId, this.props.todo.id)\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    handleTitleChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onChangeTitle = (ev) => {\r\n        ev.preventDefault()\r\n        const { checklistId, todo, onUpdateCard } = this.props\r\n        const { todoTitle } = this.state\r\n        const res = cardEditService.handleChecklistChange('changeTitle', checklistId, todo.id, todoTitle)\r\n        onUpdateCard(...res)\r\n        this.setState({ isEditTodo: false, todoTitle: '' })\r\n    }\r\n\r\n    render() {\r\n        const { todo } = this.props\r\n        const { isEditTodo, todoTitle } = this.state\r\n        return (\r\n            <div className=\"flex align-center todo-item\">\r\n                <input className=\"main-checkbox\" type=\"checkbox\" name={todo.id} checked={todo.isDone} onChange={this.handleMarkTodo} onClick={() => this.setState({ todoTitle: todo.title })}\r\n                    style={{ alignSelf: isEditTodo ? 'flex-start' : 'center' }} />\r\n                {!isEditTodo ? (\r\n                    <div>\r\n                        <span\r\n                            className={todo.isDone ? 'done' : ''}\r\n                            onClick={() => this.setState({ isEditTodo: true })}\r\n                        >\r\n                            {todo.title}\r\n                        </span>\r\n                        <span\r\n                            className=\"remove-todo-icon\"\r\n                            onClick={this.handleRemoveTodo}\r\n                        >\r\n                            <VscTrash />\r\n                        </span>\r\n                    </div>\r\n                ) :\r\n                    <form onSubmit={this.onChangeTitle} style={{ paddingBottom: 9 }}>\r\n                        <textarea\r\n                            className=\"description-textarea edit-todo\"\r\n                            onFocus={() => this.setState({ todoTitle: todo.title })}\r\n                            autoFocus\r\n                            name=\"todoTitle\"\r\n                            value={todoTitle}\r\n                            ref={this.todoTextareaRef}\r\n                            onChange={this.handleTitleChange} />\r\n\r\n                        <div className=\"description-btns\">\r\n                            <button ref={this.saveTodoBtnRef} className=\"card-edit-btn secondary\">Save</button>\r\n                            <button onClick={() => this.setState({ isEditTodo: false, todoTitle: '' })}><IoMdClose style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center' }} /></button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n}\r\n\r\nexport const TodoItem = connect(mapStateToProps, mapDispatchToProps)(_TodoItem);\r\n\r\n","import React, { Component } from 'react'\r\nimport { ProgressBar } from './progress-bar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { utilService } from '../../services/util.service'\r\nimport { BsCardChecklist } from 'react-icons/bs'\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport { TodoItem } from './todo-item'\r\n\r\nexport class _ChecklistEdit extends Component {\r\n    state = {\r\n        percentage: 0,\r\n        isAddTodo: false,\r\n        newTodo: ''\r\n    }\r\n\r\n    saveTodoBtnRef = React.createRef()\r\n    addTodoBtnRef = React.createRef()\r\n    newTodoTextarea = React.createRef()\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n        if (this.props.checklist.todos) this.setTodoPercentage()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.board !== this.props.board) {\r\n            this.setTodoPercentage()\r\n        }\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        if (this.saveTodoBtnRef?.current?.contains(e.target) || this.addTodoBtnRef?.current?.contains(e.target) || this.newTodoTextarea?.current?.contains(e.target)) {\r\n            return\r\n        }\r\n        this.setState({ isAddTodo: false, newTodo: '' })\r\n    }\r\n\r\n    setTodoPercentage = (todos = this.props.checklist.todos) => {\r\n        if (!todos?.length && !this.props.checklist?.todos.length) {\r\n            this.setState({ percentage: 0 })\r\n            return\r\n        }\r\n        const doneTodos = todos.filter(todo => todo.isDone)\r\n        const num = (doneTodos.length / todos.length) * 100\r\n        const percentage = (Number.isInteger(num)) ? num : num.toFixed(0)\r\n        this.setState({ percentage })\r\n    }\r\n\r\n    handleInputChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onAddTodo = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isAddTodo: false, newTodo: '' })\r\n        const res = cardEditService.handleChecklistChange(\"addTodo\", this.props.checklist.id, { id: utilService.makeId(), title: ev.target[0].value, isDone: false })\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    onRemoveChecklist = () => {\r\n        const res = cardEditService.handleChecklistChange(\"removeChecklist\", this.props.checklist.id)\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    render() {\r\n        const { checklist } = this.props\r\n        const { percentage, isAddTodo } = this.state\r\n        return (\r\n            <section className=\"checklist-preview flex column\">\r\n\r\n                <section className=\"flex space-between\">\r\n                    <div className=\"card-edit-title\">\r\n                        <span><BsCardChecklist /></span>\r\n                        <h3>{checklist.title}</h3>\r\n                    </div>\r\n                    <button className=\"card-edit-btn\" onClick={this.onRemoveChecklist}>Delete</button>\r\n                </section>\r\n\r\n                <div className=\"flex align-center\">\r\n                    <span style={{ fontSize: 11, width: 32, maxWidth: 32, minWidth: 32 }}>{percentage}%</span>\r\n                    <ProgressBar completed={percentage} bgColor={(percentage === 100) ? '#61bd4f' : '#5ba4cf'} />\r\n                </div>\r\n\r\n                {checklist.todos?.map(todo => {\r\n                    return <div className=\"todos-container\" key={todo.id}>\r\n                        <TodoItem todo={todo} checklistId={checklist.id} />\r\n                    </div>\r\n                })\r\n                }\r\n\r\n                {!isAddTodo\r\n                    ? <button className=\"card-edit-btn add-todo-btn\" style={{ alignSelf: 'flex-start' }} onClick={() => this.setState({ isAddTodo: true })}>Add an item</button>\r\n                    : <form onSubmit={this.onAddTodo}><textarea rows=\"2\"\r\n                        className=\"description-textarea add-todo\"\r\n                        ref={this.newTodoTextarea}\r\n                        autoFocus\r\n                        name=\"newTodo\"\r\n                        placeholder=\"Add an item\"\r\n                        onChange={this.handleInputChange} />\r\n\r\n                        <div className=\"description-btns add-todo-btns\">\r\n                            <button ref={this.addTodoBtnRef} className=\"card-edit-btn secondary\">Save</button>\r\n                            <button onClick={() => this.setState({ isAddTodo: false, newTodo: '' })}><IoMdClose style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center' }} /></button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const ChecklistEdit = connect(mapStateToProps, mapDispatchToProps)(_ChecklistEdit);\r\n","import React, { Component } from 'react'\r\nimport { IoMdClose, IoMdList } from 'react-icons/io'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\nclass _CardEditDescription extends Component {\r\n    state = {\r\n        currCard: {},\r\n        isDescriptionOpen: false\r\n    }\r\n\r\n    descriptionRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const currCard = cardEditService.getCardById(this.props.currCardId, groupId)\r\n        this.setState({ currCard })\r\n    }\r\n\r\n    setDescriptionTextarea = () => {\r\n        this.setState({ isDescriptionOpen: !this.state.isDescriptionOpen })\r\n    }\r\n\r\n    handleDescriptionChange = (card = this.state.currCard) => {\r\n        const { board } = this.props\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const activity = {txt: activityTxtMap.changeDescription(), card: card, groupId: groupId}\r\n        this.props.onUpdateCard(card, groupId, board, activity)\r\n    }\r\n\r\n    handleInputChange = ({ target: { value } }) => {\r\n        this.setState({ currCard: { ...this.state.currCard, description: value } })\r\n    }\r\n\r\n    render() {\r\n        const { currCard, isDescriptionOpen } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"description-container card-edit-title\">\r\n                    <span><IoMdList /></span>\r\n                    <h3>Description</h3>\r\n                    {currCard.description && !isDescriptionOpen && <button className=\"card-edit-btn\" onClick={() => {\r\n                        this.setDescriptionTextarea()\r\n                        this.descriptionRef.current.focus()\r\n                    }}> Edit</button>}\r\n                </div>\r\n                <div className=\"card-description\">\r\n                    <textarea\r\n                        ref={this.descriptionRef}\r\n                        className={`description-textarea ${isDescriptionOpen ? 'open' : ''} ${currCard.description ? 'filled' : ''}`}\r\n                        rows={isDescriptionOpen ? \"6\" : \"3\"}\r\n                        onFocus={this.setDescriptionTextarea}\r\n                        onBlur={() => {\r\n                            this.setDescriptionTextarea()\r\n                            this.handleDescriptionChange()\r\n                        }}\r\n                        value={currCard.description}\r\n                        onChange={this.handleInputChange}\r\n                        placeholder=\"Add a more detailed description...\"\r\n                    />\r\n                    {isDescriptionOpen &&\r\n                        <div className=\"description-btns\">\r\n                            <button className=\"card-edit-btn secondary\" onClick={() => this.handleDescriptionChange()}>Save</button>\r\n                            <button onClick={this.setDescriptionTextarea}><IoMdClose style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center' }} /></button>\r\n                        </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditDescription = connect(mapStateToProps, mapDispatchToProps)(_CardEditDescription);\r\n","import React from 'react'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\n\r\nfunction _CommentPreview({ comment, user, onUpdateCard }) {\r\n\r\n    const timeMsg = cardEditService.getCommentTime(comment.addedAt)\r\n\r\n    const onRemoveComment = () => {\r\n        const res = cardEditService.handleCommentRemove(comment.id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"comment-preview flex\">\r\n            <MemberAvatar member={comment.author} />\r\n            <div className=\"flex column comment-info\">\r\n                <div className=\"comment-data flex\">\r\n                    <span className=\"author-name\">{comment.author.fullname}</span>\r\n                    <span className=\"comment-time\">{timeMsg}</span>\r\n                </div>\r\n\r\n                <div className=\"comment-txt\">{comment.txt}</div>\r\n\r\n                {(comment.author._id === user._id) && <span className=\"remove-btn\" onClick={onRemoveComment}>Delete</span>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n}\r\n\r\nexport const CommentPreview = connect(mapStateToProps, mapDispatchToProps)(_CommentPreview)","import React, { Component } from 'react'\r\nimport { MdFormatListBulleted } from 'react-icons/md'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { Loader } from '../shared/loader'\r\nimport { CommentPreview } from './comment-preview'\r\n// import { CardEditActivityPreview } from './card-edit-activity-preview'\r\n\r\n\r\nclass _CardEditActivities extends Component {\r\n    state = {\r\n        isFocus: false,\r\n        isTxt: false,\r\n        commentTxt: '',\r\n        currCard: null,\r\n        activities: []\r\n    }\r\n\r\n    commentRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n        const { currCardId } = this.props\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const currCard = cardEditService.getCardById(currCardId, groupId)\r\n        this.getCardActivities()\r\n        this.setState({ currCard })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    getCardActivities = () => {\r\n        const { board, currCardId } = this.props\r\n        const activities = board.activities\r\n        const cardActivities = activities.filter(activity => activity.card.id === currCardId)\r\n        this.setState({ activities: cardActivities })\r\n    }\r\n\r\n    handleChange = ({ target: { value } }) => {\r\n        this.setState({ commentTxt: value })\r\n        if (value) this.setState({ isTxt: true })\r\n        else this.setState({ isTxt: false })\r\n    }\r\n\r\n    handleClick = e => {\r\n        if (this.commentRef?.current?.contains(e.target)) {\r\n            return\r\n        } else {\r\n            this.setState({ isFocus: false })\r\n        }\r\n    }\r\n\r\n    handleSubmit = (ev) => {\r\n        ev.stopPropagation()\r\n        const { isTxt, commentTxt } = this.state\r\n        const { onUpdateCard } = this.props\r\n        if (!isTxt) return\r\n        const res = cardEditService.onAddComment(commentTxt)\r\n        onUpdateCard(...res)\r\n        this.setState({ isFocus: false, commentTxt: '' })\r\n    }\r\n\r\n    render() {\r\n        const { currCard, isFocus, isTxt, commentTxt } = this.state\r\n        const { member } = this.props\r\n        if (!currCard) return <Loader />\r\n\r\n        return (\r\n            <div className=\"comments-section\">\r\n                <section className=\"flex space-between\">\r\n                    <div className=\"card-edit-title\">\r\n                        <span><MdFormatListBulleted /></span>\r\n                        <h3>Activity</h3>\r\n                    </div>\r\n                    <button className=\"card-edit-btn\">Show details</button>\r\n                </section>\r\n\r\n                {/* {!!activities && activities.map(a => <CardEditActivityPreview key={a.id} activity={a} />)} */}\r\n\r\n                <div className=\"add-comment-container flex\">\r\n                    <MemberAvatar member={member} />\r\n                    <div className=\"new-comment\" ref={this.commentRef} style={{ width: '100%', height: isFocus ? 84 : 36, backgroundColor: '#fff' }} onClick={() => this.setState({ isFocus: true })}>\r\n                        <textarea placeholder=\"Write a comment...\" style={{ width: '100%', height: isFocus ? '50%' : '100%' }} onChange={this.handleChange} value={commentTxt} />\r\n                        {isFocus && <button className={`save-comment-btn card-edit-btn ${isTxt ? 'active' : ''}`} onClick={this.handleSubmit}>Save</button>}\r\n                    </div>\r\n                </div>\r\n\r\n                {currCard.comments?.length > 0 && <div className=\"comments-container flex column\">\r\n                    {currCard.comments.map(comment => <CommentPreview key={comment.id} comment={comment} />)}\r\n                </div>}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n}\r\n\r\nexport const CardEditActivities = connect(mapStateToProps, mapDispatchToProps)(_CardEditActivities)","import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\n\r\nconst _EditAttachment = ({ attachment, onUpdateCard, onClose }) => {\r\n    const [title, setTitle] = useState(attachment.title)\r\n    const titleRef = useRef()\r\n\r\n    useEffect(() => {\r\n        titleRef?.current?.select()\r\n    }, [])\r\n\r\n    const handleSubmit = () => {\r\n        if (!title) return\r\n        const res = cardEditService.handleAttachmentEdit(attachment.id, title)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"edit-attachment\">\r\n            <label>Link name</label>\r\n            <input ref={titleRef} className=\"search-input\" value={title} onChange={(ev) => setTitle(ev.target.value)} />\r\n            <button className=\"card-edit-btn secondary\">Update</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        boards: state.boardModule.boards,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const EditAttachment = connect(mapStateToProps, mapDispatchToProps)(_EditAttachment)\r\n","import React, { useRef, useState } from 'react'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { CgCreditCard } from 'react-icons/cg'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { DynamicPopover } from '../shared/dynamic-popover'\r\nimport { EditAttachment } from '../shared/popover-children/edit-attachment'\r\n\r\n\r\nfunction _AttachmentPreview({ attachment, currCardId, board, onUpdateCard }) {\r\n    const [isEditOpen, setIsEditOpen] = useState()\r\n    const editRef = useRef()\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const currCard = cardEditService.getCardById(currCardId, groupId)\r\n    const addedAt = cardEditService.getUploadTime(attachment.addedAt)\r\n\r\n    const toggleCover = () => {\r\n        if (currCard?.style?.imgUrl === attachment.url) currCard.style = null\r\n        else currCard.style = { imgUrl: attachment.url }\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    const checkIfCover = () => {\r\n        return currCard?.style?.imgUrl === attachment.url\r\n    }\r\n\r\n    const onRemoveAttachment = () => {\r\n        const res = cardEditService.handleFileRemove(attachment.id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"attachment-preview flex\">\r\n            <a href={attachment.url} target=\"_blank\" rel=\"noreferrer\"><div className=\"image-container\">\r\n                <img src={attachment.url} alt={attachment.title} />\r\n            </div></a>\r\n\r\n            <div className=\"right-section flex column\">\r\n                <span className=\"attachment-title\">{attachment.title}</span>\r\n                <div className=\"middle-line\">\r\n                    <span className=\"added-at\">{addedAt}</span>-\r\n                    <span>Comment</span>-\r\n                    <span onClick={onRemoveAttachment}>Delete</span>-\r\n\r\n                    <div ref={editRef} className=\"pos-relative\">\r\n                        <div className=\"list-item-layover\" onClick={() => setIsEditOpen(!isEditOpen)}></div>\r\n                        <span>Edit</span>\r\n                        {isEditOpen && <DynamicPopover onClose={() => setIsEditOpen(false)} title={'Edit attachment'} ref={editRef}>\r\n                            <EditAttachment attachment={attachment} onClose={() => setIsEditOpen(false)} />\r\n                        </DynamicPopover>}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"attachment-cover\">\r\n                    <span><CgCreditCard /></span>\r\n                    <span onClick={toggleCover}>{checkIfCover() ? 'Remove cover' : 'Make cover'}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const AttachmentPreview = connect(mapStateToProps, mapDispatchToProps)(_AttachmentPreview);\r\n","import React, { Component } from 'react'\r\n// import { IoMdClose } from 'react-icons/io'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { FiPaperclip } from 'react-icons/fi'\r\nimport { AttachmentPreview } from './attachment-preview'\r\n\r\n\r\nclass _CardEditAttachment extends Component {\r\n    state = {\r\n        currCard: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const currCard = cardEditService.getCardById(this.props.currCardId, groupId)\r\n        this.setState({ currCard })\r\n    }\r\n\r\n    render() {\r\n        const { currCard } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"attachment-container card-edit-title\">\r\n                    <span><FiPaperclip /></span>\r\n                    <h3>Attachments</h3>\r\n                </div>\r\n                <div className=\"card-attachments\">\r\n                    {currCard?.attachments?.map((attachment, i) => <AttachmentPreview key={attachment.title + i} attachment={attachment} />)}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditAttachment = connect(mapStateToProps, mapDispatchToProps)(_CardEditAttachment);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { CardEditSidebar } from './card-edit/card-edit-sidebar'\r\nimport { LabelsMembers } from './card-edit/labels-members'\r\nimport { ChecklistEdit } from './card-edit/checklist-edit'\r\nimport { onUpdateCard, onSetCardId } from '../store/board.actions'\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport { TiCreditCard } from 'react-icons/ti'\r\nimport { CgCreditCard } from 'react-icons/cg'\r\nimport { CardEditDescription } from './card-edit/card-edit-description'\r\nimport { CardEditActivities } from './card-edit/card-edit-activities'\r\nimport { CardEditAttachment } from './card-edit/card-edit-attachment'\r\nimport { DynamicPopover } from './shared/dynamic-popover'\r\nimport { PopperCoverEdit } from './shared/popover-children/popper-cover-edit'\r\nimport { BsArchive } from 'react-icons/bs'\r\nimport { Loader } from './shared/loader'\r\n\r\nclass _CardEdit extends Component {\r\n  state = {\r\n    currCard: null,\r\n    currGroup: null,\r\n    isOpen: false,\r\n  }\r\n\r\n  modalRef = React.createRef()\r\n  coverRef = React.createRef()\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('mousedown', this.handleClick)\r\n    this.handleLoad()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('mousedown', this.handleClick)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.board !== this.props.board) this.handleLoad()\r\n  }\r\n\r\n  handleLoad = () => {\r\n    let currCard\r\n    let currGroup\r\n    const { cardId, groupId } = this.props.match.params\r\n    this.props.onSetCardId(cardId)\r\n    if (this.props.board.groups) {\r\n      currCard = this.getDataById(cardId, groupId).currentCard\r\n      currGroup = this.getDataById(cardId, groupId).currentGroup\r\n    }\r\n    this.setState({ currCard, currGroup })\r\n  }\r\n\r\n  handleClick = e => {\r\n    const { board } = this.props\r\n    if (!this.modalRef?.current?.contains(e.target)) {\r\n      this.props.history.push(`/board/${board._id}`)\r\n    }\r\n  }\r\n\r\n  getDataById = (cardId, groupId) => {\r\n    const board = this.props.board\r\n    const currentGroup = board.groups.find((group) => group.id === groupId)\r\n    let currentCard = currentGroup.cards.find((card) => card.id === cardId)\r\n    if (!currentCard) currentCard = this.props.board.archivedCards.find(card => card.id === cardId)\r\n    return { currentGroup, currentCard }\r\n  }\r\n\r\n  handleInputChange = ({ target: { name, value } }) => {\r\n    this.setState({ currCard: { ...this.state.currCard, [name]: value } })\r\n  }\r\n\r\n  handlePropertyChange = (card = this.state.currCard) => {\r\n    const { board } = this.props\r\n    const { groupId } = this.props.match.params\r\n    this.props.onUpdateCard(card, groupId, board)\r\n  }\r\n\r\n  checkCardBackground = () => {\r\n    const { currCard } = this.state\r\n    if (!currCard.style) return\r\n    if (currCard.style.bgColor)\r\n      return {\r\n        backgroundColor: currCard.style.bgColor,\r\n        minHeight: 116,\r\n        height: 116,\r\n      }\r\n    if (currCard.style.imgUrl)\r\n      return {\r\n        background: `center / contain no-repeat url(${currCard.style.imgUrl})`,\r\n        objectFit: 'cover',\r\n        minHeight: 160,\r\n        height: 160,\r\n      }\r\n  }\r\n\r\n  goBack = () => {\r\n    const { board } = this.props\r\n    this.props.history.push(`/board/${board._id}`)\r\n  }\r\n\r\n  render() {\r\n    const { currCard, currGroup } = this.state\r\n    const { board } = this.props\r\n    if (!currCard) return <Loader />\r\n    const bg = this.checkCardBackground()\r\n    return (\r\n      <div className='edit-modal-container'>\r\n\r\n        <section className='card-edit' ref={this.modalRef}>\r\n          {currCard.style && <div className='card-edit-bg' style={bg}></div>}\r\n          <Link to={`/board/${board._id}`}>\r\n            <button className='close-modal-btn'>\r\n              <IoMdClose />\r\n            </button>\r\n          </Link>\r\n\r\n          {currCard.style && (\r\n            <div ref={this.coverRef} className='btn-wrapper pos-relative'>\r\n              <button\r\n                className='change-cover-btn'\r\n                onClick={() => this.setState({ isOpen: !this.state.isOpen })}\r\n              >\r\n                <span className='cover-icon'>\r\n                  <TiCreditCard />\r\n                </span>\r\n                <span>Cover</span>\r\n              </button>\r\n              {this.state.isOpen && (\r\n                <DynamicPopover\r\n                  onClose={() => this.setState({ isOpen: false })}\r\n                  title='Cover'\r\n                  ref={this.coverRef}\r\n                >\r\n                  <PopperCoverEdit\r\n                    onClose={() => this.setState({ isOpen: false })}\r\n                  />\r\n                </DynamicPopover>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {currCard.isArchive && (\r\n            <div className='archive-msg'>\r\n              <span>\r\n                <BsArchive />\r\n              </span>\r\n              <p>This card is archived</p>\r\n            </div>\r\n          )}\r\n\r\n          <div className='card-edit-header card-title-container'>\r\n            <span>\r\n              <CgCreditCard />\r\n            </span>\r\n            <input\r\n              className='title-input'\r\n              type='text'\r\n              value={currCard.title}\r\n              name='title'\r\n              onChange={this.handleInputChange}\r\n              onBlur={() => this.handlePropertyChange()}\r\n            />\r\n          </div>\r\n\r\n          <div className='list-name-container'>\r\n            <p>\r\n              in list <span className='list-name'>{currGroup.title}</span>\r\n            </p>\r\n          </div>\r\n\r\n          <div className='card-edit-main-container flex'>\r\n            <div className='card-edit-main'>\r\n              <LabelsMembers />\r\n\r\n              <CardEditDescription />\r\n\r\n              {currCard.attachments && currCard.attachments.length > 0 && (\r\n                <CardEditAttachment />\r\n              )}\r\n\r\n              {currCard.checklists?.map((checklist) => (\r\n                <div\r\n                  key={checklist.id}\r\n                  className='checklists-container flex column'\r\n                >\r\n                  <ChecklistEdit\r\n                    checklist={checklist}\r\n                    currCard={currCard}\r\n                    handlePropertyChange={this.handlePropertyChange}\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              <CardEditActivities member={this.props.user} />\r\n            </div>\r\n\r\n            <CardEditSidebar goBack={this.goBack} />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    user: state.userModule.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateCard,\r\n  onSetCardId,\r\n}\r\n\r\nexport const CardEdit = connect(mapStateToProps, mapDispatchToProps)(_CardEdit)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { onUpdateBoard, onUpdateCard, onAddCard } from '../../store/board.actions.js';\r\n\r\nimport { IoMdClose } from 'react-icons/io'\r\n// import { GrClose } from 'react-icons/gr';\r\nimport { utilService } from '../../services/util.service';\r\nimport { activityTxtMap } from '../../services/activity.service.js'\r\n\r\n\r\nclass _AddBoardItem extends React.Component {\r\n  state = {\r\n    newItem: {\r\n      title: '',\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.textInput.focus();\r\n  }\r\n\r\n  handleChange = (ev) => {\r\n    const { target } = ev;\r\n    let newItem = this.state.newItem;\r\n    newItem[target.name] = target.value;\r\n    this.setState({ newItem });\r\n  };\r\n\r\n  onKeyUpEnter=(ev)=>{\r\n    if(ev.key==='Enter') this.onAddItem(ev)\r\n  }\r\n  \r\n  onAddItem = (ev) => {\r\n    ev.preventDefault();\r\n    const { newItem } = this.state;\r\n    if(!newItem.title) return\r\n    newItem.id = utilService.makeId();\r\n    if (this.props.type === 'group') {\r\n      if(!newItem.cards) newItem.cards=[]\r\n      \r\n      // ADD ACTIVITY\r\n      const activity = {txt: activityTxtMap.addGroup(newItem.title)}\r\n      \r\n      const action = { type: 'ADD_GROUP', group: newItem };\r\n      this.props.onUpdateBoard(action, this.props.board, activity);\r\n    }\r\n    else if (this.props.type === 'card') {\r\n      const newCard = {...newItem , isComplete: false };\r\n      \r\n      // ADD ACTIVITY\r\n      const activity = {txt: activityTxtMap.addCard(newCard.title), card: newCard, groupId: this.props.groupId}\r\n\r\n      this.props.onAddCard( newCard, this.props.groupId, this.props.board, activity);\r\n    }\r\n    this.setState({newItem: {title: ''}})\r\n  };\r\n\r\n  render() {\r\n    const { title } = this.state.newItem;\r\n    const { onToggleAddPop } = this.props;\r\n    const renderedType = this.props.type === 'card' ? this.props.type : 'list';\r\n    return (\r\n      <section className='add-board-item'>\r\n        <form onSubmit={this.onAddItem} onKeyUp={this.onKeyUpEnter}>\r\n          <textarea\r\n            placeholder={`Enter a title for this ${renderedType}`}\r\n            ref={(input) => {\r\n              this.textInput = input;\r\n            }}\r\n            value={title}\r\n            name='title'\r\n            onChange={this.handleChange}\r\n            onBlur={this.onAddItem}\r\n          />\r\n          <div className='form-btns flex align-center'>\r\n            <button type='submit'>Add {renderedType}</button>\r\n            <button onClick={onToggleAddPop}><IoMdClose className=\"icon\" style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center'  }} /></button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateBoard,\r\n  onUpdateCard,\r\n  onAddCard\r\n};\r\n\r\nexport const AddBoardItem = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_AddBoardItem);\r\n","export function CardHeader({ cardStyle, title }) {\r\n  return (\r\n    <div className='card-preview-header'>\r\n      {cardStyle.bgColor && (\r\n        <div\r\n          className='header-color'\r\n          style={{ backgroundColor: cardStyle.bgColor }}\r\n        >\r\n          {cardStyle.isFull && <div className='card-header-title'> <p>{title}</p></div>}\r\n        </div>\r\n      )}\r\n      {cardStyle.imgUrl && (\r\n        <div\r\n          className='image-wrapper'\r\n        >\r\n          {!cardStyle.isFull && <img src={cardStyle.imgUrl} alt='card-bg' />}\r\n          {cardStyle.isFull && <div className='card-header-title flex column'\r\n            style={{ backgroundImage: `url(\"${cardStyle.imgUrl}\")` }}\r\n          ><p>{title}</p></div>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export function CardLabelBarList({ labelIds, getLabel, isCardLabelListOpen }) {\r\n\r\n    return (\r\n        <ul\r\n        className={`label-bar-list flex clean-list ${\r\n          isCardLabelListOpen ? 'open' : 'close'\r\n        }`}\r\n      >\r\n        {labelIds.map((labelId) => {\r\n          const label = getLabel(labelId);\r\n          return (\r\n            <li\r\n              className='label-bar'\r\n              key={label.id}\r\n              style={{ backgroundColor: label.color }}\r\n            >\r\n              {isCardLabelListOpen && label.title && (\r\n                <span>{label.title}</span>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }","import { BsCheckBox } from 'react-icons/bs';\r\n\r\n\r\nexport function CardChecklists({ checklists }) {\r\n  const getChecklistStr = () => {\r\n    let todosCount = 0;\r\n    let doneTodosCount = 0;\r\n    checklists.forEach((checklist) => {\r\n      checklist.todos.forEach((todo) => {\r\n        todosCount++;\r\n        if (todo.isDone) doneTodosCount++;\r\n      });\r\n    });\r\n    return doneTodosCount + '/' + todosCount;\r\n  };\r\n  return (\r\n    <div className='checklist-box badge flex align-center'>\r\n      <BsCheckBox />\r\n      <span>{getChecklistStr()}</span>\r\n    </div>\r\n  );\r\n}\r\n","import { GrCheckbox } from 'react-icons/gr';\r\nimport { GrCheckboxSelected } from 'react-icons/gr';\r\nimport { FiClock } from 'react-icons/fi';\r\n\r\nexport function CardDueDate({ card, groupId, toggleCardComplete }) {\r\n  const getFormatedTime = (dueDate) => {\r\n    const date = new Date(dueDate);\r\n    const day = date.getDate();\r\n    const month = date.toLocaleString('en', { month: 'short' });\r\n    const formatedTime = month + ' ' + day;\r\n    return formatedTime;\r\n  };\r\n\r\n  const getDueTimeStyle = (card) => {\r\n    //complete\r\n    if (card.isComplete) return { backgroundColor: '#61BD4F' };\r\n    //due soon\r\n    else if (\r\n      card.dueDate - Date.now() > 0 &&\r\n      card.dueDate - Date.now() < 1000 * 60 * 60 * 24\r\n    )\r\n      return { backgroundColor: '#F2D600' };\r\n    //overdue\r\n    else if (card.dueDate - Date.now() < 0)\r\n      return { backgroundColor: '#EB5A46' };\r\n    //none of the above\r\n    return { backgroundColor: 'inherit', color: 'unset' };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='due-date-box badge flex align-center'\r\n      style={getDueTimeStyle(card)}\r\n      onClick={(event) => toggleCardComplete(event, groupId, card)}\r\n    >\r\n      <span className='clock-icon  flex align-center'>\r\n        <FiClock />\r\n      </span>\r\n      <span className='check-icon'>\r\n        {card.isComplete ? (\r\n          <GrCheckboxSelected color={'inherit'} />\r\n        ) : (\r\n          <GrCheckbox />\r\n        )}\r\n      </span>\r\n      <span>{getFormatedTime(card.dueDate)}</span>\r\n    </div>\r\n  );\r\n}\r\n","import { GrTextAlignFull } from 'react-icons/gr';\r\nimport { ImAttachment } from 'react-icons/im';\r\nimport { FaRegComment } from 'react-icons/fa';\r\nimport { MemberAvatar } from '../../cmps/shared/member-avatar.jsx';\r\nimport { CardChecklists } from './card-checklists';\r\nimport { CardDueDate } from '../card-preview/card-duedate.jsx';\r\n\r\nexport function CardFooter({ card, groupId, toggleCardComplete }) {\r\n  return (\r\n    <div className='card-preview-footer flex align-center'>\r\n      {card.dueDate && (\r\n        <CardDueDate\r\n          card={card}\r\n          groupId={groupId}\r\n          toggleCardComplete={toggleCardComplete}\r\n        />\r\n      )}\r\n\r\n      {card.description && (\r\n        <GrTextAlignFull title={'This card has a description'} />\r\n      )}\r\n\r\n      {card.comments && card.comments.length>0 && (\r\n        <div className='comments-box badge flex align-center'>\r\n          <span className='flex align-center'>\r\n            <FaRegComment />\r\n          </span>\r\n          <span>{card.comments.length}</span>\r\n        </div>\r\n      )}\r\n\r\n      {card.attachments && card.attachments.length > 0 && (\r\n        <div className='attachment-box badge flex align-center'>\r\n          <span className='flex align-center'>\r\n            <ImAttachment />\r\n          </span>\r\n          <span>{card.attachments.length}</span>\r\n        </div>\r\n      )}\r\n\r\n      {card.checklists && <CardChecklists checklists={card.checklists} />}\r\n\r\n      {card.isArchive && <span>Archived</span>}\r\n\r\n      {card.members && (\r\n        <div className='card-members-list badge flex'>\r\n          {card.members.map((member, index) => (\r\n            <MemberAvatar member={member} size={'md'} key={index} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { CardHeader } from '../card-preview/card-header.jsx';\r\nimport { CardLabelBarList } from '../card-preview/card-label-bar-list.jsx';\r\nimport { CardFooter } from '../card-preview/card-footer.jsx';\r\nimport { HiOutlinePencil } from 'react-icons/hi';\r\n\r\nexport function CardPreviewContent({\r\n  card,\r\n  groupId,\r\n  onToggleQuickCardEditor,\r\n  openCardEdit,\r\n  toggleCardComplete,\r\n  getLabel,\r\n  toggleCardLabelList,\r\n  isCardLabelListOpen,\r\n}) {\r\n  return (\r\n    <div\r\n      className='card-preview flex space-between'\r\n      // onClick={() => openCardEdit(groupId, card.id)}\r\n    >\r\n      {!card.isArchive && (\r\n        <button\r\n          className='hover-edit-btn'\r\n          onClick={(event) => onToggleQuickCardEditor(event, card, groupId)}\r\n        >\r\n          <HiOutlinePencil />\r\n        </button>\r\n      )}\r\n\r\n      {card.style && <CardHeader cardStyle={card.style} title={card.title} />}\r\n\r\n      {(!card.style || !card.style.isFull) && (\r\n        <div className='card-details'>\r\n          {card.labelIds && (\r\n            <div onClick={toggleCardLabelList}>\r\n              <CardLabelBarList\r\n                labelIds={card.labelIds}\r\n                getLabel={getLabel}\r\n                isCardLabelListOpen={isCardLabelListOpen}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <p>{card.title}</p>\r\n\r\n          <CardFooter\r\n            card={card}\r\n            groupId={groupId}\r\n            toggleCardComplete={toggleCardComplete}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from 'react-redux';\r\n\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\n// import { HiOutlinePencil } from 'react-icons/hi';\r\n// import { CardHeader } from '../card-preview/card-header.jsx';\r\n// import { CardLabelBarList } from '../card-preview/card-label-bar-list.jsx';\r\n// import { CardFooter } from '../card-preview/card-footer.jsx';\r\n\r\nimport {CardPreviewContent} from './card-preview-content.jsx'\r\n\r\nfunction _CardPreview({\r\n  card,\r\n  groupId,\r\n  openCardEdit,\r\n  isCardLabelListOpen,\r\n  toggleCardLabelList,\r\n  toggleCardComplete,\r\n  onToggleQuickCardEditor,\r\n  index,\r\n  getLabel,\r\n}) {\r\n  return (\r\n    <div\r\n      className='card-wrapper'\r\n      onClick={() => openCardEdit(groupId, card.id)}\r\n\r\n      // style={{ display: card.isArchive ? 'none' : 'unset' }}\r\n    >\r\n      <Draggable draggableId={card.id} index={index}>\r\n        {(provided) => {\r\n          return (\r\n            <li\r\n              ref={provided.innerRef}\r\n              {...provided.dragHandleProps}\r\n              {...provided.draggableProps}\r\n            >\r\n              <CardPreviewContent \r\n                card={card}\r\n                groupId={groupId}\r\n                openCardEdit={openCardEdit}\r\n                isCardLabelListOpen={isCardLabelListOpen}\r\n                toggleCardLabelList={toggleCardLabelList}\r\n                toggleCardComplete={toggleCardComplete}\r\n                onToggleQuickCardEditor={onToggleQuickCardEditor}\r\n                getLabel={getLabel}\r\n              />\r\n              {/* <div\r\n                className='card-preview flex space-between'\r\n                onClick={() => openCardEdit(groupId, card.id)}\r\n              >\r\n                {!card.isArchive && (\r\n                  <button\r\n                    className='hover-edit-btn'\r\n                    onClick={(event) =>\r\n                      onToggleQuickCardEditor(event, card, groupId)\r\n                    }\r\n                  >\r\n                    <HiOutlinePencil />\r\n                  </button>\r\n                )}\r\n\r\n                {card.style && <CardHeader cardStyle={card.style} />}\r\n\r\n                <div className='card-details'>\r\n                  {card.labelIds && (\r\n                    <div onClick={toggleCardLabelList}>\r\n                      <CardLabelBarList\r\n                        labelIds={card.labelIds}\r\n                        getLabel={getLabel}\r\n                        isCardLabelListOpen={isCardLabelListOpen}\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  <p>{card.title}</p>\r\n\r\n                  <CardFooter\r\n                    card={card}\r\n                    groupId={groupId}\r\n                    toggleCardComplete={toggleCardComplete}\r\n                  />\r\n                </div>\r\n              </div> */}\r\n            </li>\r\n          );\r\n        }}\r\n      </Draggable>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nexport const CardPreview = connect(mapStateToProps)(_CardPreview);\r\n","export function GroupActions({groupId , onToggleAddPop, toggleGroupArchive}) {\r\n  return (\r\n    <div className='group-actions flex column'>\r\n      <button onClick={onToggleAddPop}>Add card...</button>\r\n      <button onClick={()=>toggleGroupArchive(groupId)}>Archive this list...</button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { BsThreeDots } from 'react-icons/bs';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport { CardPreview } from './card-preview.jsx';\r\n\r\nimport { GroupActions } from '../shared/popover-children/group-actions.jsx';\r\nimport { AddBoardItem } from '../shared/add-board-item.jsx';\r\nimport { DynamicPopover } from '../shared/dynamic-popover.jsx';\r\nimport { activityTxtMap } from '../../services/activity.service.js';\r\n\r\nexport class GroupPreview extends Component {\r\n  state = {\r\n    isAddPopOpen: false,\r\n    groupTitle: '',\r\n    isPopoverOpen: false,\r\n  };\r\n\r\n  groupEditRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      ...this.state,\r\n      groupTitle: this.props.group.title,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.group !== this.props.group) {\r\n      this.setState({\r\n        ...this.state,\r\n        groupTitle: this.props.group.title,\r\n      });\r\n    }\r\n  }\r\n\r\n  onToggleAddPop = () => {\r\n    this.setState({ isAddPopOpen: !this.state.isAddPopOpen });\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  onChangeGroupTitle = () => {\r\n    const group = this.props.group;\r\n    group.title = this.state.groupTitle;\r\n    const action = { type: 'UPDATE_GROUP', group };\r\n    const activity = {txt: activityTxtMap.changeGroupTitle(group.title)}\r\n    this.props.updateBoard(action, activity);\r\n  };\r\n\r\n  blurFocus = (event) => {\r\n    event.target.blur()\r\n  };\r\n\r\n  setFocus = (event) => {\r\n    event.target.focus();\r\n  };\r\n\r\n  handleFocus = (event) => {\r\n    event.target.select();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      group,\r\n      openCardEdit,\r\n      toggleCardLabelList,\r\n      isCardLabelListOpen,\r\n      index,\r\n      toggleCardComplete,\r\n      toggleGroupArchive,\r\n      onToggleQuickCardEditor,\r\n      getLabel\r\n    } = this.props;\r\n    const { isAddPopOpen, groupTitle, isPopoverOpen } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={'group-wrapper'}\r\n        style={{ display: group.isArchive ? 'none' : 'unset' }}\r\n      >\r\n        <Draggable draggableId={group.id} index={index}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              className='group-preview flex column'\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              <div className='group-header flex space-between align-center'>\r\n                <input\r\n                  className='clean-input'\r\n                  type='text'\r\n                  value={groupTitle}\r\n                  name='groupTitle'\r\n                  onMouseDown={this.blurFocus}\r\n                  onMouseUp={this.setFocus}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.onChangeGroupTitle}\r\n                />\r\n\r\n                <div\r\n                  className='pos-relative'\r\n                  ref={this.groupEditRef}\r\n                  onClick={() =>\r\n                    this.setState({ isPopoverOpen: !isPopoverOpen })\r\n                  }\r\n                >\r\n                  <button>\r\n                    <BsThreeDots />\r\n                  </button>\r\n                  {isPopoverOpen && (\r\n                    <DynamicPopover\r\n                      onClose={() => this.setState({ isPopoverOpen: false })}\r\n                      ref={this.groupEditRef}\r\n                      title='List actions'\r\n                    >\r\n                      <GroupActions\r\n                        groupId={group.id}\r\n                        onToggleAddPop={this.onToggleAddPop}\r\n                        toggleGroupArchive={toggleGroupArchive}\r\n                      />\r\n                    </DynamicPopover>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <Droppable droppableId={group.id}>\r\n                {(provided) => (\r\n                  <ul\r\n                    className='card-list clean-list'\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {group.cards &&\r\n                      group.cards.map((card, index) => {\r\n                        return (\r\n                          <CardPreview\r\n                            key={card.id}\r\n                            card={card}\r\n                            index={index}\r\n                            groupId={group.id}\r\n                            openCardEdit={openCardEdit}\r\n                            toggleCardLabelList={toggleCardLabelList}\r\n                            isCardLabelListOpen={isCardLabelListOpen}\r\n                            toggleCardComplete={toggleCardComplete}\r\n                            onToggleQuickCardEditor={onToggleQuickCardEditor}\r\n                            getLabel={getLabel}\r\n                          />\r\n                        );\r\n                      })}\r\n                    {provided.placeholder}\r\n                    {isAddPopOpen && (\r\n                      <AddBoardItem\r\n                        onToggleAddPop={this.onToggleAddPop}\r\n                        type={'card'}\r\n                        groupId={group.id}\r\n                      />\r\n                    )}\r\n                  </ul>\r\n                )}\r\n              </Droppable>\r\n\r\n                {!isAddPopOpen && (\r\n              <div className='group-footer flex space-between align-center'>\r\n                  <button\r\n                    className='add-boarditem-btn flex align-center'\r\n                    onClick={this.onToggleAddPop}\r\n                  >\r\n                    <i className='flex align-center'>\r\n                      <AiOutlinePlus />\r\n                    </i>\r\n                    <span>Add a card</span>\r\n                  </button>\r\n              </div>\r\n                )}\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// import React, { Component } from 'react';\r\n\r\nimport { GroupPreview } from './group-preview.jsx';\r\n\r\nexport function GroupList({\r\n  groups,\r\n  openCardEdit,\r\n  updateBoard,\r\n  toggleCardLabelList,\r\n  isCardLabelListOpen,\r\n  toggleCardComplete,\r\n  toggleGroupArchive,\r\n  onToggleQuickCardEditor,\r\n  getLabel\r\n}) {\r\n  return (\r\n    <ul className='group-list clean-list flex'>\r\n      {groups.map((group, index) => {\r\n        return (\r\n          <GroupPreview\r\n            key={group.id}\r\n            index={index}\r\n            group={group}\r\n            openCardEdit={openCardEdit}\r\n            updateBoard={updateBoard}\r\n            toggleCardLabelList={toggleCardLabelList}\r\n            isCardLabelListOpen={isCardLabelListOpen}\r\n            toggleCardComplete={toggleCardComplete}\r\n            toggleGroupArchive={toggleGroupArchive}\r\n            onToggleQuickCardEditor={onToggleQuickCardEditor}\r\n            getLabel={getLabel}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { MemberAvatar } from '../shared/member-avatar';\r\nimport { onUpdateBoard } from '../../store/board.actions'\r\nimport { IoCheckmarkSharp } from 'react-icons/io5'\r\nimport { activityTxtMap } from '../../services/activity.service';\r\n\r\nclass _InviteMembers extends React.Component {\r\n\r\n    state = {\r\n        search: ''\r\n    }\r\n\r\n    getMembersIds = () => {\r\n        const { board } = this.props\r\n        const boardMembersIds = board.members.map(member => member._id)\r\n        return boardMembersIds\r\n    }\r\n\r\n    inviteToBoard = (user) => {\r\n        const { board, onUpdateBoard } = this.props\r\n        // const members = board.members\r\n        // members.push({_id: user._id, fullname: user.fullname, imgUrl: user.imgUrl})\r\n        const memberIds = this.getMembersIds()\r\n        const memberToAdd = { _id: user._id, fullname: user.fullname, imgUrl: user.imgUrl }\r\n        if (memberIds.includes(memberToAdd._id)) {\r\n            const activity = { txt: activityTxtMap.removeMember(user.fullname) }\r\n            onUpdateBoard({ type: 'REMOVE_BOARD_MEMBER', memberId: user._id }, board, activity)\r\n            return\r\n        }\r\n        const activity = { txt: activityTxtMap.inviteMember(user.fullname) }\r\n        onUpdateBoard({ type: 'ADD_BOARD_MEMBER', member: memberToAdd }, board, activity)\r\n        console.log(board.members)\r\n    }\r\n\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ ...this.state, [field]: value });\r\n    }\r\n\r\n    render() {\r\n        const { search } = this.state\r\n        const { users } = this.props\r\n        const memberIds = this.getMembersIds()\r\n\r\n        return (\r\n            <div className=\"invite-members\">\r\n                <input className=\"search-input\" type=\"text\" onChange={this.handleChange} name=\"search\" value={search} autoFocus placeholder=\"Search...\" />\r\n                <ul className=\"member-list clean-list\">\r\n                    {users.filter(user => user.fullname.includes(search)).map(user =>\r\n                        <li className=\"user-preview\" key={user._id} onClick={() => this.inviteToBoard(user)} >\r\n                            <div className=\"user-details\">\r\n                                <MemberAvatar member={user} />\r\n                                <span className=\"user-name\">{user.fullname}</span>\r\n                            </div>\r\n                            <span>{(memberIds.includes(user._id)) ? <IoCheckmarkSharp /> : ''}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users,\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const InviteMembers = connect(mapStateToProps, mapDispatchToProps)(_InviteMembers);\r\n","import Axios from 'axios'\r\n\r\nconst API_KEY = 'oiLzSdl8Lr6uhiMLT_uQKAS-PZVzO4dkEVjoRPHeYOU'\r\n\r\nexport const unsplashService = {\r\n    search,\r\n    getPreviewImgs\r\n}\r\n\r\nasync function query(keyword) {\r\n    const res = await Axios.get(`https://api.unsplash.com/search/photos?query=${keyword}&orientation=landscape&client_id=${API_KEY}`)\r\n    return res.data\r\n}\r\n\r\nasync function search(keyword) {\r\n    const {results} = await query(keyword)\r\n    return Promise.resolve(\r\n        results.map(pic => {\r\n            return {id: pic.id, preview: pic.urls.small, full: pic.urls.full}\r\n        })\r\n    )\r\n}\r\n\r\nasync function getPreviewImgs(keyword) {\r\n    const {results} = await query(keyword)\r\n    return Promise.resolve(\r\n        results.map(pic => {\r\n            return { id: pic.id, preview: pic.urls.small, full: pic.urls.full }\r\n        })\r\n    )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { activityTxtMap } from '../../services/activity.service';\r\nimport { unsplashService } from '../../services/unsplash.service';\r\n\r\nimport { onUpdateBoard } from '../../store/board.actions'\r\n\r\nclass _ChangeBG extends React.Component {\r\n    state = {\r\n        keyword: '',\r\n        pics: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getPics()\r\n    }\r\n\r\n    getPics = async () => {\r\n        try {\r\n            const pics = await unsplashService.getPreviewImgs('hills')\r\n            this.setState({ pics })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    onSearch = async () => {\r\n        try {\r\n            const pics = await unsplashService.search(this.state.keyword)\r\n            this.setState({ pics })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    setBoardBG = (backGround) => {\r\n        const { board, onUpdateBoard } = this.props\r\n        const style = (backGround[0] === '#') ? { bgColor: backGround } : { imgUrl: backGround }\r\n        // const style = (backGround[0] === '#') ? { bgColor: backGround } : { imgUrl: backGround }\r\n        const activity = { txt: activityTxtMap.changeBackground() }\r\n        onUpdateBoard({ type: \"CHANGE_BOARD_STYLE\", style }, board, activity)\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const { value } = target\r\n        this.setState({ keyword: value }, () => {\r\n            if (value.length >= 3) this.onSearch()\r\n            else if (value.length === 0) this.getPics()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const colors = ['#82E0AA', '#F1948A', '#AAB7B8 ', '#C39BD3', '#85C1E9', '#F8C471']\r\n\r\n        const { keyword, pics } = this.state\r\n        return (\r\n            <div className=\"change-bg\">\r\n                <input type=\"text\" className=\"search-input\" value={keyword} onChange={this.handleChange} placeholder=\"Search images\" />\r\n                <div className=\"images\">\r\n                    {pics.map(pic =>\r\n                        <div key={pic.id} className=\"img-container\" onClick={() => this.setBoardBG(pic.full)}>\r\n                            <img src={pic.preview} alt={pic.id} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <hr />\r\n                <div className=\"colors\">\r\n                    {colors.map((color, idx) =>\r\n                        <div style={{ backgroundColor: `${color}` }} key={idx} className=\"color-container\" onClick={() => this.setBoardBG(color)}></div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    };\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard,\r\n};\r\n\r\nexport const ChangeBG = connect(mapStateToProps, mapDispatchToProps)(_ChangeBG);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass _BoardIcon extends React.Component {\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        return (\r\n            <div className=\"icon\" style={(board.style.bgColor) ? { backgroundColor: board.style.bgColor } : {}} >\r\n                {board.style.imgUrl && <img src={board.style.imgUrl} alt=\"\" />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nexport const BoardIcon = connect(mapStateToProps)(_BoardIcon);","import React from \"react\";\r\nimport { IoCheckmarkSharp } from \"react-icons/io5\";\r\nimport { connect } from \"react-redux\";\r\nimport { MemberAvatar } from \"../shared/member-avatar\";\r\n\r\nimport { onUpdateFilter, loadBoard } from \"../../store/board.actions\"\r\nimport { withRouter } from \"react-router\";\r\nimport { utilService } from \"../../services/util.service\";\r\n\r\nclass _SearchCards extends React.Component {\r\n    state = {\r\n        filterBy: {\r\n            txt: '',\r\n            members: [],\r\n            labels: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { location, filterBy } = this.props\r\n        const { search } = location\r\n        const params = new URLSearchParams(search)\r\n        const searchHasFilter = Object.keys(filterBy).some(filterKey => params.get(filterKey))\r\n        if (search && searchHasFilter) {\r\n            const txt = params.get('txt') || ''\r\n            const members = params.get('members')?.split(',') || []\r\n            const labels = params.get('labels')?.split(',') || []\r\n            this.props.onUpdateFilter({ txt, members, labels })\r\n            this.updateUrlSearchParams(this.props.filterBy)\r\n\r\n        } else {\r\n            this.props.onUpdateFilter({ txt: '', members: [], labels: [] })\r\n            this.updateUrlSearchParams(this.props.filterBy)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate({ filterBy: prevFilterBy }) {\r\n        const { filterBy: currFilterBy } = this.props\r\n        if (prevFilterBy !== currFilterBy) {\r\n            this.updateUrlSearchParams(currFilterBy)\r\n            this.getFilteredBoard.bind(this)()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onUpdateFilter({ txt: '', members: [], labels: [] })\r\n        this.updateUrlSearchParams(this.props.filterBy)\r\n        this.getFilteredBoard.bind(this)()\r\n    }\r\n\r\n    updateUrlSearchParams = (filterBy) => {\r\n        const { history, location } = this.props\r\n        const urlSearchFilterBy = { ...filterBy }\r\n        for (const key in urlSearchFilterBy) {\r\n            const currVal = urlSearchFilterBy[key]\r\n            if (!currVal || (Array.isArray(currVal) && !currVal.length)) delete urlSearchFilterBy[key]\r\n        }\r\n        const search = new URLSearchParams(urlSearchFilterBy)\r\n        history.replace(`${location.pathname}?${search.toString()}`)\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        const filterBy = { ...this.props.filterBy, [field]: value }\r\n        this.props.onUpdateFilter(filterBy)\r\n    }\r\n\r\n    getFilteredBoard = utilService.debounce(() => {\r\n        const newFilterBy = { ...this.props.filterBy }\r\n        for (const key in newFilterBy) {\r\n            const currVal = newFilterBy[key]\r\n            if (!currVal || (Array.isArray(currVal) && !currVal.length)) delete newFilterBy[key]\r\n        }\r\n        this.props.loadBoard(this.props.match.params.boardId, newFilterBy)\r\n    }, 100)\r\n\r\n    handleUserClick = (user) => {\r\n        if (this.props.filterBy.members.includes(user._id)) {\r\n            const clickedIdx = this.props.filterBy.members.findIndex(member => member === user._id)\r\n            this.props.filterBy.members.splice(clickedIdx, 1)\r\n            const filterBy = { ...this.props.filterBy, members: [...this.props.filterBy.members] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        } else {\r\n            const filterBy = { ...this.props.filterBy, members: [...this.props.filterBy.members, user._id] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        }\r\n    }\r\n\r\n    handleLabelClick = (label) => {\r\n        if (this.props.filterBy.labels.includes(label.id)) {\r\n            const clickedIdx = this.props.filterBy.labels.findIndex(label => label === label)\r\n            this.props.filterBy.labels.splice(clickedIdx, 1)\r\n            const filterBy = { ...this.props.filterBy, labels: [...this.props.filterBy.labels] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        } else {\r\n            const filterBy = { ...this.props.filterBy, labels: [...this.props.filterBy.labels, label.id] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        }\r\n    }\r\n    render() {\r\n        const { board } = this.props\r\n        const { filterBy } = this.props\r\n        return (\r\n            <div className=\"search-cards\">\r\n                <input className=\"search-input\" type=\"text\" onChange={this.handleChange} name=\"txt\" value={filterBy.txt} autoFocus placeholder=\"Search...\" />\r\n                <p className=\"search-desc\">Search by term, label, member, or due time</p>\r\n\r\n                <hr />\r\n\r\n                <ul className=\"label-list clean-list\">\r\n                    {board.labels.map(label =>\r\n                        <li className=\"label-preview\" key={label.id} onClick={() => this.handleLabelClick(label)}>\r\n                            <div className=\"label-details\">\r\n                                <div className=\"label-color\" style={{ backgroundColor: label.color }} ></div>\r\n                                <p>{label.title}</p>\r\n                            </div>\r\n                            <span>{(filterBy.labels.includes(label.id)) ? <IoCheckmarkSharp /> : ''}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n                <hr />\r\n                <ul className=\"member-list clean-list\">\r\n                    {board.members.map(member =>\r\n                        <li className=\"user-preview\" key={member._id} onClick={() => this.handleUserClick(member)} >\r\n                            <div className=\"user-details\">\r\n                                <MemberAvatar member={member} />\r\n                                <span className=\"user-name\">{member.fullname}</span>\r\n                            </div>\r\n                            <span>{(filterBy.members.includes(member._id)) ? <IoCheckmarkSharp /> : ''}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        filterBy: state.boardModule.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateFilter,\r\n    loadBoard\r\n}\r\n\r\nexport const SearchCards = connect(mapStateToProps, mapDispatchToProps)(withRouter(_SearchCards));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadArchivedCards, onUpdateCard, onRemoveCard, onUnArchiveCard } from '../../store/board.actions.js';\r\nimport { Loader } from '../shared/loader.jsx';\r\nimport { CardPreviewContent } from '../board/card-preview-content.jsx';\r\n\r\nclass _Archive extends React.Component {\r\n  state = {\r\n    archivedCards: null,\r\n  };\r\n  componentDidMount() {\r\n    this.loadArchivedCards();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.board.archivedCards !== this.props.board.archivedCards) {\r\n      this.loadArchivedCards();\r\n    }\r\n  }\r\n  loadArchivedCards =  () => {\r\n    const {board} =this.props\r\n    const archivedCards = board.archivedCards ? board.archivedCards : [];\r\n    this.setState({ archivedCards });\r\n  };\r\n  // loadArchivedCards = async () => {\r\n  //   const boardId = this.props.board._id;\r\n  //   const archivedCards = await this.props.loadArchivedCards(boardId);\r\n  //   this.setState({ archivedCards });\r\n  // };\r\n  onUnarchiveCard = (card) => {\r\n    this.props.onUnArchiveCard(card, this.props.board);\r\n  };\r\n  onDeleteCard=(card)=>{\r\n    this.props.onRemoveCard(card, this.props.board)\r\n  }\r\n  render() {\r\n    const { archivedCards } = this.state;\r\n    const {\r\n      isCardLabelListOpen,\r\n      toggleCardLabelList,\r\n      getLabel,\r\n      toggleCardComplete,\r\n      openCardEdit,\r\n    } = this.props;\r\n    console.log('archivedCards in archive page', archivedCards)\r\n    return (\r\n      <div className='archive'>\r\n        {!archivedCards && <Loader />}\r\n        {archivedCards && archivedCards.length === 0 && (\r\n          <div>No archived cards...</div>\r\n        )}\r\n        {archivedCards && archivedCards.length > 0 && (\r\n          <ul className='archived-cards-list clean-list flex column align-center'>\r\n            {archivedCards.map((card, index) => {\r\n              return (\r\n                <li key={card.id}>\r\n                  <CardPreviewContent\r\n                    card={card}\r\n                    groupId={card.groupId}\r\n                    toggleCardLabelList={toggleCardLabelList}\r\n                    isCardLabelListOpen={isCardLabelListOpen}\r\n                    getLabel={getLabel}\r\n                    toggleCardComplete={toggleCardComplete}\r\n                    openCardEdit={openCardEdit}\r\n                  />\r\n                  <div className='archived-btns'>\r\n                    <button onClick={() => this.onUnarchiveCard(card)}>\r\n                      Send to board\r\n                    </button>\r\n                    <button onClick={()=>this.onDeleteCard(card)}>Delete</button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  loadArchivedCards,\r\n  onUpdateCard,\r\n  onRemoveCard,\r\n  onUnArchiveCard\r\n};\r\nexport const Archive = connect(mapStateToProps, mapDispatchToProps)(_Archive);\r\n","import React from 'react';\r\nimport { GrList } from 'react-icons/gr';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { MemberAvatar } from '../shared/member-avatar';\r\nimport Moment from 'react-moment'\r\n\r\nclass _ActivityList extends React.Component {\r\n\r\n    \r\n\r\n    getGroupTitle = (groupId) => {\r\n        const group = this.props.board.groups.find(group => group.id === groupId)\r\n        return group.title\r\n    }\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        if (board.activities.length === 0) return (<div className=\"activity\">\r\n            <div className=\"activity-header\">\r\n                <GrList />\r\n                <p>Activity</p>\r\n            </div>\r\n            <p>No Activities in this board yet</p>\r\n        </div>)\r\n        return (\r\n            <div className=\"activity\">\r\n                <div className=\"activity-header\">\r\n                    <GrList />\r\n                    <p>Activity</p>\r\n                </div>\r\n                <ul className=\"activity-list clean-list\" >\r\n                    {\r\n                        board.activities.map((activity, idx) =>\r\n                            <li key={`${activity.createdAt}${idx}`} className=\"activity-preview\">\r\n                                <span className=\"member-avatar\"><MemberAvatar member={activity.byMember} /></span>\r\n                                <div className=\"activity-text\">\r\n                                    <span className=\"user-fullname\">{activity.byMember.fullname} </span>\r\n                                    <p>{activity.txt}</p>\r\n                                    {activity.groupId && <Link to={`/board/${board._id}/${activity.groupId}/${activity.card.id}`}> {activity.card.title}</Link>}\r\n                                    {activity.groupId && <p>in list: {this.getGroupTitle(activity.groupId)}</p>}\r\n                                    <Moment className=\"publish-time\" fromNow>{activity.createdAt}</Moment>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const ActivityList = connect(mapStateToProps, mapDispatchToProps)(_ActivityList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { onRemoveBoard } from '../../store/board.actions'\r\n\r\nclass _RemoveBoard extends React.Component {\r\n\r\n    removeBoard = async () => {\r\n        const { board, onRemoveBoard } = this.props\r\n        await onRemoveBoard(board._id)\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    checkIfAllowed = () => {\r\n        const { board, user } = this.props\r\n        return (user.isAdmin || board.createdBy._id === user._id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"remove-board flex column\">\r\n                {this.checkIfAllowed() && <>\r\n                    <p>Remove this board from workspace?</p>\r\n                    <p>This action is IRREVERSIBLE</p>\r\n                    <button className=\"remove-btn nav-button\" onClick={() => this.removeBoard()}>Remove</button>\r\n                </>}\r\n                {!this.checkIfAllowed() && <p>You Are not allowed to perform this action</p>}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        user: state.userModule.user\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onRemoveBoard\r\n};\r\n\r\nexport const RemoveBoard = connect(mapStateToProps, mapDispatchToProps)(withRouter(_RemoveBoard));","import React from 'react';\r\nimport { IoIosArrowBack, IoMdClose } from 'react-icons/io';\r\nimport { BiSearch } from 'react-icons/bi';\r\nimport { connect } from 'react-redux';\r\nimport { ChangeBG } from './change-bg';\r\nimport { BsArchiveFill } from 'react-icons/bs';\r\nimport { BoardIcon } from './board-icon';\r\nimport { SearchCards } from './search-cards';\r\nimport { Archive } from './archive';\r\nimport { ActivityList } from './activity-list';\r\nimport { withRouter } from 'react-router'\r\nimport { RemoveBoard } from './remove-board';\r\nimport { HiOutlineTrash } from 'react-icons/hi';\r\n\r\n\r\nclass _SideMenu extends React.Component {\r\n    state = {\r\n        currViewIdx: -1\r\n    }\r\n\r\n    _cmpsToRender = [{ id: 'c101', title: 'Change Background', icon: <BoardIcon />, component: ChangeBG },\r\n    { id: 'c102', title: 'Search Cards', icon: <BiSearch />, component: SearchCards },\r\n    { id: 'c103', title: 'Archive', icon: <BsArchiveFill />, component: Archive },\r\n    { id: 'c104', title: 'Remove Board', icon: <HiOutlineTrash />, component: RemoveBoard }]\r\n    // { id: 'c103', title: 'Archive - Under Construction 🚧', icon: <BsArchiveFill />, component: Archive }]\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.search) this.setState((prevState) => ({ ...prevState, currViewIdx: 1 }))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState((prevState) => ({ ...prevState, currViewIdx: -1 }))\r\n    }\r\n\r\n    onSelectView = (viewId) => {\r\n        this.setState((prevState) => ({ ...prevState, currViewIdx: viewId }))\r\n    }\r\n\r\n    getViewById = () => {\r\n        const { currViewIdx } = this.state\r\n        const currView = this._cmpsToRender[currViewIdx]\r\n        console.log('selected view: ', currView)\r\n        return currView.component\r\n    }\r\n\r\n    onBack = () => {\r\n        this.setState((prevState) => ({ ...prevState, currViewIdx: -1 }))\r\n    }\r\n\r\n    /* priavte cmps */\r\n    _CurrView = () => {\r\n        const props= this.props\r\n        const { component: Component } = this._cmpsToRender[this.state.currViewIdx]\r\n        return <Component {...props} />\r\n    }\r\n\r\n    _DefaultView = () => {\r\n        return <div>\r\n            <ul className=\"default-menu clean-list\">\r\n                {this._cmpsToRender.map((cmp, idx) =>\r\n                    <li onClick={() => this.onSelectView(idx)} key={cmp.id}>\r\n                        <div className=\"icon\">{cmp.icon}</div>\r\n                        <p>{cmp.title}</p>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            <hr />\r\n            <ActivityList />\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        const { onClose } = this.props\r\n        const { currViewIdx } = this.state\r\n        return (\r\n            <div className={`side-menu ${(this.props.isMenuOpen) ? 'menu-open' : ''}`}>\r\n                <div className=\"title\">\r\n                    <span className={`back-btn ${(currViewIdx !== -1) ? 'show-btn' : ''} `} onClick={() => this.onBack()}><IoIosArrowBack /></span>\r\n                    <p className=\"menu-title\" >{currViewIdx === -1 ? 'Menu' : this._cmpsToRender[currViewIdx].title}</p>\r\n                    <span className=\"close-btn\" onClick={onClose}><IoMdClose /></span>\r\n                </div>\r\n                <hr />\r\n                <div className=\"rendered-cmp\">\r\n                    {currViewIdx === -1 ? <this._DefaultView /> : <this._CurrView />}\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const SideMenu = connect(mapStateToProps, mapDispatchToProps)(withRouter(_SideMenu));","import React, { useEffect } from 'react'\r\nimport { MemberAvatar } from '../../shared/member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateBoard } from '../../../store/board.actions'\r\nimport { IoCheckmarkSharp } from 'react-icons/io5'\r\n\r\n\r\nconst _BoardEditMembers = ({ members, board, onUpdateBoard, onClose }) => {\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            onClose()\r\n        }\r\n    },[onClose])\r\n\r\n    const removeFromBoard = (memberId) => {\r\n        // const activity = {txt: activityTxtMap.inviteMember(user.fullname)}\r\n        onUpdateBoard({ type: 'REMOVE_BOARD_MEMBER', memberId: memberId }, board)\r\n    }\r\n\r\n    return (\r\n        <div className=\"member-list\" style={{ color: '#172b4d' }}>\r\n            {members.map(member => (\r\n                <div key={member._id} className=\"popper-member-preview flex\" onClick={() => removeFromBoard(member._id)}>\r\n                    <div className='list-item-layover'></div>\r\n                    <div style={{ width: 32 }}>\r\n                        <MemberAvatar member={member} />\r\n                    </div>\r\n                    <div className='popper-member-name'>\r\n                        <p>{member.fullname}</p>\r\n                    </div>\r\n                    <div className='popper-member-check'><IoCheckmarkSharp /></div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users,\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const BoardEditMembers = connect(mapStateToProps, mapDispatchToProps)(_BoardEditMembers);\r\n ","import React from 'react'\r\nimport { AiOutlineStar } from 'react-icons/ai'\r\nimport { RiBarChartFill } from 'react-icons/ri'\r\nimport { HiDotsHorizontal } from 'react-icons/hi'\r\nimport { FaUserAlt } from 'react-icons/fa'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\n\r\nimport { onUpdateBoard } from '../../store/board.actions.js'\r\nimport { loadUsers } from '../../store/user.actions.js'\r\nimport { MemberAvatar } from '../shared/member-avatar.jsx'\r\nimport { InviteMembers } from './invite-members.jsx'\r\nimport { DynamicPopover } from '../shared/dynamic-popover.jsx'\r\nimport { SideMenu } from '../side-menu/side-menu.jsx'\r\nimport { BoardEditMembers } from '../shared/popover-children/board-edit-members'\r\nimport { withRouter } from 'react-router'\r\n\r\nclass _BoardHeader extends React.Component {\r\n\r\n    state = {\r\n        isInviteOpen: false,\r\n        boardTitle: this.props.board.title,\r\n        isMenuOpen: false,\r\n        numOfShownMembers: 5,\r\n        isExtraMembersOpen: false,\r\n        isTotalMembersOpen: false\r\n    }\r\n\r\n    inviteRef = React.createRef()\r\n    membersRef = React.createRef()\r\n    totalMembersRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.handleResize)\r\n        this.handleResize()\r\n        this.props.loadUsers()\r\n        if (this.props.location.search) this.setState({ isMenuOpen: true })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize)\r\n    }\r\n\r\n    handleResize = () => {\r\n        const { numOfShownMembers } = this.state\r\n        if (window.innerWidth < 800) {\r\n            if (numOfShownMembers === 3) return\r\n            this.setState({ numOfShownMembers: 3 })\r\n        } else {\r\n            if (numOfShownMembers === 5) return\r\n            this.setState({ numOfShownMembers: 5 })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.board.title !== this.props.board.title) {\r\n            this.setState({ boardTitle: this.props.board.title })\r\n        }\r\n    }\r\n\r\n    toggleStarredBoard = () => {\r\n        const { board, onUpdateBoard } = this.props\r\n        board.isStarred = !board.isStarred\r\n        onUpdateBoard({ type: 'TOGGLE_STARRED', isStarred: board.isStarred }, board)\r\n    }\r\n\r\n    handleFocus = (event) => event.target.select();\r\n\r\n    handleChange = ({ target: { name, value } }) => {\r\n        this.setState((prevState) => ({ ...prevState, [name]: value }));\r\n    }\r\n\r\n    onChangeBoardTitle = () => {\r\n        const { board, onUpdateBoard } = this.props\r\n        board.title = this.state.boardTitle\r\n        const activity = { txt: activityTxtMap.renameBoard(board.title) }\r\n        onUpdateBoard({ type: 'CHANGE_TITLE', title: board.title }, board, activity)\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState((prevState) => ({ ...prevState, isMenuOpen: !this.state.isMenuOpen }))\r\n    }\r\n\r\n    getRemainingMembers = () => {\r\n        const members = [...this.props.board.members]\r\n        members.splice(this.state.numOfShownMembers)\r\n        return members\r\n    }\r\n\r\n    getExtraMembersLength = () => (this.props.board.members.length - this.state.numOfShownMembers)\r\n\r\n    onMembersClose = () => this.setState({ isExtraMembersOpen: false })\r\n\r\n    render() {\r\n        const { board, onToggleDashboard, toggleCardLabelList, isCardLabelListOpen, getLabel, toggleCardComplete, openCardEdit } = this.props\r\n        const { boardTitle, isMenuOpen, isInviteOpen, isExtraMembersOpen, isTotalMembersOpen } = this.state\r\n        const members = this.getRemainingMembers()\r\n        const extraMembersLength = this.getExtraMembersLength()\r\n\r\n        return (\r\n            <section className=\"board-header\">\r\n                <div className=\"left-btns\">\r\n                    <button className=\"board-title nav-button\">\r\n                        <input className='clean-input' type='text' value={boardTitle} name='boardTitle' onFocus={this.handleFocus} onChange={this.handleChange} onBlur={this.onChangeBoardTitle} />\r\n                    </button>\r\n                    <button className={`starred-btn nav-button ${(board.isStarred) ? 'starred' : ''}`} onClick={() => this.toggleStarredBoard()}><AiOutlineStar /></button>\r\n                    <div className=\"members-container flex\"><div className=\"user-previews\">\r\n                        {members.map((member, idx) =>\r\n                            <MemberAvatar key={member._id} member={member} style={{ left: idx * -5 }} />\r\n                        )}\r\n                        {extraMembersLength > 0 && (\r\n                            <div\r\n                                ref={this.membersRef}\r\n                            >\r\n                                <div className=\"list-item-layover round\" style={{ transform: `translateX(${(members.length) * -5}px)` }} onClick={() => this.setState({ isExtraMembersOpen: !isExtraMembersOpen })}></div>\r\n                                <div\r\n                                    className=\"show-more-btn\"\r\n                                    style={{ transform: `translateX(${(members.length) * -5}px)` }}\r\n                                >\r\n                                    {`+${extraMembersLength}`}\r\n                                </div>\r\n                                {isExtraMembersOpen && <DynamicPopover onClose={() => this.setState({ isExtraMembersOpen: false })} title=\"Members\" ref={this.membersRef}>\r\n                                    <BoardEditMembers members={board.members.filter(member => member._id)} onClose={this.onMembersClose} />\r\n                                </DynamicPopover>}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                        <div className='pos-relative' ref={this.inviteRef}>\r\n                            <button onClick={() => this.setState({ isInviteOpen: !isInviteOpen })} className=\"invite-btn nav-button pos-relative\" style={{ transform: `translateX(${(members.length -2) * -5}px)` }}>Invite</button>\r\n                            {isInviteOpen && <DynamicPopover onClose={() => this.setState({ isInviteOpen: false })} title=\"Invite Members\" ref={this.inviteRef}>\r\n                                <InviteMembers />\r\n                            </DynamicPopover>}\r\n                        </div></div>\r\n                </div>\r\n                <div className=\"right-btns\">\r\n                    {!isMenuOpen && <>\r\n                        <div className=\"pos-relative\" ref={this.totalMembersRef}>\r\n                            <button className=\"nav-button members-btn\" onClick={() => this.setState({ isTotalMembersOpen: !isTotalMembersOpen })}><FaUserAlt /></button>\r\n                            {isTotalMembersOpen && <DynamicPopover onClose={() => this.setState({ isTotalMembersOpen: false })} title=\"Members\" ref={this.totalMembersRef}>\r\n                                <InviteMembers />\r\n                            </DynamicPopover>}\r\n                        </div>\r\n\r\n                        <button onClick={() => onToggleDashboard(true)} className={`dashboard-btn nav-button ${(isMenuOpen) ? 'menu-open' : ''}`}><RiBarChartFill /> <span className=\"right-btn-txt\">Dashboard</span></button>\r\n                        <button onClick={() => this.toggleMenu()} className=\"right-menu-btn nav-button\"><HiDotsHorizontal /> <span className=\"right-btn-txt\">Show Menu</span></button>\r\n                    </>}\r\n                </div>\r\n                <SideMenu isMenuOpen={isMenuOpen} onClose={() => { this.toggleMenu() }} isCardLabelListOpen={isCardLabelListOpen} toggleCardLabelList={toggleCardLabelList} getLabel={getLabel} openCardEdit={openCardEdit} toggleCardComplete={toggleCardComplete} />\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        users: state.userModule.users,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    onUpdateBoard\r\n\r\n}\r\n\r\n\r\n\r\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(withRouter(_BoardHeader))","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { CgCreditCard } from 'react-icons/cg';\r\nimport { MdLabelOutline } from 'react-icons/md';\r\nimport { BiUser } from 'react-icons/bi';\r\nimport { BsClock } from 'react-icons/bs';\r\nimport { GoArchive } from 'react-icons/go';\r\n\r\nimport { CardEditDate } from '../cmps/shared/popover-children/card-edit-date';\r\nimport { PopperCoverEdit } from '../cmps/shared/popover-children/popper-cover-edit.jsx';\r\nimport { CardHeader } from '../cmps/card-preview/card-header.jsx';\r\nimport { CardLabelBarList } from '../cmps/card-preview/card-label-bar-list.jsx';\r\nimport { CardFooter } from '../cmps/card-preview/card-footer.jsx';\r\nimport { cardEditService } from '../services/card-edit.service.js';\r\nimport { Loader } from './shared/loader.jsx';\r\nimport {\r\n  onUpdateCard,\r\n  onSetCardId,\r\n  onArchiveCard,\r\n} from '../store/board.actions';\r\nimport { CardEditAddToCardItem } from '../cmps/card-edit/add-to-card/card-edit-add-to-card-item.jsx';\r\nimport { LabelList } from '../cmps/shared/popover-children/label-list.jsx';\r\nimport { LabelEdit } from '../cmps/shared/popover-children/label-edit.jsx';\r\nimport { MemberList } from '../cmps/shared/popover-children/member-list.jsx';\r\nimport { activityTxtMap } from '../services/activity.service.js';\r\n\r\nclass _QuickCardEditor extends Component {\r\n  state = {\r\n    card: null,\r\n    cardTitle: '',\r\n  };\r\n  componentDidMount() {\r\n    const { cardId, groupId } = this.props;\r\n    this.props.onSetCardId(cardId);\r\n    this.uploadCard(cardId, groupId);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.board !== this.props.board) {\r\n      const { cardId, groupId } = this.props;\r\n      this.uploadCard(cardId, groupId);\r\n    }\r\n  }\r\n\r\n  uploadCard = (cardId, groupId) => {\r\n    const card = cardEditService.getCardById(cardId, groupId);\r\n    this.setState({ card, cardTitle: card.title });\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n  handleFocus = (event) => {\r\n    event.target.select();\r\n  };\r\n  onSave = (event) => {\r\n    const cardToSave = { ...this.state.card };\r\n    cardToSave.title = this.state.cardTitle;\r\n    const activity = {\r\n      txt: activityTxtMap.editCard(),\r\n      card: cardToSave,\r\n      groupId: this.props.groupId,\r\n    };\r\n    this.props.onUpdateCard(\r\n      cardToSave,\r\n      this.props.groupId,\r\n      this.props.board,\r\n      activity\r\n    );\r\n    this.props.onToggleQuickCardEditor(event, null, '');\r\n  };\r\n  openCard = (event) => {\r\n    this.props.onToggleQuickCardEditor(event, null, '');\r\n    this.props.openCardEdit(this.props.groupId, this.props.cardId);\r\n  };\r\n  onArchiveCard = (event) => {\r\n    const { groupId, board } = this.props;\r\n    const cardToSave = { ...this.state.card };\r\n    this.props.onArchiveCard(cardToSave, groupId, board);\r\n    this.props.onToggleQuickCardEditor(event, null, '');\r\n  };\r\n\r\n  render() {\r\n    const { card, cardTitle } = this.state;\r\n    const {\r\n      groupId,\r\n      getLabel,\r\n      isCardLabelListOpen,\r\n      toggleCardComplete,\r\n      position,\r\n    } = this.props;\r\n    if (!card) return <Loader />;\r\n    return (\r\n      <div\r\n        className='quick-card-editor flex'\r\n        style={{\r\n          position: 'fixed',\r\n          top: position.top,\r\n          left: position.left,\r\n        }}\r\n      >\r\n        <div>\r\n          <div className='card-preview' style={{ width: position.width }}>\r\n            {card.style && <CardHeader cardStyle={card.style} />}\r\n\r\n            <div className='card-details'>\r\n              {card.labelIds && (\r\n                <div>\r\n                  <CardLabelBarList\r\n                    labelIds={card.labelIds}\r\n                    getLabel={getLabel}\r\n                    isCardLabelListOpen={isCardLabelListOpen}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <textarea\r\n                className='clean-input'\r\n                type='text'\r\n                value={cardTitle}\r\n                name='cardTitle'\r\n                onChange={this.handleChange}\r\n                autoFocus\r\n                onFocus={this.handleFocus}\r\n              />\r\n\r\n              <CardFooter\r\n                card={card}\r\n                groupId={groupId}\r\n                toggleCardComplete={toggleCardComplete}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button onClick={this.onSave} className='card-edit-btn secondary'>\r\n            Save\r\n          </button>\r\n        </div>\r\n        <div className='quick-editor-sidebar flex column'>\r\n          <button\r\n            onClick={this.openCard}\r\n            className='quick-editor-btn flex align-center'\r\n          >\r\n            <span className='quick-editor-btn-icon flex align-center'>\r\n              <CgCreditCard />\r\n            </span>\r\n            <span>Open card</span>\r\n          </button>\r\n          <div className='quick-editor-btn flex align-center'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: MdLabelOutline,\r\n                title: 'Labels',\r\n                component: LabelList,\r\n                editComponent: LabelEdit\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='quick-editor-btn flex align-center'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: BiUser,\r\n                title: 'Change members',\r\n                component: MemberList,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='quick-editor-btn flex align-center'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: CgCreditCard,\r\n                title: 'Change cover',\r\n                component: PopperCoverEdit,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='quick-editor-btn flex align-center datepicker'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: BsClock,\r\n                title: 'Edit dates',\r\n                component: CardEditDate,\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            className='quick-editor-btn flex align-center'\r\n            onClick={this.onArchiveCard}\r\n          >\r\n            <span className='quick-editor-btn-icon flex align-center'>\r\n              <GoArchive />\r\n            </span>\r\n            <span>Archive</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateCard,\r\n  onSetCardId,\r\n  onArchiveCard,\r\n};\r\n\r\nexport const QuickCardEditor = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_QuickCardEditor);\r\n","import { Pie } from 'react-chartjs-2';\r\n\r\nexport function TasksPerMemberChart({ tasksPerMemberMap, labelsColors }) {\r\n  console.log('tasksPerMemberMap', tasksPerMemberMap);\r\n  // console.log('Object.keys(tasksPerMemberMap)', Object.keys(tasksPerMemberMap))\r\n  const data = {\r\n    labels: Object.keys(tasksPerMemberMap),\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: Object.values(tasksPerMemberMap),\r\n        backgroundColor: labelsColors,\r\n        borderWidth: 2,\r\n        hoverOffset: 2\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: 'black',\r\n          padding: 10\r\n        }\r\n      },\r\n    } ,\r\n  };\r\n\r\n  return (\r\n    <div className='chart'>\r\n      <h1>Tasks per Member</h1>\r\n      <Pie data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nexport function TasksPerLabelChart({ tasksPerLabelMap, labelsColors }) {\r\n  const data = {\r\n    labels: Object.keys(tasksPerLabelMap),\r\n    datasets: [\r\n      {\r\n        label: '',\r\n        data: Object.values(tasksPerLabelMap),\r\n        backgroundColor: labelsColors,\r\n        borderWidth: 2,\r\n        hoverOffset: 2,\r\n        fontColor: 'black'\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n        labels: {\r\n          fontColor: 'black'\r\n          // fontColor: '#f00'\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        ticks: {\r\n          color: 'black'\r\n          // color: 'white'\r\n        }\r\n      },\r\n      x: {\r\n        ticks: {\r\n          color: 'black'\r\n          // color: 'white'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='chart bar-chart-container' style={{ maxHeight: 400 }}>\r\n      <h1>Tasks per Label</h1>\r\n      <Bar data={data} height={null}\r\n        width={null}\r\n        options={options} />\r\n    </div>\r\n  );\r\n}\r\n","import TimeLine from \"react-gantt-timeline\";\r\n\r\nexport function TasksPerDateChart({tasks}) {\r\n  const config = {\r\n    header: {\r\n      top: {\r\n        style: {\r\n          background: \"linear-gradient( grey, black)\",\r\n          textShadow: \"0.5px 0.5px black\",\r\n          fontSize: 12\r\n        }\r\n      },\r\n      middle: {\r\n        style: {\r\n          background: \"linear-gradient( #b686c2, white)\",\r\n          fontSize: 9,\r\n          color: \"black\"\r\n        }\r\n      },\r\n      bottom: {\r\n        style: {\r\n          background: \"linear-gradient( grey, black)\",\r\n          fontSize: 9,\r\n          color: \"#b686c2\"\r\n        },\r\n        selectedStyle: {\r\n          background: \"linear-gradient( #d011dd ,#d011dd)\",\r\n          fontWeight: \"bold\",\r\n          color: \"white\"\r\n        }\r\n      }\r\n    },\r\n    taskList: {\r\n      title: {\r\n        label: \"Task Todo\",\r\n        style: {\r\n          background: \"linear-gradient( grey, black)\"\r\n        }\r\n      },\r\n      task: {\r\n        style: {\r\n          backgroundColor: \"grey\",\r\n          color: \"white\"\r\n        }\r\n      },\r\n      verticalSeparator: {\r\n        style: {\r\n          backgroundColor: \"#fbf9f9\",\r\n        },\r\n        grip: {\r\n          style: {\r\n            backgroundColor: \"#b686c2\",\r\n          }\r\n        }\r\n      }\r\n    },\r\n    dataViewPort: {\r\n      rows: {\r\n        style: {\r\n          backgroundColor: \"white\",\r\n          borderBottom: \"solid 0.5px silver\"\r\n        }\r\n      },\r\n      task: {\r\n        showLabel: false,\r\n        style: {\r\n          backgroundColor: \"#b686c2\",\r\n          borderRadius: 1,\r\n          boxShadow: \"2px 2px 8px #888888\"\r\n                }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"time-line-container\">\r\n      <TimeLine data={tasks} links={[]} config={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { IoMdClose } from 'react-icons/io';\r\nimport { BsCardText } from 'react-icons/bs';\r\nimport { AiOutlineGroup } from 'react-icons/ai';\r\nimport { CgProfile } from 'react-icons/cg';\r\nimport { TasksPerMemberChart } from './dashboard/tasks-per-members-chart.jsx';\r\nimport { TasksPerLabelChart } from './dashboard/tasks-per-labels-chart.jsx';\r\nimport {TasksPerDateChart} from './dashboard/tasks-per-date-chart.jsx'\r\nimport { boardService } from '../services/board.service.js';\r\nimport { Loader } from '../cmps/shared/loader.jsx';\r\nclass _Dashboard extends Component {\r\n  state = {\r\n    chartsData: null,\r\n  };\r\n  async componentDidMount() {\r\n    const chartsData = await boardService.dashboardQuery(this.props.board._id);\r\n    this.setState({ chartsData });\r\n  }\r\n\r\n  get labelsColor() {\r\n    return this.props.board.labels.map((label) => {\r\n      return label.color;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { chartsData } = this.state;\r\n    const { board } = this.props;\r\n    console.log('chartsDate', chartsData);\r\n    if (!chartsData) return <Loader />;\r\n    return (\r\n      <div className='dashboard-modal flex column align-center'>\r\n        <Link to={`/board/${board._id}`}>\r\n        <button\r\n          className='close-btn'\r\n        >\r\n          <IoMdClose />\r\n        </button>\r\n        </Link>\r\n        <div className='jeneral-statistics flex'>\r\n          <div className='stats flex space-between'>\r\n            <div>\r\n              <h3>All Tasks</h3>\r\n              <span>{chartsData.cardsCount}</span>\r\n            </div>\r\n            <i className='flex align-center'>\r\n              <BsCardText />\r\n            </i>\r\n          </div>\r\n          <div className='stats flex space-between'>\r\n            <div>\r\n              <h3>All Lists</h3>\r\n              <span>{chartsData.groupsCount}</span>\r\n            </div>\r\n            <i className='flex align-center'>\r\n              <AiOutlineGroup />\r\n            </i>\r\n          </div>\r\n          <div className='stats flex space-between'>\r\n            <div>\r\n              <h3>Members</h3>\r\n              <span>{board.members && board.members.length}</span>\r\n              <span>{!board.members && 0}</span>\r\n            </div>\r\n            <i className='flex align-center'>\r\n              <CgProfile />\r\n            </i>\r\n          </div>\r\n        </div>\r\n        <div className='charts flex'>\r\n          <TasksPerMemberChart\r\n            className='chart'\r\n            tasksPerMemberMap={chartsData.tasksPerMemberMap}\r\n            labelsColors={this.labelsColor}\r\n          />\r\n\r\n          <TasksPerLabelChart\r\n            className='chart'\r\n            tasksPerLabelMap={chartsData.tasksPerLabelMap}\r\n            labelsColors={this.labelsColor}\r\n          />\r\n        </div>\r\n        <TasksPerDateChart tasks={chartsData.tasks}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport const Dashboard = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_Dashboard);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from 'react-router';\r\n\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\n\r\nimport {\r\n  loadBoard,\r\n  onUpdateBoard,\r\n  onUpdateCard,\r\n  outputUpdateBoard,\r\n  resetBoard,\r\n} from '../store/board.actions.js';\r\n\r\nimport { CardEdit } from '../cmps/card-edit.jsx';\r\nimport { AddBoardItem } from '../cmps/shared/add-board-item.jsx';\r\nimport { GroupList } from '../cmps/board/group-list.jsx';\r\nimport { BoardHeader } from '../cmps/board/board-header.jsx';\r\nimport { OverlayScreen } from '../cmps/overlay-screen.jsx';\r\nimport { QuickCardEditor } from '../cmps/quick-card-editor.jsx';\r\nimport { Loader } from '../cmps/shared/loader.jsx';\r\nimport { activityTxtMap } from '../services/activity.service.js';\r\nimport { socketService } from '../services/socket.service.js';\r\nimport { Dashboard } from '../cmps/dashboard.jsx';\r\n\r\nclass _BoardDetails extends Component {\r\n  state = {\r\n    isCardLabelListOpen: false,\r\n    isAddPopOpen: false,\r\n    quickCardEditor: {\r\n      cardToEdit: null,\r\n      groupId: '',\r\n      position: {},\r\n    },\r\n    // isDashboardOpen: false,\r\n  };\r\n  async componentDidMount() {\r\n    const { boardId } = this.props.match.params;\r\n    const filterBy = this.props.location.search;\r\n    console.log('from Board details: ', filterBy);\r\n    await this.loadBoard(boardId, filterBy);\r\n    socketService.emit('member-joined', boardId);\r\n    socketService.on('board-update', ({ action, activity }) => {\r\n      const boardToSend = action.board || this.props.board;\r\n      this.props.outputUpdateBoard(action, boardToSend, activity);\r\n    });\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    const { boardId } = this.props.match.params;\r\n    const filterBy = this.props.location.search;\r\n    if (prevProps.match.params.boardId !== boardId) {\r\n      await this.loadBoard(boardId, filterBy)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetBoard();\r\n  }\r\n  loadBoard = (boardId, filterBy) => {\r\n    this.props.loadBoard(boardId, filterBy);\r\n  };\r\n  openCardEdit = (groupId, cardId) => {\r\n    this.props.history.push(`${this.props.board._id}/${groupId}/${cardId}`);\r\n  };\r\n  updateBoard = (action, activity) => {\r\n    const updatedBoard = action.board || this.props.board;\r\n    this.props.onUpdateBoard(action, updatedBoard, activity);\r\n  };\r\n\r\n  onToggleDashboard = (isOpen) => {\r\n    if (isOpen) {\r\n      this.props.history.push(`${this.props.board._id}/dashboard`);\r\n    } else {\r\n      this.props.history.goBack();\r\n    }\r\n    // this.setState({isDashboardOpen: isOpen})\r\n  };\r\n  toggleCardLabelList = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({ isCardLabelListOpen: !this.state.isCardLabelListOpen });\r\n  };\r\n  onToggleQuickCardEditor = (event, card, groupId) => {\r\n    event.stopPropagation();\r\n    const parentElement = card ? event.currentTarget.parentNode : null;\r\n    const position = card ? parentElement.getBoundingClientRect() : {};\r\n    this.setState({ quickCardEditor: { cardToEdit: card, groupId, position } });\r\n  };\r\n  toggleCardComplete = (ev, groupId, card) => {\r\n    ev.stopPropagation();\r\n    if (card.isArchive) return;\r\n    const cardToUpdate = { ...card };\r\n    cardToUpdate.isComplete = !card.isComplete;\r\n    const activity = cardToUpdate.isComplete\r\n      ? {\r\n        txt: activityTxtMap.completeCard(),\r\n        card: cardToUpdate,\r\n        groupId: groupId,\r\n      }\r\n      : {\r\n        txt: activityTxtMap.unCompleteCard(),\r\n        card: cardToUpdate,\r\n        groupId: groupId,\r\n      };\r\n    this.props.onUpdateCard(cardToUpdate, groupId, this.props.board, activity);\r\n  };\r\n  getLabel = (labelId) => {\r\n    const label = this.props.board.labels.find((label) => label.id === labelId);\r\n    return label;\r\n  };\r\n  handleOnDragEnd = (result) => {\r\n    const { destination, source, type } = result;\r\n    if (!destination) return;\r\n    const boardToChange = { ...this.props.board };\r\n    //group dragged -\r\n    if (type === 'group') {\r\n      const draggedGroup = boardToChange.groups.splice(source.index, 1);\r\n      boardToChange.groups.splice(destination.index, 0, ...draggedGroup);\r\n      this.props.onUpdateBoard({ type: '' }, boardToChange);\r\n      return;\r\n    }\r\n    const sourceGroup = {\r\n      ...boardToChange.groups.find((group) => group.id === source.droppableId),\r\n    };\r\n    const card = sourceGroup.cards.splice(source.index, 1);\r\n    //card dragged in the same group -\r\n    if (source.droppableId === destination.droppableId) {\r\n      sourceGroup.cards.splice(destination.index, 0, ...card);\r\n      const action = { type: 'UPDATE_GROUP', group: sourceGroup };\r\n      this.props.onUpdateBoard(action, boardToChange);\r\n    }\r\n    //card dragged to another group\r\n    else {\r\n      const destinationGroup = {\r\n        ...boardToChange.groups.find(\r\n          (group) => group.id === destination.droppableId\r\n        ),\r\n      };\r\n      if (destinationGroup.cards)\r\n        destinationGroup.cards.splice(destination.index, 0, ...card);\r\n      else destinationGroup.cards = [card];\r\n      boardToChange.groups = boardToChange.groups.map((currGroup) => {\r\n        if (currGroup.id === source.droppableId) return sourceGroup;\r\n        if (currGroup.id === destination.droppableId) return destinationGroup;\r\n        return currGroup;\r\n      });\r\n      this.props.onUpdateBoard({ type: '' }, boardToChange);\r\n    }\r\n  };\r\n  onToggleAddPop = () => {\r\n    this.setState({ isAddPopOpen: !this.state.isAddPopOpen });\r\n  };\r\n  toggleGroupArchive = (groupId) => {\r\n    const groupToUpdate = {\r\n      ...this.props.board.groups.find((group) => groupId === group.id),\r\n    };\r\n    groupToUpdate.isArchive = groupToUpdate.isArchive\r\n      ? !groupToUpdate.isArchive\r\n      : true;\r\n    const activity = { txt: activityTxtMap.archiveList(groupToUpdate.title) };\r\n    const action = { type: 'UPDATE_GROUP', group: groupToUpdate };\r\n    this.props.onUpdateBoard(action, this.props.board, activity);\r\n  };\r\n\r\n  render() {\r\n    const { board } = this.props;\r\n    const {\r\n      isCardLabelListOpen,\r\n      isAddPopOpen,\r\n      quickCardEditor,\r\n    } = this.state;\r\n    if (!board) return <Loader />;\r\n    return (\r\n      <div className='board-details flex column'>\r\n        <Route path='/board/:boardId/dashboard' component={Dashboard} />\r\n        <Route path='/board/:boardId/:groupId/:cardId' component={CardEdit} />\r\n\r\n        <BoardHeader onToggleDashboard={this.onToggleDashboard} toggleCardLabelList={this.toggleCardLabelList} toggleCardComplete={this.toggleCardComplete} isCardLabelListOpen={isCardLabelListOpen} getLabel={this.getLabel} openCardEdit={this.openCardEdit} />\r\n\r\n        <DragDropContext onDragEnd={this.handleOnDragEnd}>\r\n          <section className='group-list-container flex'>\r\n            <div className='group-list-wrapper flex'>\r\n              <Droppable\r\n                droppableId={board._id}\r\n                direction='horizontal'\r\n                type='group'\r\n              >\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                    className='flex'\r\n                  >\r\n                    {board.groups && (\r\n                      <GroupList\r\n                        groups={board.groups}\r\n                        openCardEdit={this.openCardEdit}\r\n                        updateBoard={this.updateBoard}\r\n                        toggleCardLabelList={this.toggleCardLabelList}\r\n                        isCardLabelListOpen={isCardLabelListOpen}\r\n                        toggleCardComplete={this.toggleCardComplete}\r\n                        toggleGroupArchive={this.toggleGroupArchive}\r\n                        onToggleQuickCardEditor={this.onToggleQuickCardEditor}\r\n                        getLabel={this.getLabel}\r\n                      />\r\n                    )}\r\n                    {provided.placeholder}\r\n\r\n                    <div className='add-group-container'>\r\n                      {!isAddPopOpen && (\r\n                        <button\r\n                          className='add-boarditem-btn flex align-center'\r\n                          onClick={this.onToggleAddPop}\r\n                        >\r\n                          <i className='flex align-center'>\r\n                            <AiOutlinePlus />\r\n                          </i>\r\n                          <span>Add a list</span>\r\n                        </button>\r\n                      )}\r\n                      {isAddPopOpen && (\r\n                        <AddBoardItem\r\n                          onToggleAddPop={this.onToggleAddPop}\r\n                          type={'group'}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </div>\r\n          </section>\r\n        </DragDropContext>\r\n\r\n        {quickCardEditor.cardToEdit && (\r\n          <QuickCardEditor\r\n            cardId={quickCardEditor.cardToEdit.id}\r\n            groupId={quickCardEditor.groupId}\r\n            position={quickCardEditor.position}\r\n            getLabel={this.getLabel}\r\n            toggleCardComplete={this.toggleCardComplete}\r\n            isCardLabelListOpen={isCardLabelListOpen}\r\n            onToggleQuickCardEditor={this.onToggleQuickCardEditor}\r\n            openCardEdit={this.openCardEdit}\r\n          />\r\n        )}\r\n        {quickCardEditor.cardToEdit && (\r\n          <div\r\n            onClick={(event) => this.onToggleQuickCardEditor(event, null, '')}\r\n          >\r\n            <OverlayScreen />\r\n          </div>\r\n        )}\r\n        {/* {isDashboardOpen && (\r\n          <div\r\n            onClick={() => this.onToggleDashboard(false)}\r\n          >\r\n            <OverlayScreen />\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  loadBoard,\r\n  onUpdateBoard,\r\n  outputUpdateBoard,\r\n  onUpdateCard,\r\n  resetBoard,\r\n};\r\n\r\nexport const BoardDetails = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_BoardDetails);\r\n","export default __webpack_public_path__ + \"static/media/login-svg-right.df08073f.svg\";","export default __webpack_public_path__ + \"static/media/login-svg-left.ff7c7688.svg\";","import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport { connect } from 'react-redux'\r\nimport { GoogleLogin } from 'react-google-login'\r\n\r\n// import { userService } from '../services/user.service'\r\nimport { onLogin, onSignup, loadUsers, onGoogleLogin } from '../store/user.actions'\r\nimport { Link } from 'react-router-dom'\r\nimport { SiTrello } from 'react-icons/si'\r\nimport svgRight from '../assets/img/login-svg-right.svg'\r\nimport svgLeft from '../assets/img/login-svg-left.svg'\r\n\r\n// const clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID\r\n\r\nclass _LoginSignup extends React.Component {\r\n\r\n    state = {\r\n        credentials: {\r\n            username: '',\r\n            password: '',\r\n            fullname: ''\r\n        },\r\n        pageMode: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadUsers()\r\n        const pageMode = this.props.location.pathname === '/login' ? 'login' : 'signup'\r\n        this.setState({ pageMode })\r\n    }\r\n\r\n    validate = (values) => {\r\n        const errors = {}\r\n        if (!values.username) {\r\n            errors.username = 'Required'\r\n        } else if (values.username.length < 6) {\r\n            errors.username = 'Please use at least 6 characters'\r\n        }\r\n        if (values.password.length < 4) {\r\n            errors.password = 'Password is too short'\r\n        }\r\n        if (!values.fullname) {\r\n            errors.fullname = 'Required'\r\n        } else if (values.fullname.length < 4) {\r\n            errors.fullname = 'Please use at least 4 characters'\r\n        }\r\n        return errors\r\n    }\r\n\r\n    onSuccessGoogle = (res) => {\r\n        const { tokenId } = res\r\n        const { onGoogleLogin } = this.props\r\n        onGoogleLogin(tokenId)\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    onFailureGoogle = (res) => {\r\n        console.log('Login with google failed', res)\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        const { pageMode } = this.state\r\n        const { onLogin, onSignup } = this.props\r\n        pageMode === 'login' ? onLogin(values) : onSignup(values)\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    render() {\r\n        const { credentials, pageMode } = this.state\r\n        return (\r\n            <section className=\"login-signup-page main-container\">\r\n                <div className=\"login-signup-header\">\r\n                    <SiTrello />\r\n                    <h3 className=\"logo-text\">Marshmello</h3>\r\n                </div>\r\n                {pageMode === 'login' && <div className=\"login-signup flex column\">\r\n                    <h3>Log in to Marshmello</h3>\r\n                    <Formik initialValues={credentials} onSubmit={this.onSubmit} >\r\n                        <Form className=\"login-form flex column\">\r\n                            <Field type=\"username\" placeholder=\"Enter user name\" name=\"username\" autoFocus />\r\n                            <ErrorMessage name=\"username\" component=\"div\" />\r\n                            <Field type=\"password\" placeholder=\"Enter password\" name=\"password\" autoComplete=\"off\" />\r\n                            <ErrorMessage name=\"password\" component=\"div\" />\r\n                            <button type=\"submit\" className=\"login-signup-btn nav-button\" style={{color: '#172b4d'}}>Log in</button>\r\n                        </Form>\r\n                    </Formik>\r\n                    OR\r\n                    <br />\r\n                    <GoogleLogin\r\n                        className=\"google-login-btn flex align-center justify-center\"\r\n                        clientId='209268489709-ofnqpgb55aikiprlelkbiafntgld4mhg.apps.googleusercontent.com'\r\n                        buttonText='Continue with Google'\r\n                        onSuccess={this.onSuccessGoogle}\r\n                        onFailure={this.onFailureGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                    <Link to=\"/signup\">Sign up for an account</Link>\r\n                </div>}\r\n                {pageMode === 'signup' &&\r\n                    <div className=\"login-signup flex column\">\r\n                        <h3>Sign up for your account</h3>\r\n                        <Formik initialValues={credentials} validateOnChange={false} validateOnBlur={false} validate={this.validate} onSubmit={this.onSubmit}>\r\n                            <Form className=\"flex column\">\r\n                                <Field type=\"fullname\" placeholder=\"Enter full name\" name=\"fullname\" autoFocus />\r\n                                <ErrorMessage name=\"fullname\" component=\"p\" />\r\n                                <Field type=\"username\" placeholder=\"Enter user name\" name=\"username\" />\r\n                                <ErrorMessage name=\"username\" component=\"p\" />\r\n                                <Field type=\"password\" placeholder=\"Enter password\" name=\"password\" />\r\n                                <ErrorMessage name=\"password\" component=\"p\" />\r\n                                <button type=\"submit\" className=\"login-signup-btn nav-button\" style={{color: '#172b4d'}}>Sign up</button>\r\n                            </Form>\r\n                        </Formik>\r\n                        <Link to=\"/login\">Already have an account ? Log In</Link>\r\n                    </div>}\r\n                <div className=\"right-svg\">\r\n                    <img src={svgRight} alt=\"right-svg\" />\r\n                </div>\r\n                <div className=\"left-svg\">\r\n                    <img src={svgLeft} alt=\"left-svg\" />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    onLogin,\r\n    onSignup,\r\n    onGoogleLogin\r\n}\r\n\r\nexport const LoginSignup = connect(mapStateToProps, mapDispatchToProps)(_LoginSignup)","import { HomePage } from './pages/home-page.jsx'\r\nimport { BoardSelect } from './pages/boards-select.jsx'\r\nimport { BoardDetails } from './pages/board-details.jsx'\r\nimport { LoginSignup } from './pages/login-signup.jsx';\r\n\r\n// Routes accesible from the main navigation (in AppHeader)\r\nconst routes = [{\r\n        path: '/board/:boardId',\r\n        component: BoardDetails,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: BoardSelect,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: LoginSignup\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: LoginSignup \r\n    },\r\n    {\r\n        path: '/',\r\n        component: HomePage,\r\n    }\r\n]\r\n\r\nexport default routes;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { onAddBoard, setAddingBoard } from '../../store/board.actions.js'\r\n\r\n\r\nclass _BoardAdd extends React.Component {\r\n    state = {\r\n        title: '',\r\n        style: {\r\n            imgUrl: 'https://images.pexels.com/photos/3683056/pexels-photo-3683056.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'\r\n        },\r\n        chosenImgIdx: 5\r\n    }\r\n\r\n    targetRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n        this.props.setAddingBoard(false)\r\n    }\r\n\r\n    handleClick = (ev) => {\r\n        if (this.targetRef.current.contains(ev.target)) {\r\n            // || element?.contains(ev.target)\r\n            // inside click\r\n            return\r\n        }\r\n        // outside click \r\n        this.props.onClose()\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ ...this.state, [field]: value });\r\n    }\r\n\r\n    handleImage = (ev, idx) => {\r\n        ev.preventDefault()\r\n        const imgSrc = ev.target.getAttribute('src')\r\n        this.setState({ ...this.state, style: { imgUrl: imgSrc }, chosenImgIdx: idx })\r\n    }\r\n\r\n    addBoard = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        const addedBoard = await this.props.onAddBoard(this.state)\r\n        this.props.history.push(`/board/${addedBoard._id}`)\r\n        this.props.setAddingBoard(false)\r\n    }\r\n\r\n    render() {\r\n        const images = ['https://images.pexels.com/photos/1914982/pexels-photo-1914982.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n            'https://images.pexels.com/photos/844297/pexels-photo-844297.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/3293148/pexels-photo-3293148.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/911738/pexels-photo-911738.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/3274903/pexels-photo-3274903.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/3683056/pexels-photo-3683056.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/2170473/pexels-photo-2170473.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/2529973/pexels-photo-2529973.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/1982485/pexels-photo-1982485.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940']\r\n        const { title, chosenImgIdx } = this.state\r\n        return (\r\n            <div className=\"board-add\" ref={this.targetRef}>\r\n                <form className=\"board-add-form\" onSubmit={this.addBoard} style={{background: '#000000', backgroundImage: `url(${images[chosenImgIdx]})` }} >\r\n                    <input autoFocus className={`board-title-input ${(title) ? 'editing' : ''}`} autoComplete=\"off\" type=\"text\" placeholder=\"Add board title\" name=\"title\" value={title} onChange={this.handleChange} />\r\n                    <button className={`create-btn ${(title) ? 'clickable' : ''}`} type=\"submit\">Create Board</button>\r\n                </form>\r\n                <div className=\"images-container\">\r\n                    {images.map((image, idx) =>\r\n                        <button className={`img-btn ${(idx === chosenImgIdx) ? 'chosen' : ''}`} key={idx} onClick={(ev) => this.handleImage(ev, idx)}>\r\n                            <img className=\"add-board-img\" src={image} alt={image} />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAddingBoard: state.boardModule.isAddingBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onAddBoard,\r\n    setAddingBoard\r\n}\r\nconst _BoardAddWithRouter = withRouter(_BoardAdd)\r\nexport const BoardAdd = connect(mapStateToProps, mapDispatchToProps)(_BoardAddWithRouter)","import React from 'react'\r\nimport { MemberAvatar } from '../member-avatar'\r\nimport { connect } from 'react-redux'\r\n// import { onUpdateCard } from '../../../store/board.actions'\r\nimport { onLogout } from '../../../store/user.actions'\r\n// import { cardEditService } from '../../../services/card-edit.service'\r\nimport { withRouter } from 'react-router'\r\n\r\nclass _LoggedinUser extends React.Component {\r\n    onLogoutUser = () => {\r\n        this.props.history.push('/login')\r\n        this.props.onLogout()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"mini-user flex column\">\r\n\r\n                <div className=\"main flex\">\r\n                    <MemberAvatar size=\"lg\" member={this.props.user} />\r\n                    <div>\r\n                        <h3 className=\"mini-user-fullname\">{this.props.user.fullname}</h3>\r\n                        <p>{this.props.user.username}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"remove-member\" onClick={() => this.onLogoutUser()}>Log Out</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout\r\n}\r\nconst _LoggedinUserWithRouter = withRouter(_LoggedinUser)\r\nexport const LoggedinUser = connect(mapStateToProps, mapDispatchToProps)(_LoggedinUserWithRouter);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment'\r\nimport { MemberAvatar } from '../member-avatar';\r\nimport { onUpdateUser } from '../../../store/user.actions'\r\n\r\nclass _Notifications extends React.Component {\r\n\r\n    markAsSeen = (mentionId) => {\r\n        const { user } = this.props\r\n        const currMentionIdx = user.mentions.findIndex(mention => mention.id === mentionId)\r\n        user.mentions.splice(currMentionIdx, 1)\r\n        this.props.onUpdateUser(user);\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props\r\n        return (\r\n            <section className=\"notifications\">\r\n                {(user.mentions && user.mentions.length > 0) ? user.mentions.map((mention, idx) =>\r\n                    <div key={mention.id} className=\"user-mentions\">\r\n                        <div className=\"notification-text\">\r\n                            <div className=\"notification-avatar\">\r\n                                <MemberAvatar member={mention.user} />\r\n                            </div>\r\n                            <p><span className=\"username\">{mention.user.fullname}</span> has {mention.action} you {(mention.action === 'Removed') ? 'from' : 'to'} card <Link to={`/board/${mention.board.boardId}/${mention.groupId}/${mention.card.cardId}`}><span className=\"card-title\"> {mention.card.title} </span></Link > in board <Link to={`/board/${mention.board.boardId}`}><span className=\"board-title\">{mention.board.title}</span></Link>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"notification-bottom\">\r\n                            <Moment className=\"notification-time\" fromNow>{mention.createdAt}</Moment>\r\n                            <small onClick={() => this.markAsSeen(mention.id)}>Mark as read</small>\r\n                        </div>\r\n                    </div>\r\n                ) : <div>No notifications yet</div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateUser\r\n}\r\n\r\nexport const Notifications = connect(mapStateToProps, mapDispatchToProps)(_Notifications);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CgHome } from 'react-icons/cg';\r\nimport { AiOutlinePlus, AiOutlineBell } from 'react-icons/ai';\r\nimport { SiTrello } from 'react-icons/si';\r\n\r\n// import routes from '../routes'\r\nimport {\r\n  onLogin,\r\n  onLogout,\r\n  onSignup,\r\n  loadUsers,\r\n  removeUser,\r\n  // loadAndWatchUser,\r\n  onReceiveMention,\r\n  onUpdateUser\r\n} from '../store/user.actions.js';\r\n// import { userService } from '../services/user.service.js';\r\nimport { setAddingBoard } from '../store/board.actions';\r\nimport { BoardAdd } from './board/board-add.jsx';\r\nimport { MemberAvatar } from './shared/member-avatar.jsx';\r\nimport { OverlayScreen } from '../cmps/overlay-screen';\r\nimport { DynamicPopover } from './shared/dynamic-popover.jsx';\r\nimport { LoggedinUser } from './shared/popover-children/loggedin-user.jsx';\r\nimport { Loader } from './shared/loader';\r\nimport { socketService } from '../services/socket.service.js';\r\nimport { Notifications } from './shared/popover-children/notifications.jsx';\r\n\r\nclass _AppHeader extends React.Component {\r\n  state = {\r\n    // user: null,\r\n    isUserPopoverOpen: false,\r\n    isNotificationPopoverOpen: false\r\n  };\r\n\r\n  userMenuRef = React.createRef();\r\n  notificationsRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    socketService.on('received-mention', this.props.onReceiveMention)\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.user !== prevProps.user) {\r\n      const { user } = this.props\r\n      socketService.emit('set-user-socket', user._id)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socketService.off('received-mention', this.props.onReceiveMention)\r\n    //socketService.emit('unset-user-socket')\r\n  }\r\n\r\n  onLogout = () => {\r\n    this.props.onLogout();\r\n  };\r\n\r\n  setAddBoard = (value) => {\r\n    this.props.setAddingBoard(value);\r\n  };\r\n\r\n  setFavicon = () => {\r\n    const favicon = document.getElementById('favicon');\r\n    favicon.href = '../../public/favicon.ico';\r\n  };\r\n\r\n  getUnreadMentions = (mentions) => {\r\n    let count = 0;\r\n    if (mentions) {\r\n      mentions.forEach((mention) => {\r\n        if (!mention.isRead) count++;\r\n      });\r\n    }\r\n    return count;\r\n  };\r\n\r\n  markAllMentionsAsRead = () => {\r\n    // const user = {...this.props.user};\r\n    const { user } = this.props;\r\n    const { mentions } = user;\r\n    mentions.forEach((mention) => {\r\n      mention.isRead = true;\r\n    });\r\n    this.props.onUpdateUser(user);\r\n    this.setState({ isNotificationPopoverOpen: !this.state.isNotificationPopoverOpen })\r\n  };\r\n\r\n  render() {\r\n    const { user, isAddingBoard } = this.props;\r\n    const { isUserPopoverOpen, isNotificationPopoverOpen } = this.state;\r\n    if (!user) return <Loader />;\r\n    return (\r\n      <header className='app-header'>\r\n        <nav className='nav-links'>\r\n          <div className='left-links'>\r\n            <NavLink to='/'>\r\n              <button\r\n                onClick={() => this.setFavicon()}\r\n                className='home-btn nav-button'\r\n              >\r\n                <CgHome />\r\n              </button>\r\n            </NavLink>\r\n            <NavLink to='/board'>\r\n              <button\r\n                onClick={() => this.setFavicon()}\r\n                className='boards-btn flex nav-button'\r\n              >\r\n                <SiTrello /> <span>Boards</span>\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n          <NavLink className='logo' to='/'>\r\n            <SiTrello /> <span> Marshmello </span>\r\n          </NavLink>\r\n          <div className='right-links'>\r\n            <button\r\n              className='nav-button'\r\n              onClick={() => this.setAddBoard(true)}\r\n            >\r\n              <AiOutlinePlus />\r\n            </button>\r\n            <div className='pos-relative' ref={this.notificationsRef}>\r\n              <button\r\n                onClick={this.markAllMentionsAsRead}\r\n                className='nav-button'\r\n                style={{\r\n                  backgroundColor: this.getUnreadMentions(user.mentions)\r\n                    ? '#EF7564'\r\n                    : '',\r\n                }}\r\n              >\r\n                <AiOutlineBell />\r\n              </button>\r\n              {isNotificationPopoverOpen && (\r\n                <DynamicPopover\r\n                  onClose={() => this.setState({ isNotificationPopoverOpen: false })}\r\n                  title='Notifications'\r\n                  ref={this.notificationsRef}\r\n                >\r\n                  <Notifications />\r\n                </DynamicPopover>\r\n              )}\r\n            </div>\r\n            <div className='pos-relative' ref={this.userMenuRef}>\r\n              <button className='user-btn'\r\n                onClick={() => this.setState({ isUserPopoverOpen: !isUserPopoverOpen })}\r\n              >\r\n                <MemberAvatar key={user._id} member={user} />\r\n              </button>\r\n              {isUserPopoverOpen && (\r\n                <DynamicPopover\r\n                  onClose={() => this.setState({ isUserPopoverOpen: false })}\r\n                  title='User Details'\r\n                  ref={this.userMenuRef}\r\n                >\r\n                  <LoggedinUser member={user} onLogout={this.onLogout} />\r\n                </DynamicPopover>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        {isAddingBoard && <BoardAdd onClose={() => this.setAddBoard(false)} />}\r\n        {isAddingBoard && <OverlayScreen />}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    user: state.userModule.user,\r\n    isAddingBoard: state.boardModule.isAddingBoard,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  onLogin,\r\n  onSignup,\r\n  onLogout,\r\n  loadUsers,\r\n  removeUser,\r\n  setAddingBoard,\r\n  onReceiveMention,\r\n  onUpdateUser\r\n};\r\n\r\nexport const AppHeader = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_AppHeader);\r\n","import React from 'react'\r\nimport { Switch, Route, withRouter } from 'react-router'\r\nimport routes from './routes'\r\nimport { AppHeader } from './cmps/app-header'\r\nimport { connect } from 'react-redux'\r\n// import { socketService } from './services/socket.service'\r\n// import { userService } from './services/user.service'\r\n\r\nclass _RootCmp extends React.Component {\r\n\r\n    get isHeaderShown() {\r\n        const { pathname } = this.props.location\r\n        return (pathname.includes('board') || pathname.includes('boards'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app flex column\">\r\n                {this.isHeaderShown &&\r\n                    <AppHeader />\r\n                }\r\n                <main className=\"main-app\">\r\n                    <Switch>\r\n                        {routes.map(route => <Route key={route.path} component={route.component} path={route.path} />)}\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst _RootCmpWithRouter = withRouter(_RootCmp)\r\nexport const RootCmp = connect(mapStateToProps)(_RootCmpWithRouter)\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nimport { store } from './store/store';\r\nimport { RootCmp } from './root-cmp';\r\nimport './assets/styles/main.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <RootCmp />\r\n      </Router>{' '}\r\n    </Provider>{' '}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}