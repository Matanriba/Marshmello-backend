{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","store/board.reducer.js","services/async-storage.service.js","services/http.service.js","services/socket.service.js","services/util.service.js","services/user.service.js","store/user.reducer.js","store/system.reducer.js","store/store.js","services/event-bus.service.js","store/user.actions.js","assets/img/hero.png","assets/img/homepage-product.jpg","pages/home-page.jsx","cmps/board-preview.jsx","cmps/board-list.jsx","services/activity.service.js","services/board.service.js","store/board.actions.js","cmps/overlay-screen.jsx","assets/img/loader.svg","cmps/shared/loader.jsx","pages/boards-select.jsx","services/card-edit.service.js","cmps/shared/popover-children/move-card.jsx","cmps/shared/popover-children/copy-card.jsx","cmps/shared/dynamic-popover.jsx","cmps/card-edit/edit-sidebar-label.jsx","cmps/card-edit/card-edit-actions-item.jsx","cmps/card-edit/card-edit-actions.jsx","cmps/shared/member-avatar.jsx","cmps/card-edit/popper-member-preview.jsx","cmps/shared/popover-children/member-list.jsx","cmps/shared/popover-children/card-edit-date.jsx","cmps/card-edit/popper-label-preview.jsx","cmps/shared/popover-children/label-list.jsx","cmps/shared/popover-children/popover-checklist.jsx","cmps/shared/popover-children/popover-attach-file.jsx","cmps/card-edit/add-to-card/card-edit-add-to-card-item.jsx","cmps/shared/popover-children/popper-cover-edit.jsx","cmps/card-edit/add-to-card/card-edit-add-to-card.jsx","cmps/card-edit/card-edit-sidebar.jsx","cmps/card-edit/labels-members/card-edit-duedate.jsx","cmps/card-edit/labels-members/card-edit-labels.jsx","cmps/shared/popover-children/mini-user.jsx","cmps/card-edit/members-container-member-preview.jsx","cmps/card-edit/labels-members/card-edit-members.jsx","cmps/card-edit/labels-members.jsx","cmps/card-edit/progress-bar.jsx","cmps/card-edit/todo-item.jsx","cmps/card-edit/checklist-edit.jsx","cmps/card-edit/card-edit-description.jsx","cmps/card-edit/card-edit-activities.jsx","cmps/card-edit/attachment-preview.jsx","cmps/card-edit/card-edit-attachment.jsx","cmps/card-edit.jsx","cmps/shared/add-board-item.jsx","cmps/card-preview/card-header.jsx","cmps/card-preview/card-label-bar-list.jsx","cmps/card-preview/card-checklists.jsx","cmps/card-preview/card-duedate.jsx","cmps/card-preview/card-footer.jsx","cmps/board/card-preview.jsx","cmps/shared/popover-children/group-actions.jsx","cmps/board/group-preview.jsx","cmps/board/group-list.jsx","cmps/board/invite-members.jsx","cmps/side-menu/change-bg.jsx","cmps/side-menu/board-icon.jsx","cmps/side-menu/search-cards.jsx","cmps/side-menu/archive.jsx","cmps/side-menu/activity-list.jsx","cmps/side-menu/side-menu.jsx","cmps/shared/popover-children/board-edit-members.jsx","cmps/board/board-header.jsx","cmps/quick-card-editor.jsx","cmps/dashboard/tasks-per-members-chart.jsx","cmps/dashboard/tasks-per-labels-chart.jsx","cmps/dashboard/tasks-per-date-chart.jsx","cmps/dashboard.jsx","pages/board-details.jsx","assets/img/login-svg-right.svg","assets/img/login-svg-left.svg","pages/login-signup.jsx","routes.js","cmps/board/board-add.jsx","cmps/app-header.jsx","root-cmp.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialState","boards","currBoard","lastRemovedBoard","isAddingBoard","currCardId","filterBy","txt","members","labels","storageService","query","get","entityType","entityId","entities","find","entity","_id","post","newEntity","_makeId","push","_save","put","updatedEntity","idx","findIndex","splice","remove","postMany","newEntities","map","dashboardQuery","gBoards","require","gUsers","delay","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","a","board","chartsData","groupsCount","cardsCount","tasksPerMemberMap","tasksPerLabelMap","forEach","member","fullname","label","title","groups","group","isArchive","cards","card","labelIds","labelId","_getLabel","setItem","stringify","length","text","possible","i","charAt","Math","floor","random","id","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","method","url","params","res","dir","response","status","sessionStorage","clear","assign","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","utilService","makeId","makeLorem","size","words","getRandomIntInclusive","min","max","ceil","ms","debounce","func","timer","timeout","args","clearTimeout","apply","STORAGE_KEY_LOGGEDIN_USER","userService","login","logout","signup","getLoggedinUser","getMiniUser","fullUser","imgUrl","getUsers","getById","userId","update","getGueastUser","googleLogin","users","user","_saveLocalUser","userCred","tokenId","mentions","removeItem","watchedUser","isLoading","rootReducer","combineReducers","boardModule","action","newState","type","boardId","filter","cardId","userModule","systemModule","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","eventBusService","listener","callListener","detail","addEventListener","removeEventListener","dispatchEvent","CustomEvent","showUserMsg","loadUsers","dispatch","onLogin","credentials","onSignup","err","myBus","_HomePage","isNavbarBG","innerWidth","handleResize","setState","changeHeaderStyle","scrollY","onGuestLogin","props","username","password","history","this","document","body","style","overflowY","className","to","onClick","src","heroImg","alt","productImg","React","Component","mapDispatchToProps","HomePage","connect","BoardPreview","toggleStarredBoard","setFavicon","bgColor","backgroundColor","backgroundImage","isStarred","ev","preventDefault","stopPropagation","toggleIsStarred","BoardList","activityTxtMap","listName","boardName","memberName","groupName","labelName","checklistName","STORAGE_KEY","boardService","save","filterByUser","URLSearchParams","toString","activity","newActivity","byMember","groupId","boardToSave","createdBy","addedBoard","loadBoard","background","backgroundSize","setAddingBoard","onUpdateCard","cardToSave","cardIdx","groupAction","onUpdateBoard","onSetCardId","_getUpdatedBoard","memberId","currGroup","OverlayScreen","cs","Loader","loader","_BoardSelect","getStarredBoards","favicon","getElementById","href","setAddBoard","loadBoards","BoardSelect","getCardById","getState","getGroupId","some","cardEditService","handleChecklistChange","checklistId","value","newVal","checklist","checklists","todos","todo","isDone","handleMemberChange","memberToAdd","handleLabelChange","labelToAdd","handleDueDateChange","timestamp","dueDate","getFormattedTime","timeLeft","Date","now","date","month","getMonth","day","getDate","getUploadTime","timePassed","minutes","hours","getMinutes","getHours","handleFileAdd","attachments","addedAt","handleFileRemove","fileId","file","getGroupById","handleMoveCard","initialBoard","initialGroup","initialCardIdx","handleCopyCard","handleToggleArchive","handleRemoveCard","MoveCard","onClose","useState","setCurrGroup","currPosition","setCurrPosition","useEffect","handleChange","target","name","item","onChange","positions","getPositions","boardToChange","CopyCard","currTitle","setCurrTitle","autoFocus","DynamicPopover","forwardRef","parentRef","children","targetRef","useRef","width","height","dimensions","setDimensions","useLayoutEffect","current","offsetWidth","offsetHeight","handleClick","e","containerElement","contains","ref","position","rect","getBoundingClientRect","bottom","bottomCheck","innerHeight","topCheck","rightCheck","left","right","top","getLocation","EditSidebarLabel","Icon","color","CardEditActionsItem","isOpen","setIsOpen","itemRef","InnerPopperCmp","useMemo","component","icon","actions","BsArrowRight","MdContentCopy","AiOutlineEye","CardEditActions","goBack","setIsArchive","toggleArchive","GoArchive","BsArrowCounterclockwise","AiOutlineMinus","MemberAvatar","getSize","round","PopperMemberPreview","isChecked","setIsChecked","isMemberChecked","m","MemberList","placeholder","CardEditDate","startDate","endDate","setDueDate","handleSubmit","selected","getTime","inline","formatWeekDay","nameOfDay","substr","PopperLabelPreview","isLabelChecked","l","LabelList","PopoverChecklist","inputRef","setTitle","focus","select","onSubmit","htmlFor","PopoverAttachFile","display","CardEditAddToCardItem","currCard","checkIfCover","_PopperCoverEdit","selectedEl","initialStyle","classList","add","handleCoverRemove","handleInitialSelect","PopperCoverEdit","CardEditAddToCard","addToCardItems","BiUser","MdLabelOutline","BsCardChecklist","BsClock","FiPaperclip","CgCreditCard","CardEditSidebar","CardEditDueDate","dueDateRef","time","getDueDateLabel","isComplete","checked","textTransform","fontSize","padding","borderRadius","CardEditLabels","addButtonRef","getCardLabels","MiniUser","MembersContainerMemberPreview","isPreviewOpen","setIsPreviewOpen","userButtonRef","cursor","CardEditMembers","isListOpen","setIsListOpen","LabelsMembers","ProgressBar","completed","fillerStyles","textAlign","transition","margin","_TodoItem","todoTitle","isEditTodo","todoTextareaRef","createRef","saveTodoBtnRef","newTodoTextarea","handleMarkTodo","handleRemoveTodo","handleTitleChange","onChangeTitle","alignSelf","paddingBottom","onFocus","alignItems","justifyContent","TodoItem","_ChecklistEdit","percentage","isAddTodo","newTodo","addTodoBtnRef","setTodoPercentage","doneTodos","num","Number","isInteger","toFixed","handleInputChange","onAddTodo","onRemoveChecklist","prevProps","maxWidth","minWidth","rows","ChecklistEdit","_CardEditDescription","isDescriptionOpen","descriptionRef","setDescriptionTextarea","handleDescriptionChange","description","onBlur","CardEditDescription","CardEditActivities","AttachmentPreview","attachment","_CardEditAttachment","CardEditAttachment","_CardEdit","modalRef","coverRef","handleLoad","getDataById","currentCard","currentGroup","handlePropertyChange","checkCardBackground","minHeight","objectFit","prevState","bg","CardEdit","_AddBoardItem","newItem","onKeyUpEnter","key","onAddItem","newCard","onAddCard","textInput","onToggleAddPop","renderedType","onKeyUp","input","createdAt","AddBoardItem","CardHeader","cardStyle","CardLabelBarList","getLabel","isCardLabelListOpen","CardChecklists","todosCount","doneTodosCount","getChecklistStr","CardDueDate","toggleCardComplete","getDueTimeStyle","event","toLocaleString","getFormatedTime","CardFooter","index","CardPreview","openCardEdit","toggleCardLabelList","onToggleQuickCardEditor","draggableId","provided","innerRef","dragHandleProps","draggableProps","GroupActions","toggleGroupArchive","GroupPreview","isAddPopOpen","groupTitle","isPopoverOpen","groupEditRef","onChangeGroupTitle","updateBoard","blurFocus","blur","setFocus","handleFocus","snapshot","onMouseDown","onMouseUp","droppableId","droppableProps","GroupList","_InviteMembers","search","getMembersIds","inviteToBoard","memberIds","includes","field","filteredUsers","InviteMembers","_ChangeBG","setBoardBG","backGround","image","ChangeBG","_BoardIcon","BoardIcon","_SearchCards","updateUrlSearchParams","urlSearchFilterBy","currVal","Array","isArray","replace","pathname","onUpdateFilter","getFilteredBoard","newFilterBy","handleUserClick","clickedIdx","handleLabelClick","prevFilterBy","currFilterBy","bind","SearchCards","withRouter","_Archive","Archive","_ActivityList","getGroupTitle","activities","fromNow","ActivityList","_SideMenu","currViewIdx","_cmpsToRender","onSelectView","viewId","getViewById","currView","onBack","_CurrView","_DefaultView","cmp","isMenuOpen","SideMenu","BoardEditMembers","_BoardHeader","isInviteOpen","element","boardTitle","numOfShownMembers","isMembersOpen","inviteRef","membersRef","onChangeBoardTitle","toggleMenu","getRemainingMembers","getExtraMembersLength","onMembersClose","onToggleDashboard","extraMembersLength","transform","BoardHeader","_QuickCardEditor","cardTitle","uploadCard","onSave","openCard","onArchiveCard","QuickCardEditor","TasksPerMemberChart","labelsColors","Object","keys","datasets","values","borderWidth","hoverOffset","options","plugins","legend","TasksPerLabelChart","fontColor","maintainAspectRatio","scales","y","ticks","x","TasksPerDateChart","tasks","links","header","textShadow","middle","selectedStyle","fontWeight","taskList","task","verticalSeparator","grip","dataViewPort","borderBottom","showLabel","boxShadow","_Dashboard","labelsColor","Dashboard","_BoardDetails","quickCardEditor","cardToEdit","updatedBoard","currentTarget","parentNode","cardToUpdate","handleOnDragEnd","result","destination","source","draggedGroup","sourceGroup","destinationGroup","groupToUpdate","boardToSend","outputUpdateBoard","resetBoard","isDashboardOpen","path","onDragEnd","direction","BoardDetails","_LoginSignup","pageMode","validate","errors","onSuccessGoogle","onGoogleLogin","onFailureGoogle","initialValues","autoComplete","clientId","buttonText","onFailure","cookiePolicy","validateOnChange","validateOnBlur","svgRight","svgLeft","LoginSignup","routes","_BoardAdd","chosenImgIdx","handleImage","imgSrc","getAttribute","addBoard","onAddBoard","images","savedBoard","_BoardAddWithRouter","BoardAdd","_AppHeader","userMenuRef","onLogout","removeUser","AppHeader","_RootCmp","isHeaderShown","route","_RootCmpWithRouter","RootCmp","ReactDOM","render","StrictMode","URL","process","origin","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e1a6b960.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    boards: [],\r\n    currBoard: null,\r\n    lastRemovedBoard: null,\r\n    isAddingBoard: false,\r\n    currCardId: null,\r\n    filterBy: {\r\n        txt: '',\r\n        members: [],\r\n        labels: []\r\n    }\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    var newState = state\r\n    var boards\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            newState = { ...state, boards: action.boards }\r\n            break\r\n        case 'UPDATE_FILTER':\r\n            newState = {...state, filterBy: action.filterBy }\r\n            break\r\n        case 'SET_CURR_BOARD':\r\n            newState = { ...state, currBoard: action.board }\r\n            break\r\n        case 'REMOVE_BOARD':\r\n            const lastRemovedBoard = state.boards.find(board => board._id === action.boardId)\r\n            boards = state.boards.filter(board => board._id !== action.boardId)\r\n            newState = { ...state, boards, lastRemovedBoard }\r\n            break\r\n        case 'SET_ADDING_BOARD':\r\n            newState = { ...state, isAddingBoard: action.isAddingBoard }\r\n            break\r\n        case 'ADD_BOARD':\r\n            newState = { ...state, boards: [...state.boards, action.board] }\r\n            break\r\n        case 'UPDATE_BOARD':\r\n            // boards = state.boards.map(board => (board._id === action.board._id) ? action.board : board)\r\n            newState = { ...state, currBoard: action.board }\r\n            break\r\n        case 'SET_CARD_ID':\r\n            newState = { ...state, currCardId: action.cardId }\r\n            break\r\n        case 'UNDO_REMOVE_BOARD':\r\n            if (state.lastRemovedBoard) {\r\n                newState = { ...state, boards: [...state.boards, state.lastRemovedBoard], lastRemovedBoard: null }\r\n            }\r\n            break\r\n        default:\r\n    }\r\n    return newState\r\n\r\n}","export const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    postMany,\r\n    dashboardQuery\r\n}\r\n\r\n\r\nconst gBoards = require('../data/board.json');\r\nconst gUsers = require('../data/user.json');\r\n\r\nfunction query(entityType, delay = 500) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType))\r\n    if (!entities) {\r\n        entities = (entityType === 'board') ? gBoards : gUsers;\r\n        _save(entityType, entities)\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                // reject('OOOOPs')\r\n                resolve(entities)\r\n            }, delay)\r\n        })\r\n        // return Promise.resolve(entities)\r\n}\r\n\r\nasync function dashboardQuery(entityType, entityId, delay = 500) {\r\n    const boards = await query(entityType)\r\n    const board = boards.find(board => board._id === entityId)\r\n    const chartsData = {\r\n        groupsCount: 0,\r\n        cardsCount: 0,\r\n        tasksPerMemberMap: {},\r\n        tasksPerLabelMap: {}\r\n    };\r\n    if (board.members) {\r\n        board.members.forEach(member => {\r\n            chartsData.tasksPerMemberMap[member.fullname] = 0\r\n        })\r\n    }\r\n    if (board.labels) {\r\n        board.labels.forEach(label => {\r\n            chartsData.tasksPerLabelMap[label.title] = 0\r\n        })\r\n    }\r\n\r\n    if (board.groups) {\r\n        board.groups.forEach(group => {\r\n            if (!group.isArchive) {\r\n                chartsData.groupsCount = chartsData.groupsCount + 1\r\n                group.cards.forEach(card => {\r\n                    if (!card.isArchive) chartsData.cardsCount = chartsData.cardsCount + 1\r\n                    if (card.members) {\r\n                        card.members.forEach(member => {\r\n                            chartsData.tasksPerMemberMap[member.fullname]++;\r\n                        })\r\n                    }\r\n                    if (card.labelIds) {\r\n                        card.labelIds.forEach(labelId => {\r\n                            const label = _getLabel(board.labels, labelId);\r\n                            chartsData.tasksPerLabelMap[label.title]++\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(chartsData)\r\n        }, delay)\r\n    })\r\n}\r\n\r\n// function queryUsers(entityType, delay = 500) {\r\n//     var entities = JSON.parse(localStorage.getItem(entityType)) || gUsers;\r\n\r\n//     return new Promise((resolve, reject) => {\r\n//             setTimeout(() => {\r\n//                 // reject('OOOOPs')\r\n//                 resolve(entities)\r\n//             }, delay)\r\n//         })\r\n//         // return Promise.resolve(entities)\r\n// }\r\n\r\n\r\nfunction get(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => entities.find(entity => entity._id === entityId))\r\n}\r\n\r\nfunction post(entityType, newEntity) {\r\n    newEntity._id = _makeId()\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.push(newEntity)\r\n            _save(entityType, entities)\r\n            return newEntity\r\n        })\r\n}\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n            entities.splice(idx, 1, updatedEntity)\r\n            _save(entityType, entities)\r\n            return updatedEntity\r\n        })\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === entityId)\r\n            entities.splice(idx, 1)\r\n            _save(entityType, entities)\r\n        })\r\n}\r\n\r\n\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}\r\n\r\nfunction postMany(entityType, newEntities) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            newEntities = newEntities.map(entity => ({...entity, _id: _makeId() }))\r\n            entities.push(...newEntities)\r\n            _save(entityType, entities)\r\n            return entities\r\n        })\r\n}\r\n\r\nfunction _getLabel(labels, labelId) {\r\n    const label = labels.find((label) => label.id === labelId);\r\n    return label;\r\n};","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n// const BASE_URL = '/api/'\r\n// console.log(process.env.NODE_ENV);\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            sessionStorage.clear();\r\n            window.location.assign('/')\r\n        }\r\n        throw err\r\n    }\r\n}","import io from 'socket.io-client'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n// var socketIsReady = false;\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb=null) {\r\n      if (!socket) return;\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\n// function createDummySocketService() {\r\n//   var listenersMap = {}\r\n//   const socketService = {\r\n//     listenersMap,\r\n//     setup() {\r\n//       listenersMap = {}\r\n//     },\r\n//     terminate() {\r\n//       this.setup()\r\n//     },\r\n//     on(eventName, cb) {\r\n//       listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n//     },\r\n//     off(eventName, cb) {\r\n//       if (!listenersMap[eventName]) return\r\n//       if (!cb) delete listenersMap[eventName]\r\n//       else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n//     },\r\n//     emit(eventName, data) {\r\n//       if (!listenersMap[eventName]) return\r\n//       listenersMap[eventName].forEach(listener => {\r\n//         listener(data)\r\n//       })\r\n//     },\r\n//     debugMsg() {\r\n//       this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n//     },\r\n//   }\r\n//   window.listenersMap = listenersMap;\r\n//   return socketService\r\n// }\r\n\r\n\r\n// // Basic Tests\r\n// // function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\r\n// // socketService.on('baba', cb)\r\n// // socketService.on('baba', cb)\r\n// // socketService.on('baba', cb)\r\n// // socketService.on('mama', cb)\r\n// // socketService.emit('baba', 'Puk')\r\n// // socketService.off('baba', cb)\r\n\r\n\r\n// socketService.on(SOCKET_EVENT_REVIEW_ABOUT_YOU, review => {\r\n//   console.log('Review about me!', review);\r\n  \r\n// })\r\n\r\n","export const utilService = {\r\n    makeId,\r\n    makeLorem,\r\n    getRandomIntInclusive,\r\n    delay,\r\n    debounce\r\n    // handleChange\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction debounce(func, timeout = 300){\r\n    let timer;\r\n    return (...args) => {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => { func.apply(this, args); }, timeout);\r\n    };\r\n  }\r\n\r\nfunction makeLorem(size = 100) {\r\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn'];\r\n    var txt = '';\r\n    while (size > 0) {\r\n        size--;\r\n        txt += words[Math.floor(Math.random() * words.length)] + ' ';\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\n// function handleChange({ target: { name, value, type } }) {\r\n//     this.setState(prevState => ({ ...prevState, [name]: value }))\r\n// }\r\n\r\n","import { storageService } from './async-storage.service'\r\nimport { httpService } from './http.service'\r\nimport { socketService, SOCKET_EVENT_USER_UPDATED } from './socket.service'\r\nimport { utilService } from './util.service';\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\r\nvar gWatchedUser = null;\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedinUser,\r\n    getMiniUser,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getGueastUser,\r\n    googleLogin\r\n}\r\n\r\nwindow.userService = userService\r\n\r\n\r\nasync function getUsers() {\r\n    // const users = storageService.query('user')\r\n    // return users\r\n    const users = await httpService.get(`user`)\r\n    return users\r\n}\r\n\r\nasync function getById(userId) {\r\n    const user = await storageService.get('user', userId)\r\n        // const user = await httpService.get(`user/${userId}`)\r\n    gWatchedUser = user;\r\n    return user;\r\n}\r\n\r\nfunction remove(userId) {\r\n    return storageService.remove('user', userId)\r\n        // return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    await storageService.put('user', user)\r\n        // user = await httpService.put(`user/${user._id}`, user)\r\n        // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n    return user;\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // console.log('users: ', users)\r\n    // const user = users.find(user => user.username.toLocaleLowerCase() === userCred.username.toLocaleLowerCase())\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n        // socketService.emit('set-user-socket', user._id);\r\n    if (user) return _saveLocalUser(user)\r\n}\r\n\r\nasync function googleLogin(tokenId) {\r\n    try {\r\n        const user = await httpService.post('auth/googlelogin', { tokenId })\r\n        if (user) return _saveLocalUser(user)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    userCred.imgUrl = ''\r\n    userCred.mentions = []\r\n    userCred.boards = []\r\n        // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n        // socketService.emit('set-user-socket', user._id);\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\r\n        // socketService.emit('unset-user-socket');\r\n        // return await httpService.post('auth/logout')\r\n}\r\n\r\n\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    const loggedinUser = JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER) || 'null')\r\n    return loggedinUser\r\n}\r\n\r\nfunction getMiniUser() {\r\n    const fullUser = getLoggedinUser() || { _id: utilService.makeId(), fullname: 'Guest' }\r\n    return { _id: fullUser._id, fullname: fullUser.fullname, imgUrl: fullUser.imgUrl }\r\n}\r\n\r\nfunction getGueastUser() {\r\n    return { _id: utilService.makeId(), fullname: 'Guest' }\r\n}\r\n\r\n\r\n// (async () => {\r\n//     await login({ username: 'morty@smith.com' })\r\n// })();\r\n\r\n//     await userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 10000, isAdmin: true})\r\n//     await userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 10000})\r\n\r\n\r\n\r\n// This IIFE functions for Dev purposes \r\n// It allows testing of real time updates (such as sockets) by listening to storage events\r\n// (async () => {\r\n//     var user = getLoggedinUser()\r\n//     // Dev Helper: Listens to when localStorage changes in OTHER browser\r\n\r\n//     // Here we are listening to changes for the watched user (comming from other browsers)\r\n//     window.addEventListener('storage', async () => {\r\n//         if (!gWatchedUser) return;\r\n//         const freshUsers = await storageService.query('user')\r\n//         const watchedUser = freshUsers.find(u => u._id === gWatchedUser._id)\r\n//         if (!watchedUser) return;\r\n//         if (gWatchedUser.score !== watchedUser.score) {\r\n//             console.log('Watched user score changed - localStorage updated from another browser')\r\n//             socketService.emit(SOCKET_EVENT_USER_UPDATED, watchedUser)\r\n//         }\r\n//         gWatchedUser = watchedUser\r\n//     })\r\n// })();\r\n\r\n// This is relevant when backend is connected\r\n// (async () => {\r\n//     var user = getLoggedinUser()\r\n//     if (user) socketService.emit('set-user-socket', user._id)\r\n// })();","import { userService } from '../services/user.service.js'\r\n\r\n\r\nconst initialState = {\r\n    user: userService.getLoggedinUser() || userService.getGueastUser(),\r\n    users: [],\r\n    watchedUser: null\r\n}\r\nexport function userReducer(state = initialState, action) {\r\n    var newState = state;\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            newState = {...state, user: action.user }\r\n            break;\r\n        case 'SET_WATCHED_USER':\r\n            newState = {...state, watchedUser: action.user }\r\n            break;\r\n        case 'REMOVE_USER':\r\n            newState = {\r\n                ...state,\r\n                users: state.users.filter(user => user._id !== action.userId)\r\n            }\r\n            break;\r\n        case 'SET_USERS':\r\n            newState = {...state, users: action.users }\r\n            break;\r\n        default:\r\n    }\r\n    // For debug:\r\n    // window.userState = newState;\r\n    // console.log('State:', newState);\r\n    return newState;\r\n\r\n}","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n","// const { createStore, applyMiddleware, combineReducers, compose } = Redux\r\n// const thunk = ReduxThunk.default\r\n\r\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nimport { boardReducer } from './board.reducer.js'\r\nimport { userReducer } from './user.reducer.js'\r\nimport { systemReducer } from './system.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    boardModule: boardReducer,\r\n    userModule: userReducer,\r\n    systemModule: systemReducer,\r\n})\r\n\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n// window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__();\r\n// Lets wire up thunk and also redux-dev-tools:\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n    // export const store = createStore(rootReducer, applyMiddleware(thunk))","function on(eventName, listener) {\r\n\r\n    const callListener = ({ detail }) => {\r\n        listener(detail);\r\n    };\r\n\r\n    window.addEventListener(eventName, callListener);\r\n\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener);\r\n    };\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\nexport const eventBusService = { on, emit };\r\n\r\nexport function showUserMsg(txt, type = '') {\r\n    eventBusService.emit('show-user-msg', { txt, type })\r\n}\r\nexport function showSuccessMsg(txt) {\r\n    showUserMsg(txt, 'success')\r\n}\r\nexport function showErrorMsg(txt) {\r\n    showUserMsg(txt, 'danger')\r\n}\r\n\r\nwindow.myBus = eventBusService;\r\nwindow.showUserMsg = showUserMsg;\r\n\r\n// eventBusService.on('baba', (x)=>console.log('Hi Baba', x))\r\n// eventBusService.on('baba', (x)=>console.log('Hello Baba Ji', x))\r\n// eventBusService.emit('baba', [5, 8, 11])\r\n// setTimeout(()=>{\r\n//     eventBusService.emit('baba', 17)\r\n// }, 2000)\r\n\r\n/* Listening Component...\r\n    import {eventBusService} from 'path...event-bus-service'\r\n    eventBusService.on('some-event', (dataFromEvent) => {\r\n    do something with dataFromEvent\r\n    })\r\n\r\n   Receiving Component...\r\n    eventBusService.emit('some-event', data)\r\n*/","import { userService } from \"../services/user.service.js\";\r\nimport { showErrorMsg } from '../services/event-bus.service.js'\r\nimport { socketService, SOCKET_EMIT_USER_WATCH, SOCKET_EVENT_USER_UPDATED } from \"../services/socket.service.js\";\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            // dispatch({ type: 'LOADING_START' })\r\n            const users = await userService.getUsers()\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('UserActions: err in loadUsers', err)\r\n        } \r\n        // finally {\r\n        //     dispatch({ type: 'LOADING_DONE' })\r\n        // }\r\n    }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.remove(userId)\r\n            dispatch({ type: 'REMOVE_USER', userId })\r\n        } catch (err) {\r\n            console.log('UserActions: err in removeUser', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onLogin(credentials) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.login(credentials)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user\r\n            })\r\n        } catch (err) {\r\n            console.log('Cannot login', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onGoogleLogin(tokenId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.googleLogin(tokenId)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user\r\n            })\r\n        } catch (err) {\r\n            console.log('Cannot login', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onSignup(credentials) {\r\n    return (dispatch) => {\r\n        userService.signup(credentials)\r\n            .then(user => {\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('Cannot signup', err)\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport function onLogout() {\r\n    return (dispatch) => {\r\n        userService.logout()\r\n            .then(() => dispatch({\r\n                type: 'SET_USER',\r\n                user: null\r\n            }))\r\n            .catch(err => {\r\n                console.log('Cannot logout', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function loadAndWatchUser(userId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.getById(userId);\r\n            dispatch({ type: 'SET_WATCHED_USER', user })\r\n            socketService.emit(SOCKET_EMIT_USER_WATCH, userId)\r\n            socketService.off(SOCKET_EVENT_USER_UPDATED)\r\n            socketService.on(SOCKET_EVENT_USER_UPDATED, user => {\r\n                console.log('USER UPADTED FROM SOCKET');\r\n                dispatch({ type: 'SET_WATCHED_USER', user })\r\n            })\r\n        } catch (err) {\r\n            showErrorMsg('Cannot load user')\r\n            console.log('Cannot load user', err)\r\n        }\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/hero.e8878a54.png\";","export default __webpack_public_path__ + \"static/media/homepage-product.162d5e7b.jpg\";","import React from 'react'\r\nimport { SiTrello } from 'react-icons/si'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { onLogin } from '../store/user.actions'\r\nimport heroImg from '../assets/img/hero.png'\r\nimport productImg from '../assets/img/homepage-product.jpg'\r\n\r\n\r\n\r\nclass _HomePage extends React.Component {\r\n\r\n    state = {\r\n        isNavbarBG: false,\r\n        innerWidth: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.changeHeaderStyle)\r\n        window.addEventListener('resize', this.handleResize)\r\n        this.handleResize()\r\n        document.body.style.overflowY = 'scroll'\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.changeHeaderStyle)\r\n        window.removeEventListener('resize', this.handleResize)\r\n        document.body.style.overflowY = 'hidden'\r\n    }\r\n\r\n    handleResize = () => {\r\n        this.setState({ innerWidth: window.innerWidth })\r\n    }\r\n\r\n    changeHeaderStyle = () => {\r\n        const { isNavbarBG } = this.state\r\n        if (window.scrollY > 50 && !isNavbarBG) {\r\n            this.setState({ isNavbarBG: true })\r\n        } else if (window.scrollY < 50 && isNavbarBG) {\r\n            this.setState({ isNavbarBG: false })\r\n        }\r\n    }\r\n\r\n    onGuestLogin = () => {\r\n        this.props.onLogin({username: 'rick@sanchez.com', password: 'rick123'})\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    render() {\r\n        const { isNavbarBG } = this.state\r\n        return (\r\n            <section className=\"home-page main-container\">\r\n                <header className={`home-header ${(isNavbarBG) ? 'bg-visible' : ''}`}>\r\n                    <span className=\"logo\"> <SiTrello /> Marshmello</span>\r\n                    <div className=\"header-buttons\">\r\n                        <Link to=\"/login\"><button className=\"login-btn nav-button\">Log in</button></Link>\r\n                        <Link to=\"/signup\"><button className=\"signup-btn nav-button\">Sign up</button></Link>\r\n                    </div>\r\n                </header>\r\n                <div className=\"home-first-fold\">\r\n                    <div className=\"first-fold-text\">\r\n                        <h1>Marshmello helps teams move work forward.</h1>\r\n                        <p>Collaborate, manage projects, and reach new productivity peaks.\r\n                            From high rises to the home office, the way your team works is unique—accomplish it all with Marshmello.</p>\r\n                        <button className=\"cta-btn nav-button\" onClick={() => this.onGuestLogin()}>Get Started!</button>\r\n                    </div>\r\n                    <div className=\"first-fold-img\">\r\n                        <img src={heroImg} alt=\"hero\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"home-second-fold\">\r\n                    <div className=\"second-fold-text\">\r\n                        <h1>It’s more than work. It’s a way of working together.</h1>\r\n                        <p>Start with a Marshmello board, lists, and cards. Customize and expand with more features as your teamwork grows. Manage projects, organize tasks, and build team spirit—all in one place.</p>\r\n                    </div>\r\n                    <div className=\"second-fold-img\">\r\n                        <img src={productImg} alt=\"hero\" />\r\n                    </div>\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onLogin\r\n}\r\n\r\nexport const HomePage = connect(mapStateToProps, mapDispatchToProps)(_HomePage)","import React from 'react';\r\nimport { AiOutlineStar } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport function BoardPreview({ board, toggleStarredBoard, setFavicon }) {\r\n\r\n    function toggleIsStarred(ev) {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        toggleStarredBoard(board)\r\n    }\r\n\r\n    return (\r\n        <Link to={`/board/${board._id}`}><div onClick={() => setFavicon(board.style)} className=\"board-preview\" style={(board.style.bgColor) ? { backgroundColor: `${board.style.bgColor}` } : { backgroundImage: `url(${board.style.imgUrl})` }}>\r\n            <div className=\"preview-content\">\r\n                <h4 className=\"board-title\">{board.title}</h4>\r\n                <button className={`star-btn ${(board.isStarred) ? 'starred' : ''}`} onClick={(ev) => toggleIsStarred(ev)}><AiOutlineStar /></button>\r\n            </div>\r\n        </div></Link>\r\n    )\r\n}","import React from 'react';\r\nimport { BoardPreview } from './board-preview';\r\n\r\nexport function BoardList({ boards, toggleStarredBoard, setFavicon }) {\r\n    return (\r\n        <div className=\"board-list flex\">\r\n            {boards.map(board =>\r\n                <BoardPreview key={board._id} board={board} toggleStarredBoard={toggleStarredBoard} setFavicon={setFavicon} />)}\r\n        </div>\r\n    );\r\n}","import { userService } from \"./user.service\"\r\n\r\nexport const activityTxtMap = {\r\n    addGroup: (listName) => {\r\n        return `Added list: ${listName}`\r\n    },\r\n    addCard: () => {\r\n        return `Added card:`\r\n    },\r\n    socketUpdate: ()=>{\r\n        return 'UPDATE_BY_SOCKET'\r\n    },\r\n    renameBoard: (boardName) => {\r\n        return `Renamed this board to: ${boardName}`\r\n    },\r\n    inviteMember: (memberName) => {\r\n        return `Invited ${memberName} to this board`\r\n    },\r\n    changeBackground: () => {\r\n        return `Changed the background of this board`\r\n    },\r\n    editCard: () => {\r\n        return `Edited card title: `\r\n    },\r\n    archiveList: (listName) => {\r\n        return `Archived the list: ${listName}`\r\n    },\r\n    completeCard: () => {\r\n        return `Marked the following card as complete: `\r\n    },\r\n    unCompleteCard: () => {\r\n        return `Marked the following card as incomplete: `\r\n    },\r\n    changeDescription: () => {\r\n        return `Changed the description in card: `\r\n    },\r\n    changeGroupTitle: (groupName) => {\r\n        return `Changed the title in list: ${groupName}`\r\n    },\r\n    addMemberToCard: (memberName) => {\r\n        return `Added ${memberName} to a card`\r\n    },\r\n    removeMemberFromCard: (memberName) => {\r\n        return `Removed ${memberName} from a card`\r\n    },\r\n    addLabel: (labelName) => {\r\n        return `Added the label ${labelName} to a card`\r\n    },\r\n    removeLabel: (labelName) => {\r\n        return `Removed the label ${labelName} from a card`\r\n    },\r\n    addChecklist: (checklistName) => {\r\n        return `Added checklist ${checklistName} to a card`\r\n    }\r\n}\r\n\r\n","import { storageService } from './async-storage.service.js'\r\nimport { utilService } from './util.service.js'\r\nimport { userService } from './user.service.js'\r\nimport { httpService } from './http.service'\r\n\r\nconst STORAGE_KEY = 'board'\r\n    // const listeners = []\r\n\r\nexport const boardService = {\r\n    query,\r\n    getById,\r\n    save,\r\n    remove,\r\n    dashboardQuery\r\n}\r\nwindow.cs = boardService;\r\n\r\n\r\nasync function query(filterByUser) {\r\n    // return storageService.query(STORAGE_KEY)\r\n    try {\r\n        const boards = await httpService.get('board', filterByUser)\r\n        return boards\r\n    } catch (err) {\r\n        console.log('Front: Error loading boards', err)\r\n    }\r\n}\r\n\r\nasync function getById(boardId, filterBy) {\r\n    // return storageService.get(STORAGE_KEY, boardId)\r\n    try {\r\n        if (typeof filterBy === 'object') {\r\n            filterBy = (new URLSearchParams(filterBy)).toString()\r\n        }\r\n        const board = await httpService.get(`board/${boardId}`, filterBy)\r\n        return board\r\n    } catch (err) {\r\n        console.log(`Front: Error loading board with ID: ${boardId}`, err)\r\n    }\r\n}\r\n\r\nasync function dashboardQuery(boardId) {\r\n    // const chartsData = await storageService.dashboardQuery(STORAGE_KEY, boardId)\r\n    // return chartsData\r\n    try {\r\n        const chartsData = await httpService.get(`board/dashboard/${boardId}`)\r\n        return chartsData\r\n    } catch (err) {\r\n        console.log('Front: Error loading chartsData', err)\r\n    }\r\n}\r\n\r\n\r\nasync function remove(boardId) {\r\n    return storageService.remove(STORAGE_KEY, boardId)\r\n        // try {\r\n        //     return httpService.delete(`board/${boardId}`)\r\n        // } catch (err) {\r\n        //     console.log(`Front: Error deleting board with ID: ${boardId}`);\r\n        // }\r\n}\r\n\r\nasync function save(board, activity = null) {\r\n    if (board._id) {\r\n        if (activity) {\r\n            const newActivity = {\r\n                    txt: activity.txt,\r\n                    id: utilService.makeId(),\r\n                    byMember: userService.getMiniUser(),\r\n                    card: (activity.card) ? { id: activity.card.id, title: activity.card.title } : {},\r\n                    groupId: (activity.groupId) ? activity.groupId : null\r\n                }\r\n                // console.log('Activity from service: ', newActivity)\r\n                // board.activities.unshift(newActivity)\r\n                // console.log('Board activities from service: ', board.activities)\r\n            return httpService.put(`board/${board._id}`, { board: board, activity: newActivity })\r\n        } else {\r\n            // return storageService.put(STORAGE_KEY, board)\r\n            return httpService.put(`board/${board._id}`, { board: board, activity: null })\r\n        }\r\n    } else {\r\n        const boardToSave = {\r\n                title: board.title,\r\n                style: board.style,\r\n                createdBy: userService.getMiniUser(),\r\n                members: [userService.getMiniUser()],\r\n            }\r\n            // return storageService.post(STORAGE_KEY, boardToSave)\r\n        const addedBoard = await httpService.post(`board`, boardToSave)\r\n        return addedBoard\r\n    }\r\n}\r\n\r\n\r\n// function subscribe(listener) {\r\n//     listeners.push(listener)\r\n// }\r\n\r\n// function _notifySubscribersBoardsChanged(boards) {\r\n//     console.log('Notifying Listeners');\r\n//     listeners.forEach(listener => listener(boards))\r\n// }\r\n\r\n// window.addEventListener('storage', () => {\r\n//     console.log('Storage Changed from another Browser!');\r\n//     query()\r\n//         .then(boards => {\r\n//             _notifySubscribersCarsChanged(boards)\r\n//         }) \r\n// })","import { activityTxtMap } from \"../services/activity.service.js\";\r\nimport { boardService } from \"../services/board.service.js\";\r\nimport { socketService } from \"../services/socket.service.js\";\r\n// import { userService } from \"../services/user.service.js\";\r\n// import { showSuccessMsg, showErrorMsg } from '../services/event-bus.service.js';\r\nexport function loadBoards(filterBy) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const boards = await boardService.query(filterBy)\r\n            dispatch({\r\n                type: 'SET_BOARDS',\r\n                boards\r\n            })\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot load boards')\r\n            console.log('Cannot load boards', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadBoard(boardId, filterBy) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const board = await boardService.getById(boardId, filterBy)\r\n            document.body.style.background = board.style.bgColor ? board.style.bgColor : `url(\"${board.style.imgUrl}\")`\r\n            document.body.style.backgroundSize = 'cover'\r\n\r\n\r\n            dispatch({\r\n                type: 'SET_CURR_BOARD',\r\n                board\r\n            })\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot load boards')\r\n            console.log('Cannot load board', err)\r\n        }\r\n    }\r\n}\r\nexport function resetBoard() {\r\n    document.body.style.background = 'unset'\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_CURR_BOARD',\r\n            board: null\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport function onRemoveBoard(boardId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            await boardService.remove(boardId)\r\n            console.log('Deleted Succesfully!');\r\n            dispatch({\r\n                type: 'REMOVE_BOARD',\r\n                boardId\r\n            })\r\n            // showSuccessMsg('Board removed')\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot remove board')\r\n            console.log('Cannot remove board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setAddingBoard(isAddingBoard) {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_ADDING_BOARD',\r\n            isAddingBoard: isAddingBoard\r\n        })\r\n    }\r\n}\r\n\r\nexport function onAddBoard(board) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const savedBoard = await boardService.save(board)\r\n            console.log('Added Board', savedBoard);\r\n            dispatch({\r\n                type: 'ADD_BOARD',\r\n                board: savedBoard\r\n            })\r\n            socketService.emit('update', true)\r\n            return savedBoard\r\n            // showSuccessMsg('Board added')\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot add board')\r\n            console.log('Cannot add board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onAddCard(newCard, groupId, board, activity) {\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    newCard = { ...newCard, createdAt: Date.now(), isComplete: false };\r\n\r\n    group.cards = (group.cards) ? [...group.cards, newCard] : [newCard]\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, board, activity)\r\n}\r\n\r\nexport function onRemoveCard(cardId, groupId, board) {\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    group.cards = [...group.cards.filter(card => card.id !== cardId)]\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, board)\r\n}\r\n\r\nexport function onUpdateCard(cardToSave, groupId, board, activity = null) {\r\n    console.log('cardToSave', cardToSave);\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    const cardIdx = group.cards.findIndex(card => card.id === cardToSave.id)\r\n    group.cards.splice(cardIdx, 1, cardToSave)\r\n    const groupAction = { type: 'UPDATE_GROUP', group }\r\n    return onUpdateBoard(groupAction, board, activity)\r\n}\r\n\r\nexport function onSetCardId(cardId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: 'SET_CARD_ID',\r\n                cardId\r\n            })\r\n        } catch (err) {\r\n            // showErrorMsg('Cannot load boards')\r\n            console.log('Cannot set card', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onUpdateFilter(filterBy) {\r\n    return (dispatch) => {\r\n        const action = { type: 'UPDATE_FILTER', filterBy }\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport function outputUpdateBoard(action, board, activity) {\r\n    return async (dispatch) => {\r\n        const boardToSave = _getUpdatedBoard(action, board)\r\n        dispatch({\r\n            type: 'UPDATE_BOARD',\r\n            board: boardToSave\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport function onUpdateBoard(action, board, activity = null) {\r\n    return async (dispatch) => {\r\n        const boardToSave = _getUpdatedBoard(action, board)\r\n        dispatch({\r\n            type: 'UPDATE_BOARD',\r\n            board: boardToSave\r\n        })\r\n\r\n        try {\r\n            if (!action.type) action.board = board\r\n            socketService.emit('board-update', { action, activity })\r\n            await boardService.save(boardToSave, activity)\r\n        } catch (err) {\r\n            console.log('Cannot save board', err)\r\n        }\r\n    }\r\n}\r\n\r\nfunction _getUpdatedBoard(action, board) {\r\n    const boardToSave = { ...board }\r\n    switch (action.type) {\r\n        case 'TOGGLE_STARRED':\r\n            boardToSave.isStarred = action.isStarred\r\n            break;\r\n        case 'CHANGE_BOARD_STYLE':\r\n            boardToSave.style = action.style\r\n            document.body.style.background = boardToSave.style.bgColor ? boardToSave.style.bgColor : `no-repeat url(\"${boardToSave.style.imgUrl}\")`\r\n            document.body.style.backgroundSize = 'cover'\r\n            break;\r\n        case 'CHANGE_TITLE':\r\n            boardToSave.title = action.title\r\n            break;\r\n        case 'ADD_BOARD_MEMBER':\r\n            console.log('members from action: ', boardToSave.members)\r\n            boardToSave.members = [...boardToSave.members, action.member]\r\n            break;\r\n        case 'REMOVE_BOARD_MEMBER':\r\n            console.log('members from action: ', boardToSave.members)\r\n            boardToSave.members = [...boardToSave.members.filter(member => member._id !== action.memberId)]\r\n            break;\r\n        case 'ADD_GROUP':\r\n            boardToSave.groups = [...boardToSave.groups, action.group]\r\n            break;\r\n        case 'UPDATE_GROUP':\r\n            boardToSave.groups = [...boardToSave.groups.map(currGroup => currGroup.id === action.group.id ? action.group : currGroup)]\r\n            break\r\n        case 'REMOVE_GROUP':\r\n            boardToSave.groups = [...boardToSave.groups.filter(currGroup => currGroup.id !== action.group.id)]\r\n            break\r\n    }\r\n    return boardToSave;\r\n}","export function OverlayScreen() {\r\n    return (\r\n        <div className=\"overlay-screen\"></div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loader.1a7da032.svg\";","import loader from '../../assets/img/loader.svg'\r\nexport function Loader() {\r\n    return (\r\n        <div className=\"loader\">\r\n            <img src={loader} alt=\"loading...\" />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardList } from '../cmps/board-list'\r\nimport { AiFillStar } from 'react-icons/ai'\r\nimport { SiTrello } from 'react-icons/si'\r\n\r\nimport { loadBoards, setAddingBoard, onUpdateBoard } from '../store/board.actions'\r\nimport { OverlayScreen } from '../cmps/overlay-screen'\r\nimport { Loader } from '../cmps/shared/loader'\r\nimport { socketService } from '../services/socket.service'\r\nimport { userService } from '../services/user.service'\r\n\r\n\r\nclass _BoardSelect extends React.Component {\r\n    state = {\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const user = userService.getMiniUser()\r\n        console.log(user)\r\n        await this.props.loadBoards(user)\r\n    }\r\n\r\n    getStarredBoards = () => {\r\n        return this.props.boards.filter(board => board.isStarred)\r\n    }\r\n\r\n    toggleStarredBoard = (board) => {\r\n        const { onUpdateBoard } = this.props\r\n        board.isStarred = !board.isStarred\r\n        onUpdateBoard({ type: 'TOGGLE_STARRED', isStarred: board.isStarred }, board)\r\n        socketService.emit('update', true)\r\n    }\r\n    setFavicon = (style) => {\r\n        const favicon = document.getElementById('favicon')\r\n        if (style.imgUrl) {\r\n            favicon.href = style.imgUrl\r\n        } else {\r\n            favicon.href = \"../../public/favicon.ico\"\r\n        }\r\n    }\r\n\r\n    setAddBoard = () => {\r\n        this.props.setAddingBoard(true)\r\n    }\r\n\r\n    render() {\r\n        const { boards, isAddingBoard } = this.props\r\n        if (!boards) return <Loader />\r\n        return (\r\n            <div className=\"boards-select main-container\">\r\n                <h2> <AiFillStar /> Starred Boards</h2>\r\n                <div className=\"starred-boards\">\r\n                    <BoardList setFavicon={this.setFavicon} boards={this.getStarredBoards()} toggleStarredBoard={this.toggleStarredBoard} />\r\n                </div>\r\n                <h2> <SiTrello /> Workspace</h2>\r\n                <div className=\"workspace\">\r\n                    <BoardList boards={boards} toggleStarredBoard={this.toggleStarredBoard} setFavicon={this.setFavicon} />\r\n                    <div className=\"board-preview create-board-btn\" onClick={() => this.setAddBoard()}>\r\n                        <h4>Create New Board</h4>\r\n                    </div>\r\n                </div>\r\n                {isAddingBoard && <OverlayScreen />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardModule.boards,\r\n        isAddingBoard: state.boardModule.isAddingBoard,\r\n        board: state.boardModule.currBoard,\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    setAddingBoard,\r\n    onUpdateBoard\r\n}\r\n\r\nexport const BoardSelect = connect(mapStateToProps, mapDispatchToProps)(_BoardSelect)\r\n","import { store } from '../store/store'\r\nimport { utilService } from './util.service'\r\n\r\nconst handleChecklistChange = (type, checklistId, value, newVal) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    if (checklistId) {\r\n        const checklist = card.checklists.find(checklist => checklist.id === checklistId)\r\n        if (type === 'addTodo') {\r\n            checklist.todos.push(value)\r\n\r\n        } else if (type === 'markTodo') {\r\n            const todo = checklist.todos.find(todo => todo.id === value)\r\n            todo.isDone = !todo.isDone\r\n\r\n        } else if (type === 'removeTodo') {\r\n            const idx = checklist.todos.findIndex(todo => todo.id === value)\r\n            checklist.todos.splice(idx, 1)\r\n\r\n        } else if (type === 'changeTitle') {\r\n            const todo = checklist.todos.find(todo => todo.id === value)\r\n            todo.title = newVal\r\n\r\n        } else if (type === 'removeChecklist') {\r\n            const idx = card.checklists.findIndex(checklist => checklist.id === checklistId)\r\n            card.checklists.splice(idx, 1)\r\n\r\n        }\r\n    } else {\r\n        if (type === 'addChecklist') {\r\n            if (!card.checklists) card.checklists = []\r\n            card.checklists.push({ id: utilService.makeId(), title: value, todos: [] })\r\n        }\r\n    }\r\n\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleMemberChange = (memberId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    let card = getCardById(cardId, groupId)\r\n\r\n    if (!card.members) card.members = []\r\n    const isMemberExist = card?.members?.some(member => member._id === memberId)\r\n    if (isMemberExist) card = { ...card, members: card?.members.filter(member => member._id !== memberId) }\r\n    else {\r\n        const memberToAdd = board.members.find(member => member._id === memberId)\r\n        card.members.push(memberToAdd)\r\n    }\r\n\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleLabelChange = (labelId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    let card = getCardById(cardId, groupId)\r\n    if (!card.labelIds) card.labelIds = []\r\n    const isLabelExist = card?.labelIds.some(id => id === labelId)\r\n    if (isLabelExist) card = { ...card, labelIds: card?.labelIds.filter(id => id !== labelId) }\r\n    else {\r\n        const labelToAdd = board.labels.find(label => label.id === labelId)\r\n        card.labelIds.push(labelToAdd.id)\r\n    }\r\n\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleDueDateChange = (timestamp) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    let card = getCardById(cardId, groupId)\r\n    card.dueDate = timestamp\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst getCardById = (cardId, groupId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    const group = board.groups.find(group => group.id === groupId)\r\n    return group.cards.find(card => card.id === cardId)\r\n}\r\n\r\nconst getGroupById = (cardId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    return board.groups.find(group => group.cards.find(card => card.id === cardId))\r\n}\r\n\r\nconst getGroupId = (cardId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    return board.groups.find(group => group.cards.some(card => card.id === cardId))?.id\r\n}\r\n\r\nconst getFormattedTime = (timestamp) => {\r\n    if (!timestamp) return ''\r\n    const timeLeft = timestamp - Date.now()\r\n    if (timeLeft < 0) {\r\n        const date = new Date(timestamp)\r\n        const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n        const idx = date.getMonth()\r\n        const month = monthNames[idx]\r\n        const day = date.getDate()\r\n        return `${month} ${day} at 12:00 AM`\r\n    }\r\n    if (timeLeft <= (1000 * 60 * 60 * 24)) return 'tomorrow at 12:00 AM'\r\n    const date = new Date(timestamp)\r\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    const idx = date.getMonth()\r\n    const month = monthNames[idx]\r\n    const day = date.getDate()\r\n    return `${month} ${day} at 12:00 AM`\r\n}\r\n\r\nconst getUploadTime = (timestamp) => {\r\n    const timePassed = Date.now() - timestamp\r\n    if (timePassed < (1000 * 60)) return 'Added a few seconds ago'\r\n    else if (timePassed < (1000 * 60 * 2)) return 'Added 1 minute ago'\r\n    else if (timePassed < 1000 * 60 * 60) {\r\n        const minutes = Math.floor(timePassed / 1000 / 60)\r\n        return `Added ${minutes} minutes ago`\r\n    }\r\n    else if (timePassed < 1000 * 60 * 60 * 13) {\r\n        const hours = Math.floor(timePassed / 1000 / 60 / 60)\r\n        return `Added ${hours} hours ago`\r\n    } else {\r\n        const date = new Date(timestamp)\r\n        const minutes = (date.getMinutes() < 10) ? `0${date.getMinutes()}` : date.getMinutes()\r\n        if (timePassed < 1000 * 60 * 60 * 24) {\r\n            return `Added today at ${date.getHours()}:${minutes} `\r\n        } else if (timePassed < 1000 * 60 * 60 * 48) {\r\n            return `Added yesterday at ${date.getHours()}:${minutes}`\r\n        } else {\r\n            const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n            const idx = date.getMonth()\r\n            const month = monthNames[idx]\r\n            const day = date.getDate()\r\n            return `Added ${month} ${day} at ${date.getHours()}:${minutes}`\r\n        }\r\n    }\r\n}\r\n\r\nconst handleFileAdd = (url) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    if (!card.attachments) card.attachments = []\r\n    card.attachments.push({ url, title: 'Attachment', addedAt: Date.now() })\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleFileRemove = (fileId) => {\r\n    const cardId = store.getState().boardModule.currCardId\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    const idx = card.attachments.findIndex(file => file.id === fileId)\r\n    card.attachments.splice(idx, 1)\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleMoveCard = (cardId, groupId, idx) => {\r\n    const initialBoard = store.getState().boardModule.currBoard\r\n    const initialGroup = initialBoard.groups.find(group => group.cards.some(card => card.id === cardId))\r\n    const card = getCardById(cardId, initialGroup.id)\r\n    const initialCardIdx = initialGroup.cards.findIndex(card => card.id === cardId)\r\n    initialGroup.cards.splice(initialCardIdx, 1)\r\n    let newGroup = initialBoard.groups.find(group => group.id === groupId)\r\n    newGroup.cards.splice(idx, 0, card)\r\n    return initialBoard\r\n}\r\n\r\nconst handleCopyCard = (cardId, groupId, idx, title) => {\r\n    const initialBoard = store.getState().boardModule.currBoard\r\n    const initialGroup = initialBoard.groups.find(group => group.cards.some(card => card.id === cardId))\r\n    const card = getCardById(cardId, initialGroup.id)\r\n    let newGroup = initialBoard.groups.find(group => group.id === groupId)\r\n    newGroup.cards.splice(idx, 0, { ...card, id: utilService.makeId(), title })\r\n    return initialBoard\r\n}\r\n\r\nconst handleToggleArchive = (cardId) => {\r\n    const board = store.getState().boardModule.currBoard\r\n    const groupId = getGroupId(cardId)\r\n    const card = getCardById(cardId, groupId)\r\n    card.isArchive = !card.isArchive\r\n    return [card, groupId, board]\r\n}\r\n\r\nconst handleRemoveCard = (cardId) => {\r\n    const board = { ...store.getState().boardModule.currBoard }\r\n    const group = board.groups.find(group => group.cards.some(card => card.id === cardId))\r\n    group.cards = group.cards.filter(card => card.id !== cardId)\r\n    // return board\r\n}\r\n\r\n\r\nexport const cardEditService = {\r\n    handleChecklistChange,\r\n    handleMemberChange,\r\n    getGroupId,\r\n    getCardById,\r\n    handleLabelChange,\r\n    handleDueDateChange,\r\n    getFormattedTime,\r\n    getUploadTime,\r\n    handleFileAdd,\r\n    handleFileRemove,\r\n    getGroupById,\r\n    handleMoveCard,\r\n    handleCopyCard,\r\n    handleToggleArchive,\r\n    handleRemoveCard\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateBoard } from '../../../store/board.actions'\r\n\r\n\r\nexport function _MoveCard({ board, currCardId, onUpdateBoard, onClose }) {\r\n    const [currGroup, setCurrGroup] = useState(null)\r\n    const [currPosition, setCurrPosition] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const group = cardEditService.getGroupById(currCardId, board._id)\r\n        setCurrGroup(group)\r\n        const idx = group.cards.findIndex(card => card.id === currCardId)\r\n        setCurrPosition(idx + 1)\r\n    }, [board])\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        if (name === 'group') {\r\n            const group = board.groups.find(item => item.id === value)\r\n            setCurrGroup(group)\r\n            setCurrPosition(group.cards.length + 1)\r\n        } else if (name === 'position') {\r\n            // setCurrPosition(currGroup.cards.length + 1)\r\n            setCurrPosition(value)\r\n        }\r\n    }\r\n\r\n    const getPositions = () => {\r\n        const length = currGroup.cards.length + 1\r\n        const positions = []\r\n        for (let i = 1; i <= length; i++) {\r\n            positions.push(i)\r\n        }\r\n        return positions\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const groupId = currGroup.id\r\n        const idx = currPosition - 1\r\n        // const initialGroup = cardEditService.handleMoveCardFrom(currCardId)\r\n        // onUpdateBoard({ type: 'UPDATE_GROUP', group: initialGroup }, board)\r\n        const boardToChange = cardEditService.handleMoveCard(currCardId, groupId, idx)\r\n        onUpdateBoard({ type: '' }, boardToChange)\r\n        // onUpdateBoard({ type: 'UPDATE_GROUP', group: newGroup }, board)\r\n        // onUpdateBoard({ type: 'UPDATE_GROUP', initialGroup }, board, activity)\r\n        onClose()\r\n    }\r\n\r\n    if (!currGroup) return null\r\n    return (\r\n        <div className=\"move-card\">\r\n            <h4>Select destination</h4>\r\n\r\n            <div className=\"select-board\">\r\n                <span className=\"label\">Board</span>\r\n                <span className=\"select-value\">{board.title}</span>\r\n                <select name=\"board\" onChange={handleChange}>\r\n                    {/* {boards.map(item => <option key={item._id} value={item._id}>{item.title}</option>)} */}\r\n                    <option value={board._id}>{board.title}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"flex bottom-container\">\r\n                <div className=\"select-group\">\r\n                    <span className=\"label\">List</span>\r\n                    <span className=\"select-value\">{currGroup.title}</span>\r\n                    <select name=\"group\" onChange={handleChange}>\r\n                        {board.groups.map(item => <option key={item.id} value={item.id}>{item.title}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"select-position\">\r\n                    <span className=\"label\">Position</span>\r\n                    <span className=\"select-value\">{currPosition}</span>\r\n                    <select name=\"position\" onChange={handleChange}>\r\n                        {getPositions().map((item, i) => <option key={i} value={item}>{item}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <button className=\"move-btn card-edit-btn secondary\" onClick={handleSubmit}>Move</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        boards: state.boardModule.boards,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const MoveCard = connect(mapStateToProps, mapDispatchToProps)(_MoveCard)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateBoard } from '../../../store/board.actions'\r\n\r\n\r\nexport function _CopyCard({ board, currCardId, onUpdateBoard, onClose }) {\r\n    const [currTitle, setCurrTitle] = useState('')\r\n    const [currGroup, setCurrGroup] = useState(null)\r\n    const [currPosition, setCurrPosition] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const group = cardEditService.getGroupById(currCardId, board._id)\r\n        const card = cardEditService.getCardById(currCardId, group.id)\r\n        setCurrTitle(card.title)\r\n        setCurrGroup(group)\r\n        const idx = group.cards.findIndex(card => card.id === currCardId)\r\n        setCurrPosition(idx + 1)\r\n    }, [board])\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        if (name === 'group') {\r\n            const group = board.groups.find(item => item.id === value)\r\n            setCurrGroup(group)\r\n            setCurrPosition(group.cards.length + 1)\r\n        } else if (name === 'position') {\r\n            setCurrPosition(value)\r\n        } else if (name === 'title') {\r\n            setCurrTitle(value)\r\n        }\r\n    }\r\n\r\n    const getPositions = () => {\r\n        const length = currGroup.cards.length + 1\r\n        const positions = []\r\n        for (let i = 1; i <= length; i++) {\r\n            positions.push(i)\r\n        }\r\n        return positions\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const groupId = currGroup.id\r\n        const idx = currPosition - 1\r\n        const boardToChange = cardEditService.handleCopyCard(currCardId, groupId, idx, currTitle)\r\n        onUpdateBoard({ type: '' }, boardToChange)\r\n        onClose()\r\n    }\r\n\r\n    if (!currGroup) return null\r\n    return (\r\n        <div className=\"copy-card\">\r\n            <label>Title</label>\r\n            <textarea name=\"title\" className=\"search-input\" autoFocus value={currTitle} onChange={handleChange} />\r\n\r\n\r\n            <label>Copy to...</label>\r\n            <div className=\"select-board\">\r\n                <span className=\"label\">Board</span>\r\n                <span className=\"select-value\">{board.title}</span>\r\n                <select name=\"board\" onChange={handleChange}>\r\n                    <option value={board._id}>{board.title}</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"flex bottom-container\">\r\n                <div className=\"select-group\">\r\n                    <span className=\"label\">List</span>\r\n                    <span className=\"select-value\">{currGroup.title}</span>\r\n                    <select name=\"group\" onChange={handleChange}>\r\n                        {board.groups.map(item => <option key={item.id} value={item.id}>{item.title}</option>)}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"select-position\">\r\n                    <span className=\"label\">Position</span>\r\n                    <span className=\"select-value\">{currPosition}</span>\r\n                    <select name=\"position\" onChange={handleChange}>\r\n                        {getPositions().map((item, i) => <option key={i} value={item}>{item}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <button className=\"copy-btn card-edit-btn secondary\" onClick={handleSubmit}>Create card</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        boards: state.boardModule.boards,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const CopyCard = connect(mapStateToProps, mapDispatchToProps)(_CopyCard)\r\n","import React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\r\nimport { IoMdClose } from 'react-icons/io'\r\n\r\n/*\r\n    How-to-use\r\n    1. The component shall recieve:\r\n       * an onClose function that closes the popover\r\n       * a title for the header\r\n       * the component that should be rendered inside of the popover (children)\r\n    2. The popover should be rendered on the same lavel as the element that \r\n       triggers the opening of the popover\r\n    3. The parrent element of both the trigger element and the popover should have\r\n       position relative (className=\"relative\")\r\n    4. The popover should recieve the parent ref (ref={parentRef})\r\n    5. The state for the opening and closing of the popover should be managed from \r\n       outside \r\n*/\r\n\r\nexport const DynamicPopover = React.forwardRef(({ onClose, title, children }, parentRef) => {\r\n    const targetRef = useRef();\r\n    const [dimensions, setDimensions] = useState({ width: 0, height: 0 })\r\n\r\n    useLayoutEffect(() => {\r\n        if (targetRef.current) {\r\n            setDimensions({\r\n                width: targetRef.current.offsetWidth,\r\n                height: targetRef.current.offsetHeight\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const handleClick = e => {\r\n            const containerElement = targetRef.current\r\n            if (containerElement?.contains(e.target) || parentRef?.current?.contains(e.target)) {\r\n                // inside click\r\n                return\r\n            }\r\n            // outside click \r\n            onClose()\r\n        }\r\n\r\n        window.addEventListener(\"mouseup\", handleClick);\r\n        return () => {\r\n            window.removeEventListener(\"mouseup\", handleClick);\r\n        }\r\n    }, [onClose, parentRef])\r\n\r\n\r\n    const getLocation = () => {\r\n        const rect = parentRef?.current?.getBoundingClientRect()\r\n        if (!rect) return\r\n\r\n        const bottomCheck = window.innerHeight - (rect.bottom + dimensions.height) < 20\r\n        const topCheck = window.innerHeight - (rect.bottom + dimensions.height) < 20\r\n        const rightCheck = window.innerWidth - (rect.left + dimensions.width) < 100\r\n        const verticalCheck = bottomCheck && topCheck\r\n\r\n        if (bottomCheck) {\r\n            let bottom\r\n            if (verticalCheck) bottom = '-400%'\r\n            else if (topCheck) bottom = '-100%'\r\n            else bottom = rect.height + 8\r\n            if (rightCheck) return { bottom, right: 0 }\r\n            else return { bottom, left: 0 }\r\n        }\r\n        if (rightCheck) return { top: rect.height + 8, right: 0 }\r\n\r\n        return { left: 0, top: rect.height + 8 }\r\n    }\r\n\r\n    return (\r\n        <div ref={ref => targetRef.current = ref} className=\"dynamic-popover\" style={{ position: 'absolute', ...getLocation() }}>\r\n            {title\r\n                ?\r\n                <div className=\"popover-header\">\r\n                    <p>{title}</p>\r\n                    <span onClick={onClose}><IoMdClose /></span>\r\n                </div>\r\n                :\r\n                <div className=\"relative\" style={{ height: 16 }}>\r\n                    <span className=\"close-popover-icon\" onClick={onClose}><IoMdClose /></span>\r\n                </div>}\r\n            <div className=\"popover-content\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nexport function EditSidebarLabel({ Icon, title }) {\r\n\r\n    const getStyle = () => {\r\n        if (title === \"Delete\") return { backgroundColor: '#b04632', color: '#fff' }\r\n        else return {}\r\n    }\r\n    return (\r\n        <div>\r\n            <button className=\"card-edit-btn sidebar-btn\" style={{ position: 'relative', ...getStyle() }}>\r\n                <div className=\"list-item-layover\"></div>\r\n                <div className=\"btn-label-container flex\">\r\n                    <Icon />\r\n                    <p>{title}</p>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo, useRef, useState } from 'react'\r\nimport { DynamicPopover } from '../shared/dynamic-popover'\r\nimport { EditSidebarLabel } from '../card-edit/edit-sidebar-label'\r\n\r\n\r\nexport function CardEditActionsItem({ item }) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const itemRef = useRef()\r\n    const InnerPopperCmp = useMemo(() => item.component, [item])\r\n\r\n    return (\r\n        <div>\r\n            <div ref={itemRef} className={`relative ${isOpen ? 'popover-open' : ''}`}>\r\n                <span onClick={() => setIsOpen(!isOpen)}>\r\n                    <EditSidebarLabel Icon={item.icon} title={item.title} />\r\n                </span>\r\n                {\r\n                    isOpen && <DynamicPopover onClose={() => setIsOpen(false)} title={item.title} ref={itemRef}>\r\n                        <InnerPopperCmp onClose={() => setIsOpen(false)} />\r\n                    </DynamicPopover>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BsArrowRight } from 'react-icons/bs'\r\nimport { MdContentCopy } from 'react-icons/md'\r\nimport { AiOutlineEye } from 'react-icons/ai'\r\nimport { GoArchive } from 'react-icons/go'\r\nimport { BsArrowCounterclockwise } from 'react-icons/bs'\r\nimport { AiOutlineMinus } from 'react-icons/ai'\r\nimport { MoveCard } from '../shared/popover-children/move-card'\r\nimport { CopyCard } from '../shared/popover-children/copy-card'\r\nimport { CardEditActionsItem } from './card-edit-actions-item'\r\nimport { EditSidebarLabel } from './edit-sidebar-label'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateBoard, onUpdateCard } from '../../store/board.actions'\r\n\r\n\r\nconst _CardEditActions = ({ currCardId, board, onUpdateCard, goBack, onUpdateBoard }) => {\r\n    const [isArchive, setIsArchive] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const card = cardEditService.getCardById(currCardId, groupId)\r\n        setIsArchive(card.isArchive || false)\r\n        \r\n    }, [])\r\n\r\n    const toggleArchive = () => {\r\n        setIsArchive(!isArchive)\r\n        const res = cardEditService.handleToggleArchive(currCardId)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    // const removeCard = () => {\r\n    //     const boardToSave = cardEditService.handleRemoveCard(currCardId)\r\n    //     onUpdateBoard({ type: '' }, boardToSave)\r\n    //     goBack()\r\n    // }\r\n\r\n    return (\r\n        <div style={{ position: 'relative' }}>\r\n            <div className=\"card-edit-actions\">\r\n                <h3 className=\"sidebar-title\">Actions</h3>\r\n                {actions.map((item, idx) => (\r\n                    <CardEditActionsItem key={item.title + idx} item={item} />\r\n                ))}\r\n                {!isArchive && <div onClick={toggleArchive}>\r\n                    <EditSidebarLabel Icon={GoArchive} title='Archive' />\r\n                </div>}\r\n                {isArchive && <>\r\n                    <div onClick={toggleArchive}>\r\n                        <EditSidebarLabel Icon={BsArrowCounterclockwise} title='Send to board' />\r\n                    </div>\r\n                    <div>\r\n                        <EditSidebarLabel Icon={AiOutlineMinus} title='Delete' />\r\n                    </div>\r\n                </>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst actions = [{ icon: BsArrowRight, title: 'Move', component: MoveCard }, { icon: MdContentCopy, title: 'Copy', component: CopyCard }, { icon: AiOutlineEye, title: 'Watch' }]\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n    onUpdateBoard\r\n}\r\n\r\nexport const CardEditActions = connect(mapStateToProps, mapDispatchToProps)(_CardEditActions);\r\n","import Avatar from 'react-avatar';\r\n\r\n\r\n\r\nexport function MemberAvatar({ member, size, style = {} }) {\r\n\r\n    function getSize() {\r\n        switch (size) {\r\n            case 'sm':\r\n                return 20\r\n            case 'lg':\r\n                return 50\r\n            case 'md':\r\n            default:\r\n                return 32\r\n        }\r\n    }\r\n    // src={member.imgUrl}\r\n    return <Avatar name={member.fullname} src={member.imgUrl} size={getSize()} style={style} round />\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BsCheck } from 'react-icons/bs'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\n\r\nfunction _PopperMemberPreview({ member, currCardId, onUpdateCard }) {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const card = cardEditService.getCardById(currCardId, groupId)\r\n        const isMemberChecked = card.members?.find(m => m._id === member._id)\r\n        setIsChecked(isMemberChecked)\r\n    }, [currCardId, member._id])\r\n\r\n    const handleMemberClick = () => {\r\n        setIsChecked(!isChecked)\r\n        const res = cardEditService.handleMemberChange(member._id)\r\n        const activity = (isChecked) ? {txt: activityTxtMap.removeMemberFromCard(member.fullname), currCardId} : {txt: activityTxtMap.addMemberToCard(member.fullname), currCardId}\r\n        onUpdateCard(...res, activity)\r\n    }\r\n\r\n    return (\r\n        <div className=\"popper-member-preview flex\" onClick={handleMemberClick}>\r\n            <div className='list-item-layover'></div>\r\n            <div style={{ width: 32 }}>\r\n                <MemberAvatar member={member} />\r\n            </div>\r\n            <div className='popper-member-name'>\r\n                <p>{member.fullname}</p>\r\n            </div>\r\n            {isChecked && <div className='popper-member-check'><BsCheck /></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopperMemberPreview = connect(mapStateToProps, mapDispatchToProps)(_PopperMemberPreview);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PopperMemberPreview } from '../../card-edit/popper-member-preview'\r\n\r\nconst _MemberList = ({ board }) => (\r\n    <div className=\"member-list\">\r\n        <input className=\"search-input\" type=\"text\" autoFocus placeholder=\"Search...\" />\r\n        <h4>Board Members</h4>\r\n        <div className=\"flex column\">\r\n            {board.members.map(member => (\r\n                <PopperMemberPreview\r\n                    key={member._id}\r\n                    member={member}\r\n                />\r\n            ))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nexport const MemberList = connect(mapStateToProps)(_MemberList)","import React, { useState } from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\n\r\n\r\n\r\nconst _CardEditDate = ({ onUpdateCard, onClose }) => {\r\n    const [startDate] = useState(new Date())\r\n    const [endDate] = useState(null)\r\n    const [dueDate, setDueDate] = useState(null)\r\n\r\n    const onChange = (date) => {\r\n        setDueDate(date.getTime())\r\n    }\r\n\r\n    const onReset = () => {\r\n        setDueDate(null)\r\n        handleSubmit()\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const res = cardEditService.handleDueDateChange(dueDate)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div className=\"date-picker\">\r\n            <DatePicker\r\n                selected={startDate}\r\n                onChange={onChange}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n                // selectsRange\r\n                inline\r\n                formatWeekDay={nameOfDay => nameOfDay.substr(0, 3)}\r\n            />\r\n            <div className=\"picker-btns flex column\">\r\n                <button className=\"card-edit-btn secondary long\" onClick={handleSubmit}>Save</button>\r\n                <button className=\"card-edit-btn long\" onClick={onReset}>Remove</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditDate = connect(null, mapDispatchToProps)(_CardEditDate);\r\n","import React, { useEffect, useState } from 'react'\r\nimport { BiPencil } from 'react-icons/bi'\r\nimport { BsCheck } from 'react-icons/bs'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\nfunction _PopperLabelPreview({ label, currCardId, onUpdateCard }) {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const card = cardEditService.getCardById(currCardId, groupId)\r\n        const isLabelChecked = card.labelIds?.some(l => l === label.id)\r\n        setIsChecked(isLabelChecked)\r\n    }, [currCardId, label.id])\r\n\r\n    const handleLabelClick = () => {\r\n        setIsChecked(!isChecked)\r\n        const res = cardEditService.handleLabelChange(label.id)\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        // const activity = {txt: activityTxtMap.addLabel(label.title), groupId: groupId}\r\n        const activity = (isChecked) ? {txt: activityTxtMap.removeLabel(label.title), groupId: groupId} : {txt: activityTxtMap.addLabel(label.title), groupId: groupId}\r\n        onUpdateCard(...res, activity)\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-preview flex\" onClick={handleLabelClick}>\r\n            {/* <div className='list-item-layover'></div> */}\r\n            <div className=\"label-preview flex\">\r\n                <div className=\"popper-label \" style={{ backgroundColor: label.color }}>\r\n                    <span> {label.title || ''}</span>\r\n                    {isChecked && <div className='popper-label-check'><BsCheck /></div>}\r\n                </div>\r\n                <div className=\"icon-wrapper\"><BiPencil /></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopperLabelPreview = connect(mapStateToProps, mapDispatchToProps)(_PopperLabelPreview);\r\n","import React from 'react'\r\nimport { PopperLabelPreview } from '../../card-edit/popper-label-preview'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction _LabelList({ board }) {\r\n    const labels = board.labels\r\n    return (\r\n        <div className=\"label-list-container\">\r\n            <input className=\"search-input\" type=\"text\" autoFocus placeholder=\"Search labels...\" />\r\n            <h4>Labels</h4>\r\n            <div className=\"flex column label-list\">\r\n                {labels.map(label => <PopperLabelPreview key={label.id} label={label} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nexport const LabelList = connect(mapStateToProps)(_LabelList)\r\n\r\n\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../../services/activity.service'\r\n\r\nexport function _PopoverChecklist({ onUpdateCard, onClose }) {\r\n    const inputRef = useRef()\r\n    const [title, setTitle] = useState('Checklist')\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n        inputRef.current.select()\r\n    }, [])\r\n\r\n    const handleChange = ({ target: { value } }) => {\r\n        setTitle(value)\r\n    }\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const res = cardEditService.handleChecklistChange('addChecklist', null, title)\r\n        const activity = {txt: activityTxtMap.addChecklist(title)}\r\n        onUpdateCard(...res, activity)\r\n        setTitle('')\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <form className=\"popover-checklist\" onSubmit={handleSubmit}>\r\n            <label htmlFor=\"checklist-title\">Title</label>\r\n            <input className=\"search-input\" ref={inputRef} value={title} onChange={handleChange} />\r\n            <button className=\"card-edit-btn secondary\">Add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopoverChecklist = connect(mapStateToProps, mapDispatchToProps)(_PopoverChecklist);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\n\r\n\r\n\r\nfunction _PopoverAttachFile({ onUpdateCard, onClose }) {\r\n\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const res = cardEditService.handleFileAdd(ev.target[0].value)\r\n        onUpdateCard(...res)\r\n        onClose()\r\n    }\r\n\r\n    return (\r\n        <div className=\"popover-attach-file\">\r\n            <div className=\"attach-from\">\r\n                <label htmlFor=\"upload\" >\r\n                    <span aria-hidden=\"true\">Computer</span>\r\n                    <input type=\"file\" id=\"upload\" style={{ display: 'none' }} onChange={handleSubmit} />\r\n                </label>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"attach-link\">\r\n                <label>Attach a link</label>\r\n                <input className=\"search-input\" placeholder=\"Paste any link here...\" />\r\n                <button className=\"card-edit-btn\">Attach</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopoverAttachFile = connect(mapStateToProps, mapDispatchToProps)(_PopoverAttachFile);\r\n\r\n","import React, { useMemo, useRef, useState } from 'react'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { EditSidebarLabel } from '../edit-sidebar-label'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\n\r\n\r\nfunction _CardEditAddToCardItem({ item, currCardId }) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const itemRef = useRef()\r\n    const InnerPopperCmp = useMemo(() => item.component, [item])\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const currCard = cardEditService.getCardById(currCardId, groupId)\r\n\r\n    const checkIfCover = () => {\r\n        return (item.title !== 'Cover') || (!currCard?.style?.bgColor && !currCard?.style?.imgUrl)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {checkIfCover() && <div ref={itemRef} className={`relative ${isOpen ? 'popover-open' : ''}`}>\r\n                <span onClick={() => setIsOpen(!isOpen)}>\r\n                    <EditSidebarLabel Icon={item.icon} title={item.title} />\r\n                </span>\r\n                {\r\n                    isOpen && <DynamicPopover onClose={() => setIsOpen(false)} title={item.title} ref={itemRef}>\r\n                        <InnerPopperCmp onClose={() => setIsOpen(false)} />\r\n                    </DynamicPopover>\r\n                }\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nexport const CardEditAddToCardItem = connect(mapStateToProps, null)(_CardEditAddToCardItem);\r\n","import React, { Component } from 'react'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\n\r\nclass _PopperCoverEdit extends Component {\r\n    state = {\r\n        currCard: null,\r\n        groupId: null,\r\n        selectedEl: null,\r\n        initialStyle: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { currCardId } = this.props\r\n        console.log(currCardId);\r\n        const groupId = cardEditService.getGroupId(currCardId)\r\n        const currCard = cardEditService.getCardById(currCardId, groupId)\r\n        console.log(currCard);\r\n        // if (currCard.style) {\r\n        //     if (currCard.style.bgColor) {\r\n\r\n        //     }\r\n        // }\r\n        this.setState({ currCard, groupId })\r\n    }\r\n\r\n    handleClick = (ev, value, type) => {\r\n        ev.target.classList.add('selected')\r\n        this.state.selectedEl?.classList.remove('selected')\r\n        this.setState({ selectedEl: ev.target })\r\n        const { board, currCardId, onUpdateCard } = this.props\r\n        const { currCard, groupId } = this.state\r\n        currCard.style = type === 'color' ? { bgColor: value } : { imgUrl: value }\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    handleCoverRemove = () => {\r\n        const { board, currCardId, onUpdateCard } = this.props\r\n        const { currCard, groupId } = this.state\r\n        currCard.style = null\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    handleInitialSelect = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { currCard } = this.state\r\n        if (!currCard) return ''\r\n        const colors = ['#7bc86c', '#f5dd29', '#ffaf3f', '#ef7564', '#cd8de5', '#517dab', '#29cce5', '#6deca9', '#ff8ed4', '#172b4d']\r\n        return (\r\n            <section className=\"modal-cover-edit flex column\">\r\n\r\n                <div className=\"size-container flex column\">\r\n                    <h4>Size</h4>\r\n                    <div className=\"size-options flex\">\r\n                        <div className=\"size-option\"></div>\r\n                        <div className=\"size-option\"></div>\r\n                    </div>\r\n                    <button className=\"card-edit-btn\" onClick={this.handleCoverRemove}>Remove cover</button>\r\n                </div>\r\n\r\n                <div className=\"flex column\">\r\n                    <h4>Colors</h4>\r\n                    <div className=\"color-container flex\">{colors.map((color, i) => <div key={i} className=\"cover-color-option\" style={{ backgroundColor: color }} onClick={ev => this.handleClick(ev, color, 'color')}></div>)}</div>\r\n                </div>\r\n\r\n                {currCard.attachments && Boolean(currCard.attachments.length) && <div className=\"flex column\">\r\n                    <h4>Attachments</h4>\r\n                    <div className=\"attachments-container flex\">{currCard.attachments.map(a => <div key={a.id} className=\"cover-image-option\" style={{ backgroundImage: `url(${a.url})` }} onClick={ev => this.handleClick(ev, a.url, 'img')}></div>)}</div>\r\n                </div>}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const PopperCoverEdit = connect(mapStateToProps, mapDispatchToProps)(_PopperCoverEdit);\r\n","import React from 'react'\r\nimport { MemberList } from '../../shared/popover-children/member-list'\r\nimport { CardEditDate } from '../../shared/popover-children/card-edit-date'\r\nimport { LabelList } from '../../shared/popover-children/label-list'\r\nimport { BsClock, BsCardChecklist } from 'react-icons/bs'\r\nimport { MdLabelOutline } from 'react-icons/md'\r\nimport { FiPaperclip } from 'react-icons/fi'\r\nimport { BiUser } from 'react-icons/bi'\r\nimport { PopoverChecklist } from '../../shared/popover-children/popover-checklist'\r\nimport { PopoverAttachFile } from '../../shared/popover-children/popover-attach-file'\r\nimport { CardEditAddToCardItem } from './card-edit-add-to-card-item'\r\nimport { PopperCoverEdit } from '../../shared/popover-children/popper-cover-edit'\r\nimport { CgCreditCard } from 'react-icons/cg'\r\n\r\nexport const CardEditAddToCard = () => (\r\n    <div style={{ position: 'relative' }}>\r\n        <div className=\"add-to-card\">\r\n            <h3 className=\"sidebar-title\">Add to card</h3>\r\n            {addToCardItems.map((item, idx) => (\r\n                <CardEditAddToCardItem key={item.title + idx} item={item} />\r\n            ))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst addToCardItems = [{ icon: BiUser, title: 'Members', component: MemberList }, { icon: MdLabelOutline, title: 'Labels', component: LabelList }, { icon: BsCardChecklist, title: 'Checklist', component: PopoverChecklist }, { icon: BsClock, title: 'Dates', component: CardEditDate }, { icon: FiPaperclip, title: 'Attachment', component: PopoverAttachFile }, { icon: CgCreditCard, title: 'Cover', component: PopperCoverEdit }]\r\n","import React, { Component } from 'react'\r\nimport { CardEditActions } from './card-edit-actions'\r\nimport { CardEditAddToCard } from './add-to-card/card-edit-add-to-card'\r\n\r\nexport class CardEditSidebar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar\">\r\n                <CardEditAddToCard />\r\n                <CardEditActions goBack={this.props.goBack} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { BsChevronDown } from 'react-icons/bs'\r\nimport { CardEditDate } from '../../shared/popover-children/card-edit-date'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { socketService } from '../../../services/socket.service'\r\n\r\nconst _CardEditDueDate = ({ currCardId, onUpdateCard, board }) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const dueDateRef = useRef()\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const currCard = cardEditService.getCardById(currCardId, groupId)\r\n    const dueDate = currCard?.dueDate\r\n    const time = cardEditService.getFormattedTime(dueDate)\r\n\r\n    const getDueDateLabel = () => {\r\n        if (currCard.isComplete) return { title: 'Complete', bgColor: '#61bd4f' }\r\n        if ((dueDate - Date.now()) < 0) return { title: 'Overdue', bgColor: '#eb5a46' }\r\n        if ((dueDate - Date.now()) <= (1000 * 60 * 60 * 24)) return { title: 'Due soon', bgColor: '#f2d600' }\r\n        else return { title: '', bgColor: '' }\r\n    }\r\n\r\n    const onToggleComplete = () => {\r\n        currCard.isComplete = !currCard.isComplete\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {dueDate && <div className=\"due-date-container\">\r\n                <h3 className=\"small-title\">Due date</h3>\r\n                <div className=\"due-date\" >\r\n                    <input type=\"checkbox\" className=\"main-checkbox\" checked={currCard.isComplete} onChange={onToggleComplete} />\r\n                    <div className=\"card-edit-btn\" ref={dueDateRef}>\r\n                        <span className=\"due-date-time\">{time}</span>\r\n                        <span style={{ backgroundColor: getDueDateLabel().bgColor, textTransform: 'uppercase', fontSize: 12, padding: '0 3px', borderRadius: 2 }}>{getDueDateLabel().title}</span>\r\n                        <span className=\"due-date-icon\"><BsChevronDown /></span>\r\n                        <div className=\"list-item-layover\" onClick={() => setIsOpen(!isOpen)}></div>\r\n                        {isOpen && <DynamicPopover onClose={() => setIsOpen(false)} title={'Dates'} ref={dueDateRef}>\r\n                            <CardEditDate onClose={() => setIsOpen(false)} />\r\n                        </DynamicPopover>}\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditDueDate = connect(mapStateToProps, mapDispatchToProps)(_CardEditDueDate);\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { LabelList } from '../../shared/popover-children/label-list'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\n\r\nconst _CardEditLabels = ({ currCardId, board }) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const addButtonRef = useRef()\r\n\r\n    const getCardLabels = (labelIds) => (\r\n        labelIds?.map(id => board.labels.find(label => label.id === id))\r\n    )\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const labelIds = cardEditService.getCardById(currCardId, groupId).labelIds\r\n    const labels = getCardLabels(labelIds)\r\n    return (\r\n        <>\r\n            {labelIds?.length ? <div className=\"labels-container\">\r\n                <h3 className=\"small-title\">Labels</h3>\r\n                <div className=\"labels\">\r\n                    {labels.map(label => <div key={label.id} className=\"card-label\" style={{ backgroundColor: label.color }}>\r\n                        {label.title || ''}\r\n                    </div>)}\r\n                    <div\r\n                        ref={addButtonRef}\r\n                        className=\"card-label add-label relative\"\r\n                    >\r\n                        <div className=\"list-item-layover\" onClick={() => setIsOpen(!isOpen)}></div>\r\n                        <AiOutlinePlus />\r\n                        {isOpen && <DynamicPopover onClose={() => setIsOpen(false)} title={'Labels'} ref={addButtonRef}>\r\n                            <LabelList />\r\n                        </DynamicPopover>}\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nexport const CardEditLabels = connect(mapStateToProps, null)(_CardEditLabels);\r\n","import React from 'react'\r\nimport { MemberAvatar } from '../member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../../store/board.actions'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\n\r\nconst _MiniUser = ({ member, onUpdateCard }) => {\r\n\r\n    const onRemoveUser = () => {\r\n        const res = cardEditService.handleMemberChange(member._id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mini-user flex column\">\r\n\r\n            <div className=\"main flex\">\r\n                <MemberAvatar size=\"lg\" member={member} />\r\n                <div>\r\n                    <h3 className=\"mini-user-fullname\">{member.fullname}</h3>\r\n                    <p>{member.username}</p>\r\n                    <p>Edit profile info</p>\r\n                </div>\r\n            </div>\r\n\r\n            <p className=\"remove-member\" onClick={onRemoveUser}>Remove from card</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const MiniUser = connect(null, mapDispatchToProps)(_MiniUser);\r\n","import React, { useRef, useState } from 'react'\r\nimport { DynamicPopover } from '../shared/dynamic-popover'\r\nimport { MemberAvatar } from '../shared/member-avatar'\r\nimport { MiniUser } from '../shared/popover-children/mini-user'\r\n\r\nexport function MembersContainerMemberPreview({ member }) {\r\n    const [isPreviewOpen, setIsPreviewOpen] = useState(false)\r\n    const userButtonRef = useRef()\r\n    return (\r\n        <div key={member._id} className=\"card-member relative\" ref={userButtonRef}>\r\n            <span style={{ cursor: 'pointer' }}>\r\n                <div className=\"list-item-layover\" onClick={() => setIsPreviewOpen(!isPreviewOpen)}></div>\r\n                <MemberAvatar member={member} />\r\n            </span>\r\n            {isPreviewOpen && <DynamicPopover onClose={() => setIsPreviewOpen(false)} title={null} ref={userButtonRef}>\r\n                <MiniUser member={member} />\r\n            </DynamicPopover>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { DynamicPopover } from '../../shared/dynamic-popover'\r\nimport { MemberList } from '../../shared/popover-children/member-list'\r\nimport { cardEditService } from '../../../services/card-edit.service'\r\nimport { MembersContainerMemberPreview } from '../members-container-member-preview'\r\n\r\nconst _CardEditMembers = ({ currCardId }) => {\r\n    const [isListOpen, setIsListOpen] = useState(false)\r\n    \r\n    const addButtonRef = useRef()\r\n   \r\n    let members\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    members = cardEditService.getCardById(currCardId, groupId).members\r\n\r\n    return (\r\n        <>\r\n            {members?.length ? <div className=\"members-container\">\r\n                <h3 className=\"small-title\">Members</h3>\r\n                <div className=\"members\">\r\n                    {members.map(member => <MembersContainerMemberPreview key={member._id} member={member} />)}\r\n\r\n                    <div\r\n                        ref={addButtonRef}\r\n                        className=\"card-member add-member relative\"\r\n                    >\r\n                        <div className=\"list-item-layover round\" onClick={() => setIsListOpen(!isListOpen)}></div>\r\n                        <AiOutlinePlus />\r\n                        {isListOpen && <DynamicPopover onClose={() => setIsListOpen(false)} title={'Members'} ref={addButtonRef}>\r\n                            <MemberList />\r\n                        </DynamicPopover>}\r\n                    </div>\r\n                </div>\r\n            </div> : null}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nexport const CardEditMembers = connect(mapStateToProps, null)(_CardEditMembers);\r\n\r\n\r\n","import { CardEditDueDate } from './labels-members/card-edit-duedate'\r\nimport { CardEditLabels } from './labels-members/card-edit-labels'\r\nimport { CardEditMembers } from './labels-members/card-edit-members'\r\n\r\nexport const LabelsMembers = () => (\r\n    <div className=\"members-labels-container\">\r\n        <CardEditMembers />\r\n        <CardEditLabels/>\r\n        <CardEditDueDate />\r\n    </div>\r\n)","import React from 'react'\r\n\r\nexport function ProgressBar({ bgColor, completed }) {\r\n\r\n    const containerStyles = {\r\n        height: 8,\r\n        width: '100%',\r\n        backgroundColor: \"#e0e0de\",\r\n        borderRadius: 50,\r\n        margin: '10px 0 10px 0px'\r\n    }\r\n\r\n    const fillerStyles = {\r\n        height: '100%',\r\n        width: `${completed}%`,\r\n        backgroundColor: bgColor,\r\n        borderRadius: 'inherit',\r\n        textAlign: 'right',\r\n        transition: 'width .5s ease-in-out'\r\n    }\r\n\r\n    return (\r\n        <div className=\"outer-container\" style={containerStyles}>\r\n            <div style={fillerStyles}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { IoMdClose } from 'react-icons/io'\r\n\r\nclass _TodoItem extends Component {\r\n    state = {\r\n        todoTitle: '',\r\n        isEditTodo: false\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    todoTextareaRef = React.createRef()\r\n    saveTodoBtnRef = React.createRef()\r\n\r\n    handleClick = (e) => {\r\n        if (this.todoTextareaRef?.current?.contains(e.target) || this.saveTodoBtnRef?.current?.contains(e.target) || this.newTodoTextarea?.current?.contains(e.target)) {\r\n            return\r\n        }\r\n        this.setState({ isEditTodo: false, todoTitle: '' })\r\n    }\r\n\r\n    handleMarkTodo = () => {\r\n        const res = cardEditService.handleChecklistChange('markTodo', this.props.checklistId, this.props.todo.id)\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    handleRemoveTodo = () => {\r\n        const res = cardEditService.handleChecklistChange('removeTodo', this.props.checklistId, this.props.todo.id)\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    handleTitleChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onChangeTitle = (ev) => {\r\n        ev.preventDefault()\r\n        const { checklistId, todo, onUpdateCard } = this.props\r\n        const { todoTitle } = this.state\r\n        const res = cardEditService.handleChecklistChange('changeTitle', checklistId, todo.id, todoTitle)\r\n        onUpdateCard(...res)\r\n        this.setState({ isEditTodo: false, todoTitle: '' })\r\n    }\r\n\r\n    render() {\r\n        const { todo } = this.props\r\n        const { isEditTodo, todoTitle } = this.state\r\n        return (\r\n            <div className=\"flex align-center todo-item\">\r\n                <input className=\"main-checkbox\" type=\"checkbox\" name={todo.id} checked={todo.isDone} onChange={this.handleMarkTodo} onClick={() => this.setState({ todoTitle: todo.title })}\r\n                    style={{ alignSelf: isEditTodo ? 'flex-start' : 'center' }} />\r\n                {!isEditTodo ? (\r\n                    <div>\r\n                        <span\r\n                            className={todo.isDone ? 'done' : ''}\r\n                            onClick={() => this.setState({ isEditTodo: true })}\r\n                        >\r\n                            {todo.title}\r\n                        </span>\r\n                        <span\r\n                            className=\"remove-todo-icon\"\r\n                            onClick={this.handleRemoveTodo}\r\n                        >\r\n                            <VscTrash />\r\n                        </span>\r\n                    </div>\r\n                ) :\r\n                    <form onSubmit={this.onChangeTitle} style={{ paddingBottom: 9 }}>\r\n                        <textarea\r\n                            className=\"description-textarea edit-todo\"\r\n                            onFocus={() => this.setState({ todoTitle: todo.title })}\r\n                            autoFocus\r\n                            name=\"todoTitle\"\r\n                            value={todoTitle}\r\n                            ref={this.todoTextareaRef}\r\n                            onChange={this.handleTitleChange} />\r\n\r\n                        <div className=\"description-btns\">\r\n                            <button ref={this.saveTodoBtnRef} className=\"card-edit-btn secondary\">Save</button>\r\n                            <button onClick={() => this.setState({ isEditTodo: false, todoTitle: '' })}><IoMdClose style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center' }} /></button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard,\r\n}\r\n\r\nexport const TodoItem = connect(mapStateToProps, mapDispatchToProps)(_TodoItem);\r\n\r\n","import React, { Component } from 'react'\r\nimport { ProgressBar } from './progress-bar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { utilService } from '../../services/util.service'\r\nimport { BsCardChecklist } from 'react-icons/bs'\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport { TodoItem } from './todo-item'\r\n\r\nexport class _ChecklistEdit extends Component {\r\n    state = {\r\n        percentage: 0,\r\n        isAddTodo: false,\r\n        newTodo: ''\r\n    }\r\n\r\n    saveTodoBtnRef = React.createRef()\r\n    addTodoBtnRef = React.createRef()\r\n    newTodoTextarea = React.createRef()\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n        if (this.props.checklist.todos) this.setTodoPercentage()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.board !== this.props.board) {\r\n            this.setTodoPercentage()\r\n        }\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        if (this.saveTodoBtnRef?.current?.contains(e.target) || this.addTodoBtnRef?.current?.contains(e.target) || this.newTodoTextarea?.current?.contains(e.target)) {\r\n            return\r\n        }\r\n        this.setState({ isAddTodo: false, newTodo: '' })\r\n    }\r\n\r\n    setTodoPercentage = (todos = this.props.checklist.todos) => {\r\n        if (!todos?.length && !this.props.checklist?.todos.length) {\r\n            this.setState({ percentage: 0 })\r\n            return\r\n        }\r\n        const doneTodos = todos.filter(todo => todo.isDone)\r\n        const num = (doneTodos.length / todos.length) * 100\r\n        const percentage = (Number.isInteger(num)) ? num : num.toFixed(0)\r\n        this.setState({ percentage })\r\n    }\r\n\r\n    handleInputChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onAddTodo = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ isAddTodo: false, newTodo: '' })\r\n        const res = cardEditService.handleChecklistChange(\"addTodo\", this.props.checklist.id, { id: utilService.makeId(), title: ev.target[0].value, isDone: false })\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    onRemoveChecklist = () => {\r\n        const res = cardEditService.handleChecklistChange(\"removeChecklist\", this.props.checklist.id)\r\n        this.props.onUpdateCard(...res)\r\n    }\r\n\r\n    render() {\r\n        const { checklist } = this.props\r\n        const { percentage, isAddTodo } = this.state\r\n        return (\r\n            <section className=\"checklist-preview flex column\">\r\n\r\n                <section className=\"flex space-between\">\r\n                    <div className=\"card-edit-title\">\r\n                        <span><BsCardChecklist /></span>\r\n                        <h3>{checklist.title}</h3>\r\n                    </div>\r\n                    <button className=\"card-edit-btn\" onClick={this.onRemoveChecklist}>Delete</button>\r\n                </section>\r\n\r\n                <div className=\"flex align-center\">\r\n                    <span style={{ fontSize: 11, width: 32, maxWidth: 32, minWidth: 32 }}>{percentage}%</span>\r\n                    <ProgressBar completed={percentage} bgColor={(percentage === 100) ? '#61bd4f' : '#5ba4cf'} />\r\n                </div>\r\n\r\n                {checklist.todos?.map(todo => {\r\n                    return <div className=\"todos-container\" key={todo.id}>\r\n                        <TodoItem todo={todo} checklistId={checklist.id} />\r\n                    </div>\r\n                })\r\n                }\r\n\r\n                {!isAddTodo\r\n                    ? <button className=\"card-edit-btn add-todo-btn\" style={{ alignSelf: 'flex-start' }} onClick={() => this.setState({ isAddTodo: true })}>Add an item</button>\r\n                    : <form onSubmit={this.onAddTodo}><textarea rows=\"2\"\r\n                        className=\"description-textarea add-todo\"\r\n                        ref={this.newTodoTextarea}\r\n                        autoFocus\r\n                        name=\"newTodo\"\r\n                        placeholder=\"Add an item\"\r\n                        onChange={this.handleInputChange} />\r\n\r\n                        <div className=\"description-btns add-todo-btns\">\r\n                            <button ref={this.addTodoBtnRef} className=\"card-edit-btn secondary\">Save</button>\r\n                            <button onClick={() => this.setState({ isAddTodo: false, newTodo: '' })}><IoMdClose style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center' }} /></button>\r\n                        </div>\r\n                    </form>\r\n                }\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const ChecklistEdit = connect(mapStateToProps, mapDispatchToProps)(_ChecklistEdit);\r\n","import React, { Component } from 'react'\r\nimport { IoMdClose, IoMdList } from 'react-icons/io'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\nclass _CardEditDescription extends Component {\r\n    state = {\r\n        currCard: {},\r\n        isDescriptionOpen: false\r\n    }\r\n\r\n    descriptionRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const currCard = cardEditService.getCardById(this.props.currCardId, groupId)\r\n        this.setState({ currCard })\r\n    }\r\n\r\n    setDescriptionTextarea = () => {\r\n        this.setState({ isDescriptionOpen: !this.state.isDescriptionOpen })\r\n    }\r\n\r\n    handleDescriptionChange = (card = this.state.currCard) => {\r\n        const { board } = this.props\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const activity = {txt: activityTxtMap.changeDescription(), card: card, groupId: groupId}\r\n        this.props.onUpdateCard(card, groupId, board, activity)\r\n    }\r\n\r\n    handleInputChange = ({ target: { value } }) => {\r\n        this.setState({ currCard: { ...this.state.currCard, description: value } })\r\n    }\r\n\r\n    render() {\r\n        const { currCard, isDescriptionOpen } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"description-container card-edit-title\">\r\n                    <span><IoMdList /></span>\r\n                    <h3>Description</h3>\r\n                    {currCard.description && !isDescriptionOpen && <button className=\"card-edit-btn\" onClick={() => {\r\n                        this.setDescriptionTextarea()\r\n                        this.descriptionRef.current.focus()\r\n                    }}> Edit</button>}\r\n                </div>\r\n                <div className=\"card-description\">\r\n                    <textarea\r\n                        ref={this.descriptionRef}\r\n                        className={`description-textarea ${isDescriptionOpen ? 'open' : ''} ${currCard.description ? 'filled' : ''}`}\r\n                        rows={isDescriptionOpen ? \"6\" : \"3\"}\r\n                        onFocus={this.setDescriptionTextarea}\r\n                        onBlur={() => {\r\n                            this.setDescriptionTextarea()\r\n                            this.handleDescriptionChange()\r\n                        }}\r\n                        value={currCard.description}\r\n                        onChange={this.handleInputChange}\r\n                        placeholder=\"Add a more detailed description...\"\r\n                    />\r\n                    {isDescriptionOpen &&\r\n                        <div className=\"description-btns\">\r\n                            <button className=\"card-edit-btn secondary\" onClick={() => this.handleDescriptionChange()}>Save</button>\r\n                            <button onClick={this.setDescriptionTextarea}><IoMdClose style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center' }} /></button>\r\n                        </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditDescription = connect(mapStateToProps, mapDispatchToProps)(_CardEditDescription);\r\n","import React, { Component } from 'react'\r\nimport { MdFormatListBulleted } from 'react-icons/md'\r\n\r\nexport class CardEditActivities extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"flex space-between\">\r\n                <div className=\"card-edit-title\">\r\n                    <span><MdFormatListBulleted /></span>\r\n                    <h3>Activity</h3>\r\n                </div>\r\n                <button className=\"card-edit-btn\">Show details</button>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { CgCreditCard } from 'react-icons/cg'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\n\r\n\r\nfunction _AttachmentPreview({ attachment, currCardId, board, onUpdateCard }) {\r\n\r\n    const groupId = cardEditService.getGroupId(currCardId)\r\n    const currCard = cardEditService.getCardById(currCardId, groupId)\r\n    const addedAt = cardEditService.getUploadTime(attachment.addedAt)\r\n\r\n    const toggleCover = () => {\r\n        if (currCard?.style?.imgUrl === attachment.url) currCard.style = null\r\n        else currCard.style = { imgUrl: attachment.url }\r\n        onUpdateCard(currCard, groupId, board)\r\n    }\r\n\r\n    const checkIfCover = () => {\r\n        return currCard?.style?.imgUrl === attachment.url\r\n    }\r\n\r\n    const onRemoveAttachment = () => {\r\n        const res = cardEditService.handleFileRemove(attachment.id)\r\n        onUpdateCard(...res)\r\n    }\r\n\r\n    return (\r\n        <div className=\"attachment-preview flex\">\r\n            <div className=\"image-container\">\r\n                <img src={attachment.url} alt={attachment.title} />\r\n            </div>\r\n\r\n            <div className=\"right-section flex column\">\r\n                <span className=\"attachment-title\">{attachment.title}</span>\r\n                <div className=\"middle-line\">\r\n                    <span>{addedAt}</span>-\r\n                    <span>Comment</span>-\r\n                    <span onClick={onRemoveAttachment}>Delete</span>-\r\n                    <span>Edit</span>\r\n                </div>\r\n                <div className=\"attachment-cover\">\r\n                    <span><CgCreditCard /></span>\r\n                    <span onClick={toggleCover}>{checkIfCover() ? 'Remove cover' : 'Make cover'}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const AttachmentPreview = connect(mapStateToProps, mapDispatchToProps)(_AttachmentPreview);\r\n","import React, { Component } from 'react'\r\n// import { IoMdClose } from 'react-icons/io'\r\nimport { connect } from 'react-redux'\r\nimport { cardEditService } from '../../services/card-edit.service'\r\nimport { onUpdateCard } from '../../store/board.actions'\r\nimport { FiPaperclip } from 'react-icons/fi'\r\nimport { AttachmentPreview } from './attachment-preview'\r\n\r\n\r\nclass _CardEditAttachment extends Component {\r\n    state = {\r\n        currCard: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const groupId = cardEditService.getGroupId(this.props.currCardId)\r\n        const currCard = cardEditService.getCardById(this.props.currCardId, groupId)\r\n        this.setState({ currCard })\r\n    }\r\n\r\n    render() {\r\n        const { currCard } = this.state\r\n        return (\r\n            <>\r\n                <div className=\"attachment-container card-edit-title\">\r\n                    <span><FiPaperclip /></span>\r\n                    <h3>Attachments</h3>\r\n                </div>\r\n                <div className=\"card-attachments\">\r\n                    {currCard?.attachments?.map((attachment, i) => <AttachmentPreview key={attachment.title + i} attachment={attachment} />)}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCardId: state.boardModule.currCardId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateCard\r\n}\r\n\r\nexport const CardEditAttachment = connect(mapStateToProps, mapDispatchToProps)(_CardEditAttachment);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { CardEditSidebar } from './card-edit/card-edit-sidebar';\r\nimport { LabelsMembers } from './card-edit/labels-members';\r\nimport { ChecklistEdit } from './card-edit/checklist-edit';\r\nimport { onUpdateCard, onSetCardId, loadBoard } from '../store/board.actions';\r\nimport { IoMdClose } from 'react-icons/io';\r\nimport { TiCreditCard } from 'react-icons/ti';\r\nimport { CgCreditCard } from 'react-icons/cg';\r\nimport { CardEditDescription } from './card-edit/card-edit-description';\r\nimport { CardEditActivities } from './card-edit/card-edit-activities';\r\nimport { CardEditAttachment } from './card-edit/card-edit-attachment';\r\nimport { DynamicPopover } from './shared/dynamic-popover';\r\nimport { PopperCoverEdit } from './shared/popover-children/popper-cover-edit';\r\nimport { OverlayScreen } from './overlay-screen';\r\nimport { BsArchive } from 'react-icons/bs';\r\nimport { Loader } from './shared/loader';\r\n\r\nclass _CardEdit extends Component {\r\n  state = {\r\n    currCard: null,\r\n    currGroup: null,\r\n    isOpen: false,\r\n  };\r\n\r\n  modalRef = React.createRef();\r\n  coverRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.handleLoad();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.board !== this.props.board) this.handleLoad();\r\n  }\r\n\r\n  handleLoad = () => {\r\n    let currCard;\r\n    let currGroup;\r\n    const { cardId, groupId } = this.props.match.params;\r\n    console.log('39', cardId);\r\n    this.props.onSetCardId(cardId);\r\n    if (this.props.board.groups) {\r\n      currCard = this.getDataById(cardId, groupId).currentCard;\r\n      currGroup = this.getDataById(cardId, groupId).currentGroup;\r\n    }\r\n    this.setState({ currCard, currGroup });\r\n  };\r\n\r\n  getDataById = (cardId, groupId) => {\r\n    const board = this.props.board;\r\n    const currentGroup = board.groups.find((group) => group.id === groupId);\r\n    const currentCard = currentGroup.cards.find((card) => card.id === cardId);\r\n    return { currentGroup, currentCard };\r\n  };\r\n\r\n  handleInputChange = ({ target: { name, value } }) => {\r\n    this.setState({ currCard: { ...this.state.currCard, [name]: value } });\r\n  };\r\n\r\n  handlePropertyChange = (card = this.state.currCard) => {\r\n    const { board } = this.props;\r\n    const { groupId } = this.props.match.params;\r\n    this.props.onUpdateCard(card, groupId, board);\r\n  };\r\n\r\n  checkCardBackground = () => {\r\n    const { currCard } = this.state;\r\n    if (!currCard.style) return;\r\n    if (currCard.style.bgColor)\r\n      return {\r\n        backgroundColor: currCard.style.bgColor,\r\n        minHeight: 116,\r\n        height: 116,\r\n      };\r\n    if (currCard.style.imgUrl)\r\n      return {\r\n        background: `center / contain no-repeat url(${currCard.style.imgUrl})`,\r\n        objectFit: 'cover',\r\n        minHeight: 160,\r\n        height: 160,\r\n      };\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { currCard, currGroup } = this.state;\r\n    const { board } = this.props;\r\n    if (!currCard) return <Loader />;\r\n    const bg = this.checkCardBackground();\r\n    return (\r\n      <div className='edit-modal-container'>\r\n        <Link to={`/board/${board._id}`}>\r\n          <OverlayScreen />\r\n        </Link>\r\n        <section className='card-edit' ref={this.modalRef}>\r\n          {currCard.style && <div className='card-edit-bg' style={bg}></div>}\r\n          <Link to={`/board/${board._id}`}>\r\n            <button className='close-modal-btn'>\r\n              <IoMdClose />\r\n            </button>\r\n          </Link>\r\n\r\n          {currCard.style && (\r\n            <div ref={this.coverRef} className='btn-wrapper relative'>\r\n              <button\r\n                className='change-cover-btn'\r\n                onClick={() => this.setState({ isOpen: !this.state.isOpen })}\r\n              >\r\n                <span className='cover-icon'>\r\n                  <TiCreditCard />\r\n                </span>\r\n                <span>Cover</span>\r\n              </button>\r\n              {this.state.isOpen && (\r\n                <DynamicPopover\r\n                  onClose={() => this.setState({ isOpen: false })}\r\n                  title='Cover'\r\n                  ref={this.coverRef}\r\n                >\r\n                  <PopperCoverEdit\r\n                    onClose={() => this.setState({ isOpen: false })}\r\n                  />\r\n                </DynamicPopover>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {currCard.isArchive && (\r\n            <div className='archive-msg'>\r\n              <span>\r\n                <BsArchive />\r\n              </span>\r\n              <p>This card is archived</p>\r\n            </div>\r\n          )}\r\n\r\n          <div className='card-edit-header card-title-container'>\r\n            <span>\r\n              <CgCreditCard />\r\n            </span>\r\n            <input\r\n              className='title-input'\r\n              type='text'\r\n              value={currCard.title}\r\n              name='title'\r\n              onChange={this.handleInputChange}\r\n              onBlur={() => this.handlePropertyChange()}\r\n            />\r\n          </div>\r\n\r\n          <div className='list-name-container'>\r\n            <p>\r\n              in list <span className='list-name'>{currGroup.title}</span>\r\n            </p>\r\n          </div>\r\n\r\n          <div className='card-edit-main-container flex'>\r\n            <div className='card-edit-main'>\r\n              <LabelsMembers />\r\n\r\n              <CardEditDescription />\r\n\r\n              {currCard.attachments && currCard.attachments.length > 0 && (\r\n                <CardEditAttachment />\r\n              )}\r\n\r\n              {currCard.checklists?.map((checklist) => (\r\n                <div\r\n                  key={checklist.id}\r\n                  className='checklists-container flex column'\r\n                >\r\n                  <ChecklistEdit\r\n                    checklist={checklist}\r\n                    currCard={currCard}\r\n                    handlePropertyChange={this.handlePropertyChange}\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              <CardEditActivities />\r\n            </div>\r\n\r\n            <CardEditSidebar goBack={this.goBack} />\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateCard,\r\n  onSetCardId,\r\n};\r\n\r\nexport const CardEdit = connect(mapStateToProps, mapDispatchToProps)(_CardEdit);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { onUpdateBoard, onUpdateCard, onAddCard } from '../../store/board.actions.js';\r\n\r\nimport { IoMdClose } from 'react-icons/io'\r\nimport { GrClose } from 'react-icons/gr';\r\nimport { utilService } from '../../services/util.service';\r\nimport { activityTxtMap } from '../../services/activity.service.js'\r\n\r\n\r\nclass _AddBoardItem extends React.Component {\r\n  state = {\r\n    newItem: {\r\n      title: '',\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.textInput.focus();\r\n  }\r\n\r\n  handleChange = (ev) => {\r\n    const { target } = ev;\r\n    let newItem = this.state.newItem;\r\n    newItem[target.name] = target.value;\r\n    this.setState({ newItem });\r\n  };\r\n\r\n  onKeyUpEnter=(ev)=>{\r\n    if(ev.key==='Enter') this.onAddItem(ev)\r\n  }\r\n  \r\n  onAddItem = (ev) => {\r\n    ev.preventDefault();\r\n    const { newItem } = this.state;\r\n    if(!newItem.title) return\r\n    newItem.id = utilService.makeId();\r\n    if (this.props.type === 'group') {\r\n      if(!newItem.cards) newItem.cards=[]\r\n      \r\n      // ADD ACTIVITY\r\n      const activity = {txt: activityTxtMap.addGroup(newItem.title)}\r\n      \r\n      const action = { type: 'ADD_GROUP', group: newItem };\r\n      this.props.onUpdateBoard(action, this.props.board, activity);\r\n    }\r\n    else if (this.props.type === 'card') {\r\n      const newCard = {...newItem , isComplete: false };\r\n      \r\n      // ADD ACTIVITY\r\n      const activity = {txt: activityTxtMap.addCard(newCard.title), card: newCard, groupId: this.props.groupId}\r\n\r\n      this.props.onAddCard( newCard, this.props.groupId, this.props.board, activity);\r\n    }\r\n    this.setState({newItem: {title: ''}})\r\n  };\r\n\r\n  render() {\r\n    const { title } = this.state.newItem;\r\n    const { onToggleAddPop } = this.props;\r\n    const renderedType = this.props.type === 'card' ? this.props.type : 'list';\r\n    return (\r\n      <section className='add-board-item'>\r\n        <form onSubmit={this.onAddItem} onKeyUp={this.onKeyUpEnter}>\r\n          <textarea\r\n            placeholder={`Enter a title for this ${renderedType}`}\r\n            ref={(input) => {\r\n              this.textInput = input;\r\n            }}\r\n            value={title}\r\n            name='title'\r\n            onChange={this.handleChange}\r\n            onBlur={this.onAddItem}\r\n          />\r\n          <div className='form-btns flex align-center'>\r\n            <button type='submit'>Add {renderedType}</button>\r\n            <button onClick={onToggleAddPop}><IoMdClose className=\"icon\" style={{ color: '#42526e', fontSize: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center'  }} /></button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateBoard,\r\n  onUpdateCard,\r\n  onAddCard\r\n};\r\n\r\nexport const AddBoardItem = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_AddBoardItem);\r\n","export function CardHeader({ cardStyle }) {\r\n  return (\r\n    <div className='card-preview-header'>\r\n      {cardStyle.bgColor && (\r\n        <div\r\n          className='header-color'\r\n          style={{ backgroundColor: cardStyle.bgColor }}\r\n        ></div>\r\n      )}\r\n      {cardStyle.imgUrl && <div className=\"image-wrapper\"><img src={cardStyle.imgUrl} /></div>}\r\n    </div>\r\n  );\r\n}\r\n","export function CardLabelBarList({ labelIds, getLabel, isCardLabelListOpen }) {\r\n\r\n    return (\r\n        <ul\r\n        className={`label-bar-list flex clean-list ${\r\n          isCardLabelListOpen ? 'open' : 'close'\r\n        }`}\r\n      >\r\n        {labelIds.map((labelId) => {\r\n          const label = getLabel(labelId);\r\n          return (\r\n            <li\r\n              className='label-bar'\r\n              key={label.id}\r\n              style={{ backgroundColor: label.color }}\r\n            >\r\n              {isCardLabelListOpen && label.title && (\r\n                <span>{label.title}</span>\r\n              )}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }","import { BsCheckBox } from 'react-icons/bs';\r\n\r\n\r\nexport function CardChecklists({ checklists }) {\r\n  const getChecklistStr = () => {\r\n    let todosCount = 0;\r\n    let doneTodosCount = 0;\r\n    checklists.forEach((checklist) => {\r\n      checklist.todos.forEach((todo) => {\r\n        todosCount++;\r\n        if (todo.isDone) doneTodosCount++;\r\n      });\r\n    });\r\n    return doneTodosCount + '/' + todosCount;\r\n  };\r\n  return (\r\n    <div className='checklist-box flex align-center'>\r\n      <BsCheckBox />\r\n      <span>{getChecklistStr()}</span>\r\n    </div>\r\n  );\r\n}\r\n","import { GrCheckbox } from 'react-icons/gr';\r\nimport { GrCheckboxSelected } from 'react-icons/gr';\r\nimport { FiClock } from 'react-icons/fi';\r\n\r\nexport function CardDueDate({ card, groupId, toggleCardComplete }) {\r\n  const getFormatedTime = (dueDate) => {\r\n    const date = new Date(dueDate);\r\n    const day = date.getDate();\r\n    const month = date.toLocaleString('en', { month: 'short' });\r\n    const formatedTime = month + ' ' + day;\r\n    return formatedTime;\r\n  };\r\n\r\n  const getDueTimeStyle = (card) => {\r\n    //complete\r\n    if (card.isComplete) return { backgroundColor: '#61BD4F' };\r\n    //due soon\r\n    else if (\r\n      card.dueDate - Date.now() > 0 &&\r\n      card.dueDate - Date.now() < 1000 * 60 * 60 * 24\r\n    )\r\n      return { backgroundColor: '#F2D600' };\r\n    //overdue\r\n    else if (card.dueDate - Date.now() < 0)\r\n      return { backgroundColor: '#EB5A46' };\r\n    //none of the above\r\n    return { backgroundColor: 'inherit', color: 'unset' };\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='due-date-box flex align-center'\r\n      style={getDueTimeStyle(card)}\r\n      onClick={(event) => toggleCardComplete(event, groupId, card)}\r\n    >\r\n      <span className='clock-icon flex align-center'>\r\n        <FiClock />\r\n      </span>\r\n      <span className='check-icon'>\r\n        {card.isComplete ? (\r\n          <GrCheckboxSelected color={'inherit'} />\r\n        ) : (\r\n          <GrCheckbox />\r\n        )}\r\n      </span>\r\n      <span>{getFormatedTime(card.dueDate)}</span>\r\n    </div>\r\n  );\r\n}\r\n","import { GrTextAlignFull } from 'react-icons/gr';\r\nimport { ImAttachment } from 'react-icons/im';\r\n\r\nimport { MemberAvatar } from '../../cmps/shared/member-avatar.jsx';\r\nimport { CardChecklists } from './card-checklists';\r\nimport { CardDueDate } from '../card-preview/card-duedate.jsx';\r\n\r\nexport function CardFooter({card, groupId, toggleCardComplete}) {\r\n\r\n    return (\r\n        \r\n        <div className='card-preview-footer flex align-center'>\r\n        {card.dueDate && (\r\n          <CardDueDate\r\n            card={card}\r\n            groupId={groupId}\r\n            toggleCardComplete={toggleCardComplete}\r\n          />\r\n        )}\r\n\r\n        {card.description && (\r\n          <GrTextAlignFull title={'This card has a description'} />\r\n        )}\r\n\r\n        {card.attachments && card.attachments.length > 0 && (\r\n          <div className='attachment-box flex align-center'>\r\n            <span className='flex align-center'>\r\n              <ImAttachment />\r\n            </span>\r\n            <span>{card.attachments.length}</span>\r\n          </div>\r\n        )}\r\n\r\n        {card.checklists && (\r\n            <CardChecklists checklists={card.checklists} />\r\n        )}\r\n\r\n        {card.members && (\r\n          <div className='card-members-list flex'>\r\n            {card.members.map((member, index) => (\r\n              <MemberAvatar\r\n                member={member}\r\n                size={'md'}\r\n                key={index}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n}","import { connect } from 'react-redux';\r\n\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport { HiOutlinePencil } from 'react-icons/hi';\r\n\r\nimport { CardHeader } from '../card-preview/card-header.jsx';\r\nimport { CardLabelBarList } from '../card-preview/card-label-bar-list.jsx';\r\nimport { CardFooter } from '../card-preview/card-footer.jsx';\r\n\r\nfunction _CardPreview({\r\n  card,\r\n  groupId,\r\n  openCardEdit,\r\n  isCardLabelListOpen,\r\n  toggleCardLabelList,\r\n  toggleCardComplete,\r\n  onToggleQuickCardEditor,\r\n  index,\r\n  getLabel,\r\n}) {\r\n  return (\r\n    <div\r\n    className='card-wrapper'\r\n      style={{ display: card.isArchive ? 'none' : 'unset' }}\r\n    >\r\n      <Draggable draggableId={card.id} index={index}>\r\n        {(provided) => {\r\n          return (\r\n            <li\r\n              ref={provided.innerRef}\r\n              {...provided.dragHandleProps}\r\n              {...provided.draggableProps}\r\n            >\r\n              <div\r\n                className='card-preview flex space-between'\r\n                \r\n                onClick={() => openCardEdit(groupId, card.id)}\r\n              >\r\n                <button\r\n                  className='hover-edit-btn'\r\n                  onClick={(event) =>\r\n                    onToggleQuickCardEditor(event, card, groupId)\r\n                  }\r\n                >\r\n                  <HiOutlinePencil />\r\n                </button>\r\n\r\n                {card.style && <CardHeader cardStyle={card.style} />}\r\n\r\n                <div className='card-details'>\r\n                  {card.labelIds && (\r\n                    <div onClick={toggleCardLabelList}>\r\n                      <CardLabelBarList\r\n                        labelIds={card.labelIds}\r\n                        getLabel={getLabel}\r\n                        isCardLabelListOpen={isCardLabelListOpen}\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  <p>{card.title}</p>\r\n\r\n                  <CardFooter\r\n                    card={card}\r\n                    groupId={groupId}\r\n                    toggleCardComplete={toggleCardComplete}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </li>\r\n          );\r\n        }}\r\n      </Draggable>\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nexport const CardPreview = connect(mapStateToProps)(_CardPreview);\r\n","export function GroupActions({groupId , onToggleAddPop, toggleGroupArchive}) {\r\n  return (\r\n    <div className='group-actions flex column'>\r\n      <button onClick={onToggleAddPop}>Add card...</button>\r\n      <button onClick={()=>toggleGroupArchive(groupId)}>Archive this list...</button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\n\r\nimport { BsThreeDots } from 'react-icons/bs';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport { GrClose } from 'react-icons/gr';\r\nimport { CardPreview } from './card-preview.jsx';\r\n\r\nimport { GroupActions } from '../shared/popover-children/group-actions.jsx';\r\nimport { AddBoardItem } from '../shared/add-board-item.jsx';\r\nimport { DynamicPopover } from '../shared/dynamic-popover.jsx';\r\nimport { activityTxtMap } from '../../services/activity.service.js';\r\n\r\nexport class GroupPreview extends Component {\r\n  state = {\r\n    isAddPopOpen: false,\r\n    groupTitle: '',\r\n    isPopoverOpen: false,\r\n  };\r\n\r\n  groupEditRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      ...this.state,\r\n      groupTitle: this.props.group.title,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.group !== this.props.group) {\r\n      this.setState({\r\n        ...this.state,\r\n        groupTitle: this.props.group.title,\r\n      });\r\n    }\r\n  }\r\n\r\n  onToggleAddPop = () => {\r\n    this.setState({ isAddPopOpen: !this.state.isAddPopOpen });\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  onChangeGroupTitle = () => {\r\n    const group = this.props.group;\r\n    group.title = this.state.groupTitle;\r\n    const action = { type: 'UPDATE_GROUP', group };\r\n    const activity = {txt: activityTxtMap.changeGroupTitle(group.title)}\r\n    this.props.updateBoard(action, activity);\r\n  };\r\n\r\n  blurFocus = (event) => {\r\n    event.target.blur()\r\n  };\r\n\r\n  setFocus = (event) => {\r\n    event.target.focus();\r\n  };\r\n\r\n  handleFocus = (event) => {\r\n    event.target.select();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      group,\r\n      openCardEdit,\r\n      toggleCardLabelList,\r\n      isCardLabelListOpen,\r\n      index,\r\n      toggleCardComplete,\r\n      toggleGroupArchive,\r\n      onToggleQuickCardEditor,\r\n      getLabel\r\n    } = this.props;\r\n    const { isAddPopOpen, groupTitle, isPopoverOpen } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={'group-wrapper'}\r\n        style={{ display: group.isArchive ? 'none' : 'unset' }}\r\n      >\r\n        <Draggable draggableId={group.id} index={index}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              className='group-preview flex column'\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              <div className='group-header flex space-between align-center'>\r\n                <input\r\n                  className='clean-input'\r\n                  type='text'\r\n                  value={groupTitle}\r\n                  name='groupTitle'\r\n                  // onFocus={this.handleFocus}\r\n                  onMouseDown={this.blurFocus}\r\n                  onMouseUp={this.setFocus}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.onChangeGroupTitle}\r\n                />\r\n\r\n                <div\r\n                  className='relative'\r\n                  ref={this.groupEditRef}\r\n                  onClick={() =>\r\n                    this.setState({ isPopoverOpen: !isPopoverOpen })\r\n                  }\r\n                >\r\n                  <button>\r\n                    <BsThreeDots />\r\n                  </button>\r\n                  {isPopoverOpen && (\r\n                    <DynamicPopover\r\n                      onClose={() => this.setState({ isPopoverOpen: false })}\r\n                      ref={this.groupEditRef}\r\n                      title='List actions'\r\n                    >\r\n                      <GroupActions\r\n                        groupId={group.id}\r\n                        onToggleAddPop={this.onToggleAddPop}\r\n                        toggleGroupArchive={toggleGroupArchive}\r\n                      />\r\n                    </DynamicPopover>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <Droppable droppableId={group.id}>\r\n                {(provided) => (\r\n                  <ul\r\n                    className='card-list clean-list'\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                  >\r\n                    {group.cards &&\r\n                      group.cards.map((card, index) => {\r\n                        return (\r\n                          <CardPreview\r\n                            key={card.id}\r\n                            card={card}\r\n                            index={index}\r\n                            groupId={group.id}\r\n                            openCardEdit={openCardEdit}\r\n                            toggleCardLabelList={toggleCardLabelList}\r\n                            isCardLabelListOpen={isCardLabelListOpen}\r\n                            toggleCardComplete={toggleCardComplete}\r\n                            onToggleQuickCardEditor={onToggleQuickCardEditor}\r\n                            getLabel={getLabel}\r\n                          />\r\n                        );\r\n                      })}\r\n                    {provided.placeholder}\r\n                    {isAddPopOpen && (\r\n                      <AddBoardItem\r\n                        onToggleAddPop={this.onToggleAddPop}\r\n                        type={'card'}\r\n                        groupId={group.id}\r\n                      />\r\n                    )}\r\n                  </ul>\r\n                )}\r\n              </Droppable>\r\n\r\n                {!isAddPopOpen && (\r\n              <div className='group-footer flex space-between align-center'>\r\n                  <button\r\n                    className='add-boarditem-btn flex align-center'\r\n                    onClick={this.onToggleAddPop}\r\n                  >\r\n                    <i className='flex align-center'>\r\n                      <AiOutlinePlus />\r\n                    </i>\r\n                    <span>Add a card</span>\r\n                  </button>\r\n              </div>\r\n                )}\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// import React, { Component } from 'react';\r\n\r\nimport { GroupPreview } from './group-preview.jsx';\r\n\r\nexport function GroupList({\r\n  groups,\r\n  openCardEdit,\r\n  updateBoard,\r\n  toggleCardLabelList,\r\n  isCardLabelListOpen,\r\n  toggleCardComplete,\r\n  toggleGroupArchive,\r\n  onToggleQuickCardEditor,\r\n  getLabel\r\n}) {\r\n  return (\r\n    <ul className='group-list clean-list flex'>\r\n      {groups.map((group, index) => {\r\n        return (\r\n          <GroupPreview\r\n            key={group.id}\r\n            index={index}\r\n            group={group}\r\n            openCardEdit={openCardEdit}\r\n            updateBoard={updateBoard}\r\n            toggleCardLabelList={toggleCardLabelList}\r\n            isCardLabelListOpen={isCardLabelListOpen}\r\n            toggleCardComplete={toggleCardComplete}\r\n            toggleGroupArchive={toggleGroupArchive}\r\n            onToggleQuickCardEditor={onToggleQuickCardEditor}\r\n            getLabel={getLabel}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { MemberAvatar } from '../shared/member-avatar';\r\nimport { onUpdateBoard } from '../../store/board.actions'\r\nimport { IoCheckmarkSharp } from 'react-icons/io5'\r\nimport { activityTxtMap } from '../../services/activity.service';\r\nimport { socketService } from '../../services/socket.service';\r\n\r\nclass _InviteMembers extends React.Component {\r\n\r\n    state = {\r\n        search: ''\r\n    }\r\n\r\n    getMembersIds = () => {\r\n        const { board } = this.props\r\n        const boardMembersIds = board.members.map(member => member._id)\r\n        return boardMembersIds\r\n    }\r\n\r\n    inviteToBoard = (user) => {\r\n        const { board, onUpdateBoard } = this.props\r\n        // const members = board.members\r\n        // members.push({_id: user._id, fullname: user.fullname, imgUrl: user.imgUrl})\r\n        const memberIds = this.getMembersIds()\r\n        const memberToAdd = { _id: user._id, fullname: user.fullname, imgUrl: user.imgUrl }\r\n        if (memberIds.includes(memberToAdd._id)) return\r\n        const activity = { txt: activityTxtMap.inviteMember(user.fullname) }\r\n        onUpdateBoard({ type: 'ADD_BOARD_MEMBER', member: memberToAdd }, board, activity)\r\n        console.log(board.members)\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ ...this.state, [field]: value });\r\n    }\r\n\r\n    render() {\r\n        const { search } = this.state\r\n        const { users } = this.props\r\n        const memberIds = this.getMembersIds()\r\n        const filteredUsers = users.filter(user => !memberIds.includes(user._id))\r\n\r\n        return (\r\n            <div className=\"invite-members\">\r\n                <input className=\"search-input\" type=\"text\" onChange={this.handleChange} name=\"search\" value={search} autoFocus placeholder=\"Search...\" />\r\n                <ul className=\"member-list clean-list\">\r\n                    {filteredUsers.filter(user => user.fullname.includes(search)).map(user =>\r\n                        <li className=\"user-preview\" key={user._id} onClick={() => this.inviteToBoard(user)} >\r\n                            <div className=\"user-details\">\r\n                                <MemberAvatar member={user} />\r\n                                <span className=\"user-name\">{user.fullname}</span>\r\n                            </div>\r\n                            <span>{(memberIds.includes(user._id)) ? <IoCheckmarkSharp /> : ''}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users,\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const InviteMembers = connect(mapStateToProps, mapDispatchToProps)(_InviteMembers);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { activityTxtMap } from '../../services/activity.service';\r\n\r\nimport { onUpdateBoard } from '../../store/board.actions'\r\n\r\nclass _ChangeBG extends React.Component {\r\n\r\n    setBoardBG = (backGround) => {\r\n        const { board, onUpdateBoard } = this.props\r\n        const style = (backGround[0] === '#') ? { bgColor: backGround } : { imgUrl: backGround }\r\n        // const style = (backGround[0] === '#') ? { bgColor: backGround } : { imgUrl: backGround }\r\n      const activity = {txt: activityTxtMap.changeBackground()}\r\n        onUpdateBoard({ type: \"CHANGE_BOARD_STYLE\", style }, board, activity)\r\n    }\r\n\r\n    render() {\r\n        const images = ['https://images.pexels.com/photos/1914982/pexels-photo-1914982.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260', 'https://images.pexels.com/photos/844297/pexels-photo-844297.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/3293148/pexels-photo-3293148.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/911738/pexels-photo-911738.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/3274903/pexels-photo-3274903.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/3683056/pexels-photo-3683056.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/2170473/pexels-photo-2170473.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/2529973/pexels-photo-2529973.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/1982485/pexels-photo-1982485.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', 'https://images.pexels.com/photos/1408221/pexels-photo-1408221.jpeg?cs=srgb&dl=pexels-irina-iriser-1408221.jpg&fm=jpg']\r\n        const colors = ['#82E0AA', '#F1948A', '#AAB7B8 ', '#C39BD3', '#85C1E9', '#F8C471']\r\n\r\n        return (\r\n            <div className=\"change-bg\">\r\n                <div className=\"images\">\r\n                    {images.map((image, idx) =>\r\n                        <div key={idx} className=\"img-container\" onClick={() => this.setBoardBG(image)}>\r\n                            <img src={image} alt={image} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <hr />\r\n                <div className=\"colors\">\r\n                    {colors.map((color, idx) =>\r\n                        <div style={{ backgroundColor: `${color}` }} key={idx} className=\"color-container\" onClick={() => this.setBoardBG(color)}></div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    };\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard,\r\n};\r\n\r\nexport const ChangeBG = connect(mapStateToProps, mapDispatchToProps)(_ChangeBG);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass _BoardIcon extends React.Component {\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        return (\r\n            <div className=\"icon\" style={(board.style.bgColor) ? { backgroundColor: board.style.bgColor } : {}} >\r\n                {board.style.imgUrl && <img src={board.style.imgUrl} alt=\"\" />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nexport const BoardIcon = connect(mapStateToProps)(_BoardIcon);","import React from \"react\";\r\nimport { IoCheckmarkSharp } from \"react-icons/io5\";\r\nimport { connect } from \"react-redux\";\r\nimport { PopperLabelPreview } from \"../card-edit/popper-label-preview\";\r\nimport { MemberAvatar } from \"../shared/member-avatar\";\r\n\r\nimport { onUpdateFilter, loadBoard } from \"../../store/board.actions\"\r\nimport { withRouter } from \"react-router\";\r\nimport { utilService } from \"../../services/util.service\";\r\n\r\nclass _SearchCards extends React.Component {\r\n    state = {\r\n        filterBy: {\r\n            txt: '',\r\n            members: [],\r\n            labels: []\r\n        }\r\n    }\r\n\r\n    componentDidUpdate({ filterBy: prevFilterBy }) {\r\n        const { filterBy: currFilterBy } = this.props\r\n        if (prevFilterBy !== currFilterBy) {\r\n            this.updateUrlSearchParams(currFilterBy)\r\n            this.getFilteredBoard.bind(this)()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onUpdateFilter({ txt: '', members: [], labels: [] })\r\n        this.updateUrlSearchParams(this.props.filterBy)\r\n        this.getFilteredBoard.bind(this)()\r\n    }\r\n\r\n    updateUrlSearchParams = (filterBy) => {\r\n        const { history, location } = this.props\r\n        const urlSearchFilterBy = { ...filterBy }\r\n        for (const key in urlSearchFilterBy) {\r\n            const currVal = urlSearchFilterBy[key]\r\n            if (!currVal || (Array.isArray(currVal) && !currVal.length)) delete urlSearchFilterBy[key]\r\n        }\r\n        const search = new URLSearchParams(urlSearchFilterBy)\r\n        history.replace(`${location.pathname}?${search.toString()}`)\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        const filterBy = { ...this.props.filterBy, [field]: value }\r\n        this.props.onUpdateFilter(filterBy)\r\n    }\r\n\r\n    getFilteredBoard = utilService.debounce(() => {\r\n        const newFilterBy = { ...this.props.filterBy }\r\n        for (const key in newFilterBy) {\r\n            const currVal = newFilterBy[key]\r\n            if (!currVal || (Array.isArray(currVal) && !currVal.length)) delete newFilterBy[key]\r\n        }\r\n        this.props.loadBoard(this.props.match.params.boardId, newFilterBy)\r\n    }, 100)\r\n\r\n    handleUserClick = (user) => {\r\n        if (this.props.filterBy.members.includes(user._id)) {\r\n            const clickedIdx = this.props.filterBy.members.findIndex(member => member === user._id)\r\n            this.props.filterBy.members.splice(clickedIdx, 1)\r\n            const filterBy = { ...this.props.filterBy, members: [...this.props.filterBy.members] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        } else {\r\n            const filterBy = { ...this.props.filterBy, members: [...this.props.filterBy.members, user._id] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        }\r\n    }\r\n\r\n    handleLabelClick = (label) => {\r\n        if (this.props.filterBy.labels.includes(label.id)) {\r\n            const clickedIdx = this.props.filterBy.labels.findIndex(label => label === label)\r\n            this.props.filterBy.labels.splice(clickedIdx, 1)\r\n            const filterBy = { ...this.props.filterBy, labels: [...this.props.filterBy.labels] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        } else {\r\n            const filterBy = { ...this.props.filterBy, labels: [...this.props.filterBy.labels, label.id] }\r\n            this.props.onUpdateFilter(filterBy)\r\n        }\r\n    }\r\n    render() {\r\n        const { board } = this.props\r\n        const { filterBy } = this.props\r\n        return (\r\n            <div className=\"search-cards\">\r\n                <input className=\"search-input\" type=\"text\" onChange={this.handleChange} name=\"txt\" value={filterBy.txt} autoFocus placeholder=\"Search...\" />\r\n                <p className=\"search-desc\">Search by term, label, member, or due time</p>\r\n\r\n                <hr />\r\n\r\n                <ul className=\"label-list clean-list\">\r\n                    {board.labels.map(label =>\r\n                        <li className=\"label-preview\" key={label.id} onClick={() => this.handleLabelClick(label)}>\r\n                            <div className=\"label-details\">\r\n                                <div className=\"label-color\" style={{ backgroundColor: label.color }} ></div>\r\n                                <p>{label.title}</p>\r\n                            </div>\r\n                            <span>{(filterBy.labels.includes(label.id)) ? <IoCheckmarkSharp /> : ''}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n                <hr />\r\n                <ul className=\"member-list clean-list\">\r\n                    {board.members.map(member =>\r\n                        <li className=\"user-preview\" key={member._id} onClick={() => this.handleUserClick(member)} >\r\n                            <div className=\"user-details\">\r\n                                <MemberAvatar member={member} />\r\n                                <span className=\"user-name\">{member.fullname}</span>\r\n                            </div>\r\n                            <span>{(filterBy.members.includes(member._id)) ? <IoCheckmarkSharp /> : ''}</span>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        filterBy: state.boardModule.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onUpdateFilter,\r\n    loadBoard\r\n}\r\n\r\nexport const SearchCards = connect(mapStateToProps, mapDispatchToProps)(withRouter(_SearchCards));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass _Archive extends React.Component {\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <p>Archive</p>\r\n                {/* <CardPreview /> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        filterBy: state.boardModule.filterBy\r\n    }\r\n}\r\n\r\nexport const Archive = connect(mapStateToProps)(_Archive);\r\n","import React from 'react';\r\nimport { GrList } from 'react-icons/gr';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { MemberAvatar } from '../shared/member-avatar';\r\nimport Moment from 'react-moment'\r\n\r\nclass _ActivityList extends React.Component {\r\n\r\n    \r\n\r\n    getGroupTitle = (groupId) => {\r\n        const group = this.props.board.groups.find(group => group.id === groupId)\r\n        return group.title\r\n    }\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        if (board.activities.length === 0) return (<div className=\"activity\">\r\n            <div className=\"activity-header\">\r\n                <GrList />\r\n                <p>Activity</p>\r\n            </div>\r\n            <p>No Activities in this board yet</p>\r\n        </div>)\r\n        return (\r\n            <div className=\"activity\">\r\n                <div className=\"activity-header\">\r\n                    <GrList />\r\n                    <p>Activity</p>\r\n                </div>\r\n                <ul className=\"activity-list clean-list\" >\r\n                    {\r\n                        board.activities.map(activity =>\r\n                            <li key={activity.id} className=\"activity-preview\">\r\n                                <span className=\"member-avatar\"><MemberAvatar member={activity.byMember} /></span>\r\n                                <div className=\"activity-text\">\r\n                                    <span className=\"user-fullname\">{activity.byMember.fullname} </span>\r\n                                    <p>{activity.txt}</p>\r\n                                    {activity.groupId && <Link to={`/board/${board._id}/${activity.groupId}/${activity.card.id}`}> {activity.card.title}</Link>}\r\n                                    {activity.groupId && <p>in list: {this.getGroupTitle(activity.groupId)}</p>}\r\n                                    <Moment className=\"publish-time\" fromNow>{activity.createdAt}</Moment>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const ActivityList = connect(mapStateToProps, mapDispatchToProps)(_ActivityList);","import React from 'react';\r\nimport { IoIosArrowBack, IoMdClose } from 'react-icons/io';\r\nimport { BiSearch } from 'react-icons/bi';\r\nimport { connect } from 'react-redux';\r\nimport { ChangeBG } from './change-bg';\r\nimport { BsArchiveFill } from 'react-icons/bs';\r\nimport { BoardIcon } from './board-icon';\r\nimport { SearchCards } from './search-cards';\r\nimport { Archive } from './archive';\r\nimport { ActivityList } from './activity-list';\r\n\r\nclass _SideMenu extends React.Component {\r\n    state = {\r\n        currViewIdx: -1\r\n    }\r\n\r\n    _cmpsToRender = [{ id: 'c101', title: 'Change Background', icon: <BoardIcon />, component: ChangeBG },\r\n    { id: 'c102', title: 'Search Cards', icon: <BiSearch />, component: SearchCards },\r\n    { id: 'c103', title: 'Archive - Under Construction 🚧', icon: <BsArchiveFill />, component: Archive }]\r\n\r\n    componentWillUnmount() {\r\n        this.setState((prevState) => ({ ...prevState, currViewIdx: -1 }))\r\n    }\r\n\r\n    onSelectView = (viewId) => {\r\n        this.setState((prevState) => ({ ...prevState, currViewIdx: viewId }))\r\n    }\r\n\r\n    getViewById = () => {\r\n        const { currViewIdx } = this.state\r\n        const currView = this._cmpsToRender[currViewIdx]\r\n        console.log('selected view: ', currView)\r\n        return currView.component\r\n    }\r\n\r\n    onBack = () => {\r\n        this.setState((prevState) => ({ ...prevState, currViewIdx: -1 }))\r\n    }\r\n\r\n    /* priavte cmps */\r\n    _CurrView = (props) => {\r\n        const { component: Component } = this._cmpsToRender[this.state.currViewIdx]\r\n        return <Component {...props} />\r\n    }\r\n\r\n    _DefaultView = () => {\r\n        return <div>\r\n            <ul className=\"default-menu clean-list\">\r\n                {this._cmpsToRender.map((cmp, idx) =>\r\n                    <li onClick={() => this.onSelectView(idx)} key={cmp.id}>\r\n                        <div className=\"icon\">{cmp.icon}</div>\r\n                        <p>{cmp.title}</p>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n            <hr />\r\n            <ActivityList />\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        const { onClose } = this.props\r\n        const { currViewIdx } = this.state\r\n        return (\r\n            <div className={`side-menu ${(this.props.isMenuOpen) ? 'menu-open' : ''}`}>\r\n                <div className=\"title\">\r\n                    <span className={`back-btn ${(currViewIdx !== -1) ? 'show-btn' : ''} `} onClick={() => this.onBack()}><IoIosArrowBack /></span>\r\n                    <p className=\"menu-title\" >{currViewIdx === -1 ? 'Menu' : this._cmpsToRender[currViewIdx].title}</p>\r\n                    <span className=\"close-btn\" onClick={onClose}><IoMdClose /></span>\r\n                </div>\r\n                <hr />\r\n                <div className=\"rendered-cmp\">\r\n                    {currViewIdx === -1 ? <this._DefaultView /> : <this._CurrView />}\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const SideMenu = connect(mapStateToProps, mapDispatchToProps)(_SideMenu);","import React, { useEffect } from 'react'\r\nimport { MemberAvatar } from '../../shared/member-avatar'\r\nimport { connect } from 'react-redux'\r\nimport { onUpdateBoard } from '../../../store/board.actions'\r\nimport { IoCheckmarkSharp } from 'react-icons/io5'\r\n\r\n\r\nconst _BoardEditMembers = ({ members, board, onUpdateBoard, onClose }) => {\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            onClose()\r\n        }\r\n    },[onClose])\r\n\r\n    const removeFromBoard = (memberId) => {\r\n        // const activity = {txt: activityTxtMap.inviteMember(user.fullname)}\r\n        onUpdateBoard({ type: 'REMOVE_BOARD_MEMBER', memberId: memberId }, board)\r\n    }\r\n\r\n    return (\r\n        <div className=\"member-list\" style={{ color: '#172b4d' }}>\r\n            {members.map(member => (\r\n                <div key={member._id} className=\"popper-member-preview flex\" onClick={() => removeFromBoard(member._id)}>\r\n                    <div className='list-item-layover'></div>\r\n                    <div style={{ width: 32 }}>\r\n                        <MemberAvatar member={member} />\r\n                    </div>\r\n                    <div className='popper-member-name'>\r\n                        <p>{member.fullname}</p>\r\n                    </div>\r\n                    <div className='popper-member-check'><IoCheckmarkSharp /></div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.userModule.users,\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onUpdateBoard\r\n}\r\n\r\nexport const BoardEditMembers = connect(mapStateToProps, mapDispatchToProps)(_BoardEditMembers);\r\n","import React from 'react'\r\nimport { AiOutlineStar } from 'react-icons/ai'\r\nimport { RiBarChartFill } from 'react-icons/ri'\r\nimport { HiDotsHorizontal } from 'react-icons/hi'\r\nimport { FaUserAlt } from 'react-icons/fa'\r\nimport { connect } from 'react-redux'\r\nimport { activityTxtMap } from '../../services/activity.service'\r\n\r\nimport { onUpdateBoard } from '../../store/board.actions.js'\r\nimport { loadUsers } from '../../store/user.actions.js'\r\nimport { MemberAvatar } from '../shared/member-avatar.jsx'\r\nimport { InviteMembers } from './invite-members.jsx'\r\nimport { DynamicPopover } from '../shared/dynamic-popover.jsx'\r\nimport { SideMenu } from '../side-menu/side-menu.jsx'\r\nimport { BoardEditMembers } from '../shared/popover-children/board-edit-members'\r\n\r\nclass _BoardHeader extends React.Component {\r\n\r\n    state = {\r\n        isInviteOpen: false,\r\n        rect: null,\r\n        element: null,\r\n        boardTitle: this.props.board.title,\r\n        isMenuOpen: false,\r\n        numOfShownMembers: 7,\r\n        isMembersOpen: false,\r\n    }\r\n\r\n    inviteRef = React.createRef()\r\n    membersRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.handleResize)\r\n        this.handleResize()\r\n        this.props.loadUsers()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize)\r\n    }\r\n\r\n    handleResize = () => {\r\n        const { numOfShownMembers } = this.state\r\n        if (window.innerWidth < 800) {\r\n            if (numOfShownMembers === 3) return\r\n            this.setState({ numOfShownMembers: 3 })\r\n\r\n        } else if (window.innerWidth > 800 && window.innerWidth < 1300) {\r\n            if (numOfShownMembers === 7) return\r\n            this.setState({ numOfShownMembers: 7 })\r\n\r\n        } else {\r\n            if (numOfShownMembers === 10) return\r\n            this.setState({ numOfShownMembers: 10 })\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.board.title !== this.props.board.title) {\r\n            this.setState({ boardTitle: this.props.board.title })\r\n        }\r\n    }\r\n\r\n    toggleStarredBoard = () => {\r\n        const { board, onUpdateBoard } = this.props\r\n        board.isStarred = !board.isStarred\r\n        onUpdateBoard({ type: 'TOGGLE_STARRED', isStarred: board.isStarred }, board)\r\n    }\r\n\r\n    handleFocus = (event) => event.target.select();\r\n\r\n    handleChange = ({ target: { name, value } }) => {\r\n        this.setState((prevState) => ({ ...prevState, [name]: value }));\r\n    }\r\n\r\n    onChangeBoardTitle = () => {\r\n        const { board, onUpdateBoard } = this.props\r\n        board.title = this.state.boardTitle\r\n        const activity = { txt: activityTxtMap.renameBoard(board.title) }\r\n        onUpdateBoard({ type: 'CHANGE_TITLE', title: board.title }, board, activity)\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState((prevState) => ({ ...prevState, isMenuOpen: !this.state.isMenuOpen }))\r\n    }\r\n\r\n    getRemainingMembers = () => {\r\n        const members = [...this.props.board.members]\r\n        members.splice(this.state.numOfShownMembers)\r\n        return members\r\n    }\r\n\r\n    getExtraMembersLength = () => (this.props.board.members.length - this.state.numOfShownMembers)\r\n\r\n    onMembersClose = () => this.setState({ isMembersOpen: false })\r\n\r\n    render() {\r\n        const { board, onToggleDashboard } = this.props\r\n        const { boardTitle, isMenuOpen, isInviteOpen, numOfShownMembers, isMembersOpen } = this.state\r\n        const members = this.getRemainingMembers()\r\n        const extraMembersLength = this.getExtraMembersLength()\r\n\r\n        return (\r\n            <section className=\"board-header\">\r\n                <div className=\"left-btns\">\r\n                    <button className=\"board-title nav-button\">\r\n                        <input className='clean-input' type='text' value={boardTitle} name='boardTitle' onFocus={this.handleFocus} onChange={this.handleChange} onBlur={this.onChangeBoardTitle} />\r\n                    </button>\r\n                    <button className={`starred-btn nav-button ${(board.isStarred) ? 'starred' : ''}`} onClick={() => this.toggleStarredBoard()}><AiOutlineStar /></button> |\r\n                    <div className=\"members-container flex\"><div className=\"user-previews\">\r\n                        {members.map((member, idx) =>\r\n                            <MemberAvatar key={member._id} member={member} style={{ left: idx * -5 }} />\r\n                        )}\r\n                        {extraMembersLength > 0 && (\r\n                            <div\r\n\r\n                                ref={this.membersRef}\r\n                            >\r\n                                <div className=\"list-item-layover round\" style={{ transform: `translateX(${(members.length) * -5}px)` }} onClick={() => this.setState({ isMembersOpen: !isMembersOpen })}></div>\r\n                                <div\r\n                                    className=\"show-more-btn\"\r\n                                    style={{ transform: `translateX(${(members.length) * -5}px)` }}\r\n                                >\r\n                                    {`+${extraMembersLength}`}\r\n                                </div>\r\n                                {isMembersOpen && <DynamicPopover onClose={() => this.setState({ isMembersOpen: false })} title=\"Members\" ref={this.membersRef}>\r\n                                    <BoardEditMembers members={board.members.filter(member => member._id)} onClose={this.onMembersClose} />\r\n                                </DynamicPopover>}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                        <div className='relative' ref={this.inviteRef}>\r\n                            <button onClick={() => this.setState({ isInviteOpen: !isInviteOpen })} className=\"invite-btn nav-button\">Invite</button>\r\n                            {isInviteOpen && <DynamicPopover onClose={() => this.setState({ isInviteOpen: false })} title=\"Invite Members\" ref={this.inviteRef}>\r\n                                <InviteMembers />\r\n                            </DynamicPopover>}\r\n                        </div></div>\r\n                </div>\r\n                <div className=\"right-btns\">\r\n                    {!isMenuOpen && <>\r\n                        <button className=\"nav-button members-btn\"><FaUserAlt /></button>\r\n                        <button onClick={()=>onToggleDashboard(true)} className={`dashboard-btn nav-button ${(isMenuOpen) ? 'menu-open' : ''}`}><RiBarChartFill /> {window.innerWidth > 1100 && <span>Dashboard</span>}</button>\r\n                        <button onClick={() => this.toggleMenu()} className=\"right-menu-btn nav-button\"><HiDotsHorizontal /> {window.innerWidth > 1100 && <span>Show Menu</span>}</button>\r\n                    </>}\r\n                </div>\r\n                <SideMenu isMenuOpen={isMenuOpen} onClose={() => { this.toggleMenu() }} />\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        users: state.userModule.users,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    onUpdateBoard\r\n\r\n}\r\n\r\n\r\n\r\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(_BoardHeader)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { CgCreditCard } from 'react-icons/cg';\r\nimport { MdLabelOutline } from 'react-icons/md';\r\nimport { BiUser } from 'react-icons/bi';\r\nimport { BsClock } from 'react-icons/bs';\r\nimport { GoArchive } from 'react-icons/go';\r\n\r\nimport { CardEditDate } from '../cmps/shared/popover-children/card-edit-date';\r\nimport { PopperCoverEdit } from '../cmps/shared/popover-children/popper-cover-edit.jsx';\r\nimport { CardHeader } from '../cmps/card-preview/card-header.jsx';\r\nimport { CardLabelBarList } from '../cmps/card-preview/card-label-bar-list.jsx';\r\nimport { CardFooter } from '../cmps/card-preview/card-footer.jsx';\r\nimport { cardEditService } from '../services/card-edit.service.js';\r\nimport { Loader } from './shared/loader.jsx';\r\nimport { onUpdateCard, onSetCardId } from '../store/board.actions';\r\nimport { CardEditAddToCardItem } from '../cmps/card-edit/add-to-card/card-edit-add-to-card-item.jsx';\r\nimport { LabelList } from '../cmps/shared/popover-children/label-list.jsx';\r\nimport { MemberList } from '../cmps/shared/popover-children/member-list.jsx';\r\nimport { activityTxtMap } from '../services/activity.service.js';\r\n\r\nclass _QuickCardEditor extends Component {\r\n  state = {\r\n    card: null,\r\n    cardTitle: '',\r\n    isArchive: false,\r\n  };\r\n  componentDidMount() {\r\n    const { cardId, groupId } = this.props;\r\n    this.props.onSetCardId(cardId);\r\n    this.uploadCard(cardId, groupId);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.board !== this.props.board) {\r\n      const { cardId, groupId } = this.props;\r\n      this.uploadCard(cardId, groupId);\r\n    }\r\n  }\r\n\r\n  uploadCard = (cardId, groupId) => {\r\n    const card = cardEditService.getCardById(cardId, groupId);\r\n    this.setState({ card, cardTitle: card.title });\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n  handleFocus = (event) => {\r\n    event.target.select();\r\n  };\r\n  onSave = (event) => {\r\n    const cardToSave = { ...this.state.card };\r\n    cardToSave.title = this.state.cardTitle;\r\n    cardToSave.isArchive = this.state.isArchive;\r\n    const activity = {\r\n      txt: activityTxtMap.editCard(),\r\n      card: cardToSave,\r\n      groupId: this.props.groupId,\r\n    };\r\n    this.props.onUpdateCard(\r\n      cardToSave,\r\n      this.props.groupId,\r\n      this.props.board,\r\n      activity\r\n    );\r\n    this.props.onToggleQuickCardEditor(event, null, '');\r\n  };\r\n  openCard = (event) => {\r\n    this.props.onToggleQuickCardEditor(event, null, '');\r\n    this.props.openCardEdit(this.props.groupId, this.props.cardId);\r\n  };\r\n  onArchiveCard = (event) => {\r\n    this.setState(\r\n      (prevState) => ({ ...prevState, isArchive: true }),\r\n      function () {\r\n        console.log('this state', this.state);\r\n        this.onSave(event);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { card, cardTitle } = this.state;\r\n    const {\r\n      groupId,\r\n      getLabel,\r\n      isCardLabelListOpen,\r\n      toggleCardComplete,\r\n      position,\r\n    } = this.props;\r\n    if (!card) return <Loader />;\r\n    // console.log(card);\r\n    return (\r\n      <div\r\n        className='quick-card-editor flex'\r\n        style={{\r\n          position: 'fixed',\r\n          top: position.top,\r\n          left: position.left,\r\n        }}\r\n      >\r\n        <div>\r\n          <div className='card-preview' style={{ width: position.width }}>\r\n            {card.style && <CardHeader cardStyle={card.style} />}\r\n\r\n            <div className='card-details'>\r\n              {card.labelIds && (\r\n                <div>\r\n                  <CardLabelBarList\r\n                    labelIds={card.labelIds}\r\n                    getLabel={getLabel}\r\n                    isCardLabelListOpen={isCardLabelListOpen}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <textarea\r\n                className='clean-input'\r\n                type='text'\r\n                value={cardTitle}\r\n                name='cardTitle'\r\n                onChange={this.handleChange}\r\n                autoFocus\r\n                onFocus={this.handleFocus}\r\n              />\r\n\r\n              <CardFooter\r\n                card={card}\r\n                groupId={groupId}\r\n                toggleCardComplete={toggleCardComplete}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button onClick={this.onSave} className='card-edit-btn secondary'>\r\n            Save\r\n          </button>\r\n        </div>\r\n        <div className='quick-editor-sidebar flex column'>\r\n          <button\r\n            onClick={this.openCard}\r\n            className='quick-editor-btn flex align-center'\r\n          >\r\n            <span className='quick-editor-btn-icon flex align-center'>\r\n              <CgCreditCard />\r\n            </span>\r\n            <span>Open card</span>\r\n          </button>\r\n          <div className='quick-editor-btn flex align-center'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: MdLabelOutline,\r\n                title: 'Edit labels',\r\n                component: LabelList,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='quick-editor-btn flex align-center'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: BiUser,\r\n                title: 'Change members',\r\n                component: MemberList,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='quick-editor-btn flex align-center'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: CgCreditCard,\r\n                title: 'Change cover',\r\n                component: PopperCoverEdit,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='quick-editor-btn flex align-center datepicker'>\r\n            <CardEditAddToCardItem\r\n              item={{\r\n                icon: BsClock,\r\n                title: 'Edit dates',\r\n                component: CardEditDate,\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            className='quick-editor-btn flex align-center'\r\n            onClick={this.onArchiveCard}\r\n          >\r\n            <span className='quick-editor-btn-icon flex align-center'>\r\n              <GoArchive />\r\n            </span>\r\n            <span>Archive</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onUpdateCard,\r\n  onSetCardId,\r\n};\r\n\r\nexport const QuickCardEditor = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_QuickCardEditor);\r\n","import { Pie } from 'react-chartjs-2';\r\n\r\nexport function TasksPerMemberChart({ tasksPerMemberMap, labelsColors }) {\r\n  console.log('tasksPerMemberMap', tasksPerMemberMap);\r\n  // console.log('Object.keys(tasksPerMemberMap)', Object.keys(tasksPerMemberMap))\r\n  const data = {\r\n    labels: Object.keys(tasksPerMemberMap),\r\n    datasets: [\r\n      {\r\n        label: '# of Votes',\r\n        data: Object.values(tasksPerMemberMap),\r\n        backgroundColor: labelsColors,\r\n        borderWidth: 2,\r\n        hoverOffset: 2\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: 'white',\r\n          padding: 10\r\n        }\r\n      },\r\n    } ,\r\n  };\r\n\r\n  return (\r\n    <div className='chart'>\r\n      <h1>Tasks per Member</h1>\r\n      <Pie data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nexport function TasksPerLabelChart({ tasksPerLabelMap, labelsColors }) {\r\n  const data = {\r\n    labels: Object.keys(tasksPerLabelMap),\r\n    datasets: [\r\n      {\r\n        label: '',\r\n        data: Object.values(tasksPerLabelMap),\r\n        backgroundColor: labelsColors,\r\n        borderWidth: 2,\r\n        hoverOffset: 2,\r\n        fontColor : 'white' \r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n        labels: {\r\n            fontColor: '#f00'\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n        y: {\r\n            ticks: {\r\n                color: 'white'\r\n            }\r\n        },\r\n        x: {\r\n            ticks: {\r\n                color: 'white'\r\n            }\r\n        }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='chart'>\r\n      <h1>Tasks per Label</h1>\r\n      <Bar data={data} height={null}\r\n        width={null}\r\n\toptions={options} />\r\n    </div>\r\n  );\r\n}\r\n","import TimeLine from \"react-gantt-timeline\";\r\n\r\nexport function TasksPerDateChart({tasks}) {\r\n  const config = {\r\n    header: {\r\n      top: {\r\n        style: {\r\n          background: \"linear-gradient( grey, black)\",\r\n          textShadow: \"0.5px 0.5px black\",\r\n          fontSize: 12\r\n        }\r\n      },\r\n      middle: {\r\n        style: {\r\n          background: \"linear-gradient( #b686c2, white)\",\r\n          fontSize: 9,\r\n          color: \"black\"\r\n        }\r\n      },\r\n      bottom: {\r\n        style: {\r\n          background: \"linear-gradient( grey, black)\",\r\n          fontSize: 9,\r\n          color: \"#b686c2\"\r\n        },\r\n        selectedStyle: {\r\n          background: \"linear-gradient( #d011dd ,#d011dd)\",\r\n          fontWeight: \"bold\",\r\n          color: \"white\"\r\n        }\r\n      }\r\n    },\r\n    taskList: {\r\n      title: {\r\n        label: \"Task Todo\",\r\n        style: {\r\n          background: \"linear-gradient( grey, black)\"\r\n        }\r\n      },\r\n      task: {\r\n        style: {\r\n          backgroundColor: \"grey\",\r\n          color: \"white\"\r\n        }\r\n      },\r\n      verticalSeparator: {\r\n        style: {\r\n          backgroundColor: \"#fbf9f9\"\r\n        },\r\n        grip: {\r\n          style: {\r\n            backgroundColor: \"#b686c2\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    dataViewPort: {\r\n      rows: {\r\n        style: {\r\n          backgroundColor: \"white\",\r\n          borderBottom: \"solid 0.5px silver\"\r\n        }\r\n      },\r\n      task: {\r\n        showLabel: true,\r\n        style: {\r\n          backgroundColor: \"#b686c2\",\r\n          borderRadius: 1,\r\n          boxShadow: \"2px 2px 8px #888888\"\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"time-line-container\">\r\n      <TimeLine data={tasks} links={[]} config={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n// import { GanttComponent, TaskFieldsModel } from '@syncfusion/ej2-react-gantt';\r\n\r\n// export function TasksPerDateChart({ tasks }) {\r\n//   const taskValues: TaskFieldsModel = {\r\n//     id: 'id',\r\n//     name: 'title',\r\n//     startDate: 'startDate',\r\n//     endDate: 'endDate',\r\n//   };\r\n//   return (\r\n//     <div style={{marginTop: '40px'}}>\r\n//       <GanttComponent\r\n//         dataSource={tasks}\r\n//         taskFields={taskValues}\r\n//         timelineSettings={{timelineViewMode:'day'}}\r\n//       ></GanttComponent>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport { IoMdClose } from 'react-icons/io';\r\nimport { BsCardText } from 'react-icons/bs';\r\nimport { AiOutlineGroup } from 'react-icons/ai';\r\nimport { CgProfile } from 'react-icons/cg';\r\nimport { TasksPerMemberChart } from './dashboard/tasks-per-members-chart.jsx';\r\nimport { TasksPerLabelChart } from './dashboard/tasks-per-labels-chart.jsx';\r\nimport {TasksPerDateChart} from './dashboard/tasks-per-date-chart.jsx'\r\nimport { boardService } from '../services/board.service.js';\r\nimport { Loader } from '../cmps/shared/loader.jsx';\r\nclass _Dashboard extends Component {\r\n  state = {\r\n    chartsData: null,\r\n  };\r\n  async componentDidMount() {\r\n    const chartsData = await boardService.dashboardQuery(this.props.board._id);\r\n    this.setState({ chartsData });\r\n  }\r\n\r\n  get labelsColor() {\r\n    return this.props.board.labels.map((label) => {\r\n      return label.color;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { chartsData } = this.state;\r\n    const { board } = this.props;\r\n    console.log('chartsDate', chartsData);\r\n    if (!chartsData) return <Loader />;\r\n    return (\r\n      <div className='dashboard-modal flex column align-center'>\r\n        <Link to={`/board/${board._id}`}>\r\n        <button\r\n          className='close-btn'\r\n        >\r\n          <IoMdClose />\r\n        </button>\r\n        </Link>\r\n        <div className='jeneral-statistics flex'>\r\n          <div className='stats flex space-between'>\r\n            <div>\r\n              <h3>All Tasks</h3>\r\n              <span>{chartsData.cardsCount}</span>\r\n            </div>\r\n            <i className='flex align-center'>\r\n              <BsCardText />\r\n            </i>\r\n          </div>\r\n          <div className='stats flex space-between'>\r\n            <div>\r\n              <h3>All Lists</h3>\r\n              <span>{chartsData.groupsCount}</span>\r\n            </div>\r\n            <i className='flex align-center'>\r\n              <AiOutlineGroup />\r\n            </i>\r\n          </div>\r\n          <div className='stats flex space-between'>\r\n            <div>\r\n              <h3>Members</h3>\r\n              <span>{board.members && board.members.length}</span>\r\n              <span>{!board.members && 0}</span>\r\n            </div>\r\n            <i className='flex align-center'>\r\n              <CgProfile />\r\n            </i>\r\n          </div>\r\n        </div>\r\n        <div className='charts flex'>\r\n          <TasksPerMemberChart\r\n            className='chart'\r\n            tasksPerMemberMap={chartsData.tasksPerMemberMap}\r\n            labelsColors={this.labelsColor}\r\n          />\r\n\r\n          <TasksPerLabelChart\r\n            className='chart'\r\n            tasksPerLabelMap={chartsData.tasksPerLabelMap}\r\n            labelsColors={this.labelsColor}\r\n          />\r\n        </div>\r\n        <TasksPerDateChart tasks={chartsData.tasks}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport const Dashboard = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_Dashboard);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route } from 'react-router';\r\n\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\n\r\nimport {\r\n  loadBoard,\r\n  onUpdateBoard,\r\n  onUpdateCard,\r\n  outputUpdateBoard,\r\n  resetBoard,\r\n} from '../store/board.actions.js';\r\n\r\nimport { CardEdit } from '../cmps/card-edit.jsx';\r\nimport { AddBoardItem } from '../cmps/shared/add-board-item.jsx';\r\nimport { GroupList } from '../cmps/board/group-list.jsx';\r\nimport { BoardHeader } from '../cmps/board/board-header.jsx';\r\nimport { OverlayScreen } from '../cmps/overlay-screen.jsx';\r\nimport { QuickCardEditor } from '../cmps/quick-card-editor.jsx';\r\nimport { Loader } from '../cmps/shared/loader.jsx';\r\nimport { activityTxtMap } from '../services/activity.service.js';\r\nimport { socketService } from '../services/socket.service.js';\r\nimport { userService } from '../services/user.service.js';\r\nimport { Dashboard } from '../cmps/dashboard.jsx';\r\n\r\nclass _BoardDetails extends Component {\r\n  state = {\r\n    isCardLabelListOpen: false,\r\n    isAddPopOpen: false,\r\n    quickCardEditor: {\r\n      cardToEdit: null,\r\n      groupId: '',\r\n      position: {},\r\n    },\r\n    // isDashboardOpen: false,\r\n  };\r\n  async componentDidMount() {\r\n    const { boardId } = this.props.match.params;\r\n    const filterBy = this.props.location.search;\r\n    console.log('from Board details: ', filterBy);\r\n    await this.loadBoard(boardId, filterBy);\r\n    socketService.emit('member-joined', boardId);\r\n    socketService.on('board-update', ({ action, activity }) => {\r\n      const boardToSend = action.board || this.props.board;\r\n      this.props.outputUpdateBoard(action, boardToSend, activity);\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.resetBoard();\r\n  }\r\n  loadBoard = (boardId, filterBy) => {\r\n    this.props.loadBoard(boardId, filterBy);\r\n  };\r\n  openCardEdit = (groupId, cardId) => {\r\n    this.props.history.push(`${this.props.board._id}/${groupId}/${cardId}`);\r\n  };\r\n  updateBoard = (action, activity) => {\r\n    const updatedBoard = action.board || this.props.board;\r\n    this.props.onUpdateBoard(action, updatedBoard, activity);\r\n  };\r\n\r\n  onToggleDashboard = (isOpen) => {\r\n    if (isOpen) {\r\n      this.props.history.push(`${this.props.board._id}/dashboard`);\r\n    } else {\r\n      this.props.history.goBack();\r\n    }\r\n    // this.setState({isDashboardOpen: isOpen})\r\n  };\r\n  toggleCardLabelList = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({ isCardLabelListOpen: !this.state.isCardLabelListOpen });\r\n  };\r\n  onToggleQuickCardEditor = (event, card, groupId) => {\r\n    event.stopPropagation();\r\n    if (card) {\r\n      const parentElement = event.currentTarget.parentNode;\r\n      var position = parentElement.getBoundingClientRect();\r\n    } else {\r\n      const position= {}\r\n    }\r\n    this.setState({ quickCardEditor: { cardToEdit: card, groupId, position } });\r\n  };\r\n  toggleCardComplete = (ev, groupId, card) => {\r\n    ev.stopPropagation();\r\n    const cardToUpdate = { ...card };\r\n    cardToUpdate.isComplete = !card.isComplete;\r\n    const activity = cardToUpdate.isComplete\r\n      ? {\r\n          txt: activityTxtMap.completeCard(),\r\n          card: cardToUpdate,\r\n          groupId: groupId,\r\n        }\r\n      : {\r\n          txt: activityTxtMap.unCompleteCard(),\r\n          card: cardToUpdate,\r\n          groupId: groupId,\r\n        };\r\n    this.props.onUpdateCard(cardToUpdate, groupId, this.props.board, activity);\r\n  };\r\n  getLabel = (labelId) => {\r\n    const label = this.props.board.labels.find((label) => label.id === labelId);\r\n    return label;\r\n  };\r\n  handleOnDragEnd = (result) => {\r\n    const { destination, source, type } = result;\r\n    if (!destination) return;\r\n    const boardToChange = { ...this.props.board };\r\n    //group dragged -\r\n    if (type === 'group') {\r\n      const draggedGroup = boardToChange.groups.splice(source.index, 1);\r\n      boardToChange.groups.splice(destination.index, 0, ...draggedGroup);\r\n      this.props.onUpdateBoard({ type: '' }, boardToChange);\r\n      return;\r\n    }\r\n    const sourceGroup = {\r\n      ...boardToChange.groups.find((group) => group.id === source.droppableId),\r\n    };\r\n    const card = sourceGroup.cards.splice(source.index, 1);\r\n    //card dragged in the same group -\r\n    if (source.droppableId === destination.droppableId) {\r\n      sourceGroup.cards.splice(destination.index, 0, ...card);\r\n      const action = { type: 'UPDATE_GROUP', group: sourceGroup };\r\n      this.props.onUpdateBoard(action, boardToChange);\r\n    }\r\n    //card dragged to another group\r\n    else {\r\n      const destinationGroup = {\r\n        ...boardToChange.groups.find(\r\n          (group) => group.id === destination.droppableId\r\n        ),\r\n      };\r\n      if (destinationGroup.cards)\r\n        destinationGroup.cards.splice(destination.index, 0, ...card);\r\n      else destinationGroup.cards = [card];\r\n      boardToChange.groups = boardToChange.groups.map((currGroup) => {\r\n        if (currGroup.id === source.droppableId) return sourceGroup;\r\n        if (currGroup.id === destination.droppableId) return destinationGroup;\r\n        return currGroup;\r\n      });\r\n      this.props.onUpdateBoard({ type: '' }, boardToChange);\r\n    }\r\n  };\r\n  onToggleAddPop = () => {\r\n    this.setState({ isAddPopOpen: !this.state.isAddPopOpen });\r\n  };\r\n  toggleGroupArchive = (groupId) => {\r\n    const groupToUpdate = {\r\n      ...this.props.board.groups.find((group) => groupId === group.id),\r\n    };\r\n    groupToUpdate.isArchive = groupToUpdate.isArchive\r\n      ? !groupToUpdate.isArchive\r\n      : true;\r\n    const activity = { txt: activityTxtMap.archiveList(groupToUpdate.title) };\r\n    const action = { type: 'UPDATE_GROUP', group: groupToUpdate };\r\n    this.props.onUpdateBoard(action, this.props.board, activity);\r\n  };\r\n\r\n  render() {\r\n    const { board } = this.props;\r\n    const {\r\n      isDashboardOpen,\r\n      isCardLabelListOpen,\r\n      isAddPopOpen,\r\n      quickCardEditor,\r\n    } = this.state;\r\n    if (!board) return <Loader />;\r\n    return (\r\n      <div className='board-details flex column'>\r\n        <Route path='/board/:boardId/dashboard' component={Dashboard} />\r\n        <Route path='/board/:boardId/:groupId/:cardId' component={CardEdit} />\r\n\r\n        <BoardHeader onToggleDashboard={this.onToggleDashboard} />\r\n\r\n        <DragDropContext onDragEnd={this.handleOnDragEnd}>\r\n          <section className='group-list-container flex'>\r\n            <div className='group-list-wrapper flex'>\r\n              <Droppable\r\n                droppableId={board._id}\r\n                direction='horizontal'\r\n                type='group'\r\n              >\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    {...provided.droppableProps}\r\n                    ref={provided.innerRef}\r\n                    className='flex'\r\n                  >\r\n                    {board.groups && (\r\n                      <GroupList\r\n                        groups={board.groups}\r\n                        openCardEdit={this.openCardEdit}\r\n                        updateBoard={this.updateBoard}\r\n                        toggleCardLabelList={this.toggleCardLabelList}\r\n                        isCardLabelListOpen={isCardLabelListOpen}\r\n                        toggleCardComplete={this.toggleCardComplete}\r\n                        toggleGroupArchive={this.toggleGroupArchive}\r\n                        onToggleQuickCardEditor={this.onToggleQuickCardEditor}\r\n                        getLabel={this.getLabel}\r\n                      />\r\n                    )}\r\n                    {provided.placeholder}\r\n\r\n                    <div className='add-group-container'>\r\n                      {!isAddPopOpen && (\r\n                        <button\r\n                          className='add-boarditem-btn flex align-center'\r\n                          onClick={this.onToggleAddPop}\r\n                        >\r\n                          <i className='flex align-center'>\r\n                            <AiOutlinePlus />\r\n                          </i>\r\n                          <span>Add a list</span>\r\n                        </button>\r\n                      )}\r\n                      {isAddPopOpen && (\r\n                        <AddBoardItem\r\n                          onToggleAddPop={this.onToggleAddPop}\r\n                          type={'group'}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </Droppable>\r\n            </div>\r\n          </section>\r\n        </DragDropContext>\r\n\r\n        {quickCardEditor.cardToEdit && (\r\n          <QuickCardEditor\r\n            cardId={quickCardEditor.cardToEdit.id}\r\n            groupId={quickCardEditor.groupId}\r\n            position={quickCardEditor.position}\r\n            getLabel={this.getLabel}\r\n            toggleCardComplete={this.toggleCardComplete}\r\n            isCardLabelListOpen={isCardLabelListOpen}\r\n            onToggleQuickCardEditor={this.onToggleQuickCardEditor}\r\n            openCardEdit={this.openCardEdit}\r\n          />\r\n        )}\r\n        {quickCardEditor.cardToEdit && (\r\n          <div\r\n            onClick={(event) => this.onToggleQuickCardEditor(event, null, '')}\r\n          >\r\n            <OverlayScreen />\r\n          </div>\r\n        )}\r\n        {/* {isDashboardOpen && (\r\n          <div\r\n            onClick={() => this.onToggleDashboard(false)}\r\n          >\r\n            <OverlayScreen />\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  loadBoard,\r\n  onUpdateBoard,\r\n  outputUpdateBoard,\r\n  onUpdateCard,\r\n  resetBoard,\r\n};\r\n\r\nexport const BoardDetails = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_BoardDetails);\r\n","export default __webpack_public_path__ + \"static/media/login-svg-right.df08073f.svg\";","export default __webpack_public_path__ + \"static/media/login-svg-left.ff7c7688.svg\";","import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport { connect } from 'react-redux'\r\nimport { GoogleLogin } from 'react-google-login'\r\n\r\n// import { userService } from '../services/user.service'\r\nimport { onLogin, onSignup, loadUsers, onGoogleLogin } from '../store/user.actions'\r\nimport { Link } from 'react-router-dom'\r\nimport { SiTrello } from 'react-icons/si'\r\nimport svgRight from '../assets/img/login-svg-right.svg'\r\nimport svgLeft from '../assets/img/login-svg-left.svg'\r\n\r\nclass _LoginSignup extends React.Component {\r\n\r\n    state = {\r\n        credentials: {\r\n            username: '',\r\n            password: '',\r\n            fullname: ''\r\n        },\r\n        pageMode: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.loadUsers()\r\n        const pageMode = this.props.location.pathname === '/login' ? 'login' : 'signup'\r\n        this.setState({ pageMode })\r\n    }\r\n\r\n    validate = (values) => {\r\n        const errors = {}\r\n        if (!values.username) {\r\n            errors.username = 'Required'\r\n        } else if (values.username.length < 6) {\r\n            errors.username = 'Please use at least 6 characters'\r\n        }\r\n        if (values.password.length < 4) {\r\n            errors.password = 'Password too short'\r\n        }\r\n        if (!values.fullname) {\r\n            errors.fullname = 'Required'\r\n        } else if (values.fullname.length < 4) {\r\n            errors.fullname = 'Please use at least 4 characters'\r\n        }\r\n        return errors\r\n    }\r\n\r\n    onSuccessGoogle = (res) => {\r\n        const { tokenId } = res\r\n        const { onGoogleLogin } = this.props\r\n        onGoogleLogin(tokenId)\r\n    }\r\n\r\n    onFailureGoogle = (res) => {\r\n        console.log('Login with google failed', res)\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        const { pageMode } = this.state\r\n        const { onLogin, onSignup } = this.props\r\n        pageMode === 'login' ? onLogin(values) : onSignup(values)\r\n        this.props.history.push('/board')\r\n    }\r\n\r\n    render() {\r\n        const { credentials, pageMode } = this.state\r\n        return (\r\n            <section className=\"login-signup-page main-container\">\r\n                <div className=\"login-signup-header\">\r\n                    <SiTrello />\r\n                    <h3 className=\"logo-text\">Marshmello</h3>\r\n                </div>\r\n                {pageMode === 'login' && <div className=\"login-signup flex column\">\r\n                    <h3>Log in to Marshmello</h3>\r\n                    <Formik initialValues={credentials} onSubmit={this.onSubmit} >\r\n                        <Form className=\"login-form flex column\">\r\n                            <Field type=\"username\" placeholder=\"Enter user name\" name=\"username\" autoFocus />\r\n                            <ErrorMessage name=\"username\" component=\"div\" />\r\n                            <Field type=\"password\" placeholder=\"Enter password\" name=\"password\" autoComplete=\"off\" />\r\n                            <ErrorMessage name=\"password\" component=\"div\" />\r\n                            <button type=\"submit\" className=\"login-signup-btn nav-button\" style={{color: '#172b4d'}}>Log in</button>\r\n                        </Form>\r\n                    </Formik>\r\n                    OR\r\n                    <br />\r\n                    <GoogleLogin\r\n                        className=\"google-login-btn flex align-center justify-center\"\r\n                        clientId='640315421255-e4mv3dirnt2lbm4ati92b1euclri0j8d.apps.googleusercontent.com'\r\n                        buttonText='Continue with Google'\r\n                        onSuccess={this.onSuccessGoogle}\r\n                        onFailure={this.onFailureGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                    <hr />\r\n                    <Link to=\"/signup\">Sign up for an account</Link>\r\n                </div>}\r\n                {pageMode === 'signup' &&\r\n                    <div className=\"login-signup flex column\">\r\n                        <h3>Sign up for your account</h3>\r\n                        <Formik initialValues={credentials} validateOnChange={false} validateOnBlur={false} validate={this.validate} onSubmit={this.onSubmit}>\r\n                            <Form className=\"flex column\">\r\n                                <Field type=\"fullname\" placeholder=\"Enter full name\" name=\"fullname\" autoFocus />\r\n                                <ErrorMessage name=\"fullname\" component=\"p\" />\r\n                                <Field type=\"username\" placeholder=\"Enter user name\" name=\"username\" />\r\n                                <ErrorMessage name=\"username\" component=\"p\" />\r\n                                <Field type=\"password\" placeholder=\"Enter password\" name=\"password\" />\r\n                                <ErrorMessage name=\"password\" component=\"p\" />\r\n                                <button type=\"submit\" className=\"login-signup-btn nav-button\" style={{color: '#172b4d'}}>Sign up</button>\r\n                            </Form>\r\n                        </Formik>\r\n                        <hr />\r\n                        <Link to=\"/login\">Already have an account ? Log In</Link>\r\n                    </div>}\r\n                <div className=\"right-svg\">\r\n                    <img src={svgRight} alt=\"right-svg\" />\r\n                </div>\r\n                <div className=\"left-svg\">\r\n                    <img src={svgLeft} alt=\"left-svg\" />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userModule.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    onLogin,\r\n    onSignup,\r\n    onGoogleLogin\r\n}\r\n\r\nexport const LoginSignup = connect(mapStateToProps, mapDispatchToProps)(_LoginSignup)","import { HomePage } from './pages/home-page.jsx'\r\nimport { BoardSelect } from './pages/boards-select.jsx'\r\nimport { BoardDetails } from './pages/board-details.jsx'\r\nimport { LoginSignup } from './pages/login-signup.jsx';\r\n\r\n// Routes accesible from the main navigation (in AppHeader)\r\nconst routes = [{\r\n        path: '/board/:boardId',\r\n        component: BoardDetails,\r\n    },\r\n    {\r\n        path: '/board',\r\n        component: BoardSelect,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: LoginSignup\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: LoginSignup \r\n    },\r\n    {\r\n        path: '/',\r\n        component: HomePage,\r\n    }\r\n]\r\n\r\nexport default routes;","import React, { createRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { onAddBoard, setAddingBoard } from '../../store/board.actions.js'\r\n\r\n\r\nclass _BoardAdd extends React.Component {\r\n    state = {\r\n        title: '',\r\n        style: {\r\n            imgUrl: 'https://images.pexels.com/photos/3683056/pexels-photo-3683056.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'\r\n        },\r\n        chosenImgIdx: 5\r\n    }\r\n\r\n    targetRef = React.createRef()\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClick)\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClick)\r\n        this.props.setAddingBoard(false)\r\n    }\r\n\r\n    handleClick = (ev) => {\r\n        if (this.targetRef.current.contains(ev.target)) {\r\n            // || element?.contains(ev.target)\r\n            // inside click\r\n            return\r\n        }\r\n        // outside click \r\n        this.props.onClose()\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ ...this.state, [field]: value });\r\n    }\r\n\r\n    handleImage = (ev, idx) => {\r\n        ev.preventDefault()\r\n        const imgSrc = ev.target.getAttribute('src')\r\n        this.setState({ ...this.state, style: { imgUrl: imgSrc }, chosenImgIdx: idx })\r\n    }\r\n\r\n    addBoard = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.title) return\r\n        const addedBoard = await this.props.onAddBoard(this.state)\r\n        this.props.history.push(`/board/${addedBoard._id}`)\r\n        this.props.setAddingBoard(false)\r\n    }\r\n\r\n    render() {\r\n        const images = ['https://images.pexels.com/photos/1914982/pexels-photo-1914982.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n            'https://images.pexels.com/photos/844297/pexels-photo-844297.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/3293148/pexels-photo-3293148.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/911738/pexels-photo-911738.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/3274903/pexels-photo-3274903.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/3683056/pexels-photo-3683056.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/2170473/pexels-photo-2170473.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/2529973/pexels-photo-2529973.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',\r\n            'https://images.pexels.com/photos/1982485/pexels-photo-1982485.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940']\r\n        const { title, chosenImgIdx } = this.state\r\n        return (\r\n            <div className=\"board-add\" ref={this.targetRef}>\r\n                <form className=\"board-add-form\" onSubmit={this.addBoard} style={{ backgroundImage: `url(${images[chosenImgIdx]})` }} >\r\n                    <input autoFocus className={`board-title-input ${(title) ? 'editing' : ''}`} autoComplete=\"off\" type=\"text\" placeholder=\"Add board title\" name=\"title\" value={title} onChange={this.handleChange} />\r\n                    <button className={`create-btn ${(title) ? 'clickable' : ''}`} type=\"submit\">Create Board</button>\r\n                </form>\r\n                <div className=\"images-container\">\r\n                    {images.map((image, idx) =>\r\n                        <button className={`img-btn ${(idx === chosenImgIdx) ? 'chosen' : ''}`} key={idx} onClick={(ev) => this.handleImage(ev, idx)}>\r\n                            <img className=\"add-board-img\" src={image} alt={image} />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAddingBoard: state.boardModule.isAddingBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onAddBoard,\r\n    setAddingBoard\r\n}\r\nconst _BoardAddWithRouter = withRouter(_BoardAdd)\r\nexport const BoardAdd = connect(mapStateToProps, mapDispatchToProps)(_BoardAddWithRouter)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { CgHome } from 'react-icons/cg';\r\nimport { AiOutlinePlus, AiOutlineBell } from 'react-icons/ai';\r\nimport { SiTrello } from 'react-icons/si';\r\n\r\n\r\n// import routes from '../routes'\r\nimport { onLogin, onLogout, onSignup, loadUsers, removeUser } from '../store/user.actions.js'\r\nimport { setAddingBoard } from '../store/board.actions'\r\nimport { BoardAdd } from './board/board-add.jsx';\r\nimport { MemberAvatar } from './shared/member-avatar.jsx';\r\nimport { OverlayScreen } from '../cmps/overlay-screen'\r\nimport { DynamicPopover } from './shared/dynamic-popover.jsx';\r\nimport { InviteMembers } from './board/invite-members.jsx';\r\n\r\n\r\nclass _AppHeader extends React.Component {\r\n    state = {\r\n        isPopoverOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    userMenuRef = React.createRef()\r\n\r\n    onLogout = () => {\r\n        this.props.onLogout()\r\n    }\r\n\r\n    setAddBoard = (value) => {\r\n        this.props.setAddingBoard(value)\r\n    }\r\n\r\n    setFavicon = () => {\r\n        const favicon = document.getElementById('favicon')\r\n        favicon.href = '../../public/favicon.ico'\r\n    }\r\n\r\n    render() {\r\n        const { user, isAddingBoard } = this.props\r\n        const { isPopoverOpen } = this.state\r\n        return (\r\n            <header className=\"app-header\">\r\n                <nav className=\"nav-links\">\r\n                    <div className=\"left-links\">\r\n                        <NavLink to=\"/\"><button onClick={() => this.setFavicon()} className=\"home-btn nav-button\"><CgHome /></button></NavLink>\r\n                        <NavLink to=\"/board\"><button onClick={() => this.setFavicon()} className=\"boards-btn flex nav-button\"><SiTrello /> <span>Boards</span></button></NavLink>\r\n                    </div>\r\n                    <NavLink className=\"logo\" to=\"/\"><SiTrello /> <span> Marshmello </span></NavLink>\r\n                    <div className=\"right-links\">\r\n                        <button className=\"nav-button\" onClick={() => this.setAddBoard(true)}><AiOutlinePlus /></button>\r\n                        <button className=\"nav-button\"><AiOutlineBell /></button>\r\n                        <MemberAvatar key={user._id} member={user} onClick={() => this.setState({ isPopoverOpen: !isPopoverOpen })} />\r\n                        {/* <div className='relative' ref={this.userMenuRef}>\r\n                            {isPopoverOpen && <DynamicPopover onClose={() => this.setState({ isPopoverOpen: false })} title=\"Invite Members\" ref={this.userMenuRef}>\r\n                                <InviteMembers />\r\n                            </DynamicPopover>}\r\n                        </div> */}\r\n                    </div>\r\n                </nav>\r\n                {isAddingBoard && <BoardAdd onClose={() => this.setAddBoard(false)} />}\r\n                {isAddingBoard && <OverlayScreen />}\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        user: state.userModule.user,\r\n        isAddingBoard: state.boardModule.isAddingBoard\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onLogin,\r\n    onSignup,\r\n    onLogout,\r\n    loadUsers,\r\n    removeUser,\r\n    setAddingBoard\r\n}\r\n\r\n\r\n\r\nexport const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)","import React from 'react'\r\nimport { Switch, Route, withRouter } from 'react-router'\r\nimport routes from './routes'\r\nimport { AppHeader } from './cmps/app-header'\r\nimport { connect } from 'react-redux'\r\nimport { socketService } from './services/socket.service'\r\nimport { userService } from './services/user.service'\r\n\r\nclass _RootCmp extends React.Component {\r\n\r\n    get isHeaderShown() {\r\n        const { pathname } = this.props.location\r\n        return (pathname.includes('board') || pathname.includes('boards'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app flex column\">\r\n                {this.isHeaderShown &&\r\n                    <AppHeader />\r\n                }\r\n                <main className=\"main-app\">\r\n                    <Switch>\r\n                        {routes.map(route => <Route key={route.path} component={route.component} path={route.path} />)}\r\n                    </Switch>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardModule.currBoard\r\n    }\r\n}\r\n\r\nconst _RootCmpWithRouter = withRouter(_RootCmp)\r\nexport const RootCmp = connect(mapStateToProps)(_RootCmpWithRouter)\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport { store } from './store/store';\nimport { RootCmp } from './root-cmp';\nimport './assets/styles/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <RootCmp />\n      </Router>{' '}\n    </Provider>{' '}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}